%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: comment-check.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Nick La
%%CreationDate: 2/26/10
%%BoundingBox: 0 0 128 64
%%HiResBoundingBox: 0 0 128 64
%%CropBox: 0 0 128 64
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 64 8%%BeginData: 10386 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD17FFA8A87E847D7E597D597E597D7D847DA8A8FD6CFF8484597D%7DA8A8AFA8FFFFFFA8FFAFFFA8A87D7E597D7DA8A9FD64FFA8A87D7E7EFD%13FFA8A87D7D7DFD61FFA87D7D7DFD07FFA9FFA9FFA8FFA8AFA8AFA8A8A8%AFA8AFA8FFA87E597EA8FD5CFFA9847DA8FD0AFFAFFFA8FFA8FFA8FFA8AF%A8AFA8A9A8AFA8AFA8FF7E7D7DFD5AFF7E7D7DFD07FFA8FFA8AFA8FFA8AF%A8AFA8A8A8A9A8A8A8A9A8A884A8A8A884A8A87D53A8FD57FF7D84AFFD09%FFA8FFA9FFA8FFA8FFA8FFA8AFA8AFA8A9A8AFA8A8A8A9A8A884A8A8A859%84FD54FFA95984FD06FFAFFFA8FFA8AFA8FFA8A9A8AFA8A8A8A9FD06A884%A884A884A884A87EA87EA8597DA8FD51FFA959A9FD08FFA9FFAFFFA8FFA8%FFA8FFA8FFA8FFA8AFA8AFA8A9A8AFA8A8A8A9A8A8A8A9A8A884A87D7DA8%FD4FFFA859FD07FFA8FFA8FFA8FFA8AFA8FFA8A9A8AFA8A8A8A9FD06A884%A8A8A884A884A87EA884A87DA87D5984FD4DFFA859FD09FFA8FFA9FFA8FF%A8FFA8FFA8AFA8FFA8A9A8AFA8A9A8A9A8A8A8A9A8A884A8A8A884A884A8%7EA87E7DA8FD4BFFA853AFFD06FFA8FFA8FFA8FFA8AFA8AFA8A9A8A9FD06%A884A8A8A884A884A87EA884A87EA87EA87DA87E847DA87D59A8FD4AFF59%AFFD06FFAFFFFFFFA8FFA9FFA8FFA8FFA8FFA8AFA8FFA8AFA8AFA8A9A8AF%A8A8A8A9A8A884A8A8A884A884A884A884A87D7EFD49FF7D84FD06FFA8FF%A8FFA8FFA8FFA8AFA8AFA8A9A8AFA8A8A8A9FD06A884A884A884A884A87E%A884A87EA87EA87DA87E845984FD47FFA87EFD06FFA8FFAFFFA8FFA9FFA8%FFA8FFA8FFA8AFA8AFA8A9A8AFA8A8A8A9A8A884A8A8A884A8A8A884A884%A884A884A87EA884A859A9FD46FF7DA8FFFFFFA9FFA8FFA8FFA8FFA8FFA8%A9A8AFA8A8A8A9FD06A884A884A884A884A87EA884A87EA884A87DA87EA8%7DA87EA87DA87D7D53FD45FFA87DFD07FFA9FFAFFFA8FFA9FFA8FFA8FFA8%FFA8AFA8AFA8A9A8AFA8A9A8A9A8A8A8A9A8A8A8A9A8A884A8A8A884A884%A87E847D847D7DA8FD44FF59A9FD04FFA8FFA8FFA8FFA8AFA8FFA8A9A8AF%A8A8A8A9FD06A884A8A8A884A884A884A884A87EA884A87EA87E847D7E59%7D597D597D597DFD43FF8484FD06FFA8FFAFFFA8FFA8FFA8FFA8AFA8FFA8%AFA8AFA8A9A8A9A8A8A8A9A8A884A8A8A884A8A8A884A87E847D7E7D7E59%7E7D7E597E7D7E59A8FD42FF7D84FFFFFFA8FFA8FFA8FFA8AFA8AFA8A9A8%A9FD06A884A8A8A884A884A884A884A87EA884A884A87D7D597D597D597D%597D597D597D597D597D59FD42FF7DFD07FFA8FFAFFFA8FFA8FFA8FFA8AF%A8FFA8AFA8AFA8A9A8AFA8A8A8A9A8A8A8A9A8A884847D7E7D847D7E7D84%7D847D847D847D847D7E7D7DFD41FF847EFD04FFA8FFA8FFA8FFA8AFA8FF%A8A9A8AFA8A8A8A9FD06A884A8A8A884A8A8A884A87D7D597E597D597E7D%7D597E7D7E597E7D7E597E7D7D53A8FD40FFA884FD05FFA8FFA9FFA8FFA8%FFA8FFA8AFA8AFA8A9A8AFA8A8A8A9A8A8A8A9A8A8A8A97E7E597E7D7E7D%847D7E7D847D847D847D847D847D847D847D7D7DFD40FF59A8FFFFA8FFA8%FFA8FFA8AFA8AFA8A8A8A9FD06A884A8A8A884A884A884A88484597D597D%597E597D597E7D7E597E7D7E597E7D7E7D7E7D7E597E597DFD40FF84AFFD%05FFA8FFA9FFA8FFA8FFA8FFA8AFA8AFA8A9A8AFA8A9A8AFA8A8A8AF8484%597E7D7E7D847D847D847D847D847E847D847E847D847E847D847D7E7DFD%40FF59FFFFFFA8FFA8AFA8FFA8AFA8AFA8A8A8A9FD06A884A8A8A884A8A8%A87D7D597D597E7D7D597E7D7E7D847D7E7D847D7E7D847D847D847D847D%847D7DA8FD3FFF7DAFFFFFFFA8FFA8FFA8FFA8FFA8FFA8AFA8AFA8A9A8AF%A8A8A8A9FD04A87D7D597E7D7E7D847D847D847D847D847E847D847E847D%A87E847DA87E847D8459FD40FF59FFA8FFA8FFA8AFA8A9A8AFA8A8A8A9FD%06A884A884A884A8847E537D597D597E597D597E7D7E7D847D7E7D847D84%7D847D847D847D847D847D847D7DA8FD3FFF7DFD04FFA8FFA8FFA8FFA8FF%A8FFA8AFA8AFA8A9A8AFA8A9A8AFA87E597E7D7E7D847D847D847D847DA8%7E847DA87EA87EA884A87EA884A87EA884A87EA859FD40FF59FFA8FFAFFF%A8FFA8A9A8AFA8A8A8A9FD06A884A8A8A87D7D597D597E597D597E7D7E7D%847D7E7D847D847D847D847DA87E847DA87E847DA87E847D7DFD40FF7EA8%FFAFFFA8FFA8FFA8AFA8AFA8A9A8AFA8A8A8A9A8A8A8AF7E7D597E7D7E7D%847D847D847D847D847E847DA87EA87EA884A87EA884A87EA884A87EA884%8459FD40FF59A8A8FFA8FFA8A8A8A9FD06A8A7A8A8A87EA884A87D7D597D%597D597D597E7D7E7D847D7E7D847D847D847D847DA87E847DA87E847DA8%7E847DA87D7DFD2EFFA8FFA8FFAFFD0DFFA87EFFFFFFA9FFA8FFA8CAA0C2%FD05C1C29FC9A7A87D7D7D7E59847D7E7D847D847D847E847DA87EA87EA8%84A884A884A884A884A884A884A884A8847E7DFD2AFFA97D847D7D597E7D%7E7DA8A8FD0AFF7E7EA8FFA8FFA8A8A1C2C1C2C2CFCACFCACFCAC9C1C199%7C537D597D597E7D7D59847D7E7D847D847D847E847DA87EA87EA884A87E%A884A87EA884A87EA859A8FD28FF7D7D7D84A8FFA8FFA8FFA8A87D7E5984%A8FD08FF59FFFFFFA8CFC1C1C8FFFFFFCACFCACFCACFCFFFCFC9C1A07D7D%7D7E7D847D847D847E847DA87EA87EA884A884A884A884A8A8A884A8A8A8%84A8A8A87E7DFD27FFA87D84A8FD05FFA9FFA8FFA8FFA8A97D7D84FD07FF%7D7DFFA8C998C2CAFFC9CAFD09C9CACAFFC2C1767D597D597E7D7E7D847D%847D847D847DA87EA87DA884A87EA884A87EA884A87EA8847D59FD25FFA8%7D59FFFFFFA8FFA8A9A8A9A8A884A8A8A884A87D5959FD06FFA884FFC9BB%C9FFCFC9CFC9CAC9CFC9CAC9CFC9CAC9CFC9FFC9C17D7E7D847D847DA87E%847EA884A884A884A884A8A8A884A9A8A8A8A9A8A9A8A9A8A859A9FD25FF%7D7EFD05FFA9FFA8FFA8AFA8AFA8A9A8A9A8A8847E7DFD06FF59A7BBC9CA%FD12C9CFC9C17C7D7D847D7E7D847D847DA87E847EA884A884A884A884A8%84A884A8A8A884A87D7DFD24FFA87D7EFFFFFFA8FFA8FFA8A9A8A9FD06A8%84A884A87D7E59FD05FFA899C9CAFD14C9CFC2C17D7E7D847E847DA884A8%7EA884A884A8A8A884A9A8A8A8A9A8A9A8AFA8A8A87D84FD24FF7E7DFFFF%FFA8FFA9FFA8FFA8AFA8AFFD06A884A884A87E7E7DFD04FFC1C2C9C9C2C9%A0C9C2C9A0C9C2C9A0C9C2C9A0C9C2C9A0C9C2CA9FA0597E7D847D847D84%7D847DA87EA87EA884A884A884A884A8A8A884A8A87E53FD24FFA859FFA8%FFA8FFA8FFA8A9A8A9A8A884A884A87EA884A87EA87E847D5984FFFFC9C1%FD04C9C8C9C9C9C8C9C9C9C8C9C9C9C8C9C8C9C8FD04C9CFC1A17DA87EA8%7EA884A884A8A8A884A9A8A9A8AFA8A9A8AFA8AFA8AFA8A859AFFD24FF7D%AFFD04FFA8FFA8FFA8FFA8AFA8AFA8A8A8A9A8A884A87D847D7E7D7DFFFF%C2C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C8A0C9C2C9C2C9C2C8C9C899%7E7D847D847DA87EA87EA884A884A8A8A884A9A8A8A8AFA8A8A8AF597EFD%24FF847EFFFFA8FFA8AFA8AFA8A8A8A9A8A884A8A8A884847D7D597E597D%597E53A8CFC1C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9A07D52C9C2C9C2%C9C2C9C8C17D847DA884A87EA884A884FD04A8A9A8A9A8AFA8AFA8FFA8AF%7D7DFD25FF8484FFFFFFA8FFA8FFA8FFA8A9A8A9FD04A87E7E59847D847D%847D847D7D7DC2C1A0C8C2C8A0C8C2C8A0C8C2C8A0C8C2C2A07D525252A1%C2C8A0C8C2C999A07D847D847D847DA884A87EA884A884FD04A8A9A8A8A8%A97E59A8FD25FF59A9A8FFA8AFA8AFFD06A884A88484597D597D597E7D7E%7D847D7D597DC2C1C9C2C8C2C9C2C8C2C8C2C8C2C9C2C8A07D527D525252%C8C2C9C2C8C2C89F847EA884A884A8A8A884A9A8A9A8AFA8AFA8FFA8AFA8%FFA8A959FD26FF7DAFFFFFFFA8FFA8AFA8AFA8A9A8AF847E59847D847DA8%7E847DA87E847D8459C1C2C2C8C2C2C2C8C2C2A0C2C1C2C2C2A05228FD04%52FD04C2C8C2C2C1C17D847DA87EA87EA884A884FD04A8A9A8A9A8AFA8A9%A8AFA87D7DFD25FF59FFA8FFA8A9A8AFFD06A87D7D597D7D847D847D847D%847D847D847D7DC1C1C2C2C8C2C8C2C2A05252C8C2C2A0FD0652C2C1C8C2%C8C2C8C2C2BBA87EA87EA884A884FD04A8AFA8AFA8FFA8AFA8FFA8AFA8FF%847DFD24FFAF7EAFFFA8FFA8AFA8AFFD04A87D7D7D847D847DA87EA87EA8%84A87EA884845998C198C199C1C1C29F52275252C2A0522752525227C2C1%C29FC2C1C198C198C17D847D847DA87EA87EA884A884FD04A8A9A8A8A8A9%A8A8A8A959A8FD24FF59FFA8AFA8A9A8A8A7A88484537D597D59847D847D%847E847DA87EA87DA87D7DC1BBC1BBC1BBC1BB52F82727274B5227522727%27C2C1C1BBC1BBC1BBC1BBC1BBA884A884A884A884A9A8A9A8AFA8AFA8FF%A8AFA8FFA8AFA8FFA8847DFD24FF84A8FFA8C9FD05C1C27C7E7D847D847E%A87EA884A884A9A8A8A8A9A8847D98C1BAC198C1BAC17527F827F827F827%F827F89998C1BAC198C1BAC198C1BAC17D847E847EA884A884FD04A8A9A8%A9A8AFA8A9A8AFA8A9A8AF8459A8FD23FF7D84A8C199C9C9CFCACFC2C199%7D597E7D847D847EA884A884A8A8A884A85984C1BAC1BBC1BAC1BBC17527%F827F827F827279FBBC1BAC1BBC1BAC1BBC1BAC1C1847DA884A884A8A8A8%84A9A8A9A8AFA8FFA8FFA8AFA8FFA8AFA8FF7DA8FD24FF7DC1C2CFCACFC9%CFC9FFCFC299847D847DA884A884A9A8A9A8AFA8A9847DA9C1BB98C198C1%98C198BB7527F827F827F89998C198C198C198C198C198C198A07D847DA8%7EA87EA884A884A87D7D537D84A8A8A9A8A8A8A9A8A8A88459FD24FFC19F%CFC9C9C2C9C9C9A0C9CAC2997E7D847DA884A884FD04A8A9A87D7DFFC9BB%C1BBC1BBC1BBC1BBC19927F827279FBBC1C1C1BBC1BBC1BBC1BBC1BBC1A0%847EA884A884A8A8A87D84597D7EFF7D7D59A8A8FFA8FFA8AFA8FFA87DA8%FD22FFC9C1CFC9C9C8C9C9C9C8C9C8C9C9C1A1847EFD04A8AFA8AFA8FFA8%A859FFFFCAC198C1BAC198C1BAC198C17527F89FC0C1C0C1C0C198C1BAC1%98C1BAC1987D7D847D847D7D597D597D7DA9FD04FFA884537D7DA8A8AFA8%A9A8FF7D7EFD22FFC1C2C2C9C2C8C2C9C2A152A1C2C9C1C27D847EA884A8%A8AFA8A9A8A853A8FFFFFFC2C1BAC1BBC1BAFD05C17B9FC1C7FD06C1BAC1%BBC1BAC1BBA0597D597D597E7DA8A8FD0BFF7E7D5984A8FFA8AFA8A859FD%21FFCFC1C2C8C2C8C2C8C2A7525276C8C2C899A884A884A9A8AFA8FFA8AF%A87DA8FFFFFFCA98C198C198C198C1C0C19EC1C0C19EC1C0C19EC1C0C198%C198C198C1A7FFA8FFA8FD12FFA8595959FD04A87D7EFD21FF98C1C1C276%527CA0275252C29FC2C1C17D847EA884FD04A8A9A8A8597EFD04FFC8BBC1%BBFD06C1C7C1C7C1C7C1C7C1C7FD06C1BBC1C2FD19FFA884597E84FF7E7E%FD20FFCFC1BBC1BB52F827272751C1BBC1BBC1BBA884A8A8AFA8AFA8FFA8%AFA8A859FD04FFCFC198C1BAC1C0C1C0C1C0C7C0C7C0C7C0C7C0C7C0C1C0%C1BABB99FD1DFF7D59598459AFFD20FF99C1BAC19827F82727C1BAC198C1%BAC17DA884A87D8459597DFD04A87D84FD04FFCAC1BAFD04C1C7C1C7C1FD%05C7C1C7C1C7FD04C1BBCFFD1FFFA859597EFD20FFC2BAC1C1C19F2727FD%05C1BAC19F7E597E597D7DA8A87E597EA8FF7D7EFD05FFC9C198C1C0C1C0%C7C1C7C1C7C7C7C1C7C0C7C0C1C0C198CAFD22FF7D7EAFFD1FFFC9BB98C1%C0C198C1C0C19EC1C0C198A77E847DA8A8FD04FFAF7D7D597E53FD06FFCA%C1BBC1C1FD04C7CDC7CDC7CDC7C7C1C7C1C1C1CFFD46FFC2C1C1C7C1C7C1%C7C1C7C1C1BBC8FD0DFFA8597D7EFD06FFCAC2BAC1C0C7C7C8C7CDC8CDC7%CDC7C198C1C2FD49FF99C1C0C7C0C7C0C1C0C1BAC1CAFD0FFF7E7EFD08FF%CFC1C1BAC7C7C8C7CDC8C7C1C1BBC2C9FD4BFFFD05C1C7C1C1BAC8FD1DFF%CAC99FC198C198C1BBC2A0CFFD4EFFC9C2BAC198C1C1C9FD13FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">comment-check</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2010-02-26T07:04:30-05:00</xmp:CreateDate>
         <xmp:ModifyDate>2010-02-26T07:04:31-05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2010-02-26T07:04:31-05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>128</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAgAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYqtkkjijaSRgk&#xA;aCrOxAAA7knFWOT+eLWaZrbQrSbWbldmaCi26n/Knb4R9GS4e9hx9yz6n591AVuL+20eIj+6tY/X&#xA;lp3DPIeIPuuHZakXHyNaTGuoanqF/wCKTXDBPeioFpjxLwKMn5f+RlNZLMFu5a4nqf8AkpjxFHBF&#xA;QbyT5CU/DacWHRhNcV/4nh4ivBFZ/hzS4DXT9Yv7E9kjnYp9KuGr9+NlFDvXpc+dLHe21G01mMD+&#xA;6uEEEtPBWQ0J92xoJso208+2KzLba1bS6PctsDP8UDH/ACZl+H76YODuSJ97Jo5I5Y1kjYPG4qrq&#xA;QQQe4IyDNdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqUa95ms9J9OAI13&#xA;qVxta6fDvI58T/Kv+UcIjbGUqSyLyxqWsOt15pn9RNmi0e3Yrbx9x6jA1kYfd8xkuKuSOEnmyOOO&#xA;1tIFihRIIUFEjQBVA8Ao2yDJDTaj2jH0nJUglAT3Ur/acn27YUEoSR8KEO74oQ7vhQou+KqUsrPE&#xA;0L0khbZonAZD81aoxQl9rPq2iSmbRJaQE1l02UloW8eFTVD8jhItQSOTO/LfmzTtdiZYq299EP8A&#xA;SLKTaRPcdOS+4/DK5RptjK06yLJ2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVI/Mn&#xA;mCXT/RsdPiF1rV6eNpbdlHeWTwRf8++SAYylXvXeX/LcWl+pdXEhvNXut7u+k3Y9PgT+VBTYf2Yk&#xA;2sY0mc9wsYoN28MFJJS2aZnNWNThYoZ3woQ7viqHkfChQd8KFB2xVRdsKFB2xQou+FUDdQyetHd2&#xA;sptr+A1guE2I9m8V9sUM/wDJ/mxNbtnhuFEGq2u11b9iO0if5J/D7sqlGm6ErZFkWbsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdiqD1jVbbStMuNQuTSK3UsR3Y9FUe7HbCBaCaCUeVNIuUEut6&#xA;oK6xqVHkBB/cxdUgWvSg6+/ywyPRjEdSnlxP6a7faPTAyJS2SQk1PXCxQ7vhVDu+KEO74UId3woU&#xA;XfFVB2woUmJxVSbFCkwwoUnGKoOSW7sbuHVbHa8tDyA7SJ+1G3iCMatbp61o+q22q6Zb6hbGsVwo&#xA;YDup6Mp91O2UkU5ANhGYEuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVimt01jzXYaN9qy05f&#xA;0hfr2Z68YIz9PxEdxkxsLYHc0yd3Cgk9BkWaWTTFmLHvhYoV3woUHfFCHd8KEO74UKDtiqizYoUz&#xA;hVY1BucUJfc6xp8JIMnNh+ynxfj0w0glLZvMLnaGEDwLmv4D+uGkcSCl1PUJK/vOIPZQB+PXDSLQ&#xA;zyXL/alc/NjhQzf8p9YaG8u9Elb93KPrNqD2YUEij5ih+jKsg6t2I9HpuVNzsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVYr5O/0m51vV23a9vXjjbxhth6cf8cnJhHqU7vZaIFH7X8MiElLnfJIQ&#xA;7vihDyPhQh3fChRdsVUWOKFOR0RC7sFQbliaAfThVJL3zLAhKWq+q3852T+pyQixMkmuL29uz++k&#xA;JX+QbL9wwsLU1ixVeIcVXejirvRxVEaPcnTvMOl3oPEJcLHIR/JL8D/8KTgkNmUTRe55juU7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWJfl2x/wdYMftOZmY+5nfJz5tePkml9J+8p4DAElAu+F&#xA;CHd8KEO74UKDviqkWxQleqa5a2NU/vbjtEp6f6x7ZIBBNMYvL+8vn5Tv8P7MY2UfIZKmBKxIsKEQ&#xA;kWBVVYsUqghxVf6OKu9HFUDqqFLNnGzKylT71GKve8xnLdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirDvy/bh5Wt7c/btpJ4pP8AWEzH/jbJy5tcOSYXr/vj9H6sQpQMj4UId3woUHfFVFmxQxrW&#xA;vMvEtbWLAt0ecdB7L/XJgMDJj6KzEsxqTuSdyTkmKKjjwKiY4sVRCRYpV0hwKqrBiq8QYpcYMVS7&#xA;WoC1qsK/bnkSNfmTih7hmO5bsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYXo1dP8x65pLbK8&#xA;w1C290uAOdPZW2yZ5NY2JC7XdVhtZo4grT3cwpDaxDlIx+XYe+YWq10MOx9UzyiObm6XQzzWR6YD&#xA;nI8ghU0fVLoc9UvvqEZFRaWlDKK/zSmtD8s10558m+Sfhj+bHn83Yxjgx/3cPEP86XL/AEqp/hry&#xA;pT97ay3Ld5JZpOR/4FgMo/KafqDL3yLcNZqByIj7oj9Tj5Z8p0/d2ktu3+/IppOQ/wCCYjH8rp+g&#xA;MfdIqdZqD9REvfEfqS3VvKeoSWkkelak1wjDe3nosxHgJKCtfemZGPJnx7wn4g/my5/AuPkx4Mu0&#xA;4eGf50eXxj+pgMtlPbTtBOjRyoaOjChB9wc2+j18M+w2mOcTzDqNZoJ4KJ3geUhyKtEmZrhIuKPA&#xA;qLjjxSio4sCohIsUqyw4EqghxVxhxVD2Nn9f83aTYgVSB/rk/cBYt1r82FPpwE7JiLL1jKXIdirs&#xA;VdirsVdirsVdirsVSDV/NkVtdnTNMt21PVyN7WIgLGP5ppD8KDJCLEy6BAtonmXUB6utay1nEf8A&#xA;jy0390q17GZqu3vhsdGNE8yhJvJvk0bzWst1J3lknmLH5kOv6sPEUcIQcnlnylFvb2UlvJ2kiuJg&#xA;w+9mw2UUGo7nXdMblpmrSXEa/wDHnqQ9VSB2Eq0cfdjQK2QyHy953sdTn+oXcZsNVH/HtIQVf3ic&#xA;bN+v55AxpnGdskyLNhnn2OWzvtL1ex4tqAZrT0DWsscikgbdkbf6cxNbrBgx98pbRHm5Wj0fj5O6&#xA;Md5HyQljELDnK7+vqc+91dnc1P7EfgozRwPASSbyS5y/QPJ3OT1gRA4cceUf0nzVTck7k74eNHA7&#xA;6xjxrwO+sY8a8Dhckbg748a8CF1iwttZg4S0S+QUt7nx/wAh/FT+GMpGREgeHJHlL9B8lgBEGJHF&#xA;jlzj+kebCVhkjkeKRSksbFZEPUMOozotBrBnhZ2kNpDzef1+jODJQ3gd4nvCKiTM1wkZFHgVGRR4&#xA;pRMcWBKukWBKoIcVWz+nDE8spCxxgs7HsBiqO/LXTZJFvPMNwnGS/b07VT1W3Q/8bEfhkZnozxjq&#xA;zfK212KuxV2KuxV2KuxV2Ksd80avfC4t9C0ggatfAs0xFRbwDZpm9+y++SiOpYSPQIjTNK07QrL6&#xA;vaLV2+KaZ95JX7vI3c4k2kClK5uWYksa4UEpdPNhYoCaXChCSOThQlmoWcd0lHqroeUcq7MjDoVO&#xA;FiWYeQ/NU2pxS6ZqDhtUshvIOk0XQSfMdGyucabYStKdY1D635ku7mtY7D/Q7UeD9Zm+dfhzk9Xn&#xA;488j0h6R+l6vS4eDBGPWfqPu6Ib6xmPxt3A76xjxrwO+sY8a8ChfarbWVs9zcuEiTv3J7ADuTluK&#xA;EskuGPNryyjjjxS5JJonne2v7traZRA7t/o5rsw7KT/NmdqtBLHHijv3uDptaMkuGW3cyL6xms43&#xA;ZcCU68itcQ3g6y/upz4sB8DfMjb6My9BqPD1ET0n6T7/AOH9Ti67T+Jp5DrD1D3fxD9KhEude8ij&#xA;oUwJRkSYEouOPAlFRw4pVhGowKkslpN5l1r9CWxKafalX1W4G21dol9zT/OmEmgoFmnpcEMUEKQw&#xA;oI4olCRouwCqKADKW9firsVdirsVdirsVdirsVYj5RIvLjVfMMu73tw8VuT+zbW54IB4VINcnLua&#xA;49SmF1cFmJPfFJKXTzdcLFAySEnChKr/AFeztSVducv++k3P0+GEBiSktxrd/OSIgIU9vib7z/TJ&#xA;Ux4kDLHcTbyuz/6xJwsVXRruTR9dsNRQkKkqxz+8Unwv+BwSFhlE0UVaatD6Z9V+MsjvJJXuzsT1&#xA;zziGcdeb6Rk05vbkNkWt7E/2XDfIg5YMgLScRDHNf8/WWl3kdrEv1iRWH1qh+wvgP8rNtpOzpZY8&#xA;RPCOn47nVavtCOKXCN+/8d6at5m0pdK/ShnBsyKhh1J/lp/N7ZiDTZDk8OvV+N/c5Z1OPw/Ev0/j&#xA;b3vNNe83XOr3XNzwt0J9GEHZR4nxY51Gk0scMaHPqXmdVqpZpWeXQJx5Q8vy37Lf3oKWSmsSdDKR&#xA;/wAa5h9odojH6I/X937XL7P7POT1S+j73oLXsSfacL8yBnMHIA9KMRKB1DUraW2aNG5OCrLQbVB8&#xA;fllcs4HLmDbbDTE8+RBHzRUK56O+bo6FcDJGwrilHQpXAlEgUGBLeKpXp9wdI8828p2tdZj+ry+A&#xA;mSnA/TsPpOMhYWJovRcqbnYq7FXYq7FXYq7FXYq41pt17YqwnyLJw8k2S9GX1gw7g+u+2WS5tUPp&#xA;RE82KpfcTqqszMFUCrMTQADChieqeZJJ2aCxJSLo0/Rm/wBXwH45MRazJL7e3JNTuT1OFimMNnXt&#xA;ilEix26YE0luvWvDT3IG5ZQB4ksMKCEtnieGaSF9njYow91NDnlso0SD0fVoyEgCOqzIpeL/AJie&#xA;SNR0SaTVdLlmfS5WLTIHYtCzHua1KE9D9+dl2X2mMw4JbTH2vGdqdmHCeOO+M/Z+O9hH6a1j0xH9&#xA;euPTB5BPVfjypStK0rm4re3UX0Z/+XPk3V9WaPVtWuLhdLU1ggMjgzkdzv8A3f6803anagwjgh/e&#xA;fd+13PZfZfjHjn/d/f8AsewBmCBASEUAKo6ADoAM5AyJNl7CMABQDsiltQWYKOpNMlCJkQB1YzmI&#xA;xMj0ZJBnqL5Ujoe2Bkjoad8CVn+I9DgnWCS8jEjeBqo+bCqj6TjS2E2R0dQ6MGRt1YGoI9iMDJdi&#xA;qUeabKS50iR4ai5tSLiBh1DR7mn0VwhBZzoOqx6to1pqKUAuIwzAdA42dfoYEZURRbomwj8CXYq7&#xA;FXYq7FXYq7FXYq81V9U0zUtT8u2SKQ1w1xBcufghgmAc1HipO2a3X6+UZDHj+vqekXYaDQCUTkyf&#xA;3d7DrIolNB0Mit+02pTftSSSMi1/yVQigzVHDjlvkMsh8y7QajJHbGI4x5AfapXfljy3cQNFbiSy&#xA;Zu6OzoT25K5NRhjhxxN4zLHLyP3olnyT2yCOSPmPupiF1pE+nXptpgCaco3XdXXxU5uOz+0JTl4W&#xA;T+86HpIOn7Q7PjCPi4/7vqOsT+pH2kFabZtnUhN7e1qBtgZAI5bHbpgTSVtp/wCk/M+naQg5JC4u&#xA;77wWOPcA/wCt0+kYk0FAsoL8wdIaw8xTSgUgvf38Z/ym/vB8+W/05wXbGn8POT0lv+v7Xv8AsfUe&#xA;JgA6x2/V9jGgCTQZq3aq62CTxtHKgkjkBV0YVUqdiCDkPFMTY2IashBFHkwSH8i9KHmc3zSctEH7&#xA;xdPNeXqV/uy3+++/j2983kvaOXg1X73v6e/3/Z18nnf5Hh4t3+77uvu93483o409I0VEQKigKqqK&#xA;AAbAADOdOUk2ebvYzAFBDTWhHTLIzbYzQpBBoctbUfo+j6vqU7DTbU3UkIDuvNIwATQfE5UZtuxd&#xA;P4moBPKG/wCr7XUdt6jw9OQPqnt+v7E/j8s+eQaDR1X3a4hI/Bs7viDwXAUbb+TfPU/22s7JfEs0&#xA;j/8ACh1wcYSMZTS2/LBJaHWNUnvR1MEVIY6+4+Kv0UwHIyGPvZDB5Q8swWb2cemweg/2wy8mPhV2&#xA;q+3bfIcRZ8IY/e/l3NaM0/lq/ezY1P1GcmSBiewJqV+kHJifewOPuSmXXNR0uQQeYrB7Mk0W7jBk&#xA;gb5EV+7fJDfkxNjmm1vc2t1CJbeRJom/aQhh8tsVa/Lq5+pXmqeXnO1vJ9aswf8AfMlKj/Ynj9Jy&#xA;Mx1ZYz0Zxlba7FXYq7FXYq7FXYq7FXkllq4mNzdM4+sXszzS7/EBUhV+QHTOIhqOImR5yNva5NNw&#xA;1HpEUpR+bNJkuLm3W7T1bQcpwTQKB1NTsePfwzLOLKIiVGpcnCGXGSRYuPNjY8/ahqWtxW2jrzt0&#xA;PxBtg69Gdz+yvh/mM2n5SGLEZZTv93udZ+ankygYxt+ObItbvIpbReTD1YHDx770Joyj55oZanhM&#xA;ZDnE27+Gl4hKB5TFfqKIskG2d8XgQntnGKV8MizCKflwbgQHoeJO4r2rgSp/lbBbmxv7uWraw1y8&#xA;V+705AruqjwXf7/lgyMsfJP/ADV5dh13S2tiQlzH8dtKf2Xp0P8Akt0Oa3tDRDUY+H+IcnZdn606&#xA;fJxfwnm8dawuLS8ktLqMxXER4vG3X6PEZwWfHLGTGQoh7cZYziJRNxKZW9vsNswJyaJyTGKyZh0y&#xA;vdxpZabksWUdMd1jlBS+4txQ7ZZGTkQmlq6fcXl7HZ2kZluZTRI1/WfAZn6fHLJIRiLJcg5owiZS&#xA;NRD2Dyr5dh0LS1tgQ9xJ8dzKP2np0H+SvQZ3vZ+iGnx8P8R5vEdoa06jJxfwjknGZzguxV2KuxV2&#xA;KrZYYpo2imRZInFHRwGUjwIO2KsS1P8ALjTmla60Wd9JvDU0i3hY+DRnoPlt7ZMT72s4x0YzJB5q&#xA;0LzLp+qapbCS3gPoXN/bAtG0DmhLgfZ48q7gZOwQwog29VylvdirsVdirsVdirsVdirwS902W01C&#xA;5s5Pt28jRn3oaA/Tnm+ogcczE9C+jYswnATHUPJfOX5R6z+lIrjy0zC0vJOM9uZCi27NuXG/937D&#xA;cdvbo9B29AwIympRHz/a8vruySJ3i+mX2fsegeVvJtr5d0xbWF2muHo11dOTykf7zRR2H8c0Wu7S&#xA;nqJ2do9A7vQ6SGnjQ3l1KaC1neVYoo3mlfZIo1LO3sqjc5Vp8ZyzEB1NOZmzjHjlM/wi2Q2y+YQQ&#xA;sWhXzN29SJol/wCCYUz04kPmIB7k6tvLnn68QsWt9JQbqjESyMeoBoHUDxyJkGYhJRuNT1zRm9Pz&#xA;Bp7JCDQahbVkhPYE/wAtfff2wijyQbHNd5V1eztvOjC2nWSx1uLYqdhcRb7jqCRXr/NgkNkwO70r&#xA;Km5J/MPlbTNciH1hTHcoKQ3Uezr7H+YexzB1vZ+PUD1bS73O0XaGTTn07x6hhFz5Y8y6U+9t+kbY&#xA;dJbfd6e8f2q/IfTnH6vsDNA3EcQ8v1c3ocfaGDMOfBLz/W3b+YNIh+C7Wa2kHVJI2B/Cuak6eUTR&#xA;CJ6TLLeNSHvXXHmHR5vgtFmuZD0SONifxphGnlI0AiGkyx3lUR5lbbeWfMurSbW36Ntj1luP7ynt&#xA;H9qvz+/NrpOwM0zchwjz/VzTk7QwYRz45eXL5s28veVtM0OI/V1Mly4pNdSbu3sP5V9hnYaLs/Hp&#xA;x6d5d7z+t1+TUH1bR6DonGZzguxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsT85eTW1Rxq&#xA;GnlU1GNeLo2yyqOgJ7MOxzSdq9leP64fX9/7Xc9mdp+COCf0fcwKf1LJ/S1C2ltJRtR0ND8j3zic&#xA;+ky4zUhXvelgRkFwIkHQCW9f0tPtpbuU7URDQf6x7YcGky5DURazIxi5kRDPfJvk1tLc6hqBV9Rc&#xA;cURd1iU9QD3Y9zna9ldleB65/X937Xmu0+0/GHBD6PvZZm7dM7FWmVXUqwDKwoyncEHscVYvqf5d&#xA;6HcXcd/YA6ZfwusscsABj5qQwLRGg7fs0yYmWBxh/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:B3052B1D0C2068118F62AD85486E0984</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:B3052B1D0C2068118F62AD85486E0984</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:e72c92ce-6256-7c41-b352-28c735fd6748</stRef:instanceID>
            <stRef:documentID>uuid:1759BEDE32EEDD11AF8BBF931F055AD6</stRef:documentID>
            <stRef:originalDocumentID>uuid:1759BEDE32EEDD11AF8BBF931F055AD6</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:OriginalDocumentID>uuid:1759BEDE32EEDD11AF8BBF931F055AD6</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B3052B1D0C2068118F62AD85486E0984</stEvt:instanceID>
                  <stEvt:when>2010-02-26T07:04:31-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>128.000000</stDim:w>
            <stDim:h>64.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 8.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -64 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 64 li
128 64 li
128 0 li
cp
clp
[1 0 0 1 0 0 ]ct
62.209 58.0908 mo
46.8447 51.1299 li
46.4394 50.9473 li
46.0322 51.124 li
41.6494 53.0322 36.9277 54 31.9981 54 cv
31.6121 54 31.2262 53.9939 30.8436 53.9819 cv
31.5892 52.134 32 50.1146 32 48 cv
32 41.4293 28.0326 35.7797 22.3644 33.3173 cv
27.9828 27.6973 35.2206 22.9723 43.6601 19.8184 cv
49.1184 17.7771 54.6294 16.5646 59.9884 16.1105 cv
61.919 19.5629 63 23.4251 63 27.5 cv
63 33.1299 60.9521 38.5117 57.0781 43.0645 cv
56.6953 43.5146 li
56.9043 44.0664 li
62.209 58.0908 li
1.01665 28.3743 mo
1.01664 28.3742 li
1.01665 28.3743 li
1.01586 28.3535 mo
1.01582 28.3524 li
1.01584 28.3529 1.01585 28.353 1.01586 28.3535 cv
1.01507 28.332 mo
1.01505 28.3313 li
1.01507 28.3318 1.01506 28.3315 1.01507 28.332 cv
1.01088 28.2067 mo
1.01085 28.2058 1.01079 28.204 1.01077 28.2031 cv
1.01081 28.2046 1.01083 28.2052 1.01088 28.2067 cv
1.01024 28.1856 mo
1.01018 28.1839 1.01015 28.1826 1.01009 28.1808 cv
1.01014 28.1823 1.01019 28.1841 1.01024 28.1856 cv
1.00961 28.1642 mo
1.00956 28.1624 1.00949 28.1602 1.00944 28.1584 cv
1.00948 28.1599 1.00957 28.1627 1.00961 28.1642 cv
1.00898 28.1422 mo
1.00893 28.1404 1.00887 28.1382 1.00882 28.1364 cv
1.00888 28.1384 1.00893 28.1402 1.00898 28.1422 cv
1.00837 28.1199 mo
1.00835 28.119 1.00828 28.1164 1.00825 28.1155 cv
1.00829 28.117 1.00833 28.1184 1.00837 28.1199 cv
1.00635 28.0396 mo
1.0063 28.0379 1.00622 28.0343 1.00618 28.0326 cv
1.00623 28.0346 1.0063 28.0376 1.00635 28.0396 cv
1.00585 28.0181 mo
1.00579 28.0154 1.00572 28.0126 1.00567 28.0099 cv
1.00572 28.0124 1.00578 28.0149 1.00583 28.0174 cv
1.00585 28.0181 li
1.00538 27.9968 mo
1.0053 27.9933 1.00524 27.9905 1.00517 27.9869 cv
1.00518 27.9874 1.00518 27.9876 1.00519 27.9881 cv
1.00523 27.99 1.00525 27.9906 1.00529 27.9925 cv
1.00532 27.994 1.00535 27.9953 1.00538 27.9968 cv
1.00489 27.9735 mo
1.00483 27.9708 1.00475 27.967 1.0047 27.9643 cv
1.00472 27.9653 1.00475 27.9668 1.00477 27.9678 cv
1.00481 27.9697 1.00485 27.9716 1.00489 27.9735 cv
1.00445 27.9519 mo
1.00442 27.9501 1.00435 27.9469 1.00432 27.9451 cv
1.00434 27.9464 1.00437 27.9475 1.00439 27.9487 cv
1.00441 27.9497 1.00443 27.9509 1.00445 27.9519 cv
1.00402 27.9294 mo
1.00397 27.9267 1.00391 27.9236 1.00387 27.9209 cv
1.00391 27.9235 1.00396 27.9264 1.00401 27.9289 cv
1.00402 27.9294 1.00401 27.9289 1.00402 27.9294 cv
1.00361 27.9069 mo
1.00358 27.9051 1.00355 27.9034 1.00352 27.9016 cv
1.00353 27.9022 1.00353 27.9023 1.00354 27.903 cv
1.00357 27.9045 1.00358 27.9054 1.00361 27.9069 cv
1.00292 27.866 mo
1.00291 27.8651 1.00288 27.8633 1.00287 27.8625 cv
1.00288 27.8635 1.00289 27.8639 1.00291 27.8649 cv
1.00292 27.866 li
1.00262 27.8464 mo
1.00258 27.8437 1.00256 27.8424 1.00252 27.8398 cv
1.00253 27.8403 1.00254 27.841 1.00255 27.8415 cv
1.00257 27.8428 1.0026 27.8451 1.00262 27.8464 cv
1.00227 27.8226 mo
1.00225 27.8208 1.00222 27.8187 1.0022 27.8169 cv
1.0022 27.8172 li
1.00223 27.8191 1.00225 27.8206 1.00227 27.8226 cv
1.00201 27.8028 mo
1.00198 27.801 1.00193 27.7971 1.00191 27.7953 cv
1.00194 27.7979 1.00197 27.8003 1.00201 27.8028 cv
1.00175 27.7826 mo
1.00172 27.7799 1.0017 27.779 1.00167 27.7763 cv
1.0017 27.7789 1.00172 27.78 1.00175 27.7826 cv
1.00147 27.7585 mo
1.00144 27.7559 1.00142 27.7546 1.00139 27.7519 cv
1.00141 27.7538 1.00144 27.7566 1.00147 27.7585 cv
1.00124 27.7379 mo
1.00122 27.7362 1.0012 27.734 1.00119 27.7323 cv
1.0012 27.7335 1.00121 27.735 1.00123 27.7362 cv
1.00123 27.7367 1.00124 27.7374 1.00124 27.7379 cv
1.00102 27.7152 mo
1.001 27.7134 1.00099 27.7122 1.00098 27.7104 cv
1.00099 27.7117 1.00101 27.7138 1.00102 27.7151 cv
1.00102 27.7152 li
1.00084 27.6955 mo
1.00083 27.6937 1.0008 27.6906 1.00079 27.6888 cv
1.00079 27.6895 li
1.00081 27.6915 1.00082 27.6931 1.00084 27.6951 cv
1.00084 27.6955 li
1.00067 27.6743 mo
1.00067 27.6734 1.00065 27.6709 1.00064 27.67 cv
1.00065 27.6713 1.00066 27.6731 1.00067 27.6743 cv
1.00051 27.6512 mo
1.0005 27.6495 1.00049 27.6487 1.00048 27.6469 cv
1.00048 27.6473 li
1.00049 27.6486 1.0005 27.65 1.00051 27.6512 cv
1.00039 27.6317 mo
1.00038 27.6299 1.00037 27.6277 1.00036 27.6259 cv
1.00037 27.6279 1.00038 27.6298 1.00039 27.6317 cv
1.00026 27.6075 mo
1.00026 27.6067 1.00026 27.6062 1.00025 27.6053 cv
1.00026 27.606 1.00026 27.6069 1.00026 27.6075 cv
1.00018 27.5879 mo
1.00017 27.5861 1.00017 27.5845 1.00016 27.5827 cv
1.00017 27.5847 1.00017 27.586 1.00018 27.5879 cv
1.00011 27.5675 mo
1.00011 27.5657 1.0001 27.5646 1.0001 27.5628 cv
1.0001 27.5641 1.00011 27.5662 1.00011 27.5675 cv
1.00006 27.5441 mo
1.00005 27.5432 1.00005 27.5404 1.00005 27.5395 cv
1.00005 27.5408 1.00005 27.5428 1.00006 27.5441 cv
1.00002 27.5229 mo
1.00002 27.5212 1.00002 27.5208 1.00002 27.519 cv
1.00002 27.5196 1.00002 27.5209 1.00002 27.5215 cv
1.00002 27.522 1.00002 27.5224 1.00002 27.5229 cv
1.00059 27.3377 mo
1.00071 27.3208 1.00085 27.303 1.00101 27.2861 cv
1.00085 27.303 1.00071 27.3208 1.00059 27.3377 cv
16.2133 4.69959 mo
16.2142 4.69916 16.2163 4.6981 16.2171 4.69768 cv
16.2154 4.69853 16.215 4.69874 16.2133 4.69959 cv
16.2317 4.6903 mo
16.2333 4.68945 16.2356 4.68832 16.2372 4.68747 cv
16.2356 4.68832 16.2333 4.68945 16.2317 4.6903 cv
16.2484 4.68181 mo
16.2518 4.68011 16.2542 4.6789 16.2575 4.6772 cv
16.2542 4.6789 16.2518 4.68011 16.2484 4.68181 cv
16.2628 4.67451 mo
16.2679 4.67197 16.2728 4.66949 16.2778 4.66695 cv
16.2728 4.66949 16.2679 4.67197 16.2628 4.67451 cv
16.2783 4.66671 mo
20.7558 2.40506 25.952 1.07874 31.4982 1.0034 cv
25.9523 1.07873 20.7558 2.40516 16.2783 4.66671 cv
31.5007 1.00337 mo
31.666 1.00114 31.8322 1.00001 31.9981 1.00001 cv
31.9981 1.00001 li
31.9981 1.00001 li
31.8322 1.00001 31.666 1.00114 31.5007 1.00337 cv
32.0485 1.00005 mo
32.0481 1.00005 li
32.0485 1.00005 li
32.0273 1.00003 mo
32.0258 1.00002 32.0243 1.00002 32.0228 1.00002 cv
32.0239 1.00002 32.0263 1.00002 32.0273 1.00003 cv
false sop
/0 
[/DeviceCMYK] /CSA add_res
gsave
[39.6237 0 0 39.6237 55.791 50.7832 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k3XT
%1NaU%1NaV%LrsY%M''\%hB0]%hB3_&.fBa&.oKd&J5Te&J5Wg&eYfi',)#m',)#m',)&o'GM5q'bqGu
'bqGu'bqK"()@Z$(Ddl((Ddl((Dmu+(`4),)&X;0)&X>2)B'M4)B'M5)]K_8)]Kb:*#oq<*#oq=*??.@
*?H7C*Zc@D*Zc@E+!2RH+!;[K+<VdL+<VdM+X&!P+X/*S+sJ3T+sJ6V,9nEX,:"N[,U=W\,U=Z^,pai`
~>
0 0 <~)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X>2)B0V7
*#oq=*??.A+!2UJ+<_mO+sJ3U,9nHZ,palb-7:/g-n$Jm.4Qhu.kE5&/M/P+/hSb00JG490etL>1G^gD
1c.'I2E!KQ2`NcV3B9)\3]]>a4?Yhj4[)%n5<h@t5s[h(6:4+-6psF377BX77n6*@84cBE8kM]K91qrP
9hnGY:/=Y]:f'tc;,U=k;cH^q<E3%!<`W7&=BJ^/=^#!4>?b<:>[1Q??=$uG?XR8L@:<SR@UiqZA7]=`
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
np
31.9981 0 mo
14.3262 0 0 12.3125 0 27.5 cv
0 42.6855 14.3262 55 31.9981 55 cv
37.1934 55 42.0937 53.9297 46.4317 52.041 cv
64 60 li
57.8398 43.7129 li
61.709 39.166 64 33.5625 64 27.5 cv
64 12.3125 49.6719 0 31.9981 0 cv
31.9981 1.00001 mo
49.0928 1.00001 63 12.8877 63 27.5 cv
63 33.1299 60.9521 38.5117 57.0781 43.0645 cv
56.6953 43.5146 li
56.9043 44.0664 li
62.209 58.0908 li
46.8447 51.1299 li
46.4394 50.9473 li
46.0322 51.124 li
41.6494 53.0322 36.9277 54 31.9981 54 cv
14.9053 54 1.00001 42.1123 1.00001 27.5 cv
1.00001 12.8877 14.9053 1.00001 31.9981 1.00001 cv
.47451 .298039 .27451 0 cmyk
f
3.52672 37.9789 mo
2.02899 35.0161 1.14623 31.7753 1.01665 28.3743 cv
1.01664 28.3742 li
1.01637 28.3671 1.01613 28.3606 1.01586 28.3535 cv
1.01585 28.353 1.01584 28.3529 1.01582 28.3524 cv
1.01556 28.3453 1.01533 28.339 1.01507 28.332 cv
1.01506 28.3315 1.01507 28.3318 1.01505 28.3313 cv
1.01354 28.2897 1.01216 28.2484 1.01088 28.2067 cv
1.01083 28.2052 1.01081 28.2046 1.01077 28.2031 cv
1.01058 28.1969 1.01042 28.1918 1.01024 28.1856 cv
1.01019 28.1841 1.01014 28.1823 1.01009 28.1808 cv
1.01002 28.1782 1.00994 28.1757 1.00987 28.173 cv
1.11161 31.6475 1.99979 34.9574 3.5273 37.9781 cv
3.52699 37.9785 3.52704 37.9785 3.52672 37.9789 cv
1.00983 28.1717 mo
1.00975 28.169 1.00969 28.1669 1.00961 28.1642 cv
1.00957 28.1627 1.00948 28.1599 1.00944 28.1584 cv
1.00929 28.1531 1.00913 28.1475 1.00898 28.1422 cv
1.00893 28.1402 1.00888 28.1384 1.00882 28.1364 cv
1.00872 28.1329 1.00869 28.1315 1.00859 28.128 cv
1.00899 28.1426 1.0094 28.1571 1.00983 28.1717 cv
1.00854 28.1261 mo
1.00847 28.1234 1.00844 28.1226 1.00837 28.1199 cv
1.00833 28.1184 1.00829 28.117 1.00825 28.1155 cv
1.0082 28.1137 1.0082 28.1136 1.00815 28.1118 cv
1.00829 28.1169 1.0084 28.121 1.00854 28.1261 cv
1.00812 28.1104 mo
1.00774 28.0962 1.00738 28.0821 1.00703 28.0679 cv
1.00737 28.0819 1.00775 28.0964 1.00812 28.1104 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[3.84 0 0 11.52 .48 25.12 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 24 
/M[8 0 0 -24 0 24 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&6"pP89"U,)7"pP8:"U5/8"pP;;"pP89"pYA<"pP89#6tJ="pP89#6tJ="pP8:#6tJ="pP;;#6tJ>
"pYA<#6tM?#6tJ=#7(S@#6tJ=#RC\A#6tJ>#RC\A#6tM?#RC\A#6tM?#RC\B#7(S@#RC_C#RC\A#RLeD
#RC\A#mgnE#RC\B#mgnE#RC_C#mgnF#RLeD#mgqG#mgnE#mq"H#mgnE$47+I#mgnF$47+I#mgqG$47+I
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
<~%LrsZ&.fBb%Ls!\&.fEd%M'*^&.oNf%hB3_&J>]h%hK9a&eYfj&.fEc&eYil&.oKe&ebrn&J5Wg',)&o
&J>]i',2,q&eYik'GM8s&ebom'GV>u',)&o'bqK"',2,q'c%Q$'GM8s()@]&'GV>u()Ic('bqK"(Ddo*
'c%Q$(Dmu,()@]&(`4,.()@]'(`=20()If))&X>2(Dmu+)&aD4(`4)-)B'P6(`4,/)B'P7(`=51)B0Y9
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
3.52665 37.979 mo
2.02904 35.0164 1.14623 31.7751 1.01665 28.3743 cv
1.14623 31.7753 2.02899 35.0161 3.52672 37.9789 cv
3.52665 37.979 li
1.01664 28.3742 mo
1.01638 28.3672 1.01612 28.3605 1.01586 28.3535 cv
1.01613 28.3606 1.01637 28.3671 1.01664 28.3742 cv
1.01582 28.3524 mo
1.01558 28.3459 1.01531 28.3384 1.01507 28.332 cv
1.01533 28.339 1.01556 28.3453 1.01582 28.3524 cv
1.01505 28.3313 mo
1.01355 28.2899 1.01215 28.2481 1.01088 28.2067 cv
1.01216 28.2484 1.01354 28.2897 1.01505 28.3313 cv
1.01077 28.2031 mo
1.0106 28.1976 1.0104 28.1911 1.01024 28.1856 cv
1.01042 28.1918 1.01058 28.1969 1.01077 28.2031 cv
1.01009 28.1808 mo
1.00992 28.1748 1.00978 28.1702 1.00961 28.1642 cv
1.00969 28.1669 1.00975 28.169 1.00983 28.1717 cv
1.00987 28.173 li
1.00994 28.1757 1.01002 28.1782 1.01009 28.1808 cv
1.00944 28.1584 mo
1.00928 28.1529 1.00914 28.1477 1.00898 28.1422 cv
1.00913 28.1475 1.00929 28.1531 1.00944 28.1584 cv
1.00882 28.1364 mo
1.00867 28.1309 1.00852 28.1254 1.00837 28.1199 cv
1.00844 28.1226 1.00847 28.1234 1.00854 28.1261 cv
1.00856 28.1267 1.00857 28.1273 1.00859 28.128 cv
1.00869 28.1315 1.00872 28.1329 1.00882 28.1364 cv
1.00825 28.1155 mo
1.00781 28.099 1.00739 28.0826 1.00698 28.0662 cv
1.007 28.0668 1.00701 28.0673 1.00703 28.0679 cv
1.00738 28.0821 1.00774 28.0962 1.00812 28.1104 cv
1.00813 28.111 1.00814 28.1112 1.00815 28.1118 cv
1.0082 28.1136 1.0082 28.1137 1.00825 28.1155 cv
gsave
[50.7692 46.8962 -46.8962 50.7692 8.25537 5.56006 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~!!!!"!<N<)!sA`1"U5/9#7(S@#RLeE$4@4M$k3XU%M'']&.oKe&ebom'GV>u()Ic((`=20)B0V8*$$%@
*ZcCF+<VgN+sJ6V,U=Z^,palb-RU;j.4H_r.k</%/M/S-0/#"50ekF=1G^jE2)R9M2`E]U3&ioY3]]>a
4?Yhk5!M7s5X7S#5sdn*6UX=277Ka:7n?0B8P2TJ92&#R9hnGZ:Jakb;,U:j;c?Uo<)lq!<``@)=BSd1
>$>-7>[1Q??=$uG?smDO@U`hWA7T7_AnG[gBP;*oC2.O"Ci!s*DJjB2E,]c8EH-#>F)uGFF`hkNGB\:V
~>
<~z!!**$!<N<)!sA`0"9er4"U5/8"pYA<#7(SA#mq"H$4@4L$OdFP$k3XU%M''\%hK9`&.oKd&J>]h&eYi
k'GM8s'bqK"()@]&(Ddo*(`4,.)B'P6)]Kb:*#ot>*??1B*ZcCF+!2UJ+X&$R+sJ6V,9nHZ,U=Z^,pjr
d-RU8i-n$Jm.4H\q.P!##/1`>(/M/P,/hSb00/"t40JG180etL?1G^gD1c.$H2)R6L2E!HP2`NcW3B9)
[3]];_4$,Mc4?P_g4Zttm5<h@s5X7S"5s[e&6:+%,6psF277BX67Rfj:7n6'>84Z<D8kM]J91qoN~>
<~z!!**$!<N<(!WrN,!sA`0"9er5"pYA<#7(S@#RLeD#mq"H$4@4L$OdFP$k3XU%M''\%hK9`&.oKd&J5W
g&eYik',)&o'GM8s'bqK"()@]&(Ddo*)&X>2)B'P6)]Kb:*#ot>*??1B*ZcCF+!2UJ+<VgN+X&$R+sS<
X,U=W],paia-71&e-RU8i-n$Jm.4H\q.Olnu.k<,$/1iG+/hSb00/"t40JG180ekC<1,:U@1G^gD1c.$
G2)R6K2E!HO2`E]U3B9)[3]];_4$,Mc4?P_g4Ztqk5!D.o5<hCu5s[e&6:+"*6UO4.6psF277BX6~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
np
5.84021 35.6394 mo
5.2909 33.6684 5 31.6126 5 29.5 cv
5 14.8867 18.9063 3.00001 35.998 3.00001 cv
40.8535 3.00001 45.4492 3.96092 49.5449 5.66798 cv
49.5449 5.66798 li
49.5449 5.66798 li
44.6242 2.76984 38.6854 1.05107 32.285 1.00113 cv
44.4907 1.09645 55.0349 7.25239 59.9884 16.1105 cv
54.6294 16.5646 49.1184 17.7771 43.6601 19.8184 cv
35.2206 22.9723 27.9828 27.6973 22.3644 33.3173 cv
20.4135 32.4699 18.2614 32 16 32 cv
12.1412 32 8.603 33.3654 5.84021 35.6394 cv
32.2829 1.00112 mo
32.2774 1.00107 32.2715 1.00103 32.266 1.00099 cv
32.2712 1.00103 32.2777 1.00108 32.2829 1.00112 cv
32.2612 1.00095 mo
32.2454 1.00084 32.2296 1.00074 32.2137 1.00065 cv
32.2293 1.00074 32.2456 1.00084 32.2612 1.00095 cv
32.2042 1.00059 mo
32.2002 1.00057 32.1966 1.00055 32.1926 1.00053 cv
32.1968 1.00055 32.2 1.00057 32.2042 1.00059 cv
32.1811 1.00047 mo
32.1775 1.00045 32.1741 1.00043 32.1705 1.00042 cv
32.1747 1.00044 32.1769 1.00045 32.1811 1.00047 cv
32.1501 1.00033 mo
32.1473 1.00031 32.1445 1.0003 32.1418 1.00029 cv
32.1449 1.00031 32.147 1.00031 32.1501 1.00033 cv
32.1273 1.00024 mo
32.1245 1.00023 32.1213 1.00022 32.1185 1.00021 cv
32.1206 1.00022 32.1252 1.00023 32.1273 1.00024 cv
32.1031 1.00016 mo
32.1007 1.00016 32.0984 1.00015 32.096 1.00014 cv
32.0991 1.00015 32.1 1.00015 32.1031 1.00016 cv
32.0741 1.00009 mo
32.0721 1.00009 32.0709 1.00009 32.0689 1.00008 cv
32.0699 1.00008 32.073 1.00009 32.0741 1.00009 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[56.16 0 0 36 4.32 27.52 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 117 
/H 75 
/M[117 0 0 -75 0 75 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 117 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 117 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 117 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 117 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
li?n`r;uiuqulp$r!*'(q[!-,q[36/r!`K4r!rT7r=Ji<r"AuBpAfdFMuX.b!WiH+"9\l3"pkJ=#7(SA
#mq"IrX8c9rXKGL&.fEc&eYik'GM8s()@_c(]YHQ)A=&0*$$%@*ZlIH+<_mP+sS<X,UNF:'.51V.4H_r
.k</%/M/S-0/#"51&`p.1[P2>!W<)s"8r?&"T/H$#5e`'#lP),$N(;0%/^S4%f6e8&Gm(;')`Ki!.k3Y
!!!'!!Y5A9"9er5"pYA=#RLeE$4HhA!"Jo;'+YWc&J5Wg',)&o'bqK"(Ddo*)?(NS)u^ff*?H7D+!;[L
+X/*T,:"N\r[%Umr[8:+.Olr!/1`A)/hSe10JG6\1''0fmK!+br;uiuqulp$r!*'(q[!-,q[36/r<rZ7
r!iN5r"&]:r"8i>r"Gt.JcOX-!!3'#'*A@?"U,)7#6tM?#mgqG$O[@O%K6h;&,m+N&J>]i',2,q'c%Q$
(Dmu,rYbbUrYuRl*ZcCF+<VgN+sJ6V,U=Z^-71,>-k7[U.P!##/1iG+/h\k30Es6d1,:XB2"(GA!W<)s
"8i<""oJT%#Q+l*$2b/.$iCG2%JpY5&,[":&c<:>'*&aG!.k3,!!!'!!W`B+&Hi4?"pP;;#RC_C$47.K
$k*UE%KI%=&/,Wg&ebom'GV>u()Ic((`=20)B8Yq!$2%[%j)o:+X&$R,9nHZ,palb-iPLo.K1e-.kE5'
/M8Y/0/,(70etL?r\X*EqZ6WsqZHa!r!!!&qZm$)r!E9.r!WE2r!iN5r"&]:r"8i>r"K)Eec::%YlFb)
rW3'%rWEl<"pP;;#RC_C$47.K$k*RS%Ls$K&-*=A&do?e'GV>u()Ic((`<Dn)B'Ro)uq#Y*Y0>8+<_mP
+sS<X,UF``-7Ad@!%Ims'.YUb/M/S-0/#"50ekF=1G^jE2=LVD!W3#s"8i<""oJT%#Q+l*$2b/.$iCG2
%JpY5&,[":&c34>'E/]K!.k4)!!E<'!WiK'"98W)"qLqE#RLeE$4@4M$k3XU%M/OM!"o2C',)&o'bqK"
(Ddo*)&X>2)]Kb:*W@)[+9!An+X/*T,:"N\,pjrd-R^Alr[Imur[\+&/hRSd0/,(70etL?1GgpG2XpeF
!W3#s"8i<""oJT%#Q+l*$2b/-$iLM3%JpY5&,[":&c34>'E&W"!/(@P!<N<("9&E'"o\]>#7(SA#mq"I
$OdFQ%1WjY%hK9arXo2ErY,kX()@]&(`4,.)B'P6*#p!u*WR;]+:fV>+sS<X,UF``-7:/h-n5-F!%\%"
&M5Uf0/#"50ekF=1G^jE2)R;_!;llq!WW?$"8i<""oJT%#Q+l*$2b/-$iLM2%K$_6&,[":&c34>'DrR#
!.k3Q!!iT+!WiH+"9\o-"ono-#S.4K$4@4M$k3XU%M'']&/"mS!#,>G!u2Re(Cq<!(`=20)B0V8*$$%@
*ZtA(!$V=c%jN>F,palb-RU;j.4H_r/,h("/cI@40/,(70etL?1GgpG2)[Aa!;llq!rN/t"T8N$#5e`(
#lG#,$31J3$iLM2%K$_6&,[":&c34>'DiKO!.k41!;-<t!<E6'!s8Z/"o\]+#Q=uB#mq"I$OdFQ%1WjY
%hK9a&J>]irY,>IrY?"\(`4,.)B'P6*#ot>*ZcF&+93Sa+qGnD,UF``-7:/h-n-Sp.P(KL!%n1&%kfUj
0ekF=1G^jE2)R9M2tm=O!;llq!rN/t"T8N$#5e`(#lG#,$Mt50%/UM3%f?k8&H!.;')`L@'EAm8!.k3C
!"8l/!WiH+"9\l3"pP>3#QP21$4%"J$k3XU%M''S&.fEc&eYlW'EAmI()%K$(`=20)B0V8*$$%@*ZlIH
+<g_.'-ebJ,palb-RU;j.4H_r.k</%/cI@&0E*X60etL?1GgpG2)[?O2t[1K!W3#s"8`6""oAN%#QG)/
#lG#,$Mt50%/UM3%f6e8&Gm(;')WF@'`Soe!.k3l!"8l/!WiH+"9\l3"pP>3#QP21$53dU$k3XU%M'']
&.oKe&ebom'G^T_!#PVO%iH9()]Kb:*??1B+!2UJ+oWYc,Q8r!,pjrd-R^Al.4Qet.kE5'r[n1(r\+d9
1,:XA1c.'I2E!KQ3;*@M!W3#s"8`6""oAN%#Q"f*$2Y)-$iLM2%K$_5%fd1?&Gm(;')WF@'`Ji<!.k4@
!"]/3!WiH+"9\l3"pP;;#RCb9$31J5$kEdW%M'']&.oKe&ebom'G^T_!#PVO%iH9()]Kb:*??1B+!2UJ
+oWYc,Q8r%,pjrd-R^Al.4Qet.kE5'/M8Y/r\+=,r\=g:1c.'I2E!KQ3&pm;q>gEoquZcuqZQj$qZcs'
q[!-,q[36/r!`K4r!rT7r=Ji<r"Ao@r"T)EoDjICRK*j!!WiH+"9\l3"pP;;#RCb9$31J5$ig_L%Ls![
&.fEc&eYik'GM8s()@_c(]YHQ)@mc,*$$%@*ZlIH+<_mP+s[(4!%%Uk%jrbR.4H_r.k</%/M/S-0E*X*
1&`p91GgpG2)[?O2`NcWp]10lr;uiuqulp$r!*-*rs/E,r<`?.r!WE2r!iQ6q[`W:q[r`=r"JuBr"[EU
JcN[g'*/.9!s8Z/"U,)7#6tM?#mgqG$iUP7%K6hJ%hK9a&J>]i',2,q'c%Q$rYPVQrYc7c*#ot>*ZcCF
+<VgN+sI"3rZhIir[&:+-n$Mn.Olr!/1`A)/hSe10JG6\1&s-01^Grs2E*QS3&s"p!;cfq!rE)t"T/H$
#5e`'#lP),$N(;0%/^S4%fR"<&,d(:&c<:>'DrRA'r1h]!:0[c!WE-2!sA`1"U5/9#7(SA#mq"IrX8c9
rXKSP&.fEc&eYik'GM8s()@]&(`4.i)?:`U*"O&2*ZlIH+<_mP+sS<X,UNF:!%7ao%k/tX.k</%/M/S-
0/#"51&`p.1]B372)[?O2`Ln!3B9.s!;cfq!rE)t"T/H$#5e`'#lP),$N(;0%/^S3%f?k8&H!.<')WF@
'`/UF(Ae)`!1!Tb!WE-2!sA`1"U5/9#7(SA#mq"I!t,MG%K6h;&,m+N&J>]i',2,q'c%Q$(Dmu,rYbbU
rYuFh*ZcCF+<VgN+sJ6V,U=]8-3,Fm-ke$Z.P!##/1iG+/h\k30JP:;1,Jnd!&aa6"ueM$3B9,]qZ-Ko
r;uiuqulp$r<<6+qZm$)r!E9.r!WE2r!iN5r"&]:r"8i>r"JuBq\B,Hdf=t"^An67rW3'%rWE`8"pP;;
#RC_C$47.K$k*UE%KI%=&/,Wg&ebom'GV>u()Ic((`=20)B8Yq!$2%[!ZrO-$m?c<+sS<X,UF``-7Ad@
!%Ims%kB1^/M/S-0/#"50ekF=1]B322?#K=2`NcW3BB2_quHTpr;uiuqulp$r!*$'r!<3,r!N?0r!`K4
r=8i;r"&]:r"8i>r"JuBq\B)GWrV,ZL]@DUrW3*&";M%B"U5/9#7(SA#mq"I$OdFQ%1WjYrX]&ArXo_T
'GM8s()@]&(`4,.)B'Ro)uq#Y*Y0>8+<_mP+sS<X,UF``-7Ad@!%Ims'.YUb/M/S-0/#"50ekF=1G^jE
2?#K62uYc>3BB2_48]*V!W3#s"8i<""oJT%#Q+l*$2b/.$iCG2%JpY5&,[":&c34>'DiLA(&\p.!.k3U
!!E<'!WiK'"98W)"qLqE#RLeE$4@4M$k3XU%M/OM!"o2C$PO3g'bqK"(Ddo*)$_#t)B0V8*$,#"'-A>>
+X&$R,9nHZ,palb-RU;j.K1ds/,h(1/M8Y/0/,(70etL?1GgpGr\aa8r\t'A3]]>a4T,9X!W3#s"8i<"
"oJT%#Q+l*$2b/.$iCG2%JpY5&,[":&c34>'DiLA(&SiZ!.k4)!!E<'!WiK'"98W)"qq4I#RLeE$4@4M
$k3XU%M'']&/"mS!#,>G%i#iq(Ddo*)&X>2)]Kb:*W@)[+9!An+X/*T,:"N\,pjrd-R^Alr[Imur[\+&
/hR\g0/,(70etL?1GgpG2)[?Or\sm<r]1*B4?WTCquQ]squcj"r!!!&qZm$)r!E9.q[<?2q[NH5r"&]:
r"8f=r=f&Br"],F!#Lh!KE2#Q"p+i.!sA`1rWW?-rWj#@$47.K$k*RS%Ls![&.fHQ&c`UE'Ftoo()Ic(
(`=20)B0V8*$,#"!$D1_'-SPD,9nHZ,palb-RU;j.4H_r/,h("/cI@50/,(70etL?1GgpG2)[?Or\sm<
r]13E4?Pb,!;llq!WW?$"8`6""oAN%#Q+l*$2b/-$iLM2%K$_6&,[":&c34>'DiLA(&SjI([;!P!3H5,
!<E6'!s8Z/"o\]+#Q=uB#mq"I$OdFQ%1WjY%hK9a&J>]irY,>IrY?"\(`4,.)B'P6*#ot>*ZcF&+93Sa
+qGnD,UF``-7:/h-n-Sp.P(KL!%n1&'/)$n0ekF=1G^jE2)R9M2`E]U3W;&>48q>C4TPB\quZcuqZQj$
qZcs'r!<3,r!EE3r!WH3q[NH5r"&]:r"8f=r=f&Br"],FrYNEOJcO=$$NU;1!s8Z/"U,)7#Q=u/$2t8B
$OdFQ%1WjY%hK9a&J>]irY,>IrY?"\(`4,.)B'P6*#ot>*ZcF&+93Sa+qZ%F,UF``-7:/h-n-Sp.P!##
!A#i%/c[R(0Foln1,C^C1c7-K2E*QS3'$t!!'C0B!BiXE!W3#s"8`6""oAN%#Q+l*$2b/-$iLM2%K$_5
&,d(:&c<:>'DrRB(&SjG(Rb>U!;um)!WiH+"9\l3"pP>3#QP21$53dU$k3XU%M'']&.oKe&ebom'G^T_
!#PVO%iH9()]Kb:*??1B+!2UJ+oWYc,Q8r!,pjrd-R^Al.4Qet.kE5'r[n1(r\+O21,:XA1c51h%lQ=)
2`NcW3BB2_4$5Yi55bN^!r`9!"8`6""oAN%#Q"f*$2b/-$iLM2%K$_5&,d(:&c<:>'DrRB(&SjF(\%KW
!2]`*!WrN-"9er5"pYA=#RUJ;!"8c7%LimX%hB3_&J5Wg',)&o!#>JK!#PVO%iH9()]Kb:*??1B+!2UJ
+oWYc,Q8r%,pjrd-R^Al.4Qet.kE5'/M8Y/r\+=,r\FI/!&X[4s#0m9s#C$=s#U0As#g<ErW2ouqucg!
r<<'&r!3*)r<`K2r<iH1r!`K4r!rT7r=Ji<r"Af=r"T#Cr"f;KaT-nmc2\7T!sA`1"U5/9#7(SArX&W5
rX9GL%Ls![&.fEc&eYik'GM8s()@_c(_[c*)B0V8*$$%@*ZlIH+<_mP+s[(4!%%Uk"Xb]H.4H_Q.P!##
/1iG+/hd/W"Yhbe1,C`b1^5fq2E*QS3;toB3]fDc4?Yk,!W<)s"8i<""oJT&#Q"f*$2Y)-$iCG2%K$_5
&,d(:&HEI@')N@?'`/XC(B,,%!1!Tq!sA`1"U5/9#7(SA#mq"IrX8c9rXKGL&.fEc&eYik'GM8s()@_c
(]YHQ)@mc,*$$%@*ZlIH+<_mP+s[(4!%%Uk&18kS.4H_r.k</%/M/S-0/*;Yr\=C-r\FO2r\X[6r\sg9
r]1$@r]C6F!<N-#qZHa!r!!!&rWiH.q[!-,q[36/r!`K4r!rT7r=Ji<q%ET=q%W]@r>,DLf`6U(^&SWG
"9er5"pYA=#RLeE$4HhA!"Jo;'+YWc&J5Wg',)&o'bqK"(Ddo*)?(Na)]Th<*?H7D+!;[L+X/*5,9nHZ
-2o4k-iPLu.4Qet.kE7N/cIC%0*!^*1&`s-1]K<32?#KB2`E]U3B9,^4$5Vg!W<)s"8i<""oJT&#Q"f*
$2Y)-$iCG2%JpY8&,m+;&Gd"9&cr^[')WF@'`/XC(B52U!.k45!"f>;"U5/9#7(SA#mq"I$OdFQrXJo=
rX]SP&eYik'GM8s()@]&(`4.i)?:`U*"O&2*ZlIH+<_mP+sS<X,UNF:!%7ao"t;#O.k</%r@S%%r@e.(
s"XL.s"j[3$8aUt2E!KQ3&ioYr]1*B4?`WEqZHa!r!!!&qZm$)r<`?.r!WE2r!iN5r"&]:q@WK8r"JrA
r"T2Ir>,AKM#`S:$j6_<"pYA=#RLeE$4?qD$k*UE%KI%=&.]?c&ebom'GV>u()Ic((`E;k!#tnW'-/,8
+!2UJ+X&$R,9nHZ,palb-iPLo.K1ds/,_$u/cRI&0E*[(1&j$/1]B612$,Zp2uYc:3W;&@4$,S(!rE)t
"T/H%"onl)#Q+l*$2b/.$iCG2%JpY5&,Zt>&J4jP!YQ+Xq\&]<q\8rCr"]8KhuJ?/[f@'F"pP;;#RC_C
$47.K$k*RS%Ls$K&-*=A&e>Wi'GV>u()Ic((`=20)B8Yq!$2%[!ZrO-$m?c<+sS<X,UF``-7Ad@!%Ims
s""%!r[n+%r\+7)r\=F.rA+L32)Y@k$9'n'3&ru[3]fDcrW<!"qulp$r!*$'r!<3,r!N?0r!`K4r=8i;
r"&W8q%<E8q\/i@r"])E!#N-FJcO[.rWWl<#RC_C$47.K$k*RS%Ls$K&-*=A&e>Wi'GV>u()Ic((`=20
)B8Yq!$2%['-A>>+X&$R,9nHZ,palb-RU;j.K1gr/,_$u/c@=$0E3a+0`j'b1B'*/2#fH52ZG`93<)#<
3WhH+!Wr9%qulp$r!*$'r!<3,r!N?0r!`K4q[WN7q@NH7q%EQ<rY,AH'`AaC(&o'L(Q\WQ!!NQ2#7(SA
%g`RM$O[@O%1NdW%hB3_&cNCC'E/[V'c%Q$(Dmu,)&aD4)]Th<rZ2%]rZD^p+sJ6V,U=Z^-71)f-n$PC
.fLst/Gq+!0)dO'0`Eg+1B0012#]B32@2<$3&ioZ3]fD)qucj"r!!!&qZm$)r!E9.q[<?2q[NH5r"&W8
!YH"Ur"/uC&J=pRpCmH=q\B#Ek5^)6YQ+\.#Q=u>#mq"I$OdFQ%1WjY%hK9arXo2ErY,qZ()@]&(`4,.
)B'P6*#ot?*W[<(rZDaq+sJ6V,U=Z^-71)f-n$Mnr@7arr[e""r\"1'r\+R30etI=1,C`b2#fH52Z>W=
3&ru[4$3?BqZQj$qZcs'r!<3,r!N</r=&T5!"Ji9r"&W8!YGtTq%<B7q\/lAq\AuD^AricfDkmVrWj/D
$47.K$k*RS%Ls![&.fEc&eYlW'GD2s()Ic((`=20)B0V8*$$%@*ZtA(!$V=c$mR#C,palb-RU;j.4P0E
r@@gtr[n+%r@e.(r\=F.rA4I1r\Xa82`L^q"$&A&48f9Y"T8N$#5e`(#lG#,$Mt50%/UM3%f?h<&.eRJ
q%3Z@&eY!Rp_3N=q\B)GpAfdFTE+rs!"&W3%grdS%1NdW%hB3_&J5Wg'E/[G(&esZ(Dmu,)&aD4)]Th<
*?H7DrZD1arZVUm,U=Z^-71)fr[@dqr$qXqr@Iq"r\"+%r\4@,rA+C/s"sa5r\jd8s#C!<!':)]qZQj$
qZcs'r!<3,r!EE3r!WH3q[NH5q@EB5!YGtTq%<B7q\/i@q\B&FcN&Osa8c8I#RUJ;'+53W%1NdW%hB3_
&J5Wg',)&o(&es^(Dmu,)&aD4)]Th<*?H7D+!;[LrZV=erZhUm-71)fr@%[pr[Rptr@@gtr[n%#r\+4(
r\=F.s"jX2s#'g7r\k$@3&ru[!sAE'r<<'&r!3-*r!E9.q[<?2q[NH5q@E92rXo&?p_*H;!#5DGq\8rC
rt_L4JcP9?!=0#2$31J5$kEdW%M'']&.oKe&ebom'G^T_!#PVO%iH9()]Kb:*??1B+!2UJ+oWYc,Q8qk
,pjrd-i>Cm.Jt[o/,_""/M-lQr\".&r\4=+r\FF.">hqm2)bImr\ss>3<T-]r<<'&r!3*)r<`?.r!WE2
r!iQ6q@<W=&.eRJq%3T>rXo&@!#,>Eq\/i@q\B,HrW%NMR/d3nrX&W5rX98G%Ls![&.fEc&eYik'GLN^
rY>JMrYQ:d)B'P6*#ot>*ZcCF+<VgN+sJ92,QK.i-3,Fk./bUn.fCmq/H.7!/d!a[0JEAY#;Iqg1,C[A
1]B3;2)R9M2`E]V3<T0^r!!!&r!3*)r<`K2r<iH1r!`K4r!rQ6!Y>nRq%*Q=&GHe3')N@>'`/XE(=iJ;
!5SX;#mq"IrX8c9rXKGL&.fEc&eYik'GM8s()@_c(]YHQ)@mc,*$$%@*ZlIH+<_mP+s[(4!%%Uk!%7[m
!%@dpr@7^qr@Ijur@\%%r\4=+rA+C/s"sa5r\aj;2`Nhq"T/H$#5e`'#lP),$N(;0%/^S4%f-\;&.]<J
&H378&HWRW&c34@'E8^B'DiL@'s7Og!9jIb$471?$igb9%M'']&.oKe&ebom'GV>u()Qre!#bbS',qo2
*??1B+!2UJ+X&$R,9nHZ-2o7k-i>Cj.K(ao.fh1Or@Iq"!A5u'/d3m]0J>+6rA"=-r\OO1s#'g7r\jg:
r<3$%r!*'(q[!-,q[36/r!`K4q[WK6!Y>kQp(.9;&.nUKpCd?:q\9#ErY5DKL&dA:"UYVF$k*UE%KI%=
&-<FV&e#Ee'GM8s()@]&(`4.i)?:`U*"O&2*ZlIH+<_mP+sS<X,UNF:r[7Xmr$hLmq^_Ur!A,l%/c@=#
0E*[)1&j$.1]K<22$>fq2`E_q"T/H$#5e`'#lb52$2Y)-$iCG2%JpY1&+^A-&HWRX&c*.7'D`CE'c%S@
!.k3^!!EZ;$k*UE%KI%=&.]?c&ebom'GV>u()Ic((`E;k!#tnW'HJ59+!2UJ+X&$R,9nHZ,palb-R\pA
r@%Olr$h^t.fLsp/H.41/hJ\.0.nn20J>+60erS]">_hj2)Y@ks#9r\r!!!&qZm$)r!E9.r!WE2r!iN5
p^[E;%hSFG!YH"Up_!34q\/f?r=u^?JcOd1#7CqK%1NdW&,m+R&J>]i',2,q'c%Q$(Dmu,)&aD4rYtnY
rZ2Ok+<VgN+sJ6V,U=Z^-78[=r@%Lkq^VLo!A#c"/-.=Rr@S"$r@e.(r\=@,">_hj1c>7j!B1/Z"oSW*
#5\Z'#lG#,$N(;0%/^S3%epP8&.eFF!YGtTp_!K<!"o&?q\/f?r"\T!JcMeN"q1nL%1WjYrX]&ArXo_T
'GM8s()@]&(`4,.)B'Ro)uq#Y*WdE++TEVb,6&nf,l]1i-N,=j-ithH./bUk.f:dt/1^WLr[n""r\+4(
r\=F.s"jU1!];kor!!!&qZm$)r!E9.r!WE2r!iT7rsn`5ndtR.!##8Cp(I38q@ioE`;kJidJsR^%1NdW
%hB3_&cNCV',2,q'c%Q$(Dmu,)&aD4)]Th<rZ2%]rZDIi+sJ6V,U=Z^r[.Rkr$VRp./bRr.OlnE.fCmt
/,Uq!/M-iPr@\%%s"OF,r\FI/">hqm2)bC:r!*$'r!<3,r!N</r=&Q4r!rE2rt,2@p(.9;&J4[KrXo2C
q@`W<q@rrESH+6Aq>^d1%1WjY%hK9arXo2ErY,kX()@]&(`4,.)B'P6*#p!u*WR;]+:',7+sS<X,UFc9
-N#7i-ikbFqC)Fp.JtXr.k:KJ!A#c!/H%.$/hR&Tr@e.(s"XL.s"jX2s#'cZr!*$'r!<3,r!N</r=&Q4
r!i`<%egJ8&.]<F&-<FT&H37A&GHe5')rXE')E:A'`Jj>!.k3G!!`rC%M'']&/"mS!#,>G&JZ&s(Ddo*
)&X>2)]Kb:*??1%*ZtA(!$V=c"=#0;,piO;r$V=hq^DOq.JYIh/,Lms/c77$0DmO'0`j*d1]B342$F0\
#5e`(#lG#,$Mt50%/^P7%K$\:%hA=E!Y>kQo+:p6rt+o:r=T)Bq@`W<q\76SJcNso$4[OV%hK9a&J>]i
rY,>IrY?"\(`4,.)B'P6*#ot>*ZcF&+93Sa+p9,9,UFc9-N#7f-ithH./GCm.f:as.k:EH!A#c"/-RUV
/M/S,r[n:+/h\mW0`Ed.1,:Zb1]R^V#5e`(#lG#,$Mt50%/UM3%KR(MoFCs6&+pJ6&cN@A&HNITq[if@
r=Sl=q@i]>U]>uHo)K(,%hB3_&J5Wg'E/[G(&es^(Dmu,)&aD4)]Th<*?H7D+!;[LrZV=erZhIir[.Ih
r$_Ros![an!\,ZKqC;:k!A#c"/Gq*t0)dO(0`Ed,1'99f1c5(6r!3-*r!E9.q[<?2q[NH5!=o\4%fm4P
oah*8rXf)Art+l9rY#5Cq\&]<rY550JcM;@$kEj[&.oKe&ebom'G^T_!#PVO"W83s)]Kb'*$$%@*ZlIH
+<g_.!$hIg![T0?q'Z%f!\#NGpF5qg!\5`Mq'uIs/,_$s/cRI&0E*[)1&`p.2#IRU#Q"f*$2Y)-$iCG2
%K$_,%fm4PnIP[4rXf&@!"ef8q@`W<r=m]\JcN^h$P*d[&J5Wg',)&o(&esK(]G6b)&aD4)]Th<*?H7D
+!;[L+X/*TrZhIir[.Ihq^;Lp-n,$CqC)Iq.Ok'@q^_Rqr@Rt#r\+:*r\=C-r<E0)q[!-,q[36/r!`K4
r!r9.!>#e5&Gm%=&cWF8&bQe9'E&WG!9+!;!<3W1&cWLD'E8aL'bqK"(]G6O)?(Nb)]Th<*?H7D+!;[L
+X/*TrZhIir[.Ihq^;Fnr@%Ch#:_/O.Ocer.JbOn.f_'t/,Ust/c@=%0E3a*1&j$.#5e`'#lP)0$N1>0
$iCG2%K$_,%g3FS&.fBO&-*71&H37A&G6Y2')<4$!.k3X!"BJO&J>]i',2,q'c%Q$rYPVQrYcFh*#ot>
*ZcCF+<VgN+sJ6V,U=]8-Mo1`../PX.f(Xu/1`A)/H.7#0)dL(0`Eg,#5e`'#lP),$N(;0%/^S3%eC23
&.\sV&.]9_&.e7A!"o2Ar=K#@q@WN9q%E`B])[E_g].lt&J>]i',2,q'c%Q$(Dmu,rYbbUrYuFh*ZcCF
+<VgN+sJ6V,U=]7-N,=`../Ma.fLjt.Ok?Hr$h^t.fLsr/H.7#0)dL+0JP9dr!3*)r<`?.r!WE2r!iN5
o+)*<%hB3^%hK9_lk'1/rXel;r"8`;rY#8GP5p::!YH%X$kj9g'GV>u()Ic((`E;k!#tnW&02f5+!2UJ
+X&$R,9nHZ,piO;r[7[n!%7Igr@%^pr[@gqn0nGh.4QeC.f:gr/H.7"/d!a[0JWG0r!<</rX&K0r!WE2
r!iN5o+)*<%hB3^%hK9_ljs./r=Jo>!"er<q%ET=l2ZD9XT/tH&ebom'GV>u()Ic((`=20)B8Yq!$2%[
&0E#;+X&$R,9nHZ,palb-R\m@![oHEodKegs![mrs![do""5TI./PFn./>=g.fLss/H.7#/cm[Z0`21R
#lG#,$N(;0%/^S3%eU>>%hB3^%hK6^&.fBL&-*7/&-*=@&G-S4')`K\!.k4$!"fhV',2,q'c%Q$(Dmu,
)&aD4rYtnYrZ2Ok+<VgN+sJ6V,U=Z^-78X<![oHEodCS)-n-Pm.4HYn.4HYn.4?Sn-n$Mm.4P6E"">WI
./GCj.fLq&/1W5%/1iIQ0)mU'#Q+l*$2b/.$iCG2%JpY/%h9-]%hK6^&.]9_&.]<`&,m+?&,m+?&+0u/
&H3:@&Gd"6&c`T6!.k4L!#-%Z'GM8s()@]&(`4,.)B'P6*#p!u*WR;]+:989+sS<X,UF``-N#4m-n$J9
-ithG.K1^q.K1^q.I8Gb.4?Vnq^MFmr@@n!s"44&rWiE.rs8N/r!N</r=&Q4r!rE2!"f&=#S7LW&.f?`
&.eaO!"]&?!"]&?!"\B,q%<E8rtFo&JcMYJ!#,>G%i#iq(Ddo*)&X>2)]Kb:*W@)[+9!Ag+X/*T,:"N\
-3#=l-h&Md.4HYor[7aqh^JCOr[Rjsr[\1(/hRA6r!<3,r!N</r=&Q4r!rN5p^[WA%hB3_%hK9_rX]&?
rX]&?rX]&?rX]&?r=Ar>oFV$7rXef9rXo2EaT-nmc2dhX',;8u(Ddo*)&X>2)]Kb:*??1B+9!A_+oWYi
,:"N\,pju<-h/Vb.JtRo.J5)"-n$Gk-mpDj-mpDj-mpDjq'Z:n-n,'Dr[Rjs!%e+$!!iE-r!E9.q[<?2
q[NH5n.,d9&.]<`%hK9_rX]&?rX]2C&.f?_rX]&?r=B#@&.emS&.eCEpC[<9JcM):!Yc=`rY>qZ(`4,.
)B'P6*#ot>*W[<(rZD1arZVOk,U=Z^-78^>oI'hk.4?Snr$VOoodBqj-mpAjng=Je-R\d>r[Idqr@7n"
/c5nP$2b/-$iLM3%0-k8%e:,;&.]<`%hK9_&.fBO&.B'\&.]9_&.]9_&.]<N&H<:?&H<:>&-*7:&H<@?
&H*4='%m8:!58F6'G^T_',MK&)&X>2)]Kb:*??1B+!2UJ+oWYc,Q8qk,pjrd-i#.t.4?Sn.4?Sn-n$PC
./#%j-R^D9-O1tG-7:,f-RSX:r[7jt-n$PC.fLpu/H#kP$2b/-$iLM2%K$_2%hK9_%hK6^&.]<`%hK9_
&.fBO&-WRU&.]9_":u(S&.ngO!"f,?rt,/?rXf)?r"&i=p^m34!"uO:JcOp5!#>JK!#PVO%iH9()]Kb:
*??1B+!2UJ+oWYc,Q8qk,pjrd-i#.j.K1_".4?Sn-n$P8-itbD./>4k-7AC3![f<AqBu7j!%Imsr[[pQ
r<`?.r!WE2r!iQ6oa_B@%hB3^&.f?`&.eXL$4d[Z%hB3_%hB3_rXSu?rXSu?r=Ao>rX\u>rX\`7rXo&?
rt:.gNr].p!#PVO"W83s)]Kb+*$$%@*ZlIH+<_mP+s[(4!%%Uk!%7Ff"">WH.K1ao.J>.k-RU>A-NkbD
-RL56-3GP@-7/I7r?qOl!%IjrrWrH/q[36/r!`K4r!rB1#7qCV&.]<`&,QnI%hK9_&.f?_&.f?_&.ngO
!"f,?!"f)>!"f)>!"f&=r=Jr=pCR?:rt=5iJcN7[!YuOfrYPVQrYc:d*#ot>*ZcCF+<VgN+sJ92,QK.i
-3,Fj..ete.J>1e-NYVB-i,.n,pjob,prC5s!Ialr[.Rkr?qdt.Ok]0r<`?.r!WE2r!iQ6q@<fB%hB3^
&.fBJ&-i^W&.]<`%hK!X&.]<`%hB3_l43k+q[`E4r"6F=JcO[.!>ZLN(]YHQ)A=&0*$$%@*ZlIH+<_mP
+sS<X,UNF:!%7XlnL=,Zq^;1d!@9)e,mP_A,paf_,p`F8r?hLkr[7gs.1#kYq[36/r!`K4q[WK6#7qCV
&.]<`&,ZtO%hK9_&.f?`&.]9_&.]<`%hB62&-!1@&H*.=&Gm'$!/LUY(Ddo*)&`Pp)B8Yq%il]4+!2UJ
+X&$R,9nHZ-2o4k-iPO^.K1aq.JbIi-i54k,prR:"XGB>,pXf0,lAte-N,:m-n5*$q[36/!"Af7r!iN5
q@<T<&,HhA%hK9_&.fBL&.&jY&.]<`%hB3_g^j,jk5^)6YQ+bA(`4.i)?:`U*"s>6*ZlIH+<_mP+sS<X
,UF``-7Ad@odTS`q'c+fq^)=i-N,7f,RYhB,:"KY,U4Q[,:!%1r[%Rkr[.[or<`B/r!WE2r!iN5q@<T<
&+C/0&.&jY&.]9_%hB3_m101,r"&f;pCI!0^AricfDl*m(`=20)B8Yq!$2%[%j)o:+X&$R,9nHZ,palb
-iPOm.0(jd.JbIh-i57g-2]"g,jloU,l]1i-N>Im$2b/.$iCG2%JpY5%fm4PlOX@5&.f?_&.]9_&G$D4
%fHq<%fHq;%f?k;%e^D7&.fHJ!.k3D!!O2W)&aD4rYtnYrZ2Um+<VgN+sJ6V,U=Z^-71)fs![gp!%Rss
!\,ZKr@7UlpF,tfq^24er?MCg,lAkf+sZn-![Am5r$2.c!%%UkrsAT1r!WE2r!iN5r!rf>&,[".&-*7?
&-WRU&.]9_o+(g2rX\r;!"\u;rt##;p(.*5cN&Osa8cJ`)&aD4)]Th<rZ2%]rZD^p+sJ6V,U=Z^-71)f
-n$PB.Kh1L.OlnH.Kh1M.4HbB.JkOl-iYOl-N,7i,QT,8r?D=e,PWGb+X/*Rr?D.arZhRl,pirr$Mt50
%/UM3%f?k!&-WRU&.]9_o+(g2rX\r;!"\`4rX\l9rt##=VZ;;Kn,N\2)B'P6*#p!u*WR;]+:o\?+sS<X
,UF``-7:/h-n-V<.Kh1M.4HbB.JkOl-i57i-2f(m,:"KY+sZq.oca8X!$hFe![K'<r!N</r=&Q4r!rW8
jU_S+&.f?_&G$G4%f[(&%f-\9&H2Z]!1<fo)B'P6*#ot>*ZcF&+93Sa+p9,9,UFc:-N>In./taa.KLtJ
r@.Ulr$VChr[%Lgr?M1`rZMLh+X%sO+<Vj,+TEVb+T3G`,5i_d,lJ)I$iLM2%K$_6&,m.%&-`XU&.f?_
&GH\:%Ls$?%KHt3%epRc!.k3e!!sP_)]Th<*?H7DrZD1arZVaq,U=Z^-71)f-n$MnpF6.nq'lCo.f(Ul
./kUl-N,7i,lJtd,5`V[+93MX+TEVa+oro6J,~>

%%EndBinary
grestore
np
59.9884 16.1105 mo
55.0349 7.25239 44.4907 1.09645 32.285 1.00113 cv
32.2842 1.00113 32.2837 1.00112 32.2829 1.00112 cv
32.2777 1.00108 32.2712 1.00103 32.266 1.00099 cv
32.2644 1.00098 32.2628 1.00097 32.2612 1.00095 cv
32.2456 1.00084 32.2293 1.00074 32.2137 1.00065 cv
32.2105 1.00063 32.2074 1.00061 32.2042 1.00059 cv
32.2 1.00057 32.1968 1.00055 32.1926 1.00053 cv
32.189 1.00051 32.1846 1.00049 32.1811 1.00047 cv
32.1769 1.00045 32.1747 1.00044 32.1705 1.00042 cv
32.1638 1.00038 32.1569 1.00035 32.1501 1.00033 cv
32.147 1.00031 32.1449 1.00031 32.1418 1.00029 cv
32.1366 1.00027 32.1324 1.00026 32.1273 1.00024 cv
32.1252 1.00023 32.1206 1.00022 32.1185 1.00021 cv
32.1134 1.00019 32.1083 1.00018 32.1031 1.00016 cv
32.1 1.00015 32.0991 1.00015 32.096 1.00014 cv
32.0888 1.00012 32.0812 1.00011 32.0741 1.00009 cv
32.073 1.00009 32.0699 1.00008 32.0689 1.00008 cv
32.0669 1.00008 32.0642 1.00007 32.0622 1.00007 cv
40.3469 1.01426 48.1264 3.78831 53.9746 8.8125 cv
56.4883 10.9726 58.5117 13.4394 60.002 16.1094 cv
59.9974 16.1098 59.993 16.1101 59.9884 16.1105 cv
gsave
[50.7692 46.8962 -46.8962 50.7692 8.25537 5.56006 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00692 28.0634 mo
1.00672 28.0554 1.00653 28.0476 1.00635 28.0396 cv
1.0063 28.0376 1.00623 28.0346 1.00618 28.0326 cv
1.0061 28.029 1.00607 28.028 1.00599 28.0244 cv
1.0063 28.0378 1.00659 28.0501 1.00692 28.0634 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.2 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U5,7"o~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~%LrsY%M'$[&-~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00696 28.0651 mo
1.00675 28.0566 1.00654 28.0481 1.00635 28.0396 cv
1.00653 28.0476 1.00672 28.0554 1.00692 28.0634 cv
1.00693 28.0641 1.00694 28.0644 1.00696 28.0651 cv
1.00618 28.0326 mo
1.00609 28.0286 1.006 28.0249 1.00591 28.0209 cv
1.00593 28.0216 1.00598 28.0238 1.00599 28.0244 cv
1.00607 28.028 1.0061 28.029 1.00618 28.0326 cv
gsave
[50.7692 46.8962 -46.8962 50.7692 8.25537 5.56006 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00583 28.0174 mo
1.00578 28.0149 1.00572 28.0124 1.00567 28.0099 cv
1.00565 28.009 1.00561 28.0076 1.0056 28.0067 cv
1.00568 28.0105 1.00575 28.0136 1.00583 28.0174 cv
1.00546 28.0006 mo
1.00544 27.9997 1.0054 27.9977 1.00538 27.9968 cv
1.00535 27.9953 1.00532 27.994 1.00529 27.9925 cv
1.00534 27.995 1.00541 27.998 1.00546 28.0006 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.2 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U5,7"o~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~%LrsY%M'$[&-~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00567 28.0099 mo
1.00558 28.0059 1.00547 28.0008 1.00538 27.9968 cv
1.0054 27.9977 1.00544 27.9997 1.00546 28.0006 cv
1.0055 28.0025 1.00555 28.0048 1.0056 28.0067 cv
1.00561 28.0076 1.00565 28.009 1.00567 28.0099 cv
gsave
[50.7692 46.8962 -46.8962 50.7692 8.25537 5.56006 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00519 27.9881 mo
1.00518 27.9876 1.00518 27.9874 1.00517 27.9869 cv
1.00513 27.9851 1.00505 27.9813 1.00501 27.9795 cv
1.00507 27.982 1.00514 27.9856 1.00519 27.9881 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.2 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U5,7"o~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~%LrsY%M'$[&-~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00517 27.9869 mo
1.00508 27.9829 1.005 27.9791 1.00492 27.9751 cv
1.00495 27.9764 1.00499 27.9782 1.00501 27.9795 cv
1.00505 27.9813 1.00513 27.9851 1.00517 27.9869 cv
gsave
[50.7692 46.8962 -46.8962 50.7692 8.25537 5.56006 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00477 27.9678 mo
1.00475 27.9668 1.00472 27.9653 1.0047 27.9643 cv
1.00468 27.9634 li
1.00472 27.9653 1.00473 27.9659 1.00477 27.9678 cv
1.00451 27.9546 mo
1.00449 27.9537 1.00447 27.9528 1.00445 27.9519 cv
1.00443 27.9509 1.00441 27.9497 1.00439 27.9487 cv
1.00443 27.9507 1.00447 27.9527 1.00451 27.9546 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.2 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U5,7"o~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~%LrsY%M'$[&-~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.0047 27.9643 mo
1.00462 27.9603 1.00453 27.9559 1.00445 27.9519 cv
1.00447 27.9528 1.00449 27.9537 1.00451 27.9546 cv
1.00456 27.9572 1.00463 27.9608 1.00468 27.9634 cv
1.0047 27.9643 li
gsave
[50.7692 46.8962 -46.8962 50.7692 8.25537 5.56006 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.0041 27.9333 mo
1.00408 27.9325 1.00404 27.9303 1.00402 27.9294 cv
1.00401 27.9289 1.00402 27.9294 1.00401 27.9289 cv
1.00405 27.9308 1.00406 27.9314 1.0041 27.9333 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.2 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U5,7"o~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~%LrsY%M'$[&-~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00421 27.9396 mo
1.00415 27.9361 1.00409 27.9329 1.00402 27.9294 cv
1.00404 27.9303 1.00408 27.9325 1.0041 27.9333 cv
1.00413 27.9353 1.00418 27.9377 1.00421 27.9396 cv
gsave
[50.7692 46.8962 -46.8962 50.7692 8.25537 5.56006 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00367 27.91 mo
1.00364 27.9082 1.00364 27.9087 1.00361 27.9069 cv
1.00358 27.9054 1.00357 27.9045 1.00354 27.903 cv
1.00358 27.9049 1.00363 27.9081 1.00367 27.91 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.2 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U5,7"o~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~%LrsY%M'$[&-~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00371 27.9122 mo
1.00368 27.9107 1.00364 27.9084 1.00361 27.9069 cv
1.00364 27.9087 1.00364 27.9082 1.00367 27.91 cv
1.00369 27.9113 1.00368 27.9109 1.00371 27.9122 cv
gsave
[50.7692 46.8962 -46.8962 50.7692 8.25537 5.56006 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00332 27.8899 mo
1.00327 27.8872 1.00325 27.8857 1.0032 27.883 cv
1.00324 27.8856 1.00327 27.8873 1.00332 27.8899 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.2 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U5,7"o~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~%LrsY%M'$[&-~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00333 27.8905 mo
1.00329 27.888 1.00324 27.8852 1.0032 27.8827 cv
1.0032 27.883 li
1.00325 27.8857 1.00327 27.8872 1.00332 27.8899 cv
1.00333 27.8905 li
gsave
[50.7692 46.8962 -46.8962 50.7692 8.25537 5.56006 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00291 27.8649 mo
1.00289 27.8639 1.00288 27.8635 1.00287 27.8625 cv
1.00284 27.8607 1.00283 27.8599 1.0028 27.8581 cv
1.00284 27.8607 1.00287 27.8624 1.00291 27.8649 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.2 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U5,7"o~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~%LrsY%M'$[&-~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00287 27.8625 mo
1.00284 27.8605 1.0028 27.858 1.00277 27.856 cv
1.00278 27.8566 1.00279 27.8575 1.0028 27.8581 cv
1.00283 27.8599 1.00284 27.8607 1.00287 27.8625 cv
gsave
[50.7692 46.8962 -46.8962 50.7692 8.25537 5.56006 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00255 27.8415 mo
1.00254 27.841 1.00253 27.8403 1.00252 27.8398 cv
1.00251 27.8392 li
1.00253 27.8405 1.00253 27.8402 1.00255 27.8415 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.92 .48 35.2 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 4 
/M[3 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U,&5"pG28~>
<~!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!~>
<~%1WjX%LrsY%h9*]~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00252 27.8398 mo
1.00248 27.8373 1.00245 27.8348 1.00241 27.8323 cv
1.00244 27.8342 1.00249 27.8373 1.00251 27.8392 cv
1.00252 27.8398 li
gsave
[50.7692 46.8962 -46.8962 50.7692 8.25537 5.56006 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.0022 27.8172 mo
1.0022 27.8169 li
1.00218 27.816 1.0022 27.817 1.00219 27.8161 cv
1.00219 27.8168 1.00219 27.8165 1.0022 27.8172 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.68 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U,&5"o~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~%1WjX%LrsY%f~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.0022 27.8169 mo
1.00215 27.8139 1.00213 27.8119 1.00209 27.8089 cv
1.00212 27.8115 1.00215 27.8136 1.00219 27.8161 cv
1.0022 27.817 1.00218 27.816 1.0022 27.8169 cv
1.00184 27.7903 mo
1.00182 27.7883 1.00179 27.7863 1.00177 27.7843 cv
1.00179 27.7862 1.00182 27.7884 1.00184 27.7903 cv
1.00159 27.7693 mo
1.00156 27.7668 1.00153 27.7646 1.0015 27.762 cv
1.00153 27.7646 1.00156 27.7667 1.00159 27.7693 cv
gsave
[50.7692 46.8962 -46.8962 50.7692 8.25537 5.56006 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00126 27.7398 mo
1.00125 27.7389 1.00125 27.7388 1.00124 27.7379 cv
1.00124 27.7374 1.00123 27.7367 1.00123 27.7362 cv
1.00124 27.7375 1.00125 27.7385 1.00126 27.7398 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.68 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U,&5"o~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~%1WjX%LrsY%f~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.0013 27.7433 mo
1.00128 27.7413 1.00126 27.7399 1.00124 27.7379 cv
1.00125 27.7388 1.00125 27.7389 1.00126 27.7398 cv
1.00128 27.7411 1.00129 27.742 1.0013 27.7433 cv
gsave
[50.7692 46.8962 -46.8962 50.7692 8.25537 5.56006 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00102 27.7158 mo
1.00102 27.7152 li
1.00102 27.7151 li
1.00102 27.7157 1.00102 27.7152 1.00102 27.7158 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.68 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U,&5"o~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~%1WjX%LrsY%f~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00107 27.7206 mo
1.00105 27.7186 1.00104 27.7172 1.00102 27.7152 cv
1.00102 27.7158 li
1.00104 27.7171 1.00106 27.7193 1.00107 27.7206 cv
gsave
[50.7692 46.8962 -46.8962 50.7692 8.25537 5.56006 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00084 27.6951 mo
1.00082 27.6931 1.00081 27.6915 1.00079 27.6895 cv
1.00081 27.6914 1.00082 27.6932 1.00084 27.6951 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.68 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U,&5"o~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~%1WjX%LrsY%f~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00064 27.6694 mo
1.00063 27.6689 1.00063 27.6683 1.00062 27.6678 cv
1.00064 27.6694 li
gsave
[50.7692 46.8962 -46.8962 50.7692 8.25537 5.56006 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00048 27.6473 mo
1.00048 27.6469 li
1.00048 27.6462 li
1.00048 27.6469 1.00048 27.6467 1.00048 27.6473 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.68 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U,&5"o~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~%1WjX%LrsY%f~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00048 27.6469 mo
1.00047 27.6449 1.00046 27.644 1.00045 27.642 cv
1.00046 27.6433 1.00047 27.645 1.00048 27.6462 cv
1.00048 27.6469 li
1.00033 27.6215 mo
1.00033 27.62 1.00032 27.619 1.00031 27.6175 cv
1.00032 27.6188 1.00033 27.6202 1.00033 27.6215 cv
1.00023 27.5993 mo
1.00022 27.5978 1.00021 27.5961 1.00021 27.5946 cv
1.00022 27.5965 1.00022 27.5973 1.00023 27.5993 cv
1.00013 27.5737 mo
1.00013 27.5722 1.00012 27.571 1.00012 27.5695 cv
1.00012 27.5714 1.00012 27.5718 1.00013 27.5737 cv
1.00007 27.55 mo
1.00007 27.5495 1.00006 27.548 1.00006 27.5475 cv
1.00006 27.5481 1.00007 27.5494 1.00007 27.55 cv
gsave
[50.7692 46.8962 -46.8962 50.7692 8.25537 5.56006 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00003 27.5247 mo
1.00002 27.5229 li
1.00002 27.5224 1.00002 27.522 1.00002 27.5215 cv
1.00002 27.5228 1.00003 27.5234 1.00003 27.5247 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.68 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U,&5"o~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~%1WjX%LrsY%f~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00003 27.5262 mo
1.00003 27.5252 1.00003 27.524 1.00002 27.5229 cv
1.00003 27.5247 li
1.00003 27.5253 1.00003 27.5256 1.00003 27.5262 cv
gsave
[50.7692 46.8962 -46.8962 50.7692 8.25537 5.56006 ]ct
clp
/1 /Gradient get_res exec grestore
np
32.0511 1.00005 mo
32.0487 1.00005 32.0462 1.00004 32.0439 1.00004 cv
32.0449 1.00004 32.0471 1.00004 32.0481 1.00005 cv
32.0485 1.00005 li
32.0496 1.00005 32.05 1.00005 32.0511 1.00005 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 31.2 62.08 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~#7(S@#RC\A#Q~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~'GM8r'bqGu('~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
32.0515 1.00005 mo
32.0511 1.00005 32.0515 1.00005 32.0511 1.00005 cv
32.05 1.00005 32.0496 1.00005 32.0485 1.00005 cv
32.0495 1.00005 32.0505 1.00005 32.0515 1.00005 cv
32.0481 1.00005 mo
32.0471 1.00004 32.0449 1.00004 32.0439 1.00004 cv
32.0435 1.00004 32.042 1.00004 32.0416 1.00004 cv
32.0437 1.00004 32.0461 1.00004 32.0481 1.00005 cv
gsave
[50.7692 46.8962 -46.8962 50.7692 8.25537 5.56006 ]ct
clp
/1 /Gradient get_res exec grestore
np
32.0277 1.00003 mo
32.0253 1.00002 32.0229 1.00002 32.0206 1.00002 cv
32.0216 1.00002 32.0218 1.00002 32.0228 1.00002 cv
32.0243 1.00002 32.0258 1.00002 32.0273 1.00003 cv
32.0277 1.00003 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 31.2 62.08 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~#7(S@#RC\A#Q~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~'GM8r'bqGu('~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
32.0277 1.00003 mo
32.0277 1.00003 li
32.0273 1.00003 li
32.0277 1.00003 li
32.0228 1.00002 mo
32.0218 1.00002 32.0216 1.00002 32.0206 1.00002 cv
32.0202 1.00002 32.0204 1.00002 32.02 1.00002 cv
32.021 1.00002 32.0218 1.00002 32.0228 1.00002 cv
gsave
[50.7692 46.8962 -46.8962 50.7692 8.25537 5.56006 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00698 28.0662 mo
1.00696 28.0651 li
1.00697 28.0656 1.00697 28.0657 1.00698 28.0662 cv
gsave
[18.3339 34.3338 -34.3338 18.3339 16.1792 2.43457 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00586 28.0185 mo
1.00585 28.0181 li
1.00583 28.0174 li
1.00584 28.0179 1.00585 28.018 1.00586 28.0185 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.2 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%Ls![%hB0]%f~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~-7:2h-n$Jm.K~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00591 28.0209 mo
1.00588 28.0197 1.00588 28.0194 1.00585 28.0181 cv
1.00586 28.0185 li
1.00588 28.0195 1.00589 28.0199 1.00591 28.0209 cv
gsave
[18.3339 34.3338 -34.3338 18.3339 16.1792 2.43457 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00529 27.9925 mo
1.00525 27.9906 1.00523 27.99 1.00519 27.9881 cv
1.00522 27.9896 1.00525 27.991 1.00529 27.9925 cv
1.00491 27.9745 mo
1.00489 27.9736 1.0049 27.9744 1.00489 27.9735 cv
1.00485 27.9716 1.00481 27.9697 1.00477 27.9678 cv
1.00482 27.9703 1.00486 27.972 1.00491 27.9745 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.2 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%Ls![%hB0]%f~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~-7:2h-n$Jm.K~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00492 27.9751 mo
1.00491 27.9745 1.0049 27.9741 1.00489 27.9735 cv
1.0049 27.9744 1.00489 27.9736 1.00491 27.9745 cv
1.00492 27.9751 li
gsave
[18.3339 34.3338 -34.3338 18.3339 16.1792 2.43457 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00439 27.9487 mo
1.00437 27.9475 1.00434 27.9464 1.00432 27.9451 cv
1.00429 27.9433 1.00428 27.9432 1.00425 27.9415 cv
1.0043 27.944 1.00434 27.9462 1.00439 27.9487 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.2 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%Ls![%hB0]%f~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~-7:2h-n$Jm.K~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00432 27.9451 mo
1.00428 27.9432 1.00425 27.9415 1.00421 27.9396 cv
1.00422 27.9401 1.00424 27.941 1.00425 27.9415 cv
1.00428 27.9432 1.00429 27.9433 1.00432 27.9451 cv
gsave
[18.3339 34.3338 -34.3338 18.3339 16.1792 2.43457 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00401 27.9289 mo
1.00396 27.9264 1.00391 27.9235 1.00387 27.9209 cv
1.00385 27.92 1.00383 27.9192 1.00382 27.9183 cv
1.00388 27.9218 1.00395 27.9254 1.00401 27.9289 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.2 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%Ls![%hB0]%f~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~-7:2h-n$Jm.K~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00387 27.9209 mo
1.00382 27.9184 1.00375 27.9148 1.00371 27.9122 cv
1.00374 27.9142 1.00378 27.9163 1.00382 27.9183 cv
1.00383 27.9192 1.00385 27.92 1.00387 27.9209 cv
gsave
[18.3339 34.3338 -34.3338 18.3339 16.1792 2.43457 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00354 27.903 mo
1.00353 27.9023 1.00353 27.9022 1.00352 27.9016 cv
1.00347 27.8989 1.00341 27.8954 1.00337 27.8928 cv
1.00343 27.8963 1.00348 27.8995 1.00354 27.903 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.2 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%Ls![%hB0]%f~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~-7:2h-n$Jm.K~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00352 27.9016 mo
1.00345 27.8978 1.00339 27.8943 1.00333 27.8905 cv
1.00334 27.891 1.00336 27.8923 1.00337 27.8928 cv
1.00341 27.8954 1.00347 27.8989 1.00352 27.9016 cv
gsave
[18.3339 34.3338 -34.3338 18.3339 16.1792 2.43457 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00312 27.878 mo
1.00305 27.8736 1.00299 27.8704 1.00292 27.866 cv
1.00291 27.8649 li
1.00298 27.8694 1.00305 27.8735 1.00312 27.878 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.2 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%Ls![%hB0]%f~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~-7:2h-n$Jm.K~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.0032 27.8827 mo
1.0031 27.877 1.00302 27.8717 1.00292 27.866 cv
1.00299 27.8704 1.00305 27.8736 1.00312 27.878 cv
1.00314 27.8796 1.00317 27.8812 1.0032 27.8827 cv
gsave
[18.3339 34.3338 -34.3338 18.3339 16.1792 2.43457 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.0027 27.8519 mo
1.00268 27.8501 1.00265 27.8481 1.00262 27.8464 cv
1.0026 27.8451 1.00257 27.8428 1.00255 27.8415 cv
1.0026 27.845 1.00265 27.8484 1.0027 27.8519 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.2 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%Ls![%hB0]%f~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~-7:2h-n$Jm.K~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00277 27.856 mo
1.00272 27.8528 1.00267 27.8496 1.00262 27.8464 cv
1.00265 27.8481 1.00268 27.8501 1.0027 27.8519 cv
1.00273 27.8534 1.00274 27.8545 1.00277 27.856 cv
gsave
[18.3339 34.3338 -34.3338 18.3339 16.1792 2.43457 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00237 27.8289 mo
1.00234 27.8271 1.0023 27.8243 1.00227 27.8226 cv
1.00225 27.8206 1.00223 27.8191 1.0022 27.8172 cv
1.00225 27.8212 1.00231 27.8249 1.00237 27.8289 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.68 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%LrsY%M''\%f~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~,pjrc-R^>j-i~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00241 27.8323 mo
1.00237 27.8291 1.00232 27.8257 1.00227 27.8226 cv
1.0023 27.8243 1.00234 27.8271 1.00237 27.8289 cv
1.00238 27.8299 1.0024 27.8313 1.00241 27.8323 cv
gsave
[18.3339 34.3338 -34.3338 18.3339 16.1792 2.43457 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00205 27.8061 mo
1.00203 27.8043 1.00203 27.8046 1.00201 27.8028 cv
1.00197 27.8003 1.00194 27.7979 1.00191 27.7953 cv
1.0019 27.7944 1.0019 27.7948 1.00189 27.7939 cv
1.00195 27.7984 1.00199 27.8016 1.00205 27.8061 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.68 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%LrsY%M''\%f~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~,pjrc-R^>j-i~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00209 27.8089 mo
1.00206 27.807 1.00203 27.8047 1.00201 27.8028 cv
1.00203 27.8046 1.00203 27.8043 1.00205 27.8061 cv
1.00206 27.8066 1.00208 27.8084 1.00209 27.8089 cv
1.00191 27.7953 mo
1.00189 27.7941 1.00186 27.7916 1.00184 27.7903 cv
1.00186 27.7913 1.00188 27.7929 1.00189 27.7939 cv
1.0019 27.7948 1.0019 27.7944 1.00191 27.7953 cv
gsave
[18.3339 34.3338 -34.3338 18.3339 16.1792 2.43457 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00176 27.7835 mo
1.00175 27.7826 li
1.00172 27.78 1.0017 27.7789 1.00167 27.7763 cv
1.00165 27.7745 1.00163 27.7729 1.00161 27.7711 cv
1.00166 27.7756 1.0017 27.779 1.00176 27.7835 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.68 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%LrsY%M''\%f~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~,pjrc-R^>j-i~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00177 27.7843 mo
1.00176 27.7836 1.00176 27.7832 1.00175 27.7826 cv
1.00176 27.7835 li
1.00177 27.7843 li
1.00167 27.7763 mo
1.00165 27.7744 1.00161 27.7712 1.00159 27.7693 cv
1.0016 27.7698 1.00161 27.7706 1.00161 27.7711 cv
1.00163 27.7729 1.00165 27.7745 1.00167 27.7763 cv
gsave
[18.3339 34.3338 -34.3338 18.3339 16.1792 2.43457 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00149 27.7604 mo
1.00147 27.7585 li
1.00144 27.7566 1.00141 27.7538 1.00139 27.7519 cv
1.00138 27.751 1.00136 27.7488 1.00135 27.7479 cv
1.00139 27.7519 1.00144 27.7564 1.00149 27.7604 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.68 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%LrsY%M''\%f~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~,pjrc-R^>j-i~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.0015 27.762 mo
1.00149 27.7608 1.00148 27.7598 1.00147 27.7585 cv
1.00149 27.7604 li
1.00149 27.7609 1.0015 27.7615 1.0015 27.762 cv
1.00139 27.7519 mo
1.00136 27.7487 1.00133 27.7465 1.0013 27.7433 cv
1.00132 27.7448 1.00133 27.7464 1.00135 27.7479 cv
1.00136 27.7488 1.00138 27.751 1.00139 27.7519 cv
gsave
[18.3339 34.3338 -34.3338 18.3339 16.1792 2.43457 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00123 27.7362 mo
1.00121 27.735 1.0012 27.7335 1.00119 27.7323 cv
1.00116 27.7296 1.00113 27.7262 1.0011 27.7235 cv
1.00114 27.7275 1.00118 27.7322 1.00123 27.7362 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.68 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%LrsY%M''\%f~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~,pjrc-R^>j-i~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00119 27.7323 mo
1.00115 27.7284 1.00111 27.7244 1.00107 27.7206 cv
1.00108 27.7216 1.00109 27.7225 1.0011 27.7235 cv
1.00113 27.7262 1.00116 27.7296 1.00119 27.7323 cv
gsave
[18.3339 34.3338 -34.3338 18.3339 16.1792 2.43457 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00102 27.7151 mo
1.00101 27.7138 1.00099 27.7117 1.00098 27.7104 cv
1.00093 27.7051 1.00089 27.7008 1.00084 27.6955 cv
1.00084 27.6951 li
1.0009 27.7016 1.00096 27.7086 1.00102 27.7151 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.68 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%LrsY%M''\%f~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~,pjrc-R^>j-i~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00098 27.7104 mo
1.00093 27.7053 1.00089 27.7006 1.00084 27.6955 cv
1.00089 27.7008 1.00093 27.7051 1.00098 27.7104 cv
gsave
[18.3339 34.3338 -34.3338 18.3339 16.1792 2.43457 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00079 27.6895 mo
1.00079 27.6888 li
1.00074 27.6835 1.00071 27.6797 1.00067 27.6743 cv
1.00066 27.6731 1.00065 27.6713 1.00064 27.67 cv
1.00064 27.6699 li
1.00069 27.6764 1.00074 27.6829 1.00079 27.6895 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.68 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%LrsY%M''\%f~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~,pjrc-R^>j-i~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00079 27.6888 mo
1.00075 27.6837 1.00071 27.6794 1.00067 27.6743 cv
1.00071 27.6797 1.00074 27.6835 1.00079 27.6888 cv
1.00064 27.67 mo
1.00064 27.6694 1.00064 27.67 1.00064 27.6694 cv
1.00064 27.6699 li
1.00064 27.67 li
gsave
[18.3339 34.3338 -34.3338 18.3339 16.1792 2.43457 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00058 27.6616 mo
1.00056 27.6589 1.00053 27.6539 1.00051 27.6512 cv
1.0005 27.65 1.00049 27.6486 1.00048 27.6473 cv
1.00051 27.6518 1.00055 27.6571 1.00058 27.6616 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.68 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%LrsY%M''\%f~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~,pjrc-R^>j-i~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00062 27.6678 mo
1.00058 27.662 1.00055 27.657 1.00051 27.6512 cv
1.00053 27.6539 1.00056 27.6589 1.00058 27.6616 cv
1.0006 27.6641 1.00061 27.6653 1.00062 27.6678 cv
gsave
[18.3339 34.3338 -34.3338 18.3339 16.1792 2.43457 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00043 27.6378 mo
1.00041 27.6351 1.00041 27.6343 1.00039 27.6317 cv
1.00038 27.6298 1.00037 27.6279 1.00036 27.6259 cv
1.00035 27.6251 1.00035 27.625 1.00035 27.6242 cv
1.00037 27.6287 1.0004 27.6333 1.00043 27.6378 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.68 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%LrsY%M''\%f~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~,pjrc-R^>j-i~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00045 27.642 mo
1.00043 27.6388 1.00041 27.6349 1.00039 27.6317 cv
1.00041 27.6343 1.00041 27.6351 1.00043 27.6378 cv
1.00043 27.6388 1.00045 27.641 1.00045 27.642 cv
1.00036 27.6259 mo
1.00035 27.624 1.00034 27.6234 1.00033 27.6215 cv
1.00034 27.6225 1.00034 27.6231 1.00035 27.6242 cv
1.00035 27.625 1.00035 27.6251 1.00036 27.6259 cv
gsave
[18.3339 34.3338 -34.3338 18.3339 16.1792 2.43457 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.0003 27.6146 mo
1.00029 27.6119 1.00028 27.6102 1.00026 27.6075 cv
1.00026 27.6069 1.00026 27.606 1.00025 27.6053 cv
1.00025 27.6044 1.00024 27.6019 1.00024 27.601 cv
1.00026 27.6055 1.00028 27.6101 1.0003 27.6146 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.68 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%LrsY%M''\%f~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~,pjrc-R^>j-i~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00031 27.6175 mo
1.0003 27.6143 1.00028 27.6107 1.00026 27.6075 cv
1.00028 27.6102 1.00029 27.6119 1.0003 27.6146 cv
1.0003 27.6156 1.00031 27.6165 1.00031 27.6175 cv
1.00025 27.6053 mo
1.00025 27.6034 1.00024 27.6012 1.00023 27.5993 cv
1.00023 27.5998 1.00023 27.6005 1.00024 27.601 cv
1.00024 27.6019 1.00025 27.6044 1.00025 27.6053 cv
gsave
[18.3339 34.3338 -34.3338 18.3339 16.1792 2.43457 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.0002 27.5915 mo
1.00019 27.5906 1.00018 27.5888 1.00018 27.5879 cv
1.00017 27.586 1.00017 27.5847 1.00016 27.5827 cv
1.00016 27.581 1.00015 27.5798 1.00015 27.578 cv
1.00016 27.5826 1.00018 27.587 1.0002 27.5915 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.68 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%LrsY%M''\%f~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~,pjrc-R^>j-i~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00021 27.5946 mo
1.0002 27.5927 1.00019 27.5898 1.00018 27.5879 cv
1.00018 27.5888 1.00019 27.5906 1.0002 27.5915 cv
1.0002 27.5925 1.0002 27.5936 1.00021 27.5946 cv
1.00016 27.5827 mo
1.00015 27.5802 1.00014 27.5763 1.00013 27.5737 cv
1.00014 27.5752 1.00014 27.5765 1.00015 27.578 cv
1.00015 27.5798 1.00016 27.581 1.00016 27.5827 cv
gsave
[18.3339 34.3338 -34.3338 18.3339 16.1792 2.43457 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00012 27.5686 mo
1.00011 27.5678 1.00011 27.5684 1.00011 27.5675 cv
1.00011 27.5662 1.0001 27.5641 1.0001 27.5628 cv
1.00009 27.5601 1.00008 27.5568 1.00008 27.5541 cv
1.00009 27.5591 1.0001 27.5636 1.00012 27.5686 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.68 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%LrsY%M''\%f~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~,pjrc-R^>j-i~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00012 27.5695 mo
1.00012 27.5689 1.00011 27.5681 1.00011 27.5675 cv
1.00011 27.5684 1.00011 27.5678 1.00012 27.5686 cv
1.00012 27.5695 li
1.0001 27.5628 mo
1.00009 27.5583 1.00008 27.5545 1.00007 27.55 cv
1.00007 27.5515 1.00007 27.5526 1.00008 27.5541 cv
1.00008 27.5568 1.00009 27.5601 1.0001 27.5628 cv
gsave
[18.3339 34.3338 -34.3338 18.3339 16.1792 2.43457 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00006 27.5459 mo
1.00006 27.545 1.00006 27.545 1.00006 27.5441 cv
1.00005 27.5428 1.00005 27.5408 1.00005 27.5395 cv
1.00004 27.5359 1.00004 27.5332 1.00003 27.5296 cv
1.00004 27.5346 1.00005 27.5409 1.00006 27.5459 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.68 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%LrsY%M''\%f~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~,pjrc-R^>j-i~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00006 27.5475 mo
1.00006 27.5462 1.00006 27.5454 1.00006 27.5441 cv
1.00006 27.545 1.00006 27.545 1.00006 27.5459 cv
1.00006 27.5469 1.00006 27.5465 1.00006 27.5475 cv
1.00005 27.5395 mo
1.00004 27.535 1.00003 27.5307 1.00003 27.5262 cv
1.00003 27.5277 1.00003 27.5281 1.00003 27.5296 cv
1.00004 27.5332 1.00004 27.5359 1.00005 27.5395 cv
gsave
[18.3339 34.3338 -34.3338 18.3339 16.1792 2.43457 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00002 27.5215 mo
1.00002 27.5209 1.00002 27.5196 1.00002 27.519 cv
1.00002 27.5127 1.00001 27.5062 1.00001 27.5 cv
1.00001 27.5 li
1.00001 27.507 1.00002 27.5145 1.00002 27.5215 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 35.68 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%LrsY%M''\%f~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~,pjrc-R^>j-i~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00002 27.519 mo
1.00002 27.5126 1.00001 27.5064 1.00001 27.5 cv
1.00001 27.5 li
1.00001 27.5062 1.00002 27.5127 1.00002 27.519 cv
32.0622 1.00007 mo
32.0586 1.00006 32.0551 1.00006 32.0515 1.00005 cv
32.0551 1.00006 32.0586 1.00006 32.0622 1.00007 cv
32.0416 1.00004 mo
32.0366 1.00003 32.0328 1.00003 32.0277 1.00003 cv
32.0325 1.00003 32.0369 1.00003 32.0416 1.00004 cv
32.02 1.00002 mo
32.0129 1.00002 32.0052 1.00001 31.9981 1.00001 cv
32.0052 1.00001 32.0129 1.00002 32.02 1.00002 cv
gsave
[18.3339 34.3338 -34.3338 18.3339 16.1792 2.43457 ]ct
clp
/1 /Gradient get_res exec grestore
np
3.5273 37.9781 mo
1.99979 34.9574 1.11161 31.6475 1.00987 28.173 cv
1.00983 28.1717 li
1.0094 28.1571 1.00899 28.1426 1.00859 28.128 cv
1.00854 28.1261 li
1.0084 28.121 1.00829 28.1169 1.00815 28.1118 cv
1.00812 28.1104 li
1.00775 28.0964 1.00737 28.0819 1.00703 28.0679 cv
1.00698 28.0662 1.00696 28.0652 1.00692 28.0634 cv
1.00659 28.0501 1.0063 28.0378 1.00599 28.0244 cv
1.00595 28.0227 1.0059 28.0203 1.00586 28.0185 cv
1.00585 28.018 1.00584 28.0179 1.00583 28.0174 cv
1.00575 28.0136 1.00568 28.0105 1.0056 28.0067 cv
1.00554 28.004 1.00552 28.0032 1.00546 28.0006 cv
1.00541 27.998 1.00534 27.995 1.00529 27.9925 cv
1.00525 27.991 1.00522 27.9896 1.00519 27.9881 cv
1.00514 27.9856 1.00507 27.982 1.00501 27.9795 cv
1.00498 27.9777 1.00494 27.9763 1.00491 27.9745 cv
1.00486 27.972 1.00482 27.9703 1.00477 27.9678 cv
1.00473 27.9659 1.00472 27.9653 1.00468 27.9634 cv
1.00461 27.9598 1.00458 27.9582 1.00451 27.9546 cv
1.00447 27.9527 1.00443 27.9507 1.00439 27.9487 cv
1.00434 27.9462 1.0043 27.944 1.00425 27.9415 cv
1.0042 27.9388 1.00415 27.936 1.0041 27.9333 cv
1.00406 27.9314 1.00405 27.9308 1.00401 27.9289 cv
1.00395 27.9254 1.00388 27.9218 1.00382 27.9183 cv
1.00377 27.9156 1.00371 27.9127 1.00367 27.91 cv
1.00363 27.9081 1.00358 27.9049 1.00354 27.903 cv
1.00348 27.8995 1.00343 27.8963 1.00337 27.8928 cv
1.00335 27.8919 1.00333 27.8908 1.00332 27.8899 cv
1.00327 27.8873 1.00324 27.8856 1.0032 27.883 cv
1.00319 27.8822 1.00313 27.8789 1.00312 27.878 cv
1.00305 27.8735 1.00298 27.8694 1.00291 27.8649 cv
1.00287 27.8624 1.00284 27.8607 1.0028 27.8581 cv
1.00277 27.8564 1.00273 27.8536 1.0027 27.8519 cv
1.00265 27.8484 1.0026 27.845 1.00255 27.8415 cv
1.00253 27.8402 1.00253 27.8405 1.00251 27.8392 cv
1.00246 27.8356 1.00242 27.8325 1.00237 27.8289 cv
1.00231 27.8249 1.00225 27.8212 1.0022 27.8172 cv
1.00219 27.8165 1.00219 27.8168 1.00219 27.8161 cv
1.00215 27.8135 1.00209 27.8088 1.00205 27.8061 cv
1.00199 27.8016 1.00195 27.7984 1.00189 27.7939 cv
1.00185 27.7903 1.0018 27.787 1.00176 27.7835 cv
1.0017 27.779 1.00166 27.7756 1.00161 27.7711 cv
1.00157 27.7676 1.00153 27.764 1.00149 27.7604 cv
1.00144 27.7564 1.00139 27.7519 1.00135 27.7479 cv
1.00132 27.7452 1.00129 27.7424 1.00126 27.7398 cv
1.00125 27.7385 1.00124 27.7375 1.00123 27.7362 cv
1.00118 27.7322 1.00114 27.7275 1.0011 27.7235 cv
1.00107 27.7208 1.00105 27.7185 1.00102 27.7158 cv
1.00102 27.7152 1.00102 27.7157 1.00102 27.7151 cv
1.00096 27.7086 1.0009 27.7016 1.00084 27.6951 cv
1.00082 27.6932 1.00081 27.6914 1.00079 27.6895 cv
1.00074 27.6829 1.00069 27.6764 1.00064 27.6699 cv
1.00061 27.6663 1.00061 27.6652 1.00058 27.6616 cv
1.00055 27.6571 1.00051 27.6518 1.00048 27.6473 cv
1.00048 27.6467 1.00048 27.6469 1.00048 27.6462 cv
1.00046 27.6436 1.00044 27.6405 1.00043 27.6378 cv
1.0004 27.6333 1.00037 27.6287 1.00035 27.6242 cv
1.00033 27.6215 1.00031 27.6172 1.0003 27.6146 cv
1.00028 27.6101 1.00026 27.6055 1.00024 27.601 cv
1.00022 27.5974 1.00021 27.595 1.0002 27.5915 cv
1.00018 27.587 1.00016 27.5826 1.00015 27.578 cv
1.00014 27.5754 1.00012 27.5713 1.00012 27.5686 cv
1.0001 27.5636 1.00009 27.5591 1.00008 27.5541 cv
1.00007 27.5514 1.00006 27.5486 1.00006 27.5459 cv
1.00005 27.5409 1.00004 27.5346 1.00003 27.5296 cv
1.00003 27.5278 1.00003 27.5265 1.00003 27.5247 cv
1.00003 27.5234 1.00002 27.5228 1.00002 27.5215 cv
1.00002 27.5145 1.00001 27.507 1.00001 27.5 cv
1.00001 27.5 li
1.00001 27.4456 1.0002 27.392 1.00059 27.3377 cv
1.00071 27.3208 1.00085 27.303 1.00101 27.2861 cv
1.09021 17.6868 7.17868 9.28764 16.2133 4.69959 cv
16.215 4.69874 16.2154 4.69853 16.2171 4.69768 cv
16.2221 4.69513 16.2266 4.69285 16.2317 4.6903 cv
16.2333 4.68945 16.2356 4.68832 16.2372 4.68747 cv
16.2406 4.68577 16.2451 4.68351 16.2484 4.68181 cv
16.2518 4.68011 16.2542 4.6789 16.2575 4.6772 cv
16.2592 4.67635 16.2612 4.67536 16.2628 4.67451 cv
16.2679 4.67197 16.2728 4.66949 16.2778 4.66695 cv
16.2783 4.66671 li
20.7558 2.40516 25.9523 1.07873 31.4982 1.0034 cv
31.4993 1.00339 31.4997 1.00339 31.5007 1.00337 cv
31.666 1.00114 31.8322 1.00001 31.9981 1.00001 cv
31.9981 1.00001 li
32.0054 1.00001 32.0132 1.00002 32.0206 1.00002 cv
32.0229 1.00002 32.0253 1.00002 32.0277 1.00003 cv
32.0339 1.00003 32.0376 1.00003 32.0439 1.00004 cv
32.0462 1.00004 32.0487 1.00005 32.0511 1.00005 cv
32.0573 1.00006 32.0626 1.00007 32.0689 1.00008 cv
32.0709 1.00009 32.0721 1.00009 32.0741 1.00009 cv
32.0814 1.00011 32.0887 1.00012 32.096 1.00014 cv
32.0984 1.00015 32.1007 1.00016 32.1031 1.00016 cv
32.1083 1.00018 32.1133 1.00019 32.1185 1.00021 cv
32.1213 1.00022 32.1245 1.00023 32.1273 1.00024 cv
32.1325 1.00026 32.1366 1.00027 32.1418 1.00029 cv
32.1445 1.0003 32.1473 1.00031 32.1501 1.00033 cv
32.1564 1.00035 32.1643 1.00039 32.1705 1.00042 cv
32.1741 1.00043 32.1775 1.00045 32.1811 1.00047 cv
32.1842 1.00048 32.1895 1.00051 32.1926 1.00053 cv
32.1966 1.00055 32.2002 1.00057 32.2042 1.00059 cv
32.2073 1.00061 32.2106 1.00063 32.2137 1.00065 cv
32.2296 1.00074 32.2454 1.00084 32.2612 1.00095 cv
32.2633 1.00097 32.2639 1.00097 32.266 1.00099 cv
32.2715 1.00103 32.2774 1.00107 32.2829 1.00112 cv
32.284 1.00112 32.284 1.00112 32.285 1.00113 cv
38.6854 1.05107 44.6242 2.76984 49.5449 5.66798 cv
45.4492 3.96092 40.8535 3.00001 35.998 3.00001 cv
18.9063 3.00001 5 14.8867 5 29.5 cv
5 31.6126 5.2909 33.6684 5.84021 35.6394 cv
4.9919 36.3376 4.2161 37.122 3.5273 37.9781 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[49.92 0 0 38.4 .479998 25.12 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 104 
/H 80 
/M[104 0 0 -80 0 80 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 104 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 104 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 104 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 104 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
aoLr4pB('kqulg!l2ZD9QN6d]qZ?Zt!!N6'r<<-(rWiE.rX&Q2rX8`7rXAo=%M-__nH&@cp]LKurWN'$
rs"J`JcPECq#U<nqucm#r<<-(rWiB-rX&Q2rsSf7rXAi;rX[3Qr;lQlpB(-mq?6[!r<BM,JcO7"p]:6n
qZHd"rWW6)r<N<-rX&Q2rX8`7rXJl;rXSu?lN#rFncAFcq#gHrqZZm%e,Y(#YlOS#q?$Qsquls%rW`?,
r<WB/rsJ`5":GVH%1W:HrXT#@&^CCJ!VQTj"8N)s"oJQ)#PS4M!0@3U!W3!!!rN/u"T8N&#6"l+#lb51
$N:G4%0$e:%fR"=&H<?h!:g0b!rN0""8E#r"oJT)#Fb^F!:Bj]!W3#r"8rB#"o\`)#Q>#/$2k52$iUS6
%K?q<&,m+A&J5Z+!<)uh!VZZj"8N)r"oJT(#JL1i!6bH<!W)rq"8rB$"oSZ(#Q>#/$2k52$i^Y6%K?q<
&-!4@&cNF<!8RYG!VQTi"8W/r"oJT'#N5Z7!3-%p!Vulq"8i<#"oSZ)#Q=u/$3(>2$N:G5%/p_8%f[(>
&H<@B')rWr!:g0a!qufn"Si6!#6+r-#DE/7!;Z`r!W)rr"8i<#"oSZ)#Q4r-$2t;3$iUS7%K6k;&,m+E
&J5Wg',2/4!:g0c!WW;q"8`5s"oAN%#65%.!/^d6!;?Nk!rN0!"T8N&#5nf+#lY/0$NCM4%0$e:%f[(=
&H<@A')rXF'^>\e!:g0b!ql`o"Si5t#5e`+#h&d*!5/C-!Vulr"8i<#"oSZ(#QG).$3(A3$iUS6%0R.N
%hB3Q&.oNR')rXF'`Sp$!:g0b!qufp"Si5t#5\Z)#ke7M!1X&`!W)rr"8i<#"oSZ)#Q>#-$3(A3$iUS7
%K?q;&-!4@&cWLD'E8dH(&o''!:g0b!r)lo"T&B!#5\Z'#ataF!;QWh!W3#r"8rB$"oSZ(#Q>#.$2t;3
$iUS7%K6k:%h9-^&J5Wg',)&o'bqK"(Y\rd!Vlcj!r)lo"T/H"#5\Z&#QP1E!.k4&!;HTl!rE)u"T8N&
#5nf+#lb50$NCM5%0$e9%f[(>&H3:A')rXF'`SpJ(B53F!9X@Q!VQTj"8N)t"oAN$#Q"f+$/bf8!4Dn&
!Vulq"8i<#"oSZ)#Q>#.$2t;2$N^_F%K?n:%KI%=&H<@A&df9c'GM8s()@]&(uG>`!VZZk"8E#s"oAN%
#Q"f+$3(<b!0mQY!W)rt"9/K#"T8N&#6+r-#lP)0$N1A4%0$e9%f[(=&-*=A&e#Ee'GM8s()@]&(`=4M
!:^*a!r2ou"Si2t"oAN%#Q+l*$3(@1!.k4A!;?Nk!rN/u"T8N&#6"l,#lY//$NCM5%0$e:%fR"=&H<@A
&c`UE'F>Ki()Ic((`=20irK)[o)\Odq#gEqq??a#r!3-*r!E?0aoI"nciEhAq?$Qsr<3'&r<E3*rWrK0
rX/Z5rXAc8rso&>rXf)Art>>FrY,SP()@]&(`4+l)&aFT!:^*`!r)ln"Sr<!#5e`(#lG#-$LIhF!3Q=t
!Vlfp"8rB$"oSZ(#QG).#lk>4$NCM6%/gY8%f[(>&H<@B')iOS'GM8s()@]&(`4,.)B0XX!:g0a!qufn
"Si5u#5e`(#lG#,$CLmJ!<*#r!Vulq"8i<#"oSZ)#Q>#-$3(A3$iUS7%K?q;%i>ih&J5Wg',)&o'bqK"
(Ddo*)&X>3)]Tj\!:g0g!rE&n"8`5s"o8H$#Q+l*$2Y(B!.k42!;?Nk!rE)u"T8N&#6"l+#lY/1$N:G3
$igb9%f[(=&.0!]&eYik'GM8s(B,*M)#bBV)B0V8*$+_Qo)S:]pB('kqZQa!q$-a%r!<3,r!NH3hZ/6.
_#X31qZ?Wsr<3'&r<E6+r<WE0r<iQ4rXAf9rXJo=rXf)A#n[d_',)&o'bqM`(B><O)$Uuu)]Th<*pE[p
!VZZi"8`5u"o/B"#Q+l*$2k51$NLQe!1j2c!W)rr"8i<$"TS`)#6"l,#lY/0$N:G5%/p_8%K[.P&H3:A
')iOX'GM8s()@]&(`=20)B0V8*?H7Dl2^>TpB(*lq?6d$rrr3&qZm$)r!E</r<rW6V>u2JquHKmq?$Tt
qZQj$r<E9,rWrH/rsJ]4rs\o:rXSr=rX],C&eb0W'bh>s'c%Q$(Dn#-)B'P6*#ot?*ZlKi!;6Hk!VQTk
"8N)u"o/B"#Q+l*$2k50$iLLU!.k4*!;HTk!rN/u"T8N&#6"l,#lY/0$N:G4%0$e:%fR"<&/,Wg&ebom
'GV>u()Ic((`=20)B8Yq"!&F(+9*JM!:^*`!rE)p"T/H##5\Z'#lG#-$N(;0%.!tG!4`+)!Vulq"8rB#
"o\`*#Q4r.$2k52$iUS6%0-k>%M'*L&H<@A&fD>s'GV>u()Ic((`=20)B0Y9*??1C*ZlLIli?VXp&b'm
p]UKur!*$'q[!-,rsJ`4q@!61O8tUIpAt-mqucm#r<<-(rWiB-rX&Q2rsSi8r=/c:rt#,@rt55C&JGfl
'GV>u()Ic((`=20)]Kdr*<I9'+9!A_+mo@%!VQTk"8rB""T/H$#5e`'#lP),$Mb)/$igaC!.k4C!;HTk
!rW6!"T8N&#5nf,#lP)0$N:G5%/p_8%f[(>&H<@B')rXF'`SpJ(B53N)#kKR)ZCZX*#ot?rZ;4b+<_ru
!<*#m!VQTk"8;rq"oJT%#Q+l*$2P#,$iLM6%FtN2!7ClC!Vlfq"8i<#"o\`)#Q>#-#lk>2$i^Y8%K6k:
%g3FT&J5ZT'*&aG'a>Eh(Ddo+)?(NV)B0Y9rZ)4b*ZlLI+X&'#!:p6b!r2rn"Sr<"#5\Z'#lG#*$N1A1
%/p]f!2onn!Vulq"8rB$"oSZ)#Q=u/#lY/1$N:G4%0$e:%fR"<&-`^Y&eYik'`JgI(B,*M)#bEQ)ZLcV
*<$r[*ZlL'+9E]1,4km+!VZZi"8W/r"oJQ)#Q+i)#lFu0$46V;rX8T3r=,S'LB.5Qr;lcsqZHd"r<<0)
r<N9,rsAZ3rX8]6rseu<rt#)?rt55C!YZ4]rY5DKrYGVQ(`E;krYknY*?G,#!ZrL,rZM:d,PD-.!Vlfr
!qufo"Si5u#5\Z'#l4l+$N1A.%/p^W!.k44!;?Nk!rE)u"T8N'#5nf+#lY/0$N:G5%/p_9%f[(>&H<@A
')rXE'F5Eg()Ic((`=4j)ZLcV*<$rb*ZcCF+<VgN+sR(4pAjabp&asjqulcuqZcp&r!<0+r<iH1q$d63
!"S;pJcN[gpAt-mqucj"r<<-(rs/N/r<`K2rX8`7rXJi:#S.FW&.oKe&eb6YrY,JM'c%T%rYYVP!ZDsr
r>YeXrZ2+_+!CP+"!Sp6,kqB1!VQTh"8i;t"o8H##Q+l*$2b/.$N^_E$iCG4%K?p!!2'>f!Vulr"8i<#
"oef,#6+r,#lY/0$N:G5%/p_9%fR"=&H<@B')rXF'`SpJ(B53M)#kKQ)ZCZU*<$r[*ZcF&+9iu4+sS<X
,P_?1!VQTh"8i;u"o8H##Q"f*$2Y)*$iLM3%K?pD!.k4L!;Z`m!rN0!"T8N&#6"l+#lb50$NCM5%/p\9
%fR"<&H<@B')rXF'`SpJ(B53N)#bEP)ZLcU*<.&Z*rd>^+TEVa+p&u7,l.N4!<</o!r)lp"T&B!#5\Z&
#lG#+$Mb)/%/UM5%b1Q2!8@MM!Vulq"8rB$"o\`)#Q4r.$2t;2$i^Y6%0-n;&-!4@&cNFC'E8dH(&o'L
(]P?N)?1WT)u^fY*?H7(*ZlIHr?2.brZ_Fh-2R]5!VQTi"8`5u"oAN##Q+l*$2Ou1$OR7>$iLM/%0-n5
!.k3]!;Z`m!rN0!"T8N&#6"l,#lY/0$N:G5%/p_8%KI"?%hS^Prt>>FrtPJJrtbSMrtt_Qru1hT!$(tY
!ZiC)r?)(`rZVIi,:"N\quH9gp&b$lq?6[!qZcp&r!<3,r<iB.rX8W4q$dB8%M,'0Q2pa^qZ?Ztrri?)
r<<-(rWiE.rX&T3r<rW6rser;rXSu?rXf,CrY#DK'bqK"r>5JNru(bRru:tXrZ).`+!)LG+T<Pa,6&nf
,l]1h!:g0a!r<#r"TAQ%"oJT%#Q+l)#m(G@$2P#.$i:>4%K6e8%0R.N%h9)a!.k4A!;cfo!rW6!"T8N&
#6+r,#lY/1$N:G4%0$e:%fR"<&-<FU')iOE'`JgI(B#'L)#bEQ)ZLcT)uq#X*WdE++T<Pa,6&nf,lT+h
!:^*a!rE)o"T/H$#5e`(#l4i/$47+:$N1A-%/p_4%dF%G!65*;!W)rs"8rB$"oSZ)#Q4r.$2t;2$i^Y7
%K?q<&,m.>&HEIC'*&aG'`]$K(]G9N)#tTR)ugoW*WI2\+9!D_+oWYc,Q/nf-N=)9!VZZm"8E#r"oJT&
#Q+l(#m(G?$2b/.$i(22%/gY4%KI$"!2KVo!W)rr"8rB$"o\`)#Q>#/$2k51$i^Y7%K?q<&-!4?&cWLD
'E8dH(&o'L(]>3N)?(QS)ugoV*<mQ,*ZlIH+T<Pa,5rej,UFc`-33T;pB(0nq#pNtr!**)!!iB,q[!<2
#mpP;q?m?5$OcnAr!iK4!"Z=7JcGfO!W)rq"8rB$"o\`)#Q>#.$2t;2$NLV7%K6k;&-!4@&cWLC'E8dH
(&o'L(]>0N)>tHR)uLZU*W7#Z+8m>^+oWYc,Q8qg-2o7_!Vlfs!r2rp"Si6!#5e`'#l+f*$MFl,%/UJ8
%LrsI%fR!g!.k4,!;cip"8rB$"o\`)#QG).$3(A3$i^Y7%K6k;&-!4@&cWLD'E8dH(&o'J(]P?P)?(QR
)u^f]*??1A*ZlL'+TESn+X&$S,:"KZ,pjob-hRN7!r)lo"Si6!#5e`'#l4l+$MFl+%/:;3%f?k3!.k3^
!;loq"8rB$"o\`*#Q>#-$3(A4$iUS6%K?q<&,m+E&J5Wg',)&_'GV>u(B,-M)#bEQ)Z1NS*;plX*rR2[
+T<Md+sS9VrZhUm-71)fpAt!ipB19qp]^R"r!3*)q[*0-q@!91r!`B1":bnP%hAOKRfJcTr;um!r<3$%
rW`B-r<WB/rX/Z5rXAc8!"Su=rt,/Art>>FrtPJJrtbVNrYYVP#9"O#)B0V8*;poW*WR;\+TEVa,6&ne
,QK.h-3,Fh!VZZh"8i;s"TSc)#5e`'#l=r+$MY#+%/LD7%Ls$K%f?jO!.k4B!<*&u"8i<#"o\`*#Q4r.
$2k52$iUS7%K?q;%fd1?&cWLC'*]-b'bqK#(]>3N)?(QR)u^iV*W7&Z+9!D^+TN_b,QB%g,lf:k-i*lD
!r2ok"8i;t"o8H##Q+l*$2Y)0$i^S3$i:>6%1NaF%JgS6%g!4O&E*V@!71`G!rW6""T8N'#5nf*#lb51
$N:G5%0$e9%fQt=&H37A')iOI'GM8s(B,-K(]YHP)ZLcS*!.-$*W[9&r?)%^rZM@f,9eB2,QK.i-3>PB
./Eu>!ql`o"Sr;u#5\Z'#lG#)$3CSB$N1A/$j$kH%/gY1%KI%=&;:+d!;lrt"T8N'#5nf+#lY/1$N1A4
%0$e9%fQt=&H37A')iOI'GV>u(B,-L)#kKP)ZC]T*<$uY*rR2Z+93S`,5rhe,lK%g-NGRl!VZZi"8i<!
"o8H"#Q4r+$2Y)/$3:MAr<r<-r=/Q4rt#&>VuV\Tr<*!$r<<-(rWiE.r<WH2rX8]6rseu<rX]#?rXf,C
rY#DK'bqK"rYPSOrYb\Rr>Y_UrZ1qY!$D.^"<ep4+X6k0$7$oC,palb-RL5iquQNnq#^U!qZQg#q$-^$
r<W<-oa:[+p'gj.rXJo;rXSo<!"f)>df=t"h>mNWr<3'&r<E9,r<WB/rsJc6r=&]8rso&>rXf)Art>;E
!#5DI";Vdi(`<2hru1eS"<8F%*$+u!"<Sa/+!CM*s!%Fe!$qOh#ULfD-71)f-n,#ppB(-mq?6^"q?Hg%
r<W9,p'Ua+pC%*4%1`@Hrso&<rsnf7!"ei(JcNC_rr`3&r<<0)rWiB-rsAZ3rX8`7rXJl;rt#,@rt58D
rY#VQ'GV>u()Ic((`E;jru1hT"<8C%*$+u!r?)%^r?;.arZhFgr?VOm-7:/>./j8A!r2rp"T&B##5\Z'
#lP)&$N:D6$k)h=q@*E7rXAr>%hB0H&-!30!13ca"TAT(#5nf*#Qb;>$NCJ4$NLV7%K6k;&-!4@&cWLD
'E8dH(&o'L(]P?N)?(QR)u^iV*W@,Y+8m>]+oW\a,Q/kf-2f.j-iPOo!VZZl"8N)s"oJT&#QG)/#lG#&
$N1>5$k)k>p'h-7%hB-[q[`W:]`<WaoDnjnr<<0)r<N<-rX&T3r<iT6rXJi:$kEj[&.oKe&ebom'G^T_
!#PVOrYbYQru:nVr#P_Xr#c(b+sA-/,6&nd,lT(q-71)e-RU;j!Vc]r!rE)p"T&B##5e`(#lG#'$N(87
$k!IP$iLM-%JpY7%g!4O&,[!s!.k3u!<33#"o\`)#QG).$3(A3$i^Y7%K?q;%h9-^&J5Wg',)&o'bqK"
(]G9O)>tKR)uUcS*<7/Z+8m;^+oWY`,5rhe,lK%f-3,Fl./*f@"8;rq"oJT&#Q+l)$2Fr*$O$qH$k*LO
rXAN1q@3K9rXJo=rX])@&H<;p!3Q;%"T8N'#5nf,#lP)0$NCM5%/p\9%fR"<&-rj[&eYik'GM8a'c%Q$
rYPVQr>P\Tr>b_UrZ;(]r?2%^r$)(a!%%Ui""#<@-N,:n-n$P>!rN/p"T&B##5e`(#l=r)$Mk,2$k!+E
$k*"Bp^Qp,!Y5hRrX\r=VZ;VTr<<-(!!`K/rWrK0rX/Z5rXAc8!"Su=rt,2Brt>>FrtPJJrY>VQ(`4,.
rYbqZ)]Te:*;giU*WR;[+9Nc1+<g\-r?M7dr?VRo-7:,fr@%ICqZHWsq??j&rs&B+r!<0+q[3-,!XoGE
r<r]9%/CA+%K[.O&H*.;&BY!)!9X@]"o\`+#Q4r.$2k52$i^Y7%K?q;%fd1?&IoEd',)&o'bqK"(Dmu,
)>tHV)]Th:*;giU*rd>[+T3J_+pB29+sS?XrZqFgr?hLk![fEGqZ?Trq?6Ttr!*'(r!<0+q[3-,!XoGE
rX8i;%1N%ApC@!0"V;1T&.fH@!.k3h!<36&#6"l+#lb51$N:G5%/p_9%fQt=&H37O&ebom'GV>u()Ic(
(`=4j)ZLcT*;poV*WR;^+8d8[+oNVa,6T8:,:"Q4,m>VA-RL2gr@%UGq#gKsp]^R"r!3-*q[*0-q[3N8
$O[@Nr<ri=%1E[T%/gY7%KHt8%KI%6&,m.?&X`We!<39%#Q4r.$3(A2$NpkH%1NdI%fHn<&H37A')iOQ
'GV>u()Ic((`=20)ZC]T*;poU*r[5i+<VgM+<_pP+X/-T,5`\a,lAte-3knH-R^Al!Wr-!qulcuq?Hm'
q[!-,!"&T2q?m93rX8W4"UtnL%1NaE%K6h;%K6h=%1WmB&,HjM!.k4D!<39&#Q>#-#lk>3$iUS7%K?q;
&-!4?&HEIC'+GWj'c%Q$(Dmu,)&aG5r>b_Ur>tq[rZD@f+<_mP+oEP_,Q/nc-2f1h-iGIf!rrK&"Si5t
#5e`'#lG#.$MFl,$k*RR$k3XS%1N^T%1WjH%KHt9%K[.O%fHn<%fR"7&DmJ>!7CiI#6"l,#lY/1$N:G4
%0$e:%f[(=&/5]g&eYik'GM8s()@]&(`=20)B0Xp*;giU*rR/]+<g_,"!Jg3+oNVa,6/te,QT2:rZqjt
,pjoc-7:,g-iGIg"8i;u"o8H##Q+l*$2t;)$iUP<%1N^T%1N1E!Y,\LrXK&?%LrpXrXSu=r=9&A%hB3_
&,Qn<&;'td!<*6&#lY/1$N:G5%/p_9%f[(>&H<@A&e5Qg'GM8s()Ic()&X>2)uglW*;giU*rd>\+9E]/
+T<P^,5`\b,Qf8;,UE:6r?h@g!%@XFqulj"qZcp&r!<3,rX/<+$4I=P$k3XS%1N^Trser;":YhN%1W7G
rt#,>rXT2C%M'*^%hJUM!"]&?V>uPT!!iH.rsAZ3rX/]7r='AL%M'']&.oKe&ebom'GV>u()Qre"rS<t
)]Kb:r#H"`+!)IF+<M^)+9<W.r?;+`r$)4f,Prbb-2f.s,pt#e-7:/f-R\`mqulm#qZcm%rs8W1r!E?0
p^7-3$OcqB#7V(N%1E[T%/p_8%Km4N%LimG%f[(=%L!@Q%M'*^rX\u>rt#&>aT-nmkQ(PersAZ3rX/]7
rXJi:$kEj[&.oKe&ebom'G^T_!#PVO"W83s)]Kdp*=!W,+!)LG+<UP)r#u"_r$)=i,U4N[rZq@e![]3>
pa6"fqZH]ur<<$%qZm'*r!E</p'^g-":YbK%1N1Er!j&C%LrpW%M'$Z%hJXL":ktQ%hS[Mrt,/?rXf)?
li;V;`;ooDrX&T3r<iT6rXJl;rXTJM&.oKe&ebom'GV>u()Qre"W83s)]Tjr*W7&Y+9!Ab+WqmNr$).b
r$21d"sYB>,U=Z]rZqOkr[%=d"!o9@-2[lB"T8N$#5\Z'#lP)-$MOr+$j7"J%1NaE%1`pY%1WjW%LrpX
%hB-[%hJXL"V2(R%hK9N%fd1>%fd1=&!-dc!<!6($N:G5%/p\9%fR"<&.0!]&eYik'GM8s('t`m(`4,.
)B0V8r>knZrZD%\r?;+`![Am5r$2"_![T-<q^)4g"XPKA-7(#9-2n#C"T8N$#5e`(#lG#,$Mk,2$k*%C
!Y#SIp^IB:%LimX%K-e:&-!.>&,d"+%fd0I!.k4M!<*<)$NCM5%/p\9%fR"=&H<@A&e#Ee'GM8s()Ic(
)&X@l)ZUlW*W@,[+8d8[+oNSd,9e?0,Q/kf-2o1h,lf4g,m,J@,pr=3![K&oq#pX"qZ[$*r<N6+r!E6-
q[<<1!Y#SIq@*]?%1WjW%LrpWrXK&A%h9'[r=8-(ec::%gAh3[rX/Z5rXAc8!"Su=!"f,A%h]Kg',2,q
'c%T%(`4,.)ZCZU*<$uW+8d8[+oNSi,9nBV,:"NZr?VChs!7@c""#<@-2o1o,UF]^,UN=5q#pX"qZcs'
r!<3,q[33.rXAW4!"Ai9!Y,\Lq$m]A%M''[%M''[%d=LU!3cJ&$NCM6%/p_9%fQt=&H37W&ebom'GV>u
()Ic((`=20)B0V8*??4#*rmG^+T3J^,5ibc,QK(f,lT(i,krYf-71#cr?_=d"sYB<,U4NZq?6^"r!*'(
r!<3,q[33.rXAN1p'q'5#S.CT%h9'[%hA"<!"So;!"Ph*N<&tcrsSi8rser;rXSu?rXf,CrY#nY'bqK"
(Ddo*)&X>2)]Th<*Zk;&"!Aa0+T3J^,5ibb,QK(f,l]1j,lK"h-N5=j-N#1e,krV]"T/H$#5e`(#lG#.
$N:D1$i^Y/%J:28%hB-[%h9*>%fd+<&-!.<&,m'[!.k48!<*B+%0$e:%fHn<&H37A')iO_'GV>u()Ic(
(`=20)]Th<*?H7D+!;[L+<_p-,5EJZ,lK%h-N>Cl-N5=j-N#1g,QT,8r$):f,9e<3,5_TA"oJT&#Q+l*
$2Y).$iUS/%JC84%hARL":bqQ%M&%?!"Su=r=/f<r!i];lMuM:`W6#Hrs\o:rso#=rt,/A!##8E!#5DI
&/H&u(`=20)]Kb:*??1B+!CG(rZ_:c"!f*9-2o1d-3#:k-N>Cl-N>Cj-N,7i,QT,8r?D=e,PiV`"T&B#
#5\Z(#l=r+$N:G4%/15)%f6b?%M''[%hS=C!Y,_O!"]#<!"\o9NrYpTrXAf9rso&>rt,/A&eYfj',2,q
'c%T%(`4,/)B0V8"rnX(*ZlLIrZV4ar?DIk,:"KZ-2o1g,lf:k-2o4k-2o4k-2]+h-2f(m,:"KY+sZq.
rZM7Eq??d$qZm'*q[*3.rX8]6p'pm/r=8Z7"V)%R%M'-B&-!.>&+g@;!.k1f!!!E9%1NdW%hB3_&J5Wg
',)&o'bqK"(]G6[)&aD4)]Th<*ZlIH+T<P_,5ibb,lAqm-7'rb-7'u6-3,Fk-N5=i,lJtb,5r_f+<_mN
q??d$qZm*+!!rH.r<iQ4r=&E0p($a+":u+T%hSIG!Y,\Nnda1MJcOR+rXB>I%M'']&.oKe&ebom'G^T_
!#PVO%N-0')]Kb:*ZcCF+<VgNr?D1b!%%Uir?VOm,pjr:-N>In-N5@o-7:2=-N,7i,lJtd,5`V^+T)E?
#5\Z(#lG#-$NCM2%/CA+%egJ=&.f?`&.]9_pC@<8%M/@F!"Ji9rse`'JcN=]!"Jo;&.]9_&.oKe&ebom
'GV>u()Qre%2g'&)]Th<*ZcCF+<Vj,+oik`,lK"h-Mf(g-NGLi-i>:n,paf_rZqFer?;=e+Wqs-+9N].
+!:Icq?Hg%r<W?.r<iN3q[E<1p($d,#7qFW&.f?_&H*.:%g!4N&,?\8%K-e9%0-m.!1!Wa%M0-]&.fEc
&eYik'GM8s()@\u(`4,.)B0V8*??1B+!2UK+sR"2r?V=f![]6?r?hIj!%@go"=PZG-ResAq^2:grZhRj
,9eB3,5rba+T!8\"oAN$#Q4r+$2t;1$i:A0%0-n7%K[.N%e^G0&-<@Q&GQb;%Ls$F%KHt;%f6^M!.k4A
!!!N.%h]Eb&J5Wg',)&o'bqK"(Dmu,)ZCZU*<$ra*ZlLJ+X/*T,Q/nd-2f.k-RSa=!%@gor[7aor@%Ul
r[.UjrZhRj,9eB3,5r_f+<VaKrZ;4`+!)L##5\Z'#lP)/$N(;/%/gY5%L<RT%M'$[%M'-G&,?b<%hB6H
%g!4N&,He9%K6k6%I*qF!65*>&-!4@&cNCO',)&o'c%Q$(`4,.)ZCZh*$$%@+!;[L+X/*T,U=Z],pjoa
r?_Rn-RSd>r?qXpr[7aor[7aor?qRkr[%Oh"X>69,9e?1+o`\`+8[,W#5e`(#lP).$N(;/%/gY7%L*FR
%hB-\%fHn<&Gcq4&-<@Q&GQb;%Ls$G%KHq>%1WmC%?:Fa!!*TArXfqZ&ebom'GVB!(Ddo*)&X>2)]Kb;
*ZcF&+9<W0![As9r$D=h![f?Dr[7Xm"=YcJ-n5-Dr[Idor[7^mr[%Ifs!.OfrZV7`r?)"["!&F'*.S~>

%%EndBinary
grestore
np
1.00987 28.173 mo
1.00983 28.1717 li
1.00987 28.173 li
1.00859 28.128 mo
1.00857 28.1273 1.00856 28.1267 1.00854 28.1261 cv
1.00859 28.128 li
1.00815 28.1118 mo
1.00814 28.1112 1.00813 28.111 1.00812 28.1104 cv
1.00815 28.1118 li
1.00703 28.0679 mo
1.00701 28.0673 1.007 28.0668 1.00698 28.0662 cv
1.00697 28.0657 1.00697 28.0656 1.00696 28.0651 cv
1.00694 28.0644 1.00693 28.0641 1.00692 28.0634 cv
1.00696 28.0652 1.00698 28.0662 1.00703 28.0679 cv
1.00599 28.0244 mo
1.00598 28.0238 1.00593 28.0216 1.00591 28.0209 cv
1.00589 28.0199 1.00588 28.0195 1.00586 28.0185 cv
1.0059 28.0203 1.00595 28.0227 1.00599 28.0244 cv
1.0056 28.0067 mo
1.00555 28.0048 1.0055 28.0025 1.00546 28.0006 cv
1.00552 28.0032 1.00554 28.004 1.0056 28.0067 cv
1.00501 27.9795 mo
1.00499 27.9782 1.00495 27.9764 1.00492 27.9751 cv
1.00491 27.9745 li
1.00494 27.9763 1.00498 27.9777 1.00501 27.9795 cv
1.00468 27.9634 mo
1.00463 27.9608 1.00456 27.9572 1.00451 27.9546 cv
1.00458 27.9582 1.00461 27.9598 1.00468 27.9634 cv
1.00425 27.9415 mo
1.00424 27.941 1.00422 27.9401 1.00421 27.9396 cv
1.00418 27.9377 1.00413 27.9353 1.0041 27.9333 cv
1.00415 27.936 1.0042 27.9388 1.00425 27.9415 cv
1.00382 27.9183 mo
1.00378 27.9163 1.00374 27.9142 1.00371 27.9122 cv
1.00368 27.9109 1.00369 27.9113 1.00367 27.91 cv
1.00371 27.9127 1.00377 27.9156 1.00382 27.9183 cv
1.00337 27.8928 mo
1.00336 27.8923 1.00334 27.891 1.00333 27.8905 cv
1.00332 27.8899 li
1.00333 27.8908 1.00335 27.8919 1.00337 27.8928 cv
1.0032 27.883 mo
1.0032 27.8827 li
1.00317 27.8812 1.00314 27.8796 1.00312 27.878 cv
1.00313 27.8789 1.00319 27.8822 1.0032 27.883 cv
1.0028 27.8581 mo
1.00279 27.8575 1.00278 27.8566 1.00277 27.856 cv
1.00274 27.8545 1.00273 27.8534 1.0027 27.8519 cv
1.00273 27.8536 1.00277 27.8564 1.0028 27.8581 cv
1.00251 27.8392 mo
1.00249 27.8373 1.00244 27.8342 1.00241 27.8323 cv
1.0024 27.8313 1.00238 27.8299 1.00237 27.8289 cv
1.00242 27.8325 1.00246 27.8356 1.00251 27.8392 cv
1.00219 27.8161 mo
1.00215 27.8136 1.00212 27.8115 1.00209 27.8089 cv
1.00208 27.8084 1.00206 27.8066 1.00205 27.8061 cv
1.00209 27.8088 1.00215 27.8135 1.00219 27.8161 cv
1.00189 27.7939 mo
1.00188 27.7929 1.00186 27.7913 1.00184 27.7903 cv
1.00182 27.7884 1.00179 27.7862 1.00177 27.7843 cv
1.00176 27.7835 li
1.0018 27.787 1.00185 27.7903 1.00189 27.7939 cv
1.00161 27.7711 mo
1.00161 27.7706 1.0016 27.7698 1.00159 27.7693 cv
1.00156 27.7667 1.00153 27.7646 1.0015 27.762 cv
1.0015 27.7615 1.00149 27.7609 1.00149 27.7604 cv
1.00153 27.764 1.00157 27.7676 1.00161 27.7711 cv
1.00135 27.7479 mo
1.00133 27.7464 1.00132 27.7448 1.0013 27.7433 cv
1.00129 27.742 1.00128 27.7411 1.00126 27.7398 cv
1.00129 27.7424 1.00132 27.7452 1.00135 27.7479 cv
1.0011 27.7235 mo
1.00109 27.7225 1.00108 27.7216 1.00107 27.7206 cv
1.00106 27.7193 1.00104 27.7171 1.00102 27.7158 cv
1.00105 27.7185 1.00107 27.7208 1.0011 27.7235 cv
1.00064 27.6699 mo
1.00064 27.6694 li
1.00062 27.6678 li
1.00061 27.6653 1.0006 27.6641 1.00058 27.6616 cv
1.00061 27.6652 1.00061 27.6663 1.00064 27.6699 cv
1.00048 27.6462 mo
1.00047 27.645 1.00046 27.6433 1.00045 27.642 cv
1.00045 27.641 1.00043 27.6388 1.00043 27.6378 cv
1.00044 27.6405 1.00046 27.6436 1.00048 27.6462 cv
1.00035 27.6242 mo
1.00034 27.6231 1.00034 27.6225 1.00033 27.6215 cv
1.00033 27.6202 1.00032 27.6188 1.00031 27.6175 cv
1.00031 27.6165 1.0003 27.6156 1.0003 27.6146 cv
1.00031 27.6172 1.00033 27.6215 1.00035 27.6242 cv
1.00024 27.601 mo
1.00023 27.6005 1.00023 27.5998 1.00023 27.5993 cv
1.00022 27.5973 1.00022 27.5965 1.00021 27.5946 cv
1.0002 27.5936 1.0002 27.5925 1.0002 27.5915 cv
1.00021 27.595 1.00022 27.5974 1.00024 27.601 cv
1.00015 27.578 mo
1.00014 27.5765 1.00014 27.5752 1.00013 27.5737 cv
1.00012 27.5718 1.00012 27.5714 1.00012 27.5695 cv
1.00012 27.5686 li
1.00012 27.5713 1.00014 27.5754 1.00015 27.578 cv
1.00008 27.5541 mo
1.00007 27.5526 1.00007 27.5515 1.00007 27.55 cv
1.00007 27.5494 1.00006 27.5481 1.00006 27.5475 cv
1.00006 27.5465 1.00006 27.5469 1.00006 27.5459 cv
1.00006 27.5486 1.00007 27.5514 1.00008 27.5541 cv
1.00003 27.5296 mo
1.00003 27.5281 1.00003 27.5277 1.00003 27.5262 cv
1.00003 27.5256 1.00003 27.5253 1.00003 27.5247 cv
1.00003 27.5265 1.00003 27.5278 1.00003 27.5296 cv
1.00001 27.5 mo
1.00001 27.4456 1.0002 27.392 1.00059 27.3377 cv
1.0002 27.392 1.00001 27.4456 1.00001 27.5 cv
1.00101 27.2861 mo
1.09021 17.6871 7.18006 9.28771 16.2133 4.69959 cv
7.17868 9.28764 1.09021 17.6868 1.00101 27.2861 cv
16.2171 4.69768 mo
16.2221 4.69513 16.2266 4.69285 16.2317 4.6903 cv
16.2266 4.69285 16.2221 4.69513 16.2171 4.69768 cv
16.2372 4.68747 mo
16.2406 4.68577 16.2451 4.68351 16.2484 4.68181 cv
16.2451 4.68351 16.2406 4.68577 16.2372 4.68747 cv
16.2575 4.6772 mo
16.2592 4.67635 16.2612 4.67536 16.2628 4.67451 cv
16.2612 4.67536 16.2592 4.67635 16.2575 4.6772 cv
16.2778 4.66695 mo
16.2783 4.66671 li
16.2778 4.66695 li
31.4982 1.0034 mo
31.4993 1.00339 31.4997 1.00339 31.5007 1.00337 cv
31.4997 1.00339 31.4993 1.00339 31.4982 1.0034 cv
32.285 1.00113 mo
32.284 1.00112 32.284 1.00112 32.2829 1.00112 cv
32.2837 1.00112 32.2842 1.00113 32.285 1.00113 cv
32.266 1.00099 mo
32.2639 1.00097 32.2633 1.00097 32.2612 1.00095 cv
32.2628 1.00097 32.2644 1.00098 32.266 1.00099 cv
32.2137 1.00065 mo
32.2106 1.00063 32.2073 1.00061 32.2042 1.00059 cv
32.2074 1.00061 32.2105 1.00063 32.2137 1.00065 cv
32.1926 1.00053 mo
32.1895 1.00051 32.1842 1.00048 32.1811 1.00047 cv
32.1846 1.00049 32.189 1.00051 32.1926 1.00053 cv
32.1705 1.00042 mo
32.1643 1.00039 32.1564 1.00035 32.1501 1.00033 cv
32.1569 1.00035 32.1638 1.00038 32.1705 1.00042 cv
32.1418 1.00029 mo
32.1366 1.00027 32.1325 1.00026 32.1273 1.00024 cv
32.1324 1.00026 32.1366 1.00027 32.1418 1.00029 cv
32.1185 1.00021 mo
32.1133 1.00019 32.1083 1.00018 32.1031 1.00016 cv
32.1083 1.00018 32.1134 1.00019 32.1185 1.00021 cv
32.096 1.00014 mo
32.0887 1.00012 32.0814 1.00011 32.0741 1.00009 cv
32.0812 1.00011 32.0888 1.00012 32.096 1.00014 cv
32.0689 1.00008 mo
32.0626 1.00007 32.0573 1.00006 32.0511 1.00005 cv
32.0515 1.00005 32.0511 1.00005 32.0515 1.00005 cv
32.0551 1.00006 32.0586 1.00006 32.0622 1.00007 cv
32.0642 1.00007 32.0669 1.00008 32.0689 1.00008 cv
32.0439 1.00004 mo
32.0376 1.00003 32.0339 1.00003 32.0277 1.00003 cv
32.0277 1.00003 li
32.0328 1.00003 32.0366 1.00003 32.0416 1.00004 cv
32.042 1.00004 32.0435 1.00004 32.0439 1.00004 cv
32.0206 1.00002 mo
32.0132 1.00002 32.0054 1.00001 31.9981 1.00001 cv
31.9981 1.00001 li
32.0052 1.00001 32.0129 1.00002 32.02 1.00002 cv
32.0204 1.00002 32.0202 1.00002 32.0206 1.00002 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[32.64 0 0 28.32 .48 35.2 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 68 
/H 59 
/M[68 0 0 -59 0 59 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 68 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 68 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 68 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 68 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
dK'(DqZ?ZtrrgUIq#UKrqZ6a"c2dS>q?"tC_#X93qZ?]ur<1aQq#L-iq?$[!ciEb?q#]LTYlOS#qZ?Zt
r<**(l2^&KpAt'krWCOJpAt'krr_imTE+fhqZ?Ztr<3*'quG@LpAt'kr<(LKpAt'kr<&8aq#U?or<)s#
rWN9+eH#:Dq?$NreH#UMp]:0lqu`;drrDiqq?$Ttr<3'&rs%'Tp&Y!kq?$^#jT+iOp&XsjqZEhumK!%`
qZ?Ztr<3*'r<CmSpAt*lq?-^"pAj.Pp&Y!kq?$^#]E$dgp]:9oqucj"rWW6)!!h0WpAt*lrWE-%quk[Q
p&Y!kq?-^"c2c)hq#U?oqucm#r<<-(rs.9Yr;l`qq?$Nrqud!'gAppJq#^EqqukpX]E%a.qZ?ZtrWN0'
r<E6+!!qfho`4[dq#^Eqqum$'h#R*Kq#^Eqqud!'nc5`kp]:9oqucm#rWW6)rWiE.qZ,[WpAt'kq?-Wu
rWV-Yo`=jiqZHd"!X&Z1T)eWequZ`tr<3-(!!W<*rWiE.!"%Q`p&Y!kq?-WuqutsXo`5$oq?$Nrqum!&
TE+cg!!<'"qucm#r!!'(rWiH/rX%N`p&Y!kqZHa!r!!*)j8f,Yp&Xsjq?-Wur<9/#q>g9kqZ?Ztr<3'&
rW`?,rWrK0!".]cp&Y!kqZHd"qZZs'p&OI[p&Xsjq?-Wur<<3*])_*rpAt0nqucj"rWW9*r<N<-rX&T3
j8eiRq?$Nrqum$'rWW6)j8eiRq#^Eqqulp$rW^UInGqbQq#U?oqucm#r<<0)r<N<-rsAZ3!"7oho`=mj
q?-Wu!!W?*r<E9,jT+uTp]C?qqZQd"rW^[KfDt[IqZ?]uqum!&r<E6+rWrK0rX&Z6%-IWa!W<*!!r<#s
"T8N&#5neh!;6Hg!rN/t"T/H%"onne!6>08!W)rs"8`6#"o\`*#Q4r-$3(A3$NLV#!<3&n!Vlfo"8`6"
"oSZ(#65%m!;6Hh!rE)s"T8N%#6+r"!4Mt'!W)rs"8i<#"o\`*#Q>#.$2t;2$NUYFquH-bpAt'kqucg!
r!!!&rWiH/klCAWq?$Kqquls%r!!-*rWfG'p]:6nqucp$r<<-(rWiH/!!rQ1rX/Z5rs\o:lN$VZq#^Hr
qZQg#r<E3*rWqfio`=mjqucs$qZQj$qZd$)!!oV*p]:9oqucm#r<<0)rWiB-rX&T3rsSf7!Y#SKli?_[
q?$NrqZQg#rW`9*rWiK1li?k_r;l]qqZH]ur!!!&rWiE.XT8>$qZ6Qqr<)s#r<<0)rWiB-rsA]4rX8`7
rXJl;mJuq]q#^EqqZQj$rW`6)rs8T1pAjpfp&XsjqZH]ur!!!&rWiB-]E%O'q#U<nr<*!$r!!'(rWiE.
rsAZ3rsSf7rser;!"\MupAt'kq?-Wur<<*'rW`E.rWrK0!"/,op&XsjqZH]ur!!$'r<N<-rs?sNiW/`S
quZcur<3'&r<E9,rWrK0rX/Z5rX8c9rXSo<n,W1`q#^Eq!!N6'r<<'&r<N<-rX&T3mf<%^q#^EqqZQj$
r<E0)r<WE0huM.)p]:9or<)s#rWW6)rWiE.rX&T3rX8`7rXAi;rX]#?nGr@crrMosqucg!r<<'&rWiB-
rX&Q2n,W._q?$KqqZQj$r<E3*r!3?1#n$5'_#X62quZcuqum!&rW`<+rWrN1rX/W4rs\l9!"Su=!Y>nT
qZ-BkpAt'kqucg!r<<*'rWi?,rX&Q2!"8>tp&Y!kq?-Ttr<<*'rWi<+!!r]5$4=*>q#U?oqucm#r<<-(
rWiH/rX&Q2rsSi8":P_K%M&IK!tZ%V'(c1t!Vulp"8`6""oSZ(#Q4r,$2t;3$hOGm!Vlfo"8`6#"oec(
#6"l*#lY/0$FBg/!W)rr"9&H%"o\]+#6"l,#lY/0$NCM6%0$e:%fR"=&H<@B'(l8!!Vuln"8i<#"oSZ(
#Q>#-$2k24$O[C9!;6Hj!ri?!"8i<!"oJT(#Q4r,$2t83$ag!1!W<*"!rW6""T8N'#6"l,#lP)0$N:G5
%0$e:%f[(=&-NRW&ebrQ!;?Ni!r<#s"T8N%#5nf+#lP).$NCM6%/0`%!VQQi!rE)t"T&B$#5e`+#lG#.
$NCLG!;lim!W3#s"8rB$"o\`*#Q>#.$2t;3$i^Y7%0@"L&,m.>&H`XZ',:3ApAt'kqZHa!r<<'&rWiB-
rX&Q2!"/]5rXAQ%o`=jiqZHa!qZZs'r!33,r<`E0rX6sNnGrFdq>pHpqucm#r<<0)rWiE.rsAW2!"8c7
rser;rt#,@rt58DrtGDHq#L-iq#^Hrqulp$qZd'*r!<9.rsA`5r<rT5!"J`(o`=jiqZHa!r!!$'r<N9,
rX&N1r<iT6cN*82q>pEoqucp$r<<-(rs/N/rX&Q2rsSf7rseu<rXT,C&.oNfrY#>I'G^HEpAt'kqucj"
qZZp&rWi?,rX&T3r<rT5rXJ](o`=mjq?-Wur<<*'r<N9,rX&Q2r<rT5i;hR3q>pEor<*!$r<<0)rWiE.
rX&T3rX8`7rXJl;rt#)?#n[a^',)&o'bqM]!;6Hj!WW<""8i<!"o\`)#Q4r,$3(A3$iLM5%0-n7!;6Hj
!r<#s"T8N$#6"l*#lY/0$N1A3$igb.!6G6;!W)rs"8i<#"o\`*#Q>#/$2t;2$i^Y7%0@"L&,m+J&J5Wg
',)&p'c%Q$quHEkqZ?Wsqulp$rW`9*rWrE.rsJ`5rXAc8rXSf*pAt*lqZHa!quus%rWiB-r<`H1rX8`7
!"Ai9]E%a.quZcur<3'&rW`?,rWrN1r<`N4rX9&A%1WjY%hK9a!"o2C#SRjc'bqK#(E!)NpAt-mq?-Wu
r<<-(r!33,r<`H1rX8]6rseo:!"\u-p]:0lqucg!r!!!&rW`E.rWrE.rX/W4rXAc8!"Q[Bq>pHpqucp$
r<<0)r<N?.rX&Q2rsSi8rXBPO%M'']&.oKe&ebom'GV>u(Ddo*rW)]oqZ?Qqr<3$%r<E3*r<WB/r<iK2
rs\o:rXSo<r;cWop]C?qrri9'qZZs'r!33,r<`E0rX8]6rser;]`@s2q?$TtrWE3(rWW6)rWiE.rX&T3
rX8`7rXAo=%hJXN"q_F[&ebrnrY5YR()If))#s[4!Vulo"8rB""oSZ)#Q+l,$2t;1$iUS7%K6k:%g!:B
!;QWq!Vc`o"8`5u"o\`(#Q>#.$2k50$iUS7%K6h;&%qrC!WE,s!rW6!"TAT'#6"l,#lY,1$N1A4%0$e:
%f[(>&H37O&eYil'GV>u()Ic()&X@f!Vlfp"8i<!"oSZ)#Q+l,$3(A2$iLM6%K6k:&-!48!Vc`o"8`6!
"oSZ(#Q4r-$2k50$iUS7%K6k;&'b1E!<*#r!rW6!"TAT'#6"l,#lb51$NCM5$igb8%Km:R&.oNR&e,Kf
'GV>u(Ddo+)&aD4q#U9mqucj"qZZs'r<N<-!!rN0rsJ`5r=&Z7rXSo<!Y>nTp]:0lqZH]ur<<*'r<N9,
rX&Q2r<rT5rXJf9rt"#fh>mQVqZ?]ur<3'&rW`?,rWrK0rX/Z5rX9&A%1WjY%hK9arXoVQ',2,q'c%T%
(`=20rYt\7q#^Hrr<**'qZZs'r<N<-r!EB1rX8]6rXJi:rX\u>rt5#,qZ?TrqZQm%qZd$)r!<9.rX/W4
rXA`7rXSo<!"e]$bQ%VDqZ?]ur<3*'r<E6+rWrK0rsJ`5rs\l9!"Su=!Y>nTrXoVQ'GM8s()@]&(`=20
rYkhWqZ6Koqucg!r<<0)qZm-,r<`E0rsSf7rser;rX\u>rt58Dq#U?oq?-Wur<<'&rs/H-r<`H1rsSf7
r=/`9rX\u>]`8$5quZg!r<3*'r<E6+rWrN1rsJ]4rs\o:rso&>rt,2BrXoAJ'GM8t((1op(`4,.)B0V8
*?G%Yq?$NrqZQm%r<E0)rWrK0r<iN3rXAf9rXSo<rt,2BrXo2Eq>pKqq?-Wur!!!&rWiB-r!<?1rsJc6
rXAc8rXSo<rXf)A]`@s3rWE'$rWW6)rWiE.!"&W3rX8]6!=]MZ%Ls![&.fEc&eYik'GM8t()If))&X>3
)]Th<*Zk7\qZ?Trqum!&r!**)r<WE0r<iK2rXAf9rXSo<rt,2BrY#5EquQZrqZH]uqum')rW`<+r<W?.
r<iQ4rXAc8rXSo<rX],C&JDbWrW<$#qum!&r<<6,rs/Q0rsAZ3rsSf7rseu<rXT2E&J5Wg',1?Z&/>rr
(Ddo+)&aG5*#ot>*Zt@^qZ?Wsquls%r!*-*r!<</rX/T3r=&]8rXSo<rt,2Br=],DrW2is!!E-$qZQg#
rW`6)rWrK0r<iN3rXA`7rso#=rXf)Art<!FrrW-$r<3'&r<E9,rs8T1rX/Z5rs\l9rso&>rX]t[&eYik
'GM8s()@]&(`=20)]Kb:*?H:E+9D<?qucj"r!!!&rWi?,rsAW2rX8]6rXJi:rX]#?rt,5CrXo>I',1HJ
q?$NrqZQg#rW`9*r<WB/r<iN3r=&Z7rso#=rXf)ArY!HUnGiOjr<*$%r<<-(rs/N/rX&T3rX8`7rXC"\
%M'']&.oKe&ebom'GVB!(Ddo*)&aD4)]Tk>*ZlLI+o29<"8i<""oSZ(#Q4r,$2t;3$iUS6%K-e:&,m+?
&HEFB&d8p^'GM8_q?$Kqquls%r<E0)r<WB/rX/T3rXAc8rXSo<rXf)Art>>FcN*D6r<*$%r<<0)rWiE.
rX&T3rX8`7rser;!Y5eQrXg%]&ebom'GVB!(Dmu,)B'P6*$$%@*ZlLI+X6dbqucj"r!!$'r<N<-r!E?0
!"/i9$k3(DrXSo<rt,2BrY#5ErtPGIq?$Kqquls%r<E3*r!<9.rsJ]4rXA`7rsnu<rt,2Brt>;E!#4Al
h#REVr<3*'rW`?,rWrN1rX/Z5rXAf9rso#=!Y>qUrXp(^',2,q()@]'(`=51)]Th<*?H7D+<VgO,Q%W@
"8i<""o\`(#Q>#-$2k52$i^Y7%K6k:&-!4@&cNFB'E8dG'`]$H!r<#t"T8N%#5nf*#lP)0$N:G4%/gY8
%fHq<&H<@A')iRE'_;=J!!!-!"TAT(#6"l-#lY/0$NCM5$muJn%Ls![&.fEc&eYik'GM8s()@]'(`=51
)]Kb;*?H7E+<_pQ,:*3h!!E0%qulp$rW`9*rWrK0r<iN3rs\i8rso&>rXf&@rt>;ErtPGIrtbM6qZHd"
quus%rWiE.r!EB1rX8]6rXJi:rX]#?rXo,Brt>AGrY3$Gr<3'&rW`?,rs8T1rX/Z5rs\l9!Y,\NrX]_T
&J>`j'GM8s()@]&(`=20)B0Y)*??1B+!;[L+sJ6W,lRlB"8rB$"oJT(#Q4r-$2t;1$iUS6%K?q<&,m.>
&cWLC'E8dG'`o-e(]FL5"8i<""oJT'#QG)-$2t;1$i^Y8%0-k:%f[(=&H3:@')iRD'EAl]!<33#"oSZ*
#Q>#.$3(A3$NLV7%K6h=%hK<O&HEFc&ebrn'bqK#(Dmu,)B'P7*$$%@*ZlLI+X/*T,UFc=q?-[!rWW0'
rs/H-rX&T3r<rQ4rXJl;rt#)?rXo/CrY#DK'GV>urYGSP!r<#t"T&B$#5e]+#QP//$2k50$i^Y7%K6k;
&,m.=&cWLC'*K!`'c%Ru!!!0$"oSZ)#Q>#.$3(A4$iUS7%K6hS%hK9a&J>]i',2,q'c%Q$(`4,/)B0Y9
*W@)e+!;[M+sS?Z,pk#:"8rB$"oAN(#Q+l,$3(A3$iLM5%K6k;&,m.>&cWLD'E8dH(&esO(Ddo*!rN0!
"98T%"o\`'#QG)/$2k50$iUS6%K6k;&,d(=&IK-`',)&o'bqK"(VKeK"oec*#5nf+#lb51$NCM5%0$e:
%fQt@&.oKerY$=e'GV>u()If))&aD4*#ot?*ZlIH+X/-U,UF``-Reoqr<3$%r!*-*r<W?.rsJ`5rXAc8
rXSo<rt,/Art>>FrtPGIrY>VQ(Dmu,qucj"qZZs'r!33,rX&N1r<rT5rXJi:rX]#?rXo/CrtGDHrY>GK
rtir\n,WFkrW`?,rs8T1rX/Z5rX:Fh%1WjY%hK9a&J>`j'GM8s()@]&(`4,/)B0Y9*?H:E+<_mP,9nH[
-7:/h.0B\M"T/H%#5nf+#lG#/$N:G4%0$e9%KI%=&-!4@&cWLD'E/^F(&esP(Ddo+)&iGUqulp$r<E3*
r<WB/rX/T3rXA`7rXSo<rt,2Brt>>FrY5>HrYGMMhuMU6rrrB+rWiH/rX&T3rX8`7rser;!Y5hRrXf5F
',))Z'cn,,(Dmu,)B'P7*$$(A+!2UK+X/-U,palc-R^Dn"8i<!"oef)#Q>#/$3(>2$N:G4%0$e9%fR"=
&H3:A')rXE'`JjH('>?i(`E;krWE'$r<<*'rWi?,rX&N1rsSf7r=/`9rX]#?rt55CrtGAGrY>DJ!Z)[j
nc6l6!!W?+rs/N/rX&T3rX/]7rXJi:#nIRY&J5Wg',))Z'cRo)(Dn#-)B0V8*$$(A+!2UK+X83W,palc
-Ro$Equd!'r<<0)r!33,rX&N1rX8]6rser;rt#)?rXo/CrtGAGrY5VQ()If))&`Akrr`-$rWW3(rWi?,
r<`H1rsSf7rXJi:rX]#?rXo,BrtGAGrY5MN()Ieh(`4.(!<39'#Q4r-$3(A4$i^Y8%K6hA%hB3_&J>`U
',M>s'bqK#(Dn#-)B'P7*$$(A+!;^M+sR=;,UF``-R^GC.KD$u"T/H&#5e`*#lY/0$N1A3%0$e9%f[(=
&H3:A')rXD'F#9f()Ic()#bEP)?Cf[qZQm%r!*-*r<W<-rX/Z5rXAf9rXSl;!Y>nTrt55CrtGAGrtYPL
rtkYOru&KMrWiB-rsAZ3!"8c7rseu<rXTJM&.oNf',)&o'bqK"(De)/(`=52)]Th<*ZcFH+X&$S,:"Q^
-R^Al.Olr"/cGnO"oSZ(#Q4r-$3(A2$iLM6%K6k:&-!4?&cWLC'*K!`'c%Sa(]P?O)$Cir)]Tjq"T8N%
#6"l,#lG#-$NCM5%0$e8%fR"=&H3:@')rXE'EAmI(B53M(]kQm)SH.N#Q>#.$2t83$iUP;%1NdW%fd.>
&1nJ+&ebom'bqK"(Ddo*)&aD4)]Tk>*ZlLI+X&$S,:+Z`-R^Al.P!##/M.).rWW3(rWi?,rX&T3rX8Z5
rXJi:rX]#?rXo/CrtGDHrtYPLrYGnY(`=20)B0V8*$,"]r!!'(!!`B,rWrH/r<iN3rXAc8rXSo<rt,/A
rY#5ErtPJJrYGMMrYP_T)&aI-!.Y~>

%%EndBinary
grestore
np
16 63 mo
7.72853 63 1.00001 56.2715 1.00001 48 cv
1.00001 48.168 1.01953 48.332 1.02539 48.5 cv
1.04678 47.8528 1.10936 47.2152 1.21039 46.591 cv
3.48758 47.2181 5.93562 47.7077 8.51092 48.034 cv
8 48.5449 li
13.9531 54.5 li
13.957 54.4922 li
13.9648 54.5 li
20.0964 48.3625 li
23.9262 48.1035 27.5328 47.4878 30.7891 46.5906 cv
30.8904 47.2153 30.9531 47.8523 30.9746 48.5 cv
30.9805 48.332 31 48.168 31 48 cv
31 56.2715 24.2715 63 16 63 cv
13.957 48.5859 mo
13.8329 48.4618 li
13.9128 48.4646 13.9931 48.4673 14.0732 48.4698 cv
13.957 48.5859 li
31 48 mo
31 39.831 24.4359 33.167 16.3073 33.0031 cv
16.3068 33.0031 li
16.3033 33.003 16.3 33.0029 16.2965 33.0029 cv
16.2955 33.0029 16.2959 33.0029 16.2949 33.0028 cv
16.2919 33.0028 16.2882 33.0027 16.2852 33.0027 cv
16.2843 33.0026 16.2844 33.0026 16.2834 33.0026 cv
16.2799 33.0026 16.2771 33.0025 16.2736 33.0025 cv
16.2731 33.0024 16.2726 33.0024 16.2721 33.0024 cv
16.2686 33.0024 16.2657 33.0023 16.2622 33.0023 cv
16.2617 33.0022 16.2611 33.0022 16.2606 33.0022 cv
16.2576 33.0022 16.2537 33.0021 16.2507 33.0021 cv
16.2502 33.002 16.2496 33.002 16.2492 33.002 cv
16.2457 33.002 16.2429 33.0019 16.2393 33.0019 cv
16.2389 33.0019 16.2381 33.0019 16.2377 33.0018 cv
16.2165 33.0015 16.1945 33.0012 16.1733 33.001 cv
16.1724 33.001 16.1713 33.001 16.1704 33.0009 cv
16.1679 33.0009 16.1653 33.0009 16.1627 33.0009 cv
16.1618 33.0009 16.1598 33.0008 16.1589 33.0008 cv
16.1563 33.0008 16.1544 33.0008 16.1519 33.0008 cv
16.1509 33.0007 16.1509 33.0007 16.15 33.0007 cv
24.3527 33.0814 31 39.7785 31 48 cv
31 48 li
16.1474 33.0007 mo
16.1469 33.0007 16.1473 33.0007 16.1468 33.0007 cv
16.1448 33.0007 16.1424 33.0007 16.1404 33.0006 cv
16.1399 33.0006 16.1393 33.0006 16.1388 33.0006 cv
16.1413 33.0006 16.1449 33.0007 16.1474 33.0007 cv
16.1359 33.0006 mo
16.1354 33.0006 li
16.1333 33.0006 16.1306 33.0006 16.1286 33.0005 cv
16.1277 33.0005 li
16.1307 33.0006 16.1329 33.0006 16.1359 33.0006 cv
16.1239 33.0005 mo
16.1234 33.0005 li
16.1209 33.0005 16.1196 33.0005 16.1171 33.0004 cv
16.1164 33.0004 li
16.1189 33.0005 16.1214 33.0005 16.1239 33.0005 cv
16.1122 33.0004 mo
16.1117 33.0004 16.1122 33.0004 16.1117 33.0004 cv
16.1097 33.0004 16.1076 33.0004 16.1056 33.0004 cv
16.1051 33.0004 li
16.1077 33.0004 16.1097 33.0004 16.1122 33.0004 cv
16.1 33.0003 mo
16.0996 33.0003 li
16.0976 33.0003 16.096 33.0003 16.0939 33.0003 cv
16.0936 33.0003 li
16.0956 33.0003 16.098 33.0003 16.1 33.0003 cv
16.0885 33.0003 mo
16.0881 33.0002 li
16.0861 33.0002 16.0842 33.0002 16.0822 33.0002 cv
16.082 33.0002 li
16.084 33.0002 16.0865 33.0002 16.0885 33.0003 cv
16.0763 33.0002 mo
16.0758 33.0002 16.0764 33.0002 16.076 33.0002 cv
16.0745 33.0002 16.072 33.0002 16.0705 33.0002 cv
16.07 33.0002 16.0708 33.0002 16.0704 33.0002 cv
16.0724 33.0002 16.0743 33.0002 16.0763 33.0002 cv
16.0646 33.0001 mo
16.0643 33.0001 li
16.0623 33.0001 16.0608 33.0001 16.0588 33.0001 cv
16.0587 33.0001 li
16.0607 33.0001 16.0626 33.0001 16.0646 33.0001 cv
16.0525 33.0001 mo
16.0522 33.0001 li
16.0502 33.0001 16.049 33.0001 16.047 33.0001 cv
16.0469 33.0001 li
16.0489 33.0001 16.0504 33.0001 16.0525 33.0001 cv
16.041 33 mo
16.0409 33 li
16.0389 33 16.0372 33 16.0352 33 cv
16.0352 33 li
16.0372 33 16.039 33 16.041 33 cv
16.0283 33 mo
16.0281 33 li
16.0266 33 16.0251 33 16.0236 33 cv
16.0236 33 li
16.0251 33 16.0267 33 16.0283 33 cv
16.016 33 mo
16.0159 33 li
16.0144 33 16.0132 33 16.0117 33 cv
16.0117 33 li
16.0132 33 16.0145 33 16.016 33 cv
gsave
[12.6892 0 0 12.6892 15.9058 63.5 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~zzzzzzzz!<E6(!sAc2"pP;<#RLhF$OdFQ%Ls![&.oKe',)&p'c%T%(`4,/)B0Y9*?H7D+<VgO+sS<X,p
alc-R^Dm.P*,&/M8\00JP:;1G^jF2)[?O3&ioZ3]fGd4[)%o5<h@t5X7S#5sdn*6UO4/6q'O67Ros=7n
?0B8P2TJ92&#R9hnGZ:Jakb;,U:j;cH^r<E<.%='/R-=^#!5>?b?;?!UcC?XI2K@:<VTA7T7_AnG[gBP
;*oC2.O#D/F0.Df9T6EH-#?FEDYJG'8(RG^+L[H[C-fI=6Qn~>
<~Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR?['[6L[^WfX]"5Md]Y;.q^qmk(_o0O5`lH-Ab0%oO
bg"GZd*U1gdaQ^rf%8O+g"P39gtgfChr*JQioB+\jlbgjkiqBum-X3.n*fc:o(2JFp%A(Sq"ad_qu-Km
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /2 /Gradient get_res exec grestore
np
16 32 mo
7.16014 32 0 39.168 0 48 cv
0 56.8359 7.16014 64 16 64 cv
24.832 64 32 56.8359 32 48 cv
32 39.168 24.832 32 16 32 cv
16 33 mo
24.2715 33 31 39.7285 31 48 cv
31 56.2715 24.2715 63 16 63 cv
7.72853 63 1.00001 56.2715 1.00001 48 cv
1.00001 39.7285 7.72853 33 16 33 cv
0 .5 1 0 cmyk
f
24 44.4551 mo
21.043 41.5 li
13.957 48.5859 li
10.959 45.5859 li
8 48.5449 li
13.9531 54.5 li
13.957 54.4922 li
13.9648 54.5 li
24 44.4551 li
0 0 0 1 cmyk
f
14.0732 48.4698 mo
13.9931 48.4673 13.9128 48.4646 13.8329 48.4618 cv
10.959 45.5859 li
8.51092 48.034 li
5.93562 47.7077 3.48758 47.2181 1.21039 46.591 cv
2.36439 39.4619 8.54885 34 16 34 cv
23.4488 34 29.633 39.4622 30.7891 46.5906 cv
27.5328 47.4878 23.9262 48.1035 20.0964 48.3625 cv
24 44.4551 li
21.043 41.5 li
14.0732 48.4698 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[31.2 0 0 15.84 .48 15.04 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 65 
/H 33 
/M[65 0 0 -33 0 33 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 65 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 65 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 65 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 65 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
^];7jrYiR0`W3RMaW1'q^cBU=ZiJDnnfGS0dK$EMeKO9&^d?ZRVuYQsjs.Z2h>j8Mi?dD.^e3YfS,h_"
g*a[2l2[+Mm4$O6^f0_&O9"l&c7?\3p&KsMq(9Z>^g$^:KE2$*_Cr`4!+1?Yr;aVga(5$WM#d8M^bj;L
oOs9cnGp?_dqnGgPlU+M^c:"dk]!!kjT*(Whf[q$JcPcM^c]V^qg!ttp]/)nb^K/4NWAVM^d->!mt$]'
li=ggfS8XFRK2IM^d[+;j,0K0huLP_jGr&VV?#<M^e*gTf9<99e,[9Wn<_OhZ2i/M^eONlbF?!Aa8j"O
r1Cs#^&Z"M_,:82^nemK]E#uOqGb8/aoJjMbuXI;^oYl_YQ3-SmT@9/ec;]MfimTC^pVqtU]B:Wi`s:0
_Z7@M`a8OK^qIhip],g~>

%%EndBinary
grestore
np
16 48.5 mo
15.3528 48.5 14.7104 48.4898 14.0732 48.4698 cv
21.043 41.5 li
24 44.4551 li
20.0964 48.3625 li
18.7565 48.453 17.3889 48.5 16 48.5 cv
13.8329 48.4618 mo
12.0102 48.3972 10.2324 48.2521 8.51092 48.034 cv
10.959 45.5859 li
13.8329 48.4618 li
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~!!!$$!sAc3#7(VC$OdIS%hK<c',2/s(Dn#.)]Tk>+!;^N,:"Q^-R^Dn/1iJ-0JP==1c70M3&s#]4?Ykm
5<qM$6UX@47n?3D92&&T:Jand;cHat='/U/>?kH??XR;O@q9._B4u!oCM[j*DfB]:F*)PJGBeCZH[L6j
It3*%K7nr5LPUeEMi<XUO-#KePE_>uQ^F20S"-%@T:hmPUSO``Vl6SpX/rG+YHY:;Za@-K\%&u[]=bhk
^;%J"_Sa=2`lH0Bb0/#RcHjkbdaZguf@\d1gYCWAhr*JQj5f=akNM0qlg4$,n*ol<oCV_Lp\=R\qu$El
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
np
15.6922 33.0031 mo
15.6933 33.0031 li
15.6928 33.0031 15.6927 33.0031 15.6922 33.0031 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~!!!!"!<N<)!sA`1"U5/9#7(SA#mq"I$OdFQ%1WjY%hK9a&J>]i',2/r()Ic((`=20)B0V8*$$%@*ZlIH
+<VgN+sJ6V,U=Z^-71)f-n$Mn.Olr!/1`A)/hSe10JG491,:XA1c.'I2E!KQ3&ioY3]]>a4?Pbi5!D1q
5<qJ"5sdn*6UX=277Ka:7n?0B8P2TJ92&#R9hnGZ:Jakb;,U:j;cH^r<E<.%='/R-=^#!5>?kE=?!^iE
?XI2K@:<VS@q0%[AS#IcB4kmkBkhBuCi!s*DJjB2E,]f:EcQ5BFEDYJG'8(RG^+LZH?spbI!g?jIXZcr
~>
<~!!!$$!sAc3#7(VC$OdIS%hK<c',2/s(Dn#.)]Tk>+!;^N,:"Q^-R^Dn/1iJ-0JP==1c70M3&s#]4?Ykm
5<qM$6UX@47n?3D92&&T:Jand;cHat='/U/>?kH??XR;O@q9._B4u!oCM[j*DfB]:F*)PJGBeCZH[L6j
It3*%K7nr5LPUeEMi<XUO-#KePE_>uQ^F20S"-%@T:hmPUSO``Vl6SpX/rG+YHY:;Za@-K\%&u[]=bhk
^;%J"_Sa=2`lH0Bb0/#RcHjkbdaZguf@\d1gYCWAhr*JQj5f=akNM0qlg4$,n*ol<oCV_Lp\=R\qu$El
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
np
15.7032 33.0029 mo
15.7042 33.0029 15.7043 33.0029 15.7053 33.0028 cv
15.7048 33.0029 15.7037 33.0029 15.7032 33.0029 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
16.2965 33.0029 mo
16.296 33.0029 16.2954 33.0029 16.2949 33.0028 cv
16.2959 33.0029 16.2955 33.0029 16.2965 33.0029 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 15.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
15.7145 33.0027 mo
15.7154 33.0027 15.7158 33.0026 15.7168 33.0026 cv
15.7158 33.0026 15.7155 33.0027 15.7145 33.0027 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
16.2852 33.0027 mo
16.2847 33.0027 16.2839 33.0026 16.2834 33.0026 cv
16.2844 33.0026 16.2843 33.0026 16.2852 33.0027 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 15.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
15.7262 33.0025 mo
15.7271 33.0024 15.7271 33.0024 15.7281 33.0024 cv
15.7276 33.0024 15.7267 33.0024 15.7262 33.0025 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
16.2736 33.0025 mo
16.2731 33.0024 16.2726 33.0024 16.2721 33.0024 cv
16.2726 33.0024 16.2731 33.0024 16.2736 33.0025 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 15.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
15.7376 33.0023 mo
15.7381 33.0022 15.7391 33.0022 15.7396 33.0022 cv
15.7386 33.0022 15.7386 33.0022 15.7376 33.0023 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
16.2622 33.0023 mo
16.2617 33.0022 16.2611 33.0022 16.2606 33.0022 cv
16.2611 33.0022 16.2617 33.0022 16.2622 33.0023 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 15.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
15.7491 33.0021 mo
15.7496 33.0021 15.7507 33.002 15.7511 33.002 cv
15.7506 33.002 15.7497 33.002 15.7491 33.0021 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
16.2507 33.0021 mo
16.2502 33.002 16.2497 33.002 16.2492 33.002 cv
16.2496 33.002 16.2502 33.002 16.2507 33.0021 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 15.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
15.7605 33.0019 mo
15.761 33.0019 15.7622 33.0019 15.7626 33.0018 cv
15.7621 33.0019 15.761 33.0019 15.7605 33.0019 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
16.2393 33.0019 mo
16.2388 33.0019 16.2382 33.0019 16.2377 33.0018 cv
16.2381 33.0019 16.2389 33.0019 16.2393 33.0019 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 15.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
15.8263 33.001 mo
15.8272 33.001 15.8287 33.001 15.8296 33.0009 cv
15.8286 33.001 15.8273 33.001 15.8263 33.001 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
16.1733 33.001 mo
16.1723 33.001 16.1714 33.001 16.1704 33.0009 cv
16.1713 33.001 16.1724 33.001 16.1733 33.001 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 15.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
15.8369 33.0009 mo
15.8384 33.0009 15.8397 33.0008 15.8412 33.0008 cv
15.8397 33.0008 15.8385 33.0009 15.8369 33.0009 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
16.1627 33.0009 mo
16.1612 33.0008 16.1604 33.0008 16.1589 33.0008 cv
16.1598 33.0008 16.1618 33.0009 16.1627 33.0009 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 15.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
15.848 33.0008 mo
15.8499 33.0007 15.8513 33.0007 15.8532 33.0007 cv
15.8512 33.0007 15.85 33.0007 15.848 33.0008 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
16.1519 33.0008 mo
16.1504 33.0007 16.1483 33.0007 16.1468 33.0007 cv
16.1473 33.0007 16.1469 33.0007 16.1474 33.0007 cv
16.1484 33.0007 16.149 33.0007 16.15 33.0007 cv
16.1509 33.0007 16.1509 33.0007 16.1519 33.0008 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 15.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
16.15 33.0007 mo
16.149 33.0007 16.1484 33.0007 16.1474 33.0007 cv
16.1479 33.0007 16.1495 33.0007 16.15 33.0007 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
15.8595 33.0006 mo
15.8614 33.0006 15.8628 33.0006 15.8647 33.0006 cv
15.8626 33.0006 15.8615 33.0006 15.8595 33.0006 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
16.1404 33.0006 mo
16.1383 33.0006 16.1374 33.0006 16.1354 33.0006 cv
16.1359 33.0006 li
16.1369 33.0006 16.1378 33.0006 16.1388 33.0006 cv
16.1393 33.0006 16.1399 33.0006 16.1404 33.0006 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 15.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
16.1388 33.0006 mo
16.1378 33.0006 16.1369 33.0006 16.1359 33.0006 cv
16.1373 33.0006 16.1374 33.0006 16.1388 33.0006 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
15.8713 33.0005 mo
15.8728 33.0005 15.8752 33.0005 15.8766 33.0005 cv
15.8751 33.0005 15.8729 33.0005 15.8713 33.0005 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
16.1286 33.0005 mo
16.1271 33.0005 16.125 33.0005 16.1234 33.0005 cv
16.1239 33.0005 li
16.1249 33.0005 16.1267 33.0005 16.1277 33.0005 cv
16.1286 33.0005 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 15.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
16.1277 33.0005 mo
16.1267 33.0005 16.1249 33.0005 16.1239 33.0005 cv
16.1254 33.0005 16.1262 33.0005 16.1277 33.0005 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
15.8829 33.0004 mo
15.8848 33.0004 15.8864 33.0004 15.8883 33.0004 cv
15.8868 33.0004 15.8844 33.0004 15.8829 33.0004 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
16.1171 33.0004 mo
16.1155 33.0004 16.1133 33.0004 16.1117 33.0004 cv
16.1122 33.0004 16.1117 33.0004 16.1122 33.0004 cv
16.1137 33.0004 16.1149 33.0004 16.1164 33.0004 cv
16.1171 33.0004 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 15.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
16.1164 33.0004 mo
16.1149 33.0004 16.1137 33.0004 16.1122 33.0004 cv
16.1136 33.0004 16.115 33.0004 16.1164 33.0004 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
15.8944 33.0004 mo
15.8963 33.0003 15.8985 33.0003 15.9004 33.0003 cv
15.8984 33.0003 15.8964 33.0003 15.8944 33.0004 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
16.1056 33.0004 mo
16.1036 33.0003 16.1016 33.0003 16.0996 33.0003 cv
16.1 33.0003 li
16.1015 33.0003 16.1036 33.0003 16.1051 33.0004 cv
16.1056 33.0004 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 15.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
16.1051 33.0004 mo
16.1036 33.0003 16.1015 33.0003 16.1 33.0003 cv
16.1019 33.0003 16.1032 33.0003 16.1051 33.0004 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
15.906 33.0003 mo
15.9079 33.0003 15.91 33.0003 15.9119 33.0002 cv
15.9099 33.0003 15.908 33.0003 15.906 33.0003 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
16.0939 33.0003 mo
16.0919 33.0003 16.0901 33.0003 16.0881 33.0002 cv
16.0885 33.0003 li
16.0905 33.0003 16.0916 33.0003 16.0936 33.0003 cv
16.0939 33.0003 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 15.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
16.0936 33.0003 mo
16.0916 33.0003 16.0905 33.0003 16.0885 33.0003 cv
16.0904 33.0003 16.0917 33.0003 16.0936 33.0003 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
15.9178 33.0002 mo
15.9201 33.0002 15.9217 33.0002 15.924 33.0002 cv
15.922 33.0002 15.9198 33.0002 15.9178 33.0002 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
16.0822 33.0002 mo
16.0802 33.0002 16.078 33.0002 16.076 33.0002 cv
16.0764 33.0002 16.0758 33.0002 16.0763 33.0002 cv
16.0783 33.0002 16.08 33.0002 16.082 33.0002 cv
16.0822 33.0002 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 15.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
16.082 33.0002 mo
16.08 33.0002 16.0783 33.0002 16.0763 33.0002 cv
16.0782 33.0002 16.0801 33.0002 16.082 33.0002 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
15.9295 33.0002 mo
15.9318 33.0001 15.9333 33.0001 15.9357 33.0001 cv
15.9332 33.0001 15.932 33.0001 15.9295 33.0002 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
16.0705 33.0002 mo
16.0685 33.0001 16.0664 33.0001 16.0643 33.0001 cv
16.0646 33.0001 li
16.0661 33.0001 16.0689 33.0001 16.0704 33.0002 cv
16.0708 33.0002 16.07 33.0002 16.0705 33.0002 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 15.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
16.0704 33.0002 mo
16.0689 33.0001 16.0661 33.0001 16.0646 33.0001 cv
16.0665 33.0001 16.0685 33.0001 16.0704 33.0002 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
15.9412 33.0001 mo
15.9431 33.0001 15.9459 33.0001 15.9478 33.0001 cv
15.9457 33.0001 15.9432 33.0001 15.9412 33.0001 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
16.0588 33.0001 mo
16.0568 33.0001 16.0543 33.0001 16.0522 33.0001 cv
16.0525 33.0001 li
16.0545 33.0001 16.0567 33.0001 16.0587 33.0001 cv
16.0588 33.0001 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 15.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
16.0587 33.0001 mo
16.0567 33.0001 16.0545 33.0001 16.0525 33.0001 cv
16.0543 33.0001 16.0568 33.0001 16.0587 33.0001 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
15.953 33.0001 mo
15.9549 33.0001 15.9572 33.0001 15.9591 33 cv
15.9571 33.0001 15.955 33.0001 15.953 33.0001 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
16.047 33.0001 mo
16.045 33.0001 16.0429 33.0001 16.0409 33 cv
16.041 33 li
16.0431 33.0001 16.0449 33.0001 16.0469 33.0001 cv
16.047 33.0001 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 15.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
16.0469 33.0001 mo
16.0449 33.0001 16.0431 33.0001 16.041 33 cv
16.0429 33.0001 16.045 33.0001 16.0469 33.0001 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
15.9648 33 mo
15.9672 33 15.9695 33 15.9719 33 cv
15.9699 33 15.9668 33 15.9648 33 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
16.0352 33 mo
16.0332 33 16.0302 33 16.0281 33 cv
16.0283 33 li
16.0303 33 16.0331 33 16.0352 33 cv
16.0352 33 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 15.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
16.0352 33 mo
16.0331 33 16.0303 33 16.0283 33 cv
16.0306 33 16.0328 33 16.0352 33 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
15.9764 33 mo
15.9793 33 15.9812 33 15.9841 33 cv
15.9815 33 15.9789 33 15.9764 33 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
16.0236 33 mo
16.0211 33 16.0185 33 16.0159 33 cv
16.016 33 li
16.0185 33 16.0211 33 16.0236 33 cv
16.0236 33 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 15.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
16.0236 33 mo
16.0211 33 16.0185 33 16.016 33 cv
16.0188 33 16.0207 33 16.0236 33 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
15.9883 33 mo
15.9883 33 li
15.9923 33 15.996 33 16 33 cv
16 33 li
16 33 li
16.004 33 16.0077 33 16.0117 33 cv
16.0117 33 li
16.0077 33 16.004 33 16 33 cv
15.996 33 15.9923 33 15.9883 33 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 15.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
15.9883 33 mo
15.9921 33 15.9962 33 16 33 cv
15.996 33 15.9923 33 15.9883 33 cv
16.0117 33 mo
16.0077 33 16.004 33 16 33 cv
16.0038 33 16.0079 33 16.0117 33 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 15.999 27.1875 ]ct
clp
/4 /Gradient get_res exec grestore
np
30.9746 48.5 mo
30.9531 47.8523 30.8904 47.2153 30.7891 46.5906 cv
30.8347 46.5781 30.8804 46.5654 30.9258 46.5527 cv
30.205 39.0591 23.9497 33.1574 16.3073 33.0031 cv
24.4359 33.167 31 39.831 31 48 cv
31 48 li
31 48.168 30.9805 48.332 30.9746 48.5 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[16.32 0 0 17.28 15.36 14.56 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 34 
/H 36 
/M[34 0 0 -36 0 36 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
hZ2OJh^Rahec=SDh_4L"blHW>h_b00_uS[8iB%!"]`?q4l9P&.]`?q7o1&+:]`?q9r(H*D]`@(@r@$Q#
]`@CLoIJg#]`@^XlRq(#]`A$di\B>#_Z9Q6h_a5(bQ.26h`'G1eH"h6h`BY:h>lI6h`]kCk5a*6h`p"J
n,U`6ha64Sq#JA6haQI]!/nMjham!opQ<,hhb3O+mZtNdhbO'=jda!ai_f\PhkIdalW!OVhl+3goN(<Z
hlXQlrE8/`hm:0"quGVZhmpo1o)RZThnRY@l2]^Nho+=Ni;hbHhob']fDsfBhpCflnGqGHheV-#kQ'06
heh9*nGpf6hf.K3q>eG6hfIc>s6%&qhfe;Pp?fNnhg+hbmIT38J,~>

%%EndBinary
grestore
np
1.02539 48.5 mo
1.01953 48.332 1.00001 48.168 1.00001 48 cv
1.00001 48 li
1.00001 39.835 7.55651 33.1735 15.6814 33.0033 cv
8.04232 33.1632 1.79275 39.0628 1.07227 46.5527 cv
1.11823 46.5656 1.16429 46.5783 1.21039 46.591 cv
1.10936 47.2152 1.04678 47.8528 1.02539 48.5 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[15.84 0 0 17.28 .479999 14.56 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 33 
/H 36 
/M[33 0 0 -36 0 36 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 33 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 33 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 33 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 33 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
huM[Li$mafgAp.Ji%O?qec=VHi&'m&d/`)Fi&^K1bQ-QDi'@)<`rP$Bi(!\G_>rL?i_0;E^B!1?k>D(Q
^B!1BlrWj]^B!1EnQkWi^B!1Hp1*Du^B!1Kqe5,*^B!1N!,gb5^B!=UrArkY^B!L]pc[P]^B![do0;/_
^B!jlmR#ic^B"$tksaNg^B"4'j@J3k^]4?7i(N!o`;oc8i(i4#aoM,8i)/F,cN*J8i)JX5e,\h8i)\d<
f`:18i*#!Eh>lO8i*>3NirIm8i*YEWkQ'68i*tW_m/YT8i+:ihnc6r8i+V&qpAi;8i+q9%quGgYhuM\P
i7m>ngAp/Ni8Nr$ec=WLi90P/d/`*Ji9g.:bQ-RHi:HaEkQ$,~>

%%EndBinary
grestore
np
15.6816 33.0033 mo
15.6852 33.0032 15.6887 33.0032 15.6922 33.0031 cv
15.6885 33.0032 15.6854 33.0032 15.6816 33.0033 cv
16.3068 33.0031 mo
16.3035 33.003 16.2998 33.0029 16.2965 33.0029 cv
16.3 33.0029 16.3033 33.003 16.3068 33.0031 cv
15.6933 33.0031 mo
15.6969 33.003 15.6997 33.003 15.7032 33.0029 cv
15.6999 33.0029 15.6966 33.003 15.6933 33.0031 cv
16.2949 33.0028 mo
16.2921 33.0028 16.2881 33.0027 16.2852 33.0027 cv
16.2882 33.0027 16.2919 33.0028 16.2949 33.0028 cv
15.7053 33.0028 mo
15.7083 33.0028 15.7115 33.0027 15.7145 33.0027 cv
15.7116 33.0027 15.7081 33.0028 15.7053 33.0028 cv
16.2834 33.0026 mo
16.2801 33.0026 16.2769 33.0025 16.2736 33.0025 cv
16.2771 33.0025 16.2799 33.0026 16.2834 33.0026 cv
15.7168 33.0026 mo
15.7198 33.0026 15.7231 33.0025 15.7262 33.0025 cv
15.7233 33.0025 15.7196 33.0026 15.7168 33.0026 cv
16.2721 33.0024 mo
16.2688 33.0024 16.2655 33.0023 16.2622 33.0023 cv
16.2657 33.0023 16.2686 33.0024 16.2721 33.0024 cv
15.7281 33.0024 mo
15.7311 33.0024 15.7346 33.0023 15.7376 33.0023 cv
15.7343 33.0023 15.7314 33.0024 15.7281 33.0024 cv
16.2606 33.0022 mo
16.2573 33.0022 16.254 33.0021 16.2507 33.0021 cv
16.2537 33.0021 16.2576 33.0022 16.2606 33.0022 cv
15.7396 33.0022 mo
15.7426 33.0022 15.7461 33.0021 15.7491 33.0021 cv
15.7458 33.0021 15.7429 33.0022 15.7396 33.0022 cv
16.2492 33.002 mo
16.2459 33.002 16.2427 33.0019 16.2393 33.0019 cv
16.2429 33.0019 16.2457 33.002 16.2492 33.002 cv
15.7511 33.002 mo
15.7546 33.002 15.757 33.0019 15.7605 33.0019 cv
15.7572 33.0019 15.7544 33.002 15.7511 33.002 cv
16.2377 33.0018 mo
16.2164 33.0015 16.1946 33.0012 16.1733 33.001 cv
16.1945 33.0012 16.2165 33.0015 16.2377 33.0018 cv
15.7626 33.0018 mo
15.7838 33.0015 15.8051 33.0012 15.8263 33.001 cv
15.805 33.0012 15.7839 33.0015 15.7626 33.0018 cv
16.1704 33.0009 mo
16.1676 33.0009 16.1656 33.0009 16.1627 33.0009 cv
16.1653 33.0009 16.1679 33.0009 16.1704 33.0009 cv
15.8296 33.0009 mo
15.8321 33.0009 15.8344 33.0009 15.8369 33.0009 cv
15.8346 33.0009 15.832 33.0009 15.8296 33.0009 cv
16.1589 33.0008 mo
16.1565 33.0008 16.1542 33.0008 16.1519 33.0008 cv
16.1544 33.0008 16.1563 33.0008 16.1589 33.0008 cv
15.8412 33.0008 mo
15.8432 33.0008 15.846 33.0008 15.848 33.0008 cv
15.8456 33.0008 15.8435 33.0008 15.8412 33.0008 cv
16.1468 33.0007 mo
16.1449 33.0007 16.1423 33.0007 16.1404 33.0006 cv
16.1424 33.0007 16.1448 33.0007 16.1468 33.0007 cv
15.8532 33.0007 mo
15.8552 33.0007 15.8575 33.0007 15.8595 33.0006 cv
15.8576 33.0007 15.8551 33.0007 15.8532 33.0007 cv
16.1354 33.0006 mo
16.133 33.0006 16.1309 33.0006 16.1286 33.0005 cv
16.1306 33.0006 16.1333 33.0006 16.1354 33.0006 cv
15.8647 33.0006 mo
15.8667 33.0006 15.8693 33.0006 15.8713 33.0005 cv
15.869 33.0006 15.867 33.0006 15.8647 33.0006 cv
16.1234 33.0005 mo
16.1211 33.0005 16.1194 33.0005 16.1171 33.0004 cv
16.1196 33.0005 16.1209 33.0005 16.1234 33.0005 cv
15.8766 33.0005 mo
15.8791 33.0005 15.8804 33.0005 15.8829 33.0004 cv
15.8805 33.0005 15.8789 33.0005 15.8766 33.0005 cv
16.1117 33.0004 mo
16.1098 33.0004 16.1075 33.0004 16.1056 33.0004 cv
16.1076 33.0004 16.1097 33.0004 16.1117 33.0004 cv
15.8883 33.0004 mo
15.8903 33.0004 15.8924 33.0004 15.8944 33.0004 cv
15.8925 33.0004 15.8902 33.0004 15.8883 33.0004 cv
16.0996 33.0003 mo
16.0977 33.0003 16.0958 33.0003 16.0939 33.0003 cv
16.096 33.0003 16.0976 33.0003 16.0996 33.0003 cv
15.9004 33.0003 mo
15.9024 33.0003 15.904 33.0003 15.906 33.0003 cv
15.9041 33.0003 15.9023 33.0003 15.9004 33.0003 cv
16.0881 33.0002 mo
16.0862 33.0002 16.0841 33.0002 16.0822 33.0002 cv
16.0842 33.0002 16.0861 33.0002 16.0881 33.0002 cv
15.9119 33.0002 mo
15.9139 33.0002 15.9158 33.0002 15.9178 33.0002 cv
15.9159 33.0002 15.9138 33.0002 15.9119 33.0002 cv
16.076 33.0002 mo
16.0745 33.0002 16.0719 33.0002 16.0705 33.0002 cv
16.072 33.0002 16.0745 33.0002 16.076 33.0002 cv
15.924 33.0002 mo
15.9256 33.0002 15.928 33.0002 15.9295 33.0002 cv
15.928 33.0002 15.9255 33.0002 15.924 33.0002 cv
16.0643 33.0001 mo
16.0624 33.0001 16.0607 33.0001 16.0588 33.0001 cv
16.0608 33.0001 16.0623 33.0001 16.0643 33.0001 cv
15.9357 33.0001 mo
15.9372 33.0001 15.9397 33.0001 15.9412 33.0001 cv
15.9393 33.0001 15.9376 33.0001 15.9357 33.0001 cv
16.0522 33.0001 mo
16.0503 33.0001 16.0489 33.0001 16.047 33.0001 cv
16.049 33.0001 16.0502 33.0001 16.0522 33.0001 cv
15.9478 33.0001 mo
15.9498 33.0001 15.951 33.0001 15.953 33.0001 cv
15.9511 33.0001 15.9497 33.0001 15.9478 33.0001 cv
16.0409 33 mo
16.039 33 16.0371 33 16.0352 33 cv
16.0372 33 16.0389 33 16.0409 33 cv
15.9591 33 mo
15.9612 33 15.9628 33 15.9648 33 cv
15.9629 33 15.961 33 15.9591 33 cv
16.0281 33 mo
16.0267 33 16.025 33 16.0236 33 cv
16.0251 33 16.0266 33 16.0281 33 cv
15.9719 33 mo
15.9734 33 15.9749 33 15.9764 33 cv
15.975 33 15.9733 33 15.9719 33 cv
16.0159 33 mo
16.0145 33 16.0131 33 16.0117 33 cv
16.0132 33 16.0144 33 16.0159 33 cv
15.9841 33 mo
15.9856 33 15.9868 33 15.9883 33 cv
15.9869 33 15.9855 33 15.9841 33 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 14.88 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~'GM5q(Ddl()B'M4~>
<~.4H\p0/"t31c.$G~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.21039 46.591 mo
1.16429 46.5783 1.11823 46.5656 1.07227 46.5527 cv
1.79275 39.0628 8.04232 33.1632 15.6814 33.0033 cv
15.6816 33.0033 li
15.6854 33.0032 15.6885 33.0032 15.6922 33.0031 cv
15.6927 33.0031 15.6928 33.0031 15.6933 33.0031 cv
15.6966 33.003 15.6999 33.0029 15.7032 33.0029 cv
15.7037 33.0029 15.7048 33.0029 15.7053 33.0028 cv
15.7081 33.0028 15.7116 33.0027 15.7145 33.0027 cv
15.7155 33.0027 15.7158 33.0026 15.7168 33.0026 cv
15.7196 33.0026 15.7233 33.0025 15.7262 33.0025 cv
15.7267 33.0024 15.7276 33.0024 15.7281 33.0024 cv
15.7314 33.0024 15.7343 33.0023 15.7376 33.0023 cv
15.7386 33.0022 15.7386 33.0022 15.7396 33.0022 cv
15.7429 33.0022 15.7458 33.0021 15.7491 33.0021 cv
15.7497 33.002 15.7506 33.002 15.7511 33.002 cv
15.7544 33.002 15.7572 33.0019 15.7605 33.0019 cv
15.761 33.0019 15.7621 33.0019 15.7626 33.0018 cv
15.7839 33.0015 15.805 33.0012 15.8263 33.001 cv
15.8273 33.001 15.8286 33.001 15.8296 33.0009 cv
15.832 33.0009 15.8346 33.0009 15.8369 33.0009 cv
15.8385 33.0009 15.8397 33.0008 15.8412 33.0008 cv
15.8435 33.0008 15.8456 33.0008 15.848 33.0008 cv
15.85 33.0007 15.8512 33.0007 15.8532 33.0007 cv
15.8551 33.0007 15.8576 33.0007 15.8595 33.0006 cv
15.8615 33.0006 15.8626 33.0006 15.8647 33.0006 cv
15.867 33.0006 15.869 33.0006 15.8713 33.0005 cv
15.8729 33.0005 15.8751 33.0005 15.8766 33.0005 cv
15.8789 33.0005 15.8805 33.0005 15.8829 33.0004 cv
15.8844 33.0004 15.8868 33.0004 15.8883 33.0004 cv
15.8902 33.0004 15.8925 33.0004 15.8944 33.0004 cv
15.8964 33.0003 15.8984 33.0003 15.9004 33.0003 cv
15.9023 33.0003 15.9041 33.0003 15.906 33.0003 cv
15.908 33.0003 15.9099 33.0003 15.9119 33.0002 cv
15.9138 33.0002 15.9159 33.0002 15.9178 33.0002 cv
15.9198 33.0002 15.922 33.0002 15.924 33.0002 cv
15.9255 33.0002 15.928 33.0002 15.9295 33.0002 cv
15.932 33.0001 15.9332 33.0001 15.9357 33.0001 cv
15.9376 33.0001 15.9393 33.0001 15.9412 33.0001 cv
15.9432 33.0001 15.9457 33.0001 15.9478 33.0001 cv
15.9497 33.0001 15.9511 33.0001 15.953 33.0001 cv
15.955 33.0001 15.9571 33.0001 15.9591 33 cv
15.961 33 15.9629 33 15.9648 33 cv
15.9668 33 15.9699 33 15.9719 33 cv
15.9733 33 15.975 33 15.9764 33 cv
15.9789 33 15.9815 33 15.9841 33 cv
15.9855 33 15.9869 33 15.9883 33 cv
15.9923 33 15.996 33 16 33 cv
16.004 33 16.0077 33 16.0117 33 cv
16.0131 33 16.0145 33 16.0159 33 cv
16.0185 33 16.0211 33 16.0236 33 cv
16.025 33 16.0267 33 16.0281 33 cv
16.0302 33 16.0332 33 16.0352 33 cv
16.0371 33 16.039 33 16.0409 33 cv
16.0429 33.0001 16.045 33.0001 16.047 33.0001 cv
16.0489 33.0001 16.0503 33.0001 16.0522 33.0001 cv
16.0543 33.0001 16.0568 33.0001 16.0588 33.0001 cv
16.0607 33.0001 16.0624 33.0001 16.0643 33.0001 cv
16.0664 33.0001 16.0685 33.0001 16.0705 33.0002 cv
16.0719 33.0002 16.0745 33.0002 16.076 33.0002 cv
16.078 33.0002 16.0802 33.0002 16.0822 33.0002 cv
16.0841 33.0002 16.0862 33.0002 16.0881 33.0002 cv
16.0901 33.0003 16.0919 33.0003 16.0939 33.0003 cv
16.0958 33.0003 16.0977 33.0003 16.0996 33.0003 cv
16.1016 33.0003 16.1036 33.0003 16.1056 33.0004 cv
16.1075 33.0004 16.1098 33.0004 16.1117 33.0004 cv
16.1133 33.0004 16.1155 33.0004 16.1171 33.0004 cv
16.1194 33.0005 16.1211 33.0005 16.1234 33.0005 cv
16.125 33.0005 16.1271 33.0005 16.1286 33.0005 cv
16.1309 33.0006 16.133 33.0006 16.1354 33.0006 cv
16.1374 33.0006 16.1383 33.0006 16.1404 33.0006 cv
16.1423 33.0007 16.1449 33.0007 16.1468 33.0007 cv
16.1483 33.0007 16.1504 33.0007 16.1519 33.0008 cv
16.1542 33.0008 16.1565 33.0008 16.1589 33.0008 cv
16.1604 33.0008 16.1612 33.0008 16.1627 33.0009 cv
16.1656 33.0009 16.1676 33.0009 16.1704 33.0009 cv
16.1714 33.001 16.1723 33.001 16.1733 33.001 cv
16.1946 33.0012 16.2164 33.0015 16.2377 33.0018 cv
16.2382 33.0019 16.2388 33.0019 16.2393 33.0019 cv
16.2427 33.0019 16.2459 33.002 16.2492 33.002 cv
16.2497 33.002 16.2502 33.002 16.2507 33.0021 cv
16.254 33.0021 16.2573 33.0022 16.2606 33.0022 cv
16.2611 33.0022 16.2617 33.0022 16.2622 33.0023 cv
16.2655 33.0023 16.2688 33.0024 16.2721 33.0024 cv
16.2726 33.0024 16.2731 33.0024 16.2736 33.0025 cv
16.2769 33.0025 16.2801 33.0026 16.2834 33.0026 cv
16.2839 33.0026 16.2847 33.0027 16.2852 33.0027 cv
16.2881 33.0027 16.2921 33.0028 16.2949 33.0028 cv
16.2954 33.0029 16.296 33.0029 16.2965 33.0029 cv
16.2998 33.0029 16.3035 33.003 16.3068 33.0031 cv
16.3073 33.0031 li
23.9497 33.1574 30.205 39.0591 30.9258 46.5527 cv
30.8804 46.5654 30.8347 46.5781 30.7891 46.5906 cv
29.633 39.4622 23.4488 34 16 34 cv
8.54885 34 2.36439 39.4619 1.21039 46.591 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[31.2 0 0 15.36 .48 16.48 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 65 
/H 32 
/M[65 0 0 -32 0 32 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 65 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 65 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 65 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 65 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
^];7TrWL"A`W3RMaTVAA^^83bZiJDUnccf:dK$EMeHY@E^^\orVuYQXjp8a5h>j8Mi<eEK^_5].S,h^Z
g'YV1l2[+Mm0qJQ^_lP@O9"k]c4.Q.p&KsMq%(OW^`NCRKE2#a_@aU.!$[$qr;aVGa!LR.M#d8M^_G$B
oI5h$nGp?@dk0u>PlU+M^_tf\kVAV-jT*(8h_sIPJcPcM^`CEUq`9N5p]/)PbWthdNWAVM^`q2qmmWH@
li=gHfLkC#RK2IM^aIu7j%l<JhuLPCjAk#9V?#<M^b+hUf3><Ve,[9<n6jXOZ2i/M^bb[sb@e<ba8j"6
r,0Jk^&Z"M_)_QW^i[Kp]E#u8qE;W?aoJjMbsCtf^k0o5YQ3-@mR=pJec;]Mfgt<t^l[=OU]B:Gi_7.S
_Z9Z9J,~>

%%EndBinary
grestore
np
126.209 60.0908 mo
119.627 57.1104 li
119.223 56.9277 li
118.815 57.1045 li
116.687 58.0303 114.395 58.5 112 58.5 cv
111.867 58.5 111.735 58.4985 111.603 58.4956 cv
111.861 57.7102 112 56.8715 112 56 cv
112 52.5344 109.793 49.5812 106.708 48.4706 cv
109.647 45.4808 113.415 43.0252 117.654 41.4414 cv
120.102 40.5254 122.619 39.9668 125.143 39.6836 cv
124.569 38.7893 123.901 37.9431 123.096 37.1788 cv
125.52 39.4445 127 42.4533 127 45.75 cv
127 48.4443 126.018 51.0234 124.158 53.209 cv
123.775 53.6592 li
123.984 54.2109 li
126.209 60.0908 li
98.1171 50.5788 mo
97.4095 49.1144 97.0139 47.5145 97.0003 45.8386 cv
97.0138 47.5148 97.4107 49.1136 98.1195 50.5762 cv
98.1187 50.5771 98.118 50.5779 98.1171 50.5788 cv
97.0003 45.8376 mo
97.0003 45.8282 97.0002 45.8188 97.0001 45.8094 cv
97.0002 45.8186 97.0003 45.8284 97.0003 45.8376 cv
97.0001 45.8077 mo
97.0001 45.8034 97.0001 45.7999 97.0001 45.7956 cv
97.0001 45.7996 97.0001 45.8037 97.0001 45.8077 cv
97.0001 45.7932 mo
97.0001 45.7885 97 45.7845 97 45.7798 cv
97 45.7844 97.0001 45.7886 97.0001 45.7932 cv
97 45.778 mo
97 45.7742 97 45.7704 97 45.7665 cv
97 45.7668 97 45.7676 97 45.7679 cv
97 45.7701 97 45.7725 97 45.7747 cv
97 45.7759 97 45.7768 97 45.778 cv
97 45.7632 mo
97 45.759 97 45.7543 97 45.75 cv
97 45.75 li
97 45.7542 97 45.7585 97 45.7627 cv
97 45.7632 li
97 45.75 mo
97 45.75 li
97 38.7197 103.729 33 112 33 cv
112.006 33 112.011 33 112.017 33 cv
112.011 33 112.006 33 112 33 cv
112 33 li
103.729 33 97 38.7207 97 45.75 cv
112.088 33.0002 mo
112.084 33.0002 112.08 33.0002 112.077 33.0002 cv
112.08 33.0002 112.084 33.0002 112.088 33.0002 cv
112.066 33.0001 mo
112.064 33.0001 112.062 33.0001 112.06 33.0001 cv
112.059 33.0001 112.058 33.0001 112.056 33.0001 cv
112.06 33.0001 112.063 33.0001 112.066 33.0001 cv
112.056 33.0001 mo
112.055 33.0001 112.054 33.0001 112.053 33.0001 cv
112.052 33.0001 112.05 33.0001 112.049 33.0001 cv
112.051 33.0001 112.053 33.0001 112.056 33.0001 cv
112.044 33 mo
112.043 33 112.043 33 112.042 33 cv
112.038 33 112.034 33 112.03 33 cv
112.028 33 112.026 33 112.024 33 cv
112.031 33 112.038 33 112.044 33 cv
112.022 33 mo
112.022 33 112.021 33 112.021 33 cv
112.021 33 112.02 33 112.02 33 cv
112.021 33 112.021 33 112.022 33 cv
gsave
[18.1847 0 0 18.1847 122.6 55.5391 ]ct
clp
/0 /Gradient get_res exec grestore
np
112 32 mo
103.162 32 96 38.1562 96 45.75 cv
96 53.3437 103.162 59.5 112 59.5 cv
114.596 59.5 117.047 58.9648 119.215 58.0215 cv
128 62 li
124.92 53.8574 li
126.854 51.584 128 48.7812 128 45.75 cv
128 38.1562 120.836 32 112 32 cv
112 33 mo
120.271 33 127 38.7197 127 45.75 cv
127 48.4443 126.018 51.0234 124.158 53.209 cv
123.775 53.6592 li
123.984 54.2109 li
126.209 60.0908 li
119.627 57.1104 li
119.223 56.9277 li
118.815 57.1045 li
116.687 58.0303 114.395 58.5 112 58.5 cv
103.729 58.5 97 52.7803 97 45.75 cv
97 38.7197 103.729 33 112 33 cv
.47451 .298039 .27451 0 cmyk
f
99.3495 49.4899 mo
99.1207 48.6074 99 47.6906 99 46.75 cv
99 39.7207 105.729 34 114 34 cv
116.367 34 118.598 34.4824 120.592 35.3145 cv
120.592 35.3145 li
120.592 35.3145 li
118.17 33.8705 115.232 33.0108 112.06 33.0001 cv
112.062 33.0001 112.064 33.0001 112.066 33.0001 cv
112.07 33.0001 112.073 33.0001 112.077 33.0002 cv
112.08 33.0002 112.084 33.0002 112.088 33.0002 cv
116.445 33.0215 120.368 34.63 123.096 37.1788 cv
123.901 37.9431 124.569 38.7893 125.143 39.6836 cv
122.619 39.9668 120.102 40.5254 117.654 41.4414 cv
113.415 43.0252 109.647 45.4808 106.708 48.4706 cv
105.862 48.166 104.95 48 104 48 cv
102.265 48 100.66 48.5522 99.3495 49.4899 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[27.36 0 0 18.24 98.4 13.6 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 57 
/H 38 
/M[57 0 0 -38 0 38 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 57 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 57 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 57 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 57 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
pAk0nrrW0%rWN6)rW`?,rs8T1rsJ`5rs\l9rXSr=rXf)ArXugCb5a-r!X&W1#7(VC$OdIS%hK<c',2/s
(Dn#.*#p"@+<_pR,UFcb-n-Vr/1iJ-0JW;%rrN*#rr`6'rrrB+!!iN/rs8T1rsJ`5rs\l9rXSr=rXf)A
rXo2ET`F3T0*)+W"9o&9#mq%K%1Wm[&J>`k'c%T&)&aG6*ZcFH+sS?Z-7:2j.P!&%/h\n51ACkL!WE0#
"9&H'"o\`*#QG)/$3(A3$i^Y7%K6k;&,m.?&cNFC'8HQA!<N?+"pP>=$4@7O%M'*_&ebro()If*)B0Y:
*ZuRL+s\H]-R^Dn.kE8)0/,+91\h%N!WE0#"9&H'"o\`*#QG)/$3(A3$i^Y7%K6k:&-!4?&cWLC'C5^i
!#bk>!sAc3#RCbE$k3[W&.oNg'GVB"(`=52*#9P9+!;aO,U=]a-n-Vr/1iJ-0JP==2#74P!WE0#"9&H'
"o\`*#Q>#/$2t;3$iUS7%K6k:&-!4?&cWLC'*&`p!4W"a!<N?+"U52;$471M%M'*_&ebro()If*)B0Y:
*ZlLJ+s\E\-7C;m.kE8)0/,+91Ggug!<)ut!WN6#"9/N'"oef+#Q>#/$2t;3$iUS7%K6k:&-!4?&cWLC
'E8cV!7Lp(!<N?+"U52;#mq(L%Ls$^&ebro()If*)B0Y:*ZlLJ+sS?[-7C8l.kE8)0/,+91GgsIquH]s
rrW0%rri<)rs&H-rWiQ3#n$\>rsSf7rser;rX]#?rXo/CrY#>I'G[2>mJo'E!WrQ/"pYD?$4@7P%M00a
',2/s(Dn#.)]Tk>+!;^N,:"Q^-n$Pp/1iJ-0JP==1c70Mr;cftrrW0%rri<)rs&H-rWrN1rX/Z5rXAf9
rXSo<rt,/ArY#5ErtGJJ'oW+t!<N?+"U52;/I;al$k3[X&/#Ti'c%T&)&aG6*?H:F+X/-V,pjuf.Olu#
/h\n51,CaE2E*Vp!<*$!!r`<%"TAT)#6"l,#lb51$N:G5%/p_9%fR"=&H3:@')rXE'`Sp4!2TZ>!<N?+
"U52;#mq%K%1Wm[&eYlm()If*)B0Y:*ZlLJ+sS?J,pjuf.4Ql"/hSh41,CaE2E*TU!!*!!rrW0%rWN6)
rW`B-rWrN1rX/W4rs\l9rso#=rt,/ArY#5ErY,DK'c,*q^]6=p!WrQ/"pYD?$4@7O%M'*_&el#q()Ro-
)]Tk>+!;^N,:"Q^-R^Dn.kE;*0JG7<1c70M3&s#"rW3$#rWE-&rrrB+rs/N/rsAZ3rX8`7rXJl;rX]#?
rXo,BrtGAGrtYPL[/eq]2us'_"9eu7#RLhG$k3[W&.oNg'G_H$(`F>5*?H:F+X/-V,pjuf.4Qi!/M8_2
1,:[D2E*TU3]m<ArrW0%rWN6)rW`B-rWrN1rX/W4!XoJHrseu<rX]#?rXo,BrtGAGrY>GKRfN*]49>Tf
"U52;#mq%K%1Wm[&J>`k'c%W')B'S9*ZlLJ+sS?Z-7:2j.P!&%/h\n61,LgG2`NfY4$3NE!Wr?'rWN6)
rW`B-rWrN1rX/W4rs\l9rXSr=rXf)Ar=])CrtPGI!YuRPO8o^k"9eu7#RLhG$k3[W&1nJ,',2/s(Dn&/
*#p"A+<_pR,UFcb-n-Vr/1iJ-0/,+91GgsI2`NfY495KbrWE-&rrrB+rWiH/rX&T3rX8`7rXJi:rt#)?
rXo,B!tu:\'E/[G(&f!2!3-#H"9\o6#RLhG$k3[W&.oNg'GVB"(`=53*$-.D+X/-V,pjuf.4Qi!&1fCc
0/#"61,C^C2)[ES3]m<Brr`6'rrrB+rWiH/rX&T3rX8`7rXJi:rt#&>r=T#ArtGAGrY>GKbQ,Q]49Pim
#RLhG$k3[W&.oNg'GVB"(`=52*$-.D+<i$U,pjuf.4Qet.kE8(/h\n40etOA2)[BQ3B@3C!sAN*rrrB+
rWiH/rX&T3rX8`7rXJi:rt##=r=T#ArY,8FrtYPLZ2i_]3sGlp#RUqJ%1Wm[&J>`k'c%T&)&aG6*?H=G
+sJ9Y-7:2i.4Qet.kE5'/h\k30ekF>1c70N3B7-C"9&H'"o\`*#QG)/$3(A3$i^Y7%K6k:&,Qq:&cNFB
'E8dG'`]#:!;HOT"pbJA$4I@R%hK<c',2/s(Dn#.)]Tk>+!;aO,U=]a-R^Al.4Qet/1`A*/h\k30etOA
2)[?O3<KB_"TJZ)#6"l,#lb51$NCM5%0$e9%f?k8&H!.?')iRD'`JjG!0[C)#7(YD$k*UV&.oNg'GVB"
(`=52*$$(B+<_pS,UOicr[8X5.4Qet.kE8(/hSe20JP==1c70M3!06c"TAT)#6"l,#lb51$NCM5%0$e8
%f?k9&-3@Sr=T#ArY,8FrtY/+S,aE4#mq(L%Ls$^&ebro()If*)B0Y:*ZlLJ+oro6r[%Umr[@dqs!n!u
&M,Lc/hSe20JP==1c70M!sAc+"oef+#Q>#/$2t;3$iUS7%K-e6&,Qq;&HNLVrY#2DrY,>Ig&SP])[QiZ
$k<aY&/#Wj'c%T&)&aG6*?H:F+X/-V-2o7k-iPOo.K1e(.k</%/M8Y/0JP<e1,CaE2?X0^"oef+#Q>#/
$2t;3$iUS7%K$_6%fm4Pr=AuA&H37B&eY*UrY#>I'c"Laci=sk$OdIS&.fHe'GVB"(`=52*$$(B+<_pR
,UNF:r[7[nr[Igr!%\%"$S<t`0/,(71,CaE"TAT)#6"l,#lb51$N:D5$ig_8%K-e4&,Zt>&J4pR!>6"D
&c`UD'W(lq!#c4R%1Wm[&eYlm()If*)B0Y:*ZlLJ+sS?Z-2o7j-iPOl.0_7O.k</%/cI@.0/51:1c5C>
"o\`+#Q>#/$2t;2$i^Y7%K-e4%fm4Pq@NZ=!"o2Cr=f2FNrT4i%1X-a&.oNh'G_H$)&aG6*?H:F+X/-V
,piL:r?qLkr[Ijss""("#q[b_0JG4:1Bds]#6+r-#lb51$N:G5%/p_7%K[.O%f-_2&H3:?')iOE'_)0q
!#?"R%hK<c',22t(`4/1*$$(B+<_pR,lT+h-3,Ci-iGIm.K(_'.kE5'/M8_20erq3#6+r-#lb51$N:G5
%/p_7%K[.N%egM0&H*4?')iQr!4`(H%M'*_&ebro()Rl,)B9b=+!;^N,:"N\-2]+d-NPVCr@%Xo#V%;S
.kE8(/h[5Z1&_CW#Q>#/$2t;2$i^Y7%K-b<%h9*B%fm4Pq[i]<r=T)D]`?L]'Ft`e&ebro()If+)B9_<
+!;^N,:*77r$DIm-RSX:r$_Lm#q@GU/1iJ-0Eqa\#QG)/$3(A3$i^Y7%K-e9%K[.O%e^D7&.]<K&H*1B
&eYkQ!:9b"&.oNg'GVB"(`=53*$-.D+X/-Vr[%:c#:CiG-71)e-N#7k./kY".P!&$/h[G.#QG)/$3(A3
$i^Y7%JgP9%hB0?&,["=&H3:A&s!"r&J>`k'c%8q(`=52*$-.D+<i$U,phe&r?hgu-n-Vq/1`FQ#QG)/
$3(A3$i^Y7%JgP9%h9*;%fm4Pr=Ju@rt=`"U&Yi>',2/s(Dn#.)]Tk>+<VjP,UFc0-N,7l,prO9!%.[k
%43GL-R^Am.P!%T#7(V7$3(A3$i^Y7%JpV:%hB0@%fd+:%g*@R%hSXNe,[,]&JGin()If*)B0Y:*ZlLK
+s\H(-N5:m,UFc7,RbtF,UFca-RU;k.Otc'#lb51$NCM5%0$e7%fQt=%egJ@%M'$[%Ls!Z%hB0K&,["=
&\7tn!"]hZ()If*)B0Y:*ZlLJ+s\H3-3GVB-R\a;s!@Of!@&lg,7,V?,UF``-7:5krWrN1rX/Z5rXAf9
r=8W6!Y5eOr=8u?%h9-E%f?k9&>0$m!#$(_(Dn#.)]Tk>+!;^N,:"T_-RSd>![]9Br$MFirZhLh,lT%c
,5ren,UF``-R]6+#mpS<rsSf7rser;oFD-9%hB-\%M/1ArX]#>rt(4k#Sn3n)&aG6*?GG-+<_pR,UFf4
-iGCk-2o1h,QAt`+oWYj,9nK\-3snarX/Z5rXAf9rXSQ2":bqQ%M/CG"q;%O%1WjWr!r`;rt+JrV#V,E
(`=52*$$(B+<_pR,UFcb-Reg=r?_Xn,pX`\s!.Ofr?:tZ#9b67,:"QA$2t;2$i^Y7%K?q-&,?\9%1`.B
rXSo<d/^o]%i?0&)]Tk>+!;^N,:"Q^-i,7i-iPFs,paf^,9nE3+o`\a*sE],+!)LGrZD:e+sREn$N:G5
%/p_9%e(#*%egD4%/^P9%Ls#j!6>-M)&aG6*?H:F+X/-V,pk#8./kUm-3Y\@,U4NXrZM=c+!:J'q],h]
*ZlLJ,5qrK$i^Y7%K?q9&-!4?%fd1<%fm.Nr!rT5!=TG:$igb8$igb9%^#fk!"Knd*$$(B+<_pR,UFcb
./YLp-n5-D+X\Wa-7'r`,U4KV+WqmL*Zc=B*#on;)]Te:*??4E+:8JT$i^Y7%K?q;&,d%>&,m.9&,Zq:
%K?n2%/gV8%[6tk!"g+h*?H:F+X/-V,pjuf.4H_rr@.^o&LSqQ-7'r`,9nBU+WqjJ*ZQ1!)[[K%)&aD4
)]Th=++O~>

%%EndBinary
grestore
np
123.096 37.1788 mo
120.368 34.63 116.445 33.0215 112.088 33.0002 cv
116.088 33.0196 119.841 34.3615 122.66 36.7852 cv
122.81 36.9137 122.955 37.045 123.096 37.1788 cv
112.077 33.0002 mo
112.073 33.0001 112.07 33.0001 112.066 33.0001 cv
112.07 33.0001 112.073 33.0001 112.077 33.0002 cv
gsave
[25.3846 23.4481 -23.4481 25.3846 100.145 34.7627 ]ct
clp
/1 /Gradient get_res exec grestore
np
97 45.7747 mo
97 45.7725 97 45.7701 97 45.7679 cv
97 45.7703 97 45.7722 97 45.7747 cv
97 45.7627 mo
97 45.7585 97 45.7542 97 45.75 cv
97 45.7543 97 45.7584 97 45.7627 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 96.48 17.44 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,)6"pP89"o~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~%1WmY%hK6_&H~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
112.053 33.0001 mo
112.049 33.0001 112.046 33.0001 112.042 33 cv
112.043 33 112.043 33 112.044 33 cv
112.046 33.0001 112.047 33.0001 112.049 33.0001 cv
112.05 33.0001 112.052 33.0001 112.053 33.0001 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 111.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~#6tM>#RC\A#l~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~',2/q'c%N"(B~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
112.049 33.0001 mo
112.047 33.0001 112.046 33.0001 112.044 33 cv
112.046 33.0001 112.047 33.0001 112.049 33.0001 cv
gsave
[25.3846 23.4481 -23.4481 25.3846 100.145 34.7627 ]ct
clp
/1 /Gradient get_res exec grestore
np
112.03 33 mo
112.027 33 112.024 33 112.021 33 cv
112.021 33 112.022 33 112.022 33 cv
112.023 33 112.024 33 112.024 33 cv
112.026 33 112.028 33 112.03 33 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 111.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~#6tM>#RC\A#l~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~',2/q'c%N"(B~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
112.024 33 mo
112.024 33 112.023 33 112.022 33 cv
112.023 33 112.023 33 112.024 33 cv
gsave
[25.3846 23.4481 -23.4481 25.3846 100.145 34.7627 ]ct
clp
/1 /Gradient get_res exec grestore
np
98.1195 50.5762 mo
97.4107 49.1136 97.0138 47.5148 97.0003 45.8386 cv
97.0003 45.8382 97.0003 45.838 97.0003 45.8376 cv
97.0003 45.8284 97.0002 45.8186 97.0001 45.8094 cv
97.0001 45.809 97.0001 45.8081 97.0001 45.8077 cv
97.0001 45.8037 97.0001 45.7996 97.0001 45.7956 cv
97.0001 45.7952 97.0001 45.7936 97.0001 45.7932 cv
97.0001 45.7886 97 45.7844 97 45.7798 cv
97 45.7794 97 45.7785 97 45.778 cv
97 45.7768 97 45.7759 97 45.7747 cv
97.0039 47.443 97.3995 49.0618 98.1351 50.5594 cv
98.13 50.5649 98.1246 50.5707 98.1195 50.5762 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[2.4 0 0 6.24 96.48 12.64 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 13 
/M[5 0 0 -13 0 13 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~&J5Tf&eYfi&eYfi',)#m',)#n',2,p'GM5q'bqDt'bqGu'bqK"()@Z$(D[c&(Ddl((Ddo)(`4),(`4)-
)#~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!~>
<~/hSe20J>+60etI<1,:X@1GgpG1c.'J2DmBN2`N`U3&ruY3BB2_3]]>b4?GYg4[)"m5!M:r5<qJ"5X@\&
63~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
97.0003 45.8386 mo
97.0003 45.8383 97.0003 45.8379 97.0003 45.8376 cv
97.0003 45.838 97.0003 45.8382 97.0003 45.8386 cv
97.0001 45.8094 mo
97.0001 45.8088 97.0001 45.8083 97.0001 45.8077 cv
97.0001 45.8081 97.0001 45.809 97.0001 45.8094 cv
97.0001 45.7956 mo
97.0001 45.7947 97.0001 45.7941 97.0001 45.7932 cv
97.0001 45.7936 97.0001 45.7952 97.0001 45.7956 cv
97 45.7798 mo
97 45.7795 97 45.7783 97 45.778 cv
97 45.7785 97 45.7794 97 45.7798 cv
gsave
[11.2647 27.2991 -27.2991 11.2647 103.203 28.063 ]ct
clp
/1 /Gradient get_res exec grestore
np
97 45.7679 mo
97 45.7676 97 45.7668 97 45.7665 cv
97 45.7652 97 45.7645 97 45.7632 cv
97 45.7627 li
97 45.7645 97 45.7661 97 45.7679 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 96.48 17.44 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~&J5Tf&eYfi'*~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~/hSe10JG491&~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
97 45.7665 mo
97 45.7653 97 45.7645 97 45.7632 cv
97 45.7645 97 45.7652 97 45.7665 cv
gsave
[11.2647 27.2991 -27.2991 11.2647 103.203 28.063 ]ct
clp
/1 /Gradient get_res exec grestore
np
112.06 33.0001 mo
112.058 33.0001 112.056 33.0001 112.053 33.0001 cv
112.054 33.0001 112.055 33.0001 112.056 33.0001 cv
112.056 33.0001 li
112.058 33.0001 112.059 33.0001 112.06 33.0001 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 111.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~#mgnE$47+I$3~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~(`4,.)B0V8)u~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
112.042 33 mo
112.038 33 112.034 33 112.03 33 cv
112.034 33 112.038 33 112.042 33 cv
112.021 33 mo
112.014 33 112.007 33 112 33 cv
112.006 33 112.011 33 112.017 33 cv
112.018 33 112.019 33 112.02 33 cv
112.02 33 112.021 33 112.021 33 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 111.36 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~#mgnE$47+I$3~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~(`4,.)B0V8)u~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
112.02 33 mo
112.019 33 112.018 33 112.017 33 cv
112.018 33 112.019 33 112.02 33 cv
gsave
[11.2647 27.2991 -27.2991 11.2647 103.203 28.063 ]ct
clp
/1 /Gradient get_res exec grestore
np
98.1351 50.5594 mo
97.3995 49.0618 97.0039 47.443 97 45.7747 cv
97 45.7722 97 45.7703 97 45.7679 cv
97 45.7661 97 45.7645 97 45.7627 cv
97 45.7584 97 45.7543 97 45.75 cv
97 45.75 li
97 38.7207 103.729 33 112 33 cv
112 33 li
112.007 33 112.014 33 112.021 33 cv
112.024 33 112.027 33 112.03 33 cv
112.034 33 112.038 33 112.042 33 cv
112.046 33.0001 112.049 33.0001 112.053 33.0001 cv
112.056 33.0001 112.058 33.0001 112.06 33.0001 cv
115.232 33.0108 118.17 33.8705 120.592 35.3145 cv
118.598 34.4824 116.367 34 114 34 cv
105.729 34 99 39.7207 99 46.75 cv
99 47.6906 99.1207 48.6074 99.3495 49.4899 cv
98.9092 49.805 98.5025 50.1634 98.1351 50.5594 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[24.96 0 0 19.2 96.48 12.64 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 52 
/H 40 
/M[52 0 0 -40 0 40 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 52 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 52 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 52 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 52 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
li?e]q#^Hrquls%[K+eWquQ`tr<*$%rrrB+%L34E#RLeE$4@4M$k3[VmJut^q?$Nrr<**'r<30*M?*YW
rW2s!rWE-&rWW<+rW`l<#RLeE$4@7N%1NdX&+9Mm!W)rp"8rB$"o\_Z!3uV'!W<*!"9&H'"o\]<#6tM?
#mgqG$O[@P%1WjY&.nO8qZ-?kquZ`tqulp$r<B;&iW/oXr;us#rWN3(rs&H-&-rOJ#mq"I$k*RS%M'']
&J=O5q#U9mqucj"r!!'(rs/H%OoYC\rW<'$rWN6)(Bk!I#6tM?#mgqG$O[@O%1NdX&.fEd'(Q%u!Vlfp
"8i<#"oSZ)#L3=c!;lls!r`<%"TAT)#6"i@#RC_C$47.K$k3XU%hB3_&J>`jo)SReq#^Hrqum!&r!*0+
rs57tn,WCfr<!!$r<+&C"U5/9#7(SA#mq"I$OdFQ%1WmZ&.oNf',22R!;QZm!rE)u"T8N$#6+r-#k7nf
!;urs!r`<%"TAQ6"pP;;#RC_C$47.K$k3US%Ls!\&.oNf',2/so`4dgquZ`tqulp$rW`<+rWiK1_Z8!_
r;lm!rWE-&rrrB+)$^EQ#mgqG$O[@O%1NdX%hK<b&ebrn'c%VZ!;QZn!rN0!"TJW&"oef)#Q>#/$'bMi
!;urt!r`<$"TJZ*#6"iE#RLeE$4@4M%1NdW%hK9a&eYil'c%Q$)#"%+!W3#s"8`6""o\`)#Q4r-$0D5j
!;urt!r`<%"TAQ+"pP>3#Sm^Q$4@4M$k3XU%hB3`&J>`j'GVB"(]bHkq>g9kqZ?ZtqZQp&r!*-*r!<9.
!"-49h#RETr<!!$rWN6)rWXAJ#7(VB$47.K$k3XU%M'*^&J>`j'GV>u(Dmu-)Z'O1!Vulq"8i<$"oAN(
#QG&0#lG#/$BtPj!WE0""9/K,"9er5#6"iI#RC_D$4@4M%1NdX%hK<b&ebom'c%T%(`4,/)uK^3!Vulq
"9&H$"oSZ(#Q>#.$2b.b!5/C2!WE0""9/N'"X4-T#6tM?#mgqG$OdFQ%Ls!\&.oNf',2/r()@]')&X>3
*;om8!WE,s!rN0!"T/H&#5e`)#lP)/$31I9!:'Xa!WE0""9/N("o\]L#6tM?#mq"I$OdIR%Ls!\&J5Wh
',2/r()@]'(`=52)]\hWq#UBpqucj"r!!'(r<N6+r!E?0!"8c+RfNEgr;ls$rWN6)rs&K.rs8W2rsJc6
)[m/b%Ls$]&J>]i'GM8t()Ic((`=52)]Tju!;QZn!rN/u"T8N&#6"l*#lP).$N:F[!6P<@!WN6"""OKW
"U,)7#6tM?#mgqG$OdFQ%Ls!\&.oNg',2,q()@]&(`4,/)B0V8*<>m9quZ`tqum$'r!*-*r!<3,r!NH3
U&argrrN*#rW=)B"9er5"pYA=#RLhF$O[@P%1WjY&.fHe',))Z'b(oo(Ddo*)&aD4*$$%"q>pKqqZHd"
rWW3(r<N6+r<WK3$2k52$hF@r!!!'!!r`9B"9\l3"pYA=#RLeE$4@7N%1NdX%hK<b&ebrn'c$`artk\P
rYYkX)]Kb;*Vog7!rE*""T/H&#5\Z'#lG#.$N1>4%*\ds!<*'""9&E>"U,)7#7(SA#mq%J$k*RT%M'*^
&J>]irY,PO'c%Q$(`<5i"r\C!)]Tk>qZ6Trqucp$r<30)rW`9*r!<6-r<`Q5$N:D6$k&[-qZ-Wtrr`9(
rWO,C"pYA=#mq"I$OdIR%M'']&J5Wh'GM8srYGJL!Z2alrYbbUrYtqZ*rZ3:!r`<""T&B&#6"l*#l4l*
$3:MArX/]7n,THg*WcEG"9\l3"pP;<#RLeE$4@7N%1WjY%hK<c&ebrnrY5JM()QrerYZ%])B0V8*$$%@
!<N'!r<)s#r<<-(rWiB-q$@'/$2k50$i^XP!8%8p!s8Z/"U,)7#6tM@#mq"I$k*RT%M'*^&J>`j'GM8s
()Hib!#YYP#oX^$*#ot>*Zb@[!rN/u"TAT&#6"l+#Qb;=#l=r,$Mt52%%.(u!sA`1"W.FJ#6tM?#mq"I
$OmOT%hB3`&J>`k'GVA^(B53K(]YHQ)ZCZU*<$rY*rH*;"8i<$"oJT(#Q4o0#m^h7$2b/+$NLUs!4;eJ
"9\l3"pP;<#RLeE$4I=P%1Wm[&.oNg',2,q'c%Sa(]G9M)?1WR)Zq'#*?G2%r;um!qum!&r<E3*r<NE1
#lP))$3:MArX8]6[fGFg)[-BL"pYA=#RLeE$O[@P%1Wm[&J5Wh'GM8s(Ao!J)#bEO)?:`T)uq#Y*rZ6<
"9/N%"o\`(#Q+l*$24c,$iUP4%%.)+"U5/9#7(SA$47.L$k3XV$4d[Z&eYil'bqK"rYPJL!uVsp)?(QR
)uU`Z*?H7'!rE*""T/H&#5nf*#lFu0$46M8q$[01g&Sng(^:0L#7(VB$47.L$k3[V%hK<c&ebro()Hlc
r>>GMr>PVRr>Yn[*ZbC[!s/T."oSW(#6+r+#lFu1$4.%8$MFl-%'0Hs!#YtG#RC_C$4@4M%1NdX%hK<c
&el#p()@]&r>>JNr>G_V)]JVn"WSO&*$$+!"8rB$"oSZ*#Q>#+#m(G@$2Y)'$iCG3!1a**#7(SA$47.K
$k3XU%hK9a&ebrn()@_b(]YEO)>tHY)]K\7)]BY8rYtkWrZ2"@qZQp&r!*-*rs8N/rX&W3r!N?0!X];B
rX/o=$OdFO$k1G^b5`4^#RLhF$OdFQ%Ls!\&J5Wh'GVB!r>5SR)B&Gkq\oMRr>PhY)]Tgr*!%&^qZQp&
r!*-*rs8W2rsAH-!=K85$NLP,$NLU/!;QU2#mgqH$OdIR%M'']&J>]i'GVB!(`4,.r#5GO!$(kT!$(kT
rZ(e<rrrB+r!36-rX&B-r!NK3r!NK5q$[01nc5Tg'aY3T$OdIR%M'*^&J>`j'GVB"(`=4i)YtBU*#fh:
)Z^ltr#5VSr#5VUqum$'rW`9*rs8T1q?m*-!"/B,"UkbH$k*N^!7h,d$4@7N%1WjY&.oKe',2/r()If*
)B'P5rYthV!#thU!?3$R)ZUfT)ug'>"o\`*#Q+l-$2b/+$iUM6%/:21%/UF#!!3N9$ka!Z%hB3`&eYil
'c%T%(`=52)uU`]*?6%>*?6%>q],PR!?)pT)?:`S"o\`*#Q>#-$2k5)$i^Y)$g.Mr!##_L%1Wm[&.oNg
',2/s(Dn#.)B8Vpp)O5T*?6's)uLTU)&X@k"o\`*#QG).$2t;1$NLV7$N^_E$iLJ7$Om"Brs\c4!"/Z4
\H(Rg&e,9[%M03a&ebro'c%T&)&aG6r>bn[*W$lY*?P/"ruCtVrYk_Q!>l^R"o\`*#QG)/$2t;2$iUP7
$iUP7$i1;3$iUS6$N^\D$Mt4!!"BAI%hK9b&ebro()Ic(&/cB**$$%@+!)IF+!)LG*Zt>%rZ1tX"WJC!
)Aj@i)#OU;#QG)/$2t;3$gS5s$Ng_D$4>Pg^&ScU%hK9b&el#p()If*)B0Y9*?P/$"!A[.+T!8[*X3W+
*#on:)ZCTX(`+#+(Dm#SrWiH/rX&Q2rsSW2r=/Z5!"Jl8rX/]7r<rN1[K,@g&J#Eb&eYlm'c%T&)&aG6
*?H=!+9E]/+oWV`+9!;]*W@#[)B'Lm)#kEO(4Z~>

%%EndBinary
grestore
np
104 63 mo
100.141 63 97 59.8594 97 56 cv
97 56.1699 97.0137 56.334 97.0254 56.5 cv
97.0513 56.1361 97.1049 55.78 97.1844 55.4334 cv
98.1585 55.6772 99.1877 55.8731 100.261 56.0119 cv
100 56.2734 li
102.977 59.25 li
102.978 59.2461 li
102.982 59.25 li
106.051 56.1791 li
107.741 56.0617 109.341 55.8024 110.816 55.4334 cv
110.895 55.78 110.949 56.1361 110.975 56.5 cv
110.986 56.334 111 56.1699 111 56 cv
111 59.8594 107.859 63 104 63 cv
102.978 56.293 mo
102.916 56.2303 li
102.956 56.2318 102.997 56.2331 103.037 56.2345 cv
102.978 56.293 li
gsave
[13.4214 0 0 13.4214 103.563 69.415 ]ct
clp
/2 /Gradient get_res exec grestore
np
104 48 mo
99.5801 48 96 51.584 96 56 cv
96 60.4179 99.5801 64 104 64 cv
108.416 64 112 60.4179 112 56 cv
112 51.584 108.416 48 104 48 cv
104 49 mo
107.859 49 111 52.1406 111 56 cv
111 59.8594 107.859 63 104 63 cv
100.141 63 97 59.8594 97 56 cv
97 52.1406 100.141 49 104 49 cv
0 .5 1 0 cmyk
f
108 54.2285 mo
106.521 52.75 li
102.978 56.293 li
101.479 54.793 li
100 56.2734 li
102.977 59.25 li
102.978 59.2461 li
102.982 59.25 li
108 54.2285 li
0 0 0 1 cmyk
f
103.037 56.2345 mo
102.997 56.2331 102.956 56.2318 102.916 56.2303 cv
101.479 54.793 li
100.261 56.0119 li
99.1877 55.8731 98.1585 55.6772 97.1844 55.4334 cv
97.897 52.3257 100.679 50 104 50 cv
107.321 50 110.103 52.3257 110.816 55.4334 cv
109.341 55.8024 107.741 56.0617 106.051 56.1791 cv
108 54.2285 li
106.521 52.75 li
103.037 56.2345 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[14.88 0 0 7.68 96.48 6.88 ]ct
snap_to_device
<<
/T 1
/W 31 
/H 16 
/M[31 0 0 -16 0 16 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@H+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJB^
-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-S$\t.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#0JG17
0JG170JG170JG170JG170JG170JG170JG1<2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)RBS3B9)[
3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3BfVj5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o6:+"*6:+"*
6:+"*6:+"*6:+"*6:+"*6:+"*6:+"/7n6'>7n6'>7n6'>7n6'>7n6'>7n6'>7n6'>7n63F91qoN91qoN
91qoN91qoN91qoN91qoN91qoN92JG]:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb<)cgr<)cgr<)cgr
<)cgr<)cgr<)cgr<)cgr<)ch"=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]o';?=$rE?=$rE?=$oC
?!U`A?=$rE?=$rE?=$rE?=IAQ@U`eU@:<ML?<piB?!U`A?=.)K@U`eU@U`eU~>
<~4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4?P_p77BX677BX677BX677BX677BX677BX677BX677BsH
:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:01Lu='&I)='&I)='&I)='&I)='&I)='&I)='&I)?smAM
?smAM?smAM?smAM?smAM?smAM?smAM?smAWC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.g2F)uDD
F)uDDF)uDDF)uDDF)uDDF)uDDF)uDDF*r@_I!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hKnY57KnY57
KnY57KnY57KnY57KnY57KnY57KnY5@NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfKHmQ^=&*Q^=&*
Q^=&*Q^=&*Q^=&*Q^=&*Q^=&*Q_:"ETV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNWMukrWMukrWMukr
WMukrWMukrWMukrWMukrWMul'Za7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7<W]Y(ni]Y(ni]Y(ni
]Y(ni]Y(ni]Y(ni]Y(ni]Z%k/`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
104 56.25 mo
103.676 56.25 103.355 56.2448 103.037 56.2345 cv
106.521 52.75 li
108 54.2285 li
106.051 56.1791 li
105.381 56.2257 104.696 56.25 104 56.25 cv
102.916 56.2303 mo
102.006 56.1971 101.119 56.1228 100.261 56.0119 cv
101.479 54.793 li
102.916 56.2303 li
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/3 /Gradient get_res exec grestore
np
103.27 49.0378 mo
103.27 49.0378 103.27 49.0378 103.271 49.0377 cv
103.27 49.0378 103.27 49.0378 103.27 49.0378 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.28 49.0368 mo
103.28 49.0367 103.281 49.0367 103.282 49.0366 cv
103.281 49.0367 103.28 49.0367 103.28 49.0368 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.29 49.0358 mo
103.291 49.0357 103.291 49.0356 103.292 49.0355 cv
103.292 49.0356 103.291 49.0357 103.29 49.0358 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.301 49.0347 mo
103.302 49.0346 103.302 49.0345 103.303 49.0345 cv
103.302 49.0345 103.301 49.0346 103.301 49.0347 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.311 49.0336 mo
103.312 49.0336 103.313 49.0335 103.313 49.0334 cv
103.313 49.0335 103.312 49.0336 103.311 49.0336 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.322 49.0326 mo
103.323 49.0325 103.323 49.0325 103.324 49.0324 cv
103.323 49.0325 103.323 49.0325 103.322 49.0326 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.332 49.0316 mo
103.333 49.0315 103.334 49.0314 103.335 49.0314 cv
103.334 49.0315 103.333 49.0315 103.332 49.0316 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.343 49.0306 mo
103.344 49.0305 103.345 49.0304 103.345 49.0304 cv
103.345 49.0304 103.344 49.0305 103.343 49.0306 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.353 49.0296 mo
103.354 49.0295 103.355 49.0294 103.357 49.0293 cv
103.356 49.0294 103.354 49.0295 103.353 49.0296 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.364 49.0286 mo
103.365 49.0285 103.366 49.0285 103.367 49.0284 cv
103.366 49.0285 103.365 49.0285 103.364 49.0286 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.375 49.0277 mo
103.376 49.0276 103.377 49.0275 103.378 49.0274 cv
103.377 49.0275 103.376 49.0276 103.375 49.0277 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.413 49.0244 mo
103.414 49.0243 103.416 49.0242 103.417 49.024 cv
103.416 49.0242 103.414 49.0243 103.413 49.0244 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.422 49.0236 mo
103.424 49.0235 103.426 49.0233 103.428 49.0231 cv
103.426 49.0233 103.424 49.0235 103.422 49.0236 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.433 49.0228 mo
103.435 49.0226 103.437 49.0224 103.439 49.0223 cv
103.437 49.0224 103.435 49.0226 103.433 49.0228 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.563 49.0224 mo
104.563 49.0224 104.562 49.0224 104.562 49.0223 cv
104.562 49.0224 104.563 49.0224 104.563 49.0224 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.444 49.0219 mo
103.446 49.0217 103.448 49.0216 103.45 49.0214 cv
103.448 49.0216 103.446 49.0217 103.444 49.0219 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.553 49.0216 mo
104.553 49.0216 104.552 49.0215 104.551 49.0215 cv
104.552 49.0216 104.552 49.0216 104.553 49.0216 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.454 49.0211 mo
103.457 49.0209 103.459 49.0207 103.461 49.0205 cv
103.459 49.0207 103.456 49.0209 103.454 49.0211 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.543 49.0209 mo
104.542 49.0208 104.541 49.0207 104.54 49.0206 cv
104.541 49.0207 104.542 49.0208 104.543 49.0209 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.465 49.0203 mo
103.467 49.0201 103.469 49.0199 103.472 49.0197 cv
103.469 49.0199 103.467 49.0201 103.465 49.0203 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.533 49.0201 mo
104.532 49.02 104.531 49.0199 104.529 49.0198 cv
104.531 49.0199 104.532 49.02 104.533 49.0201 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.476 49.0194 mo
103.478 49.0193 103.48 49.0191 103.483 49.0189 cv
103.48 49.0191 103.478 49.0193 103.476 49.0194 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.522 49.0193 mo
104.521 49.0192 104.52 49.0191 104.519 49.019 cv
104.52 49.0191 104.521 49.0192 104.522 49.0193 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.487 49.0186 mo
103.489 49.0185 103.491 49.0183 103.493 49.0182 cv
103.491 49.0183 103.489 49.0185 103.487 49.0186 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.512 49.0185 mo
104.511 49.0184 104.509 49.0183 104.508 49.0182 cv
104.509 49.0183 104.51 49.0184 104.512 49.0185 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.498 49.0178 mo
103.5 49.0177 103.502 49.0175 103.505 49.0174 cv
103.502 49.0175 103.5 49.0177 103.498 49.0178 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.501 49.0178 mo
104.5 49.0177 104.498 49.0175 104.497 49.0174 cv
104.498 49.0175 104.5 49.0177 104.501 49.0178 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.508 49.0171 mo
103.511 49.0169 103.513 49.0168 103.515 49.0166 cv
103.513 49.0168 103.511 49.0169 103.508 49.0171 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.491 49.017 mo
104.489 49.0169 104.487 49.0168 104.486 49.0167 cv
104.487 49.0168 104.489 49.0169 104.491 49.017 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.519 49.0163 mo
103.522 49.0162 103.524 49.016 103.526 49.0159 cv
103.524 49.016 103.522 49.0162 103.519 49.0163 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.48 49.0163 mo
104.478 49.0162 104.477 49.0161 104.475 49.0159 cv
104.477 49.0161 104.478 49.0162 104.48 49.0163 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.53 49.0156 mo
103.533 49.0154 103.535 49.0153 103.538 49.0151 cv
103.535 49.0153 103.533 49.0154 103.53 49.0156 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.469 49.0155 mo
104.467 49.0154 104.466 49.0153 104.464 49.0152 cv
104.465 49.0153 104.468 49.0154 104.469 49.0155 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.541 49.0149 mo
103.544 49.0147 103.546 49.0145 103.549 49.0144 cv
103.546 49.0145 103.544 49.0147 103.541 49.0149 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.458 49.0149 mo
104.456 49.0147 104.455 49.0146 104.452 49.0145 cv
104.454 49.0146 104.456 49.0147 104.458 49.0149 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.552 49.0142 mo
103.555 49.014 103.558 49.0138 103.56 49.0136 cv
103.558 49.0138 103.555 49.014 103.552 49.0142 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.448 49.0142 mo
104.446 49.014 104.443 49.0139 104.442 49.0138 cv
104.444 49.0139 104.446 49.014 104.448 49.0142 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.563 49.0135 mo
103.566 49.0133 103.569 49.0131 103.572 49.013 cv
103.569 49.0131 103.566 49.0133 103.563 49.0135 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.437 49.0135 mo
104.435 49.0133 104.433 49.0132 104.431 49.0131 cv
104.433 49.0132 104.435 49.0134 104.437 49.0135 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.574 49.0128 mo
103.588 49.012 103.603 49.0111 103.618 49.0103 cv
103.603 49.0111 103.589 49.0119 103.574 49.0128 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.426 49.0128 mo
104.423 49.0127 104.421 49.0125 104.418 49.0124 cv
104.421 49.0125 104.423 49.0127 104.426 49.0128 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.415 49.0122 mo
104.408 49.0117 104.401 49.0113 104.393 49.0109 cv
104.401 49.0113 104.408 49.0117 104.415 49.0122 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.391 49.0108 mo
104.388 49.0106 104.385 49.0105 104.382 49.0103 cv
104.385 49.0105 104.388 49.0106 104.391 49.0108 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.619 49.0102 mo
103.622 49.0101 103.626 49.0099 103.629 49.0097 cv
103.626 49.0099 103.622 49.0101 103.619 49.0102 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.379 49.0101 mo
104.376 49.01 104.374 49.0099 104.371 49.0097 cv
104.374 49.0099 104.376 49.01 104.379 49.0101 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.631 49.0096 mo
103.634 49.0095 103.637 49.0093 103.64 49.0092 cv
103.637 49.0093 103.634 49.0095 103.631 49.0096 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.368 49.0096 mo
104.365 49.0094 104.363 49.0093 104.36 49.0092 cv
104.363 49.0093 104.366 49.0094 104.368 49.0096 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.642 49.009 mo
103.645 49.0089 103.648 49.0088 103.651 49.0086 cv
103.648 49.0088 103.645 49.0089 103.642 49.009 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.357 49.009 mo
104.355 49.0089 104.352 49.0087 104.35 49.0086 cv
104.352 49.0087 104.354 49.0089 104.357 49.009 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.654 49.0084 mo
103.657 49.0083 103.659 49.0082 103.661 49.0081 cv
103.659 49.0082 103.657 49.0083 103.654 49.0084 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.345 49.0084 mo
104.343 49.0083 104.341 49.0082 104.339 49.0081 cv
104.341 49.0082 104.343 49.0083 104.345 49.0084 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.665 49.0079 mo
103.668 49.0078 103.67 49.0077 103.672 49.0076 cv
103.67 49.0077 103.668 49.0078 103.665 49.0079 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.334 49.0079 mo
104.332 49.0078 104.33 49.0077 104.328 49.0076 cv
104.33 49.0077 104.332 49.0078 104.334 49.0079 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.676 49.0074 mo
103.679 49.0073 103.681 49.0072 103.683 49.0071 cv
103.681 49.0072 103.679 49.0073 103.676 49.0074 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.323 49.0074 mo
104.321 49.0073 104.319 49.0072 104.317 49.0071 cv
104.319 49.0072 104.321 49.0073 104.323 49.0074 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.687 49.0069 mo
103.69 49.0068 103.692 49.0067 103.694 49.0066 cv
103.692 49.0067 103.689 49.0068 103.687 49.0069 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.313 49.0069 mo
104.31 49.0068 104.308 49.0067 104.306 49.0066 cv
104.308 49.0067 104.31 49.0068 104.313 49.0069 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.698 49.0064 mo
103.701 49.0063 103.703 49.0062 103.705 49.0061 cv
103.703 49.0062 103.701 49.0063 103.698 49.0064 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.301 49.0064 mo
104.299 49.0063 104.297 49.0062 104.295 49.0061 cv
104.297 49.0062 104.299 49.0063 104.301 49.0064 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.709 49.006 mo
103.711 49.0059 103.714 49.0058 103.716 49.0057 cv
103.714 49.0058 103.712 49.0059 103.709 49.006 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.291 49.006 mo
104.288 49.0059 104.286 49.0058 104.284 49.0057 cv
104.286 49.0058 104.288 49.0059 104.291 49.006 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.72 49.0055 mo
103.723 49.0054 103.725 49.0053 103.727 49.0052 cv
103.725 49.0053 103.723 49.0054 103.72 49.0055 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.28 49.0055 mo
104.277 49.0054 104.275 49.0053 104.273 49.0053 cv
104.275 49.0053 104.277 49.0054 104.28 49.0055 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.731 49.0051 mo
103.733 49.005 103.736 49.0049 103.738 49.0048 cv
103.736 49.0049 103.733 49.005 103.731 49.0051 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.269 49.0051 mo
104.267 49.005 104.264 49.0049 104.262 49.0049 cv
104.264 49.0049 104.267 49.005 104.269 49.0051 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.742 49.0047 mo
103.744 49.0046 103.747 49.0045 103.749 49.0044 cv
103.747 49.0045 103.745 49.0046 103.742 49.0047 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.257 49.0047 mo
104.255 49.0046 104.254 49.0045 104.251 49.0045 cv
104.253 49.0045 104.255 49.0046 104.257 49.0047 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.753 49.0043 mo
103.756 49.0042 103.758 49.0041 103.76 49.004 cv
103.758 49.0041 103.756 49.0042 103.753 49.0043 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.247 49.0043 mo
104.245 49.0042 104.242 49.0041 104.24 49.0041 cv
104.242 49.0041 104.244 49.0042 104.247 49.0043 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.764 49.0039 mo
103.767 49.0038 103.769 49.0037 103.772 49.0037 cv
103.77 49.0037 103.767 49.0038 103.764 49.0039 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.236 49.0039 mo
104.233 49.0038 104.231 49.0038 104.228 49.0037 cv
104.231 49.0038 104.233 49.0038 104.236 49.0039 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.775 49.0036 mo
103.778 49.0035 103.781 49.0034 103.783 49.0033 cv
103.781 49.0034 103.778 49.0035 103.775 49.0036 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.225 49.0036 mo
104.222 49.0035 104.22 49.0034 104.217 49.0033 cv
104.22 49.0034 104.222 49.0035 104.225 49.0036 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.786 49.0032 mo
103.794 49.003 103.801 49.0028 103.808 49.0026 cv
103.801 49.0028 103.794 49.003 103.786 49.0032 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.214 49.0032 mo
104.206 49.003 104.199 49.0028 104.192 49.0026 cv
104.199 49.0028 104.206 49.003 104.214 49.0032 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.81 49.0025 mo
103.813 49.0025 103.816 49.0024 103.819 49.0023 cv
103.816 49.0024 103.813 49.0025 103.81 49.0025 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.19 49.0025 mo
104.187 49.0025 104.184 49.0024 104.181 49.0023 cv
104.184 49.0024 104.187 49.0025 104.19 49.0025 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.823 49.0022 mo
103.825 49.0022 103.828 49.0021 103.83 49.002 cv
103.827 49.0021 103.825 49.0022 103.823 49.0022 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.177 49.0022 mo
104.175 49.0022 104.172 49.0021 104.17 49.002 cv
104.172 49.0021 104.175 49.0022 104.177 49.0022 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.835 49.0019 mo
103.837 49.0019 103.839 49.0018 103.841 49.0018 cv
103.839 49.0018 103.837 49.0019 103.835 49.0019 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.165 49.0019 mo
104.163 49.0019 104.161 49.0018 104.159 49.0018 cv
104.161 49.0018 104.163 49.0019 104.165 49.0019 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.846 49.0017 mo
103.848 49.0016 103.85 49.0016 103.852 49.0015 cv
103.85 49.0016 103.848 49.0016 103.846 49.0017 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.154 49.0017 mo
104.152 49.0016 104.15 49.0016 104.148 49.0015 cv
104.15 49.0016 104.152 49.0016 104.154 49.0017 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.857 49.0014 mo
103.859 49.0014 103.861 49.0014 103.863 49.0013 cv
103.861 49.0014 103.859 49.0014 103.857 49.0014 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.143 49.0014 mo
104.141 49.0014 104.139 49.0014 104.137 49.0013 cv
104.139 49.0014 104.141 49.0014 104.143 49.0014 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.868 49.0012 mo
103.87 49.0012 103.872 49.0012 103.874 49.0011 cv
103.872 49.0012 103.87 49.0012 103.868 49.0012 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.132 49.0012 mo
104.13 49.0012 104.128 49.0012 104.126 49.0011 cv
104.128 49.0012 104.13 49.0012 104.132 49.0012 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.879 49.001 mo
103.881 49.001 103.883 49.001 103.885 49.0009 cv
103.883 49.001 103.881 49.001 103.879 49.001 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.121 49.001 mo
104.119 49.001 104.117 49.001 104.115 49.0009 cv
104.117 49.001 104.119 49.001 104.121 49.001 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.89 49.0009 mo
103.892 49.0008 103.894 49.0008 103.896 49.0008 cv
103.894 49.0008 103.892 49.0008 103.89 49.0009 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.11 49.0009 mo
104.108 49.0008 104.106 49.0008 104.104 49.0008 cv
104.106 49.0008 104.108 49.0008 104.11 49.0009 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.901 49.0007 mo
103.903 49.0007 103.905 49.0006 103.907 49.0006 cv
103.905 49.0006 103.903 49.0007 103.901 49.0007 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.099 49.0007 mo
104.097 49.0007 104.095 49.0006 104.093 49.0006 cv
104.095 49.0006 104.097 49.0007 104.099 49.0007 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.912 49.0005 mo
103.914 49.0005 103.916 49.0005 103.918 49.0005 cv
103.916 49.0005 103.914 49.0005 103.912 49.0005 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.088 49.0005 mo
104.086 49.0005 104.084 49.0005 104.082 49.0005 cv
104.084 49.0005 104.086 49.0005 104.088 49.0005 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.923 49.0004 mo
103.925 49.0004 103.927 49.0004 103.929 49.0004 cv
103.927 49.0004 103.925 49.0004 103.923 49.0004 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.077 49.0004 mo
104.075 49.0004 104.073 49.0004 104.071 49.0004 cv
104.073 49.0004 104.075 49.0004 104.077 49.0004 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.934 49.0003 mo
103.936 49.0003 103.938 49.0003 103.94 49.0003 cv
103.938 49.0003 103.936 49.0003 103.934 49.0003 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.066 49.0003 mo
104.064 49.0003 104.062 49.0003 104.06 49.0003 cv
104.062 49.0003 104.064 49.0003 104.066 49.0003 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.945 49.0002 mo
103.947 49.0002 103.949 49.0002 103.951 49.0002 cv
103.949 49.0002 103.947 49.0002 103.945 49.0002 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.055 49.0002 mo
104.053 49.0002 104.051 49.0002 104.049 49.0002 cv
104.051 49.0002 104.053 49.0002 104.055 49.0002 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.956 49.0001 mo
103.958 49.0001 103.96 49.0001 103.962 49.0001 cv
103.96 49.0001 103.958 49.0001 103.956 49.0001 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.044 49.0001 mo
104.042 49.0001 104.04 49.0001 104.038 49.0001 cv
104.04 49.0001 104.042 49.0001 104.044 49.0001 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.967 49.0001 mo
103.969 49.0001 103.971 49.0001 103.974 49 cv
103.971 49.0001 103.969 49.0001 103.967 49.0001 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.033 49.0001 mo
104.031 49.0001 104.029 49.0001 104.026 49 cv
104.029 49.0001 104.031 49.0001 104.033 49.0001 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.978 49 mo
103.98 49 103.983 49 103.985 49 cv
103.983 49 103.98 49 103.978 49 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
104.022 49 mo
104.02 49 104.017 49 104.015 49 cv
104.017 49 104.02 49 104.022 49 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
103.989 49 mo
103.993 49 103.996 49 104 49 cv
103.996 49 103.993 49 103.989 49 cv
104.011 49 mo
104.007 49 104.004 49 104 49 cv
104.004 49 104.007 49 104.011 49 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 104 46.2813 ]ct
clp
/4 /Gradient get_res exec grestore
np
110.975 56.5 mo
110.949 56.1361 110.895 55.78 110.816 55.4334 cv
110.867 55.4205 110.918 55.4076 110.969 55.3945 cv
110.676 52.0039 107.96 49.2944 104.563 49.0224 cv
108.16 49.3103 111 52.3302 111 56 cv
111 56 li
111 56.1699 110.986 56.334 110.975 56.5 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[8.16 0 0 8.64 103.68 6.88 ]ct
snap_to_device
<<
/T 1
/W 17 
/H 18 
/M[17 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~1c.$G1c.$G1c.$G1c.$G1c[QV3B9)[3B9)[3B9)[3B95c4Ztqk4Ztqk4Ztqk4Ztqp6:+"*6:+"*6:+"*
6:+"*7n6'>7n6'>7n6'>7n6'>7nZKJ91qoN91qoN91qoN91r)X:f'tb:f'tb:f'tb:f'tg<E3%!<E3%!
<E3%!<E3%!=]nm1=]nm1=]nm1=]nm1=^GE@?=$rE?=$rE?=$rE?=%)M@U`eU@U`eU@U`eU@U`eZB4kji
B4kjiB4kjiB4kjiCi!p(Ci!p(Ci!p(Ci!p(CiF?4E,]c8E,]c8E,]c8E,]rBF`hhLF`hhLF`hhLF`hhQ
H?sm`H?sm`H?sm`H?sm`I=6NmIXZ`pIXZ`pIXZ`pIX$*_H$XgbI=H`rIt)rtIt%~>
<~BP;'mBP;'mBP;'mBP;'mBQA-6EcQ2@EcQ2@EcQ2@EcQMRH[C*dH[C*dH[C*dH[C*mKS5#3KS5#3KS5#3
KS5#3NfK-[NfK-[NfK-[NfK-[NgH*!Q^=&*Q^=&*Q^=&*Q^=A<TV.sNTV.sNTV.sNTV.sXWiE)!WiE)!
WiE)!WiE)!Za7!EZa7!EZa7!EZa7!EZb3r`]Y(ni]Y(ni]Y(ni]Y)5&`Pog8`Pog8`Pog8`PogBcd0q`
cd0q`cd0q`cd0q`f\"j/f\"j/f\"j/f\"j/f\tfJiSibSiSibSiSibSiSj+glg*m&lg*m&lg*m&lg*m/
o^qeJo^qeJo^qeJo^qeJrVc]nrVc]nrVc]nrVc]nrVuots8W-!s8W-!s8W-!s8N~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
97.0254 56.5 mo
97.0137 56.334 97 56.1699 97 56 cv
97 56 li
97 52.3905 99.7469 49.4098 103.26 49.0389 cv
99.9453 49.3889 97.3169 52.0628 97.0313 55.3945 cv
97.0822 55.4076 97.1331 55.4205 97.1844 55.4334 cv
97.1049 55.78 97.0513 56.1361 97.0254 56.5 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[7.68 0 0 8.64 96.48 6.88 ]ct
snap_to_device
<<
/T 1
/W 16 
/H 18 
/M[16 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~1c.$G1c.$G1c.$G1c.$G3B9)[3B9)[3B9)[3B9)[4Ztqk4Ztqk4Ztqk4Ztqk6:+"*6:+"*6:+"*6:+"*
7n6'>7n6'>7n6'>7n6'>91qoN91qoN91qoN91qoN:f'tb:f'tb:f'tb:f'tb<E3%!<E3%!<E3%!<E3%!
=]nm1=]nm1=]nm1=]nm1?=$rE?=$rE?=$rE?=$rE@U`eU@U`eU@U`eU@U`eUB4kjiB4kjiB4kjiB4kji
Ci!p(Ci!p(Ci!p(Ci!p(E,]c8E,]c8E,]c8E,]c8F`hhLF`hhLF`hhLF`hhLH?sm`H?sm`H?sm`H?sm`
IXZ`pIXZ`pIXZ`pI=6NlIt)rtIt)rsI=$9dH$OXZ~>
<~BP;'mBP;'mBP;'mBP;'mEcQ2@EcQ2@EcQ2@EcQ2@H[C*dH[C*dH[C*dH[C*dKS5#3KS5#3KS5#3KS5#3
NfK-[NfK-[NfK-[NfK-[Q^=&*Q^=&*Q^=&*Q^=&*TV.sNTV.sNTV.sNTV.sNWiE)!WiE)!WiE)!WiE)!
Za7!EZa7!EZa7!EZa7!E]Y(ni]Y(ni]Y(ni]Y(ni`Pog8`Pog8`Pog8`Pog8cd0q`cd0q`cd0q`cd0q`
f\"j/f\"j/f\"j/f\"j/iSibSiSibSiSibSiSibSlg*m&lg*m&lg*m&lg*m&o^qeJo^qeJo^qeJo^qeJ
rVc]nrVc]nrVc]nrVc]ns8W-!s8W-!s8W-!s8W-!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
103.26 49.0388 mo
103.263 49.0385 103.266 49.0382 103.27 49.0378 cv
103.266 49.0382 103.263 49.0385 103.26 49.0388 cv
103.271 49.0377 mo
103.274 49.0374 103.277 49.0371 103.28 49.0368 cv
103.277 49.0371 103.274 49.0374 103.271 49.0377 cv
103.282 49.0366 mo
103.284 49.0363 103.287 49.036 103.29 49.0358 cv
103.287 49.036 103.284 49.0363 103.282 49.0366 cv
103.292 49.0355 mo
103.295 49.0352 103.298 49.0349 103.301 49.0347 cv
103.298 49.0349 103.295 49.0352 103.292 49.0355 cv
103.303 49.0345 mo
103.306 49.0342 103.308 49.0339 103.311 49.0336 cv
103.308 49.0339 103.305 49.0342 103.303 49.0345 cv
103.313 49.0334 mo
103.316 49.0331 103.319 49.0328 103.322 49.0326 cv
103.319 49.0329 103.316 49.0331 103.313 49.0334 cv
103.324 49.0324 mo
103.326 49.0322 103.33 49.0319 103.332 49.0316 cv
103.329 49.0319 103.327 49.0321 103.324 49.0324 cv
103.335 49.0314 mo
103.337 49.0311 103.34 49.0308 103.343 49.0306 cv
103.34 49.0308 103.337 49.0311 103.335 49.0314 cv
103.345 49.0304 mo
103.348 49.0301 103.351 49.0299 103.353 49.0296 cv
103.351 49.0299 103.348 49.0301 103.345 49.0304 cv
103.357 49.0293 mo
103.359 49.0291 103.361 49.0289 103.364 49.0286 cv
103.362 49.0289 103.359 49.0291 103.357 49.0293 cv
103.367 49.0284 mo
103.37 49.0281 103.372 49.0279 103.375 49.0277 cv
103.372 49.0279 103.37 49.0281 103.367 49.0284 cv
103.378 49.0274 mo
103.39 49.0264 103.401 49.0254 103.413 49.0244 cv
103.401 49.0254 103.39 49.0263 103.378 49.0274 cv
103.417 49.024 mo
103.419 49.0239 103.421 49.0238 103.422 49.0236 cv
103.421 49.0238 103.419 49.0239 103.417 49.024 cv
103.428 49.0231 mo
103.43 49.023 103.431 49.0229 103.433 49.0228 cv
103.431 49.0229 103.43 49.023 103.428 49.0231 cv
104.562 49.0223 mo
104.559 49.0221 104.556 49.0219 104.553 49.0216 cv
104.556 49.0219 104.559 49.0221 104.562 49.0223 cv
103.439 49.0223 mo
103.441 49.0221 103.442 49.022 103.444 49.0219 cv
103.442 49.022 103.441 49.0221 103.439 49.0223 cv
104.551 49.0215 mo
104.549 49.0213 104.546 49.0211 104.543 49.0209 cv
104.546 49.0211 104.549 49.0213 104.551 49.0215 cv
103.45 49.0214 mo
103.451 49.0213 103.453 49.0212 103.454 49.0211 cv
103.453 49.0212 103.451 49.0213 103.45 49.0214 cv
104.54 49.0206 mo
104.538 49.0205 104.535 49.0203 104.533 49.0201 cv
104.535 49.0203 104.538 49.0205 104.54 49.0206 cv
103.461 49.0205 mo
103.462 49.0204 103.463 49.0204 103.465 49.0203 cv
103.464 49.0204 103.462 49.0205 103.461 49.0205 cv
104.529 49.0198 mo
104.527 49.0196 104.525 49.0195 104.522 49.0193 cv
104.525 49.0195 104.527 49.0196 104.529 49.0198 cv
103.472 49.0197 mo
103.473 49.0196 103.475 49.0195 103.476 49.0194 cv
103.475 49.0195 103.473 49.0196 103.472 49.0197 cv
104.519 49.019 mo
104.516 49.0188 104.514 49.0187 104.512 49.0185 cv
104.514 49.0187 104.516 49.0188 104.519 49.019 cv
103.483 49.0189 mo
103.484 49.0188 103.485 49.0187 103.487 49.0186 cv
103.485 49.0187 103.484 49.0188 103.483 49.0189 cv
104.508 49.0182 mo
104.506 49.0181 104.503 49.0179 104.501 49.0178 cv
104.504 49.0179 104.506 49.0181 104.508 49.0182 cv
103.493 49.0182 mo
103.495 49.0181 103.496 49.0179 103.498 49.0178 cv
103.496 49.0179 103.495 49.018 103.493 49.0182 cv
104.497 49.0174 mo
104.495 49.0173 104.493 49.0172 104.491 49.017 cv
104.493 49.0172 104.495 49.0173 104.497 49.0174 cv
103.505 49.0174 mo
103.506 49.0173 103.507 49.0172 103.508 49.0171 cv
103.507 49.0172 103.506 49.0173 103.505 49.0174 cv
104.486 49.0167 mo
104.484 49.0165 104.482 49.0164 104.48 49.0163 cv
104.482 49.0164 104.484 49.0166 104.486 49.0167 cv
103.515 49.0166 mo
103.517 49.0165 103.518 49.0164 103.519 49.0163 cv
103.518 49.0164 103.517 49.0165 103.515 49.0166 cv
104.475 49.0159 mo
104.473 49.0158 104.471 49.0157 104.469 49.0155 cv
104.471 49.0157 104.473 49.0158 104.475 49.0159 cv
103.526 49.0159 mo
103.528 49.0158 103.529 49.0157 103.53 49.0156 cv
103.529 49.0157 103.528 49.0158 103.526 49.0159 cv
104.464 49.0152 mo
104.462 49.0151 104.46 49.015 104.458 49.0149 cv
104.46 49.015 104.462 49.0151 104.464 49.0152 cv
103.538 49.0151 mo
103.539 49.015 103.54 49.015 103.541 49.0149 cv
103.54 49.015 103.539 49.015 103.538 49.0151 cv
104.452 49.0145 mo
104.451 49.0144 104.449 49.0143 104.448 49.0142 cv
104.449 49.0143 104.451 49.0144 104.452 49.0145 cv
103.549 49.0144 mo
103.55 49.0143 103.551 49.0143 103.552 49.0142 cv
103.551 49.0142 103.55 49.0143 103.549 49.0144 cv
104.442 49.0138 mo
104.44 49.0137 104.439 49.0136 104.437 49.0135 cv
104.438 49.0136 104.44 49.0137 104.442 49.0138 cv
103.56 49.0136 mo
103.561 49.0136 103.562 49.0136 103.563 49.0135 cv
103.562 49.0136 103.561 49.0136 103.56 49.0136 cv
104.431 49.0131 mo
104.429 49.013 104.427 49.0129 104.426 49.0128 cv
104.428 49.0129 104.429 49.013 104.431 49.0131 cv
103.572 49.013 mo
103.572 49.0129 103.573 49.0129 103.574 49.0128 cv
103.573 49.0129 103.572 49.0129 103.572 49.013 cv
104.418 49.0124 mo
104.417 49.0123 104.416 49.0122 104.415 49.0122 cv
104.416 49.0122 104.417 49.0123 104.418 49.0124 cv
104.393 49.0109 mo
104.392 49.0109 104.392 49.0108 104.391 49.0108 cv
104.392 49.0108 104.392 49.0109 104.393 49.0109 cv
104.382 49.0103 mo
104.381 49.0103 104.38 49.0102 104.379 49.0101 cv
104.38 49.0102 104.381 49.0103 104.382 49.0103 cv
103.618 49.0103 mo
103.618 49.0103 103.619 49.0103 103.619 49.0102 cv
103.619 49.0103 103.618 49.0103 103.618 49.0103 cv
104.371 49.0097 mo
104.37 49.0097 104.369 49.0096 104.368 49.0096 cv
104.369 49.0096 104.37 49.0097 104.371 49.0097 cv
103.629 49.0097 mo
103.63 49.0097 103.63 49.0097 103.631 49.0096 cv
103.63 49.0097 103.629 49.0097 103.629 49.0097 cv
104.36 49.0092 mo
104.359 49.0091 104.358 49.0091 104.357 49.009 cv
104.358 49.009 104.359 49.0091 104.36 49.0092 cv
103.64 49.0092 mo
103.641 49.0091 103.641 49.0091 103.642 49.009 cv
103.642 49.0091 103.64 49.0091 103.64 49.0092 cv
104.35 49.0086 mo
104.348 49.0086 104.347 49.0085 104.345 49.0084 cv
104.347 49.0085 104.348 49.0085 104.35 49.0086 cv
103.651 49.0086 mo
103.652 49.0086 103.653 49.0085 103.654 49.0084 cv
103.653 49.0085 103.652 49.0086 103.651 49.0086 cv
104.339 49.0081 mo
104.337 49.008 104.336 49.0079 104.334 49.0079 cv
104.336 49.008 104.337 49.008 104.339 49.0081 cv
103.661 49.0081 mo
103.663 49.008 103.664 49.008 103.665 49.0079 cv
103.664 49.008 103.663 49.008 103.661 49.0081 cv
104.328 49.0076 mo
104.326 49.0075 104.325 49.0074 104.323 49.0074 cv
104.325 49.0074 104.326 49.0075 104.328 49.0076 cv
103.672 49.0076 mo
103.674 49.0075 103.675 49.0075 103.676 49.0074 cv
103.675 49.0075 103.674 49.0075 103.672 49.0076 cv
104.317 49.0071 mo
104.315 49.007 104.314 49.007 104.313 49.0069 cv
104.314 49.007 104.316 49.007 104.317 49.0071 cv
103.683 49.0071 mo
103.685 49.007 103.686 49.007 103.687 49.0069 cv
103.686 49.007 103.685 49.007 103.683 49.0071 cv
104.306 49.0066 mo
104.305 49.0065 104.303 49.0065 104.301 49.0064 cv
104.303 49.0065 104.305 49.0065 104.306 49.0066 cv
103.694 49.0066 mo
103.696 49.0065 103.697 49.0065 103.698 49.0064 cv
103.697 49.0065 103.696 49.0065 103.694 49.0066 cv
104.295 49.0061 mo
104.294 49.0061 104.292 49.006 104.291 49.006 cv
104.292 49.006 104.293 49.0061 104.295 49.0061 cv
103.705 49.0061 mo
103.707 49.0061 103.708 49.006 103.709 49.006 cv
103.708 49.006 103.707 49.0061 103.705 49.0061 cv
104.284 49.0057 mo
104.283 49.0056 104.281 49.0056 104.28 49.0055 cv
104.281 49.0056 104.282 49.0056 104.284 49.0057 cv
103.716 49.0057 mo
103.717 49.0056 103.719 49.0056 103.72 49.0055 cv
103.719 49.0056 103.718 49.0056 103.716 49.0057 cv
104.273 49.0053 mo
104.271 49.0052 104.27 49.0051 104.269 49.0051 cv
104.27 49.0051 104.272 49.0052 104.273 49.0053 cv
103.727 49.0052 mo
103.729 49.0052 103.73 49.0051 103.731 49.0051 cv
103.73 49.0051 103.729 49.0052 103.727 49.0052 cv
104.262 49.0049 mo
104.261 49.0048 104.259 49.0047 104.257 49.0047 cv
104.259 49.0047 104.261 49.0048 104.262 49.0049 cv
103.738 49.0048 mo
103.74 49.0048 103.741 49.0047 103.742 49.0047 cv
103.741 49.0047 103.739 49.0048 103.738 49.0048 cv
104.251 49.0045 mo
104.25 49.0044 104.248 49.0043 104.247 49.0043 cv
104.248 49.0043 104.25 49.0044 104.251 49.0045 cv
103.749 49.0044 mo
103.75 49.0044 103.752 49.0043 103.753 49.0043 cv
103.752 49.0043 103.75 49.0044 103.749 49.0044 cv
104.24 49.0041 mo
104.239 49.004 104.237 49.004 104.236 49.0039 cv
104.237 49.004 104.239 49.004 104.24 49.0041 cv
103.76 49.004 mo
103.762 49.004 103.763 49.004 103.764 49.0039 cv
103.763 49.004 103.761 49.004 103.76 49.004 cv
104.228 49.0037 mo
104.227 49.0036 104.226 49.0036 104.225 49.0036 cv
104.226 49.0036 104.227 49.0036 104.228 49.0037 cv
103.772 49.0037 mo
103.773 49.0036 103.774 49.0036 103.775 49.0036 cv
103.774 49.0036 103.773 49.0036 103.772 49.0037 cv
104.217 49.0033 mo
104.216 49.0033 104.215 49.0033 104.214 49.0032 cv
104.215 49.0032 104.216 49.0033 104.217 49.0033 cv
103.783 49.0033 mo
103.784 49.0033 103.785 49.0032 103.786 49.0032 cv
103.785 49.0033 103.784 49.0033 103.783 49.0033 cv
104.192 49.0026 mo
104.191 49.0026 104.19 49.0026 104.19 49.0025 cv
104.19 49.0026 104.191 49.0026 104.192 49.0026 cv
103.808 49.0026 mo
103.809 49.0026 103.809 49.0026 103.81 49.0025 cv
103.81 49.0026 103.809 49.0026 103.808 49.0026 cv
104.181 49.0023 mo
104.179 49.0023 104.178 49.0022 104.177 49.0022 cv
104.179 49.0022 104.179 49.0023 104.181 49.0023 cv
103.819 49.0023 mo
103.82 49.0023 103.822 49.0022 103.823 49.0022 cv
103.822 49.0022 103.82 49.0023 103.819 49.0023 cv
104.17 49.002 mo
104.168 49.002 104.167 49.002 104.165 49.0019 cv
104.167 49.002 104.168 49.002 104.17 49.002 cv
103.83 49.002 mo
103.832 49.002 103.833 49.002 103.835 49.0019 cv
103.833 49.002 103.832 49.002 103.83 49.002 cv
104.159 49.0018 mo
104.157 49.0017 104.156 49.0017 104.154 49.0017 cv
104.156 49.0017 104.157 49.0017 104.159 49.0018 cv
103.841 49.0018 mo
103.843 49.0017 103.844 49.0017 103.846 49.0017 cv
103.844 49.0017 103.843 49.0017 103.841 49.0018 cv
104.148 49.0015 mo
104.146 49.0015 104.145 49.0015 104.143 49.0014 cv
104.145 49.0015 104.146 49.0015 104.148 49.0015 cv
103.852 49.0015 mo
103.854 49.0015 103.855 49.0015 103.857 49.0014 cv
103.855 49.0015 103.854 49.0015 103.852 49.0015 cv
104.137 49.0013 mo
104.135 49.0013 104.134 49.0013 104.132 49.0012 cv
104.134 49.0013 104.135 49.0013 104.137 49.0013 cv
103.863 49.0013 mo
103.865 49.0013 103.866 49.0013 103.868 49.0012 cv
103.866 49.0013 103.865 49.0013 103.863 49.0013 cv
104.126 49.0011 mo
104.124 49.0011 104.123 49.0011 104.121 49.001 cv
104.123 49.0011 104.124 49.0011 104.126 49.0011 cv
103.874 49.0011 mo
103.875 49.0011 103.877 49.0011 103.879 49.001 cv
103.877 49.0011 103.876 49.0011 103.874 49.0011 cv
104.115 49.0009 mo
104.114 49.0009 104.112 49.0009 104.11 49.0009 cv
104.112 49.0009 104.113 49.0009 104.115 49.0009 cv
103.885 49.0009 mo
103.887 49.0009 103.888 49.0009 103.89 49.0009 cv
103.888 49.0009 103.886 49.0009 103.885 49.0009 cv
104.104 49.0008 mo
104.102 49.0007 104.101 49.0007 104.099 49.0007 cv
104.101 49.0007 104.102 49.0007 104.104 49.0008 cv
103.896 49.0008 mo
103.898 49.0007 103.899 49.0007 103.901 49.0007 cv
103.899 49.0007 103.898 49.0007 103.896 49.0008 cv
104.093 49.0006 mo
104.091 49.0006 104.09 49.0006 104.088 49.0005 cv
104.09 49.0006 104.091 49.0006 104.093 49.0006 cv
103.907 49.0006 mo
103.909 49.0006 103.91 49.0006 103.912 49.0005 cv
103.91 49.0006 103.909 49.0006 103.907 49.0006 cv
104.082 49.0005 mo
104.08 49.0005 104.079 49.0004 104.077 49.0004 cv
104.079 49.0004 104.081 49.0005 104.082 49.0005 cv
103.918 49.0005 mo
103.919 49.0005 103.921 49.0004 103.923 49.0004 cv
103.921 49.0004 103.92 49.0005 103.918 49.0005 cv
104.071 49.0004 mo
104.069 49.0003 104.068 49.0003 104.066 49.0003 cv
104.068 49.0003 104.069 49.0003 104.071 49.0004 cv
103.929 49.0004 mo
103.931 49.0003 103.932 49.0003 103.934 49.0003 cv
103.932 49.0003 103.931 49.0003 103.929 49.0004 cv
104.06 49.0003 mo
104.058 49.0002 104.057 49.0002 104.055 49.0002 cv
104.057 49.0002 104.058 49.0002 104.06 49.0003 cv
103.94 49.0003 mo
103.942 49.0002 103.943 49.0002 103.945 49.0002 cv
103.943 49.0002 103.942 49.0002 103.94 49.0003 cv
104.049 49.0002 mo
104.047 49.0002 104.046 49.0001 104.044 49.0001 cv
104.046 49.0001 104.047 49.0002 104.049 49.0002 cv
103.951 49.0002 mo
103.953 49.0002 103.954 49.0001 103.956 49.0001 cv
103.954 49.0001 103.953 49.0002 103.951 49.0002 cv
104.038 49.0001 mo
104.036 49.0001 104.035 49.0001 104.033 49.0001 cv
104.035 49.0001 104.037 49.0001 104.038 49.0001 cv
103.962 49.0001 mo
103.963 49.0001 103.965 49.0001 103.967 49.0001 cv
103.965 49.0001 103.964 49.0001 103.962 49.0001 cv
104.026 49 mo
104.025 49 104.023 49 104.022 49 cv
104.023 49 104.025 49 104.026 49 cv
103.974 49 mo
103.975 49 103.977 49 103.978 49 cv
103.977 49 103.975 49 103.974 49 cv
104.015 49 mo
104.013 49 104.012 49 104.011 49 cv
104.012 49 104.014 49 104.015 49 cv
103.985 49 mo
103.986 49 103.988 49 103.989 49 cv
103.988 49 103.987 49 103.985 49 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[2.4 0 0 1.44 102.72 14.08 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 3 
/M[5 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!~>
<~1c.$G1c[QV3B95c4Ztq~>
<~BP;'mBQA-6EcQMRH[C)~>
<~!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
110.816 55.4334 mo
110.103 52.3257 107.321 50 104 50 cv
100.679 50 97.897 52.3257 97.1844 55.4334 cv
97.1331 55.4205 97.0822 55.4076 97.0313 55.3945 cv
97.3169 52.0628 99.9453 49.3889 103.26 49.0389 cv
103.26 49.0388 li
103.263 49.0385 103.266 49.0382 103.27 49.0378 cv
103.27 49.0378 103.27 49.0378 103.271 49.0377 cv
103.274 49.0374 103.277 49.0371 103.28 49.0368 cv
103.28 49.0367 103.281 49.0367 103.282 49.0366 cv
103.284 49.0363 103.287 49.036 103.29 49.0358 cv
103.291 49.0357 103.292 49.0356 103.292 49.0355 cv
103.295 49.0352 103.298 49.0349 103.301 49.0347 cv
103.301 49.0346 103.302 49.0345 103.303 49.0345 cv
103.305 49.0342 103.308 49.0339 103.311 49.0336 cv
103.312 49.0336 103.313 49.0335 103.313 49.0334 cv
103.316 49.0331 103.319 49.0329 103.322 49.0326 cv
103.323 49.0325 103.323 49.0325 103.324 49.0324 cv
103.327 49.0321 103.329 49.0319 103.332 49.0316 cv
103.333 49.0315 103.334 49.0315 103.335 49.0314 cv
103.337 49.0311 103.34 49.0308 103.343 49.0306 cv
103.344 49.0305 103.345 49.0304 103.345 49.0304 cv
103.348 49.0301 103.351 49.0299 103.353 49.0296 cv
103.354 49.0295 103.356 49.0294 103.357 49.0293 cv
103.359 49.0291 103.362 49.0289 103.364 49.0286 cv
103.365 49.0285 103.366 49.0285 103.367 49.0284 cv
103.37 49.0281 103.372 49.0279 103.375 49.0277 cv
103.376 49.0276 103.377 49.0275 103.378 49.0274 cv
103.39 49.0263 103.401 49.0254 103.413 49.0244 cv
103.414 49.0243 103.416 49.0242 103.417 49.024 cv
103.419 49.0239 103.421 49.0238 103.422 49.0236 cv
103.424 49.0235 103.426 49.0233 103.428 49.0231 cv
103.43 49.023 103.431 49.0229 103.433 49.0228 cv
103.435 49.0226 103.437 49.0224 103.439 49.0223 cv
103.441 49.0221 103.442 49.022 103.444 49.0219 cv
103.446 49.0217 103.448 49.0216 103.45 49.0214 cv
103.451 49.0213 103.453 49.0212 103.454 49.0211 cv
103.456 49.0209 103.459 49.0207 103.461 49.0205 cv
103.462 49.0205 103.464 49.0204 103.465 49.0203 cv
103.467 49.0201 103.469 49.0199 103.472 49.0197 cv
103.473 49.0196 103.475 49.0195 103.476 49.0194 cv
103.478 49.0193 103.48 49.0191 103.483 49.0189 cv
103.484 49.0188 103.485 49.0187 103.487 49.0186 cv
103.489 49.0185 103.491 49.0183 103.493 49.0182 cv
103.495 49.018 103.496 49.0179 103.498 49.0178 cv
103.5 49.0177 103.502 49.0175 103.505 49.0174 cv
103.506 49.0173 103.507 49.0172 103.508 49.0171 cv
103.511 49.0169 103.513 49.0168 103.515 49.0166 cv
103.517 49.0165 103.518 49.0164 103.519 49.0163 cv
103.522 49.0162 103.524 49.016 103.526 49.0159 cv
103.528 49.0158 103.529 49.0157 103.53 49.0156 cv
103.533 49.0154 103.535 49.0153 103.538 49.0151 cv
103.539 49.015 103.54 49.015 103.541 49.0149 cv
103.544 49.0147 103.546 49.0145 103.549 49.0144 cv
103.55 49.0143 103.551 49.0142 103.552 49.0142 cv
103.555 49.014 103.558 49.0138 103.56 49.0136 cv
103.561 49.0136 103.562 49.0136 103.563 49.0135 cv
103.566 49.0133 103.569 49.0131 103.572 49.013 cv
103.572 49.0129 103.573 49.0129 103.574 49.0128 cv
103.589 49.0119 103.603 49.0111 103.618 49.0103 cv
103.618 49.0103 103.619 49.0103 103.619 49.0102 cv
103.622 49.0101 103.626 49.0099 103.629 49.0097 cv
103.629 49.0097 103.63 49.0097 103.631 49.0096 cv
103.634 49.0095 103.637 49.0093 103.64 49.0092 cv
103.64 49.0091 103.642 49.0091 103.642 49.009 cv
103.645 49.0089 103.648 49.0088 103.651 49.0086 cv
103.652 49.0086 103.653 49.0085 103.654 49.0084 cv
103.657 49.0083 103.659 49.0082 103.661 49.0081 cv
103.663 49.008 103.664 49.008 103.665 49.0079 cv
103.668 49.0078 103.67 49.0077 103.672 49.0076 cv
103.674 49.0075 103.675 49.0075 103.676 49.0074 cv
103.679 49.0073 103.681 49.0072 103.683 49.0071 cv
103.685 49.007 103.686 49.007 103.687 49.0069 cv
103.689 49.0068 103.692 49.0067 103.694 49.0066 cv
103.696 49.0065 103.697 49.0065 103.698 49.0064 cv
103.701 49.0063 103.703 49.0062 103.705 49.0061 cv
103.707 49.0061 103.708 49.006 103.709 49.006 cv
103.712 49.0059 103.714 49.0058 103.716 49.0057 cv
103.718 49.0056 103.719 49.0056 103.72 49.0055 cv
103.723 49.0054 103.725 49.0053 103.727 49.0052 cv
103.729 49.0052 103.73 49.0051 103.731 49.0051 cv
103.733 49.005 103.736 49.0049 103.738 49.0048 cv
103.739 49.0048 103.741 49.0047 103.742 49.0047 cv
103.745 49.0046 103.747 49.0045 103.749 49.0044 cv
103.75 49.0044 103.752 49.0043 103.753 49.0043 cv
103.756 49.0042 103.758 49.0041 103.76 49.004 cv
103.761 49.004 103.763 49.004 103.764 49.0039 cv
103.767 49.0038 103.77 49.0037 103.772 49.0037 cv
103.773 49.0036 103.774 49.0036 103.775 49.0036 cv
103.778 49.0035 103.781 49.0034 103.783 49.0033 cv
103.784 49.0033 103.785 49.0033 103.786 49.0032 cv
103.794 49.003 103.801 49.0028 103.808 49.0026 cv
103.809 49.0026 103.81 49.0026 103.81 49.0025 cv
103.813 49.0025 103.816 49.0024 103.819 49.0023 cv
103.82 49.0023 103.822 49.0022 103.823 49.0022 cv
103.825 49.0022 103.827 49.0021 103.83 49.002 cv
103.832 49.002 103.833 49.002 103.835 49.0019 cv
103.837 49.0019 103.839 49.0018 103.841 49.0018 cv
103.843 49.0017 103.844 49.0017 103.846 49.0017 cv
103.848 49.0016 103.85 49.0016 103.852 49.0015 cv
103.854 49.0015 103.855 49.0015 103.857 49.0014 cv
103.859 49.0014 103.861 49.0014 103.863 49.0013 cv
103.865 49.0013 103.866 49.0013 103.868 49.0012 cv
103.87 49.0012 103.872 49.0012 103.874 49.0011 cv
103.876 49.0011 103.877 49.0011 103.879 49.001 cv
103.881 49.001 103.883 49.001 103.885 49.0009 cv
103.886 49.0009 103.888 49.0009 103.89 49.0009 cv
103.892 49.0008 103.894 49.0008 103.896 49.0008 cv
103.898 49.0007 103.899 49.0007 103.901 49.0007 cv
103.903 49.0007 103.905 49.0006 103.907 49.0006 cv
103.909 49.0006 103.91 49.0006 103.912 49.0005 cv
103.914 49.0005 103.916 49.0005 103.918 49.0005 cv
103.92 49.0005 103.921 49.0004 103.923 49.0004 cv
103.925 49.0004 103.927 49.0004 103.929 49.0004 cv
103.931 49.0003 103.932 49.0003 103.934 49.0003 cv
103.936 49.0003 103.938 49.0003 103.94 49.0003 cv
103.942 49.0002 103.943 49.0002 103.945 49.0002 cv
103.947 49.0002 103.949 49.0002 103.951 49.0002 cv
103.953 49.0002 103.954 49.0001 103.956 49.0001 cv
103.958 49.0001 103.96 49.0001 103.962 49.0001 cv
103.964 49.0001 103.965 49.0001 103.967 49.0001 cv
103.969 49.0001 103.971 49.0001 103.974 49 cv
103.975 49 103.977 49 103.978 49 cv
103.98 49 103.983 49 103.985 49 cv
103.987 49 103.988 49 103.989 49 cv
103.993 49 103.996 49 104 49 cv
104.004 49 104.007 49 104.011 49 cv
104.012 49 104.013 49 104.015 49 cv
104.017 49 104.02 49 104.022 49 cv
104.023 49 104.025 49 104.026 49 cv
104.029 49.0001 104.031 49.0001 104.033 49.0001 cv
104.035 49.0001 104.036 49.0001 104.038 49.0001 cv
104.04 49.0001 104.042 49.0001 104.044 49.0001 cv
104.046 49.0001 104.047 49.0002 104.049 49.0002 cv
104.051 49.0002 104.053 49.0002 104.055 49.0002 cv
104.057 49.0002 104.058 49.0002 104.06 49.0003 cv
104.062 49.0003 104.064 49.0003 104.066 49.0003 cv
104.068 49.0003 104.069 49.0003 104.071 49.0004 cv
104.073 49.0004 104.075 49.0004 104.077 49.0004 cv
104.079 49.0004 104.08 49.0005 104.082 49.0005 cv
104.084 49.0005 104.086 49.0005 104.088 49.0005 cv
104.09 49.0006 104.091 49.0006 104.093 49.0006 cv
104.095 49.0006 104.097 49.0007 104.099 49.0007 cv
104.101 49.0007 104.102 49.0007 104.104 49.0008 cv
104.106 49.0008 104.108 49.0008 104.11 49.0009 cv
104.112 49.0009 104.114 49.0009 104.115 49.0009 cv
104.117 49.001 104.119 49.001 104.121 49.001 cv
104.123 49.0011 104.124 49.0011 104.126 49.0011 cv
104.128 49.0012 104.13 49.0012 104.132 49.0012 cv
104.134 49.0013 104.135 49.0013 104.137 49.0013 cv
104.139 49.0014 104.141 49.0014 104.143 49.0014 cv
104.145 49.0015 104.146 49.0015 104.148 49.0015 cv
104.15 49.0016 104.152 49.0016 104.154 49.0017 cv
104.156 49.0017 104.157 49.0017 104.159 49.0018 cv
104.161 49.0018 104.163 49.0019 104.165 49.0019 cv
104.167 49.002 104.168 49.002 104.17 49.002 cv
104.172 49.0021 104.175 49.0022 104.177 49.0022 cv
104.178 49.0022 104.179 49.0023 104.181 49.0023 cv
104.184 49.0024 104.187 49.0025 104.19 49.0025 cv
104.19 49.0026 104.191 49.0026 104.192 49.0026 cv
104.199 49.0028 104.206 49.003 104.214 49.0032 cv
104.215 49.0033 104.216 49.0033 104.217 49.0033 cv
104.22 49.0034 104.222 49.0035 104.225 49.0036 cv
104.226 49.0036 104.227 49.0036 104.228 49.0037 cv
104.231 49.0038 104.233 49.0038 104.236 49.0039 cv
104.237 49.004 104.239 49.004 104.24 49.0041 cv
104.242 49.0041 104.245 49.0042 104.247 49.0043 cv
104.248 49.0043 104.25 49.0044 104.251 49.0045 cv
104.254 49.0045 104.255 49.0046 104.257 49.0047 cv
104.259 49.0047 104.261 49.0048 104.262 49.0049 cv
104.264 49.0049 104.267 49.005 104.269 49.0051 cv
104.27 49.0051 104.271 49.0052 104.273 49.0053 cv
104.275 49.0053 104.277 49.0054 104.28 49.0055 cv
104.281 49.0056 104.283 49.0056 104.284 49.0057 cv
104.286 49.0058 104.288 49.0059 104.291 49.006 cv
104.292 49.006 104.294 49.0061 104.295 49.0061 cv
104.297 49.0062 104.299 49.0063 104.301 49.0064 cv
104.303 49.0065 104.305 49.0065 104.306 49.0066 cv
104.308 49.0067 104.31 49.0068 104.313 49.0069 cv
104.314 49.007 104.315 49.007 104.317 49.0071 cv
104.319 49.0072 104.321 49.0073 104.323 49.0074 cv
104.325 49.0074 104.326 49.0075 104.328 49.0076 cv
104.33 49.0077 104.332 49.0078 104.334 49.0079 cv
104.336 49.0079 104.337 49.008 104.339 49.0081 cv
104.341 49.0082 104.343 49.0083 104.345 49.0084 cv
104.347 49.0085 104.348 49.0086 104.35 49.0086 cv
104.352 49.0087 104.355 49.0089 104.357 49.009 cv
104.358 49.0091 104.359 49.0091 104.36 49.0092 cv
104.363 49.0093 104.365 49.0094 104.368 49.0096 cv
104.369 49.0096 104.37 49.0097 104.371 49.0097 cv
104.374 49.0099 104.376 49.01 104.379 49.0101 cv
104.38 49.0102 104.381 49.0103 104.382 49.0103 cv
104.385 49.0105 104.388 49.0106 104.391 49.0108 cv
104.392 49.0108 104.392 49.0109 104.393 49.0109 cv
104.401 49.0113 104.408 49.0117 104.415 49.0122 cv
104.416 49.0122 104.417 49.0123 104.418 49.0124 cv
104.421 49.0125 104.423 49.0127 104.426 49.0128 cv
104.427 49.0129 104.429 49.013 104.431 49.0131 cv
104.433 49.0132 104.435 49.0133 104.437 49.0135 cv
104.439 49.0136 104.44 49.0137 104.442 49.0138 cv
104.443 49.0139 104.446 49.014 104.448 49.0142 cv
104.449 49.0143 104.451 49.0144 104.452 49.0145 cv
104.455 49.0146 104.456 49.0147 104.458 49.0149 cv
104.46 49.015 104.462 49.0151 104.464 49.0152 cv
104.466 49.0153 104.467 49.0154 104.469 49.0155 cv
104.471 49.0157 104.473 49.0158 104.475 49.0159 cv
104.477 49.0161 104.478 49.0162 104.48 49.0163 cv
104.482 49.0164 104.484 49.0165 104.486 49.0167 cv
104.487 49.0168 104.489 49.0169 104.491 49.017 cv
104.493 49.0172 104.495 49.0173 104.497 49.0174 cv
104.498 49.0175 104.5 49.0177 104.501 49.0178 cv
104.503 49.0179 104.506 49.0181 104.508 49.0182 cv
104.509 49.0183 104.511 49.0184 104.512 49.0185 cv
104.514 49.0187 104.516 49.0188 104.519 49.019 cv
104.52 49.0191 104.521 49.0192 104.522 49.0193 cv
104.525 49.0195 104.527 49.0196 104.529 49.0198 cv
104.531 49.0199 104.532 49.02 104.533 49.0201 cv
104.535 49.0203 104.538 49.0205 104.54 49.0206 cv
104.541 49.0207 104.542 49.0208 104.543 49.0209 cv
104.546 49.0211 104.549 49.0213 104.551 49.0215 cv
104.552 49.0215 104.553 49.0216 104.553 49.0216 cv
104.556 49.0219 104.559 49.0221 104.562 49.0223 cv
104.562 49.0224 104.563 49.0224 104.563 49.0224 cv
107.96 49.2944 110.676 52.0039 110.969 55.3945 cv
110.918 55.4076 110.867 55.4205 110.816 55.4334 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[15.36 0 0 7.68 96.48 7.84 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 32 
/H 16 
/M[32 0 0 -16 0 16 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
i;hgCi=Y&LhuM^Di>:MShZ2UFi>ptZh>lLIi?[Lbh#QCLi@F$jg]6:NiAB]tgAp1RiB6<(g&U(ViCE,4
f`9tZiDJk?fDsk_iEPUJf)XbciFhKWec=YiiH+AdeH"PniIL=re,\GtiJm:+dfA?$iLKB;dK&6+iN)JK
nGn(~>

%%EndBinary
grestore
np
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 9.0%%AI8_CreatorVersion: 14.0.0%%For: (Nick La) ()%%Title: (comment-check.eps)%%CreationDate: 2/26/10 7:04 AM%%Canvassize: 16383%AI9_DataStream%Gb"/LB6W?-\*!EfMuOp/)eZBqE,$)KF$&@9%N%U<8LF(TqgOpi5'pA1PRt[oSltC)XOFOB@9:thcONrA,+H!OUJA5MWE\3YCiMI,%jESsH3E=@8ZNn`JD_U:ce#eS_?>"N>moI*;_!\YBrP97^s!`0%drHJSPdu.Eea!.Q=fl`+,LYXfeEaN2?53\.Nr%+KMsEY^")l8K%eaAq$ddhj6/b-eB<&c$3K0n>cOC\C`A\VTT2PDKXbpQ;N*XFi_D;YMB;1VD5,s,qN7Y>-a4RDe?dF.8/K*KC?_I.]4fg2Bl8qJ++%`Xm7ci\k#4g[2Jn6Vbae@hRnhH2r>DWc4FK53u6PUT/MJMXmd#m/`g*?HDi*2]P0aTI'\/[nlIRUIp<:rbLWcd]5<`4O%d,BbcFi%GWOuPf.5>1cl6i-Jsp\l>'\U9;J*G#$9![?*"hnGLBe$ZOU;AeKCSra+']<dYZFT8rup(j(2f&#`5uPWo5b.l&F"J*k@=bAME\^-%U&Pj<&li')g:^O4kRjac@UA"=!T2Oq:B`YM?ktU;&?X*F,jCgMlL]I[C@?AqqeHS4>\SA9h*H[nn[r"u`\mY2X6+n_'a7G^%Y4j<%7kLooh.[?b=X"nBBWKU"eSFu985lut7WV$6K'rae.$a[PDi!8t)PQH*31]duolJVH.KAr7'FQn9=jQDu\i5;qS>q2mMG,Rt_Aa#/%nP',>6rl[=q)r26CsBQA^_l57]!HjlhX#%jVl*YPml.9j'K)$%ko8SGY=JR#p.&6gBno'Zj0L:m0D9,4&'sE7YNPt_`i/je.5tI)%X2NaD^i[UG&'JpVQZSKSnG^=.Itm/24T(BgHrj<q2[k)CD0AmAn5GM>X<cb-8YTj'(L,?hWescUML2@\<2tgTWp70s:W#F9_a#+B%raBT[5UsZ:.bqmbUp=j5Z>FDlgN^`HOiDP6XQul9[WYq=n%,k8jd>U3q4T%]Ze1G3Q_[:jhiS7W_KVeBR@'fB*(knQ8:qQ643Gf)%6//,-pl9\L&\_aN<)9l6PR-/DDZ%GJ-khV4[7SD/.[1=uOiDP6(pa`n:3B7<8@=->ZmD!-E_gtY][>,hF(QXd62r)Cb(oH<'=AsJ%R\$8i_b['pq3Zl8<bP^%&)V@;V5*b)GKMoe_0;\Aq='qYOeRNoQ&^nM1(5;g$pVsJPWu0jUnW0FHD-L#mZDS5(EJk9bj7bIfKZ/t%knl0Q3c%NeVIraiHq,ZDDj6=JKXSjDUd=6#=b^bT4&g9C"H%)O@>5MO2WUAPKjoW/"g]Z.46;K;SW6A9L7C&X0\IlC8B"&r^!l]I%4T.c1Vk-K-9PmOI6[Ndo5Dn@FgM*-NQ?d90=\MU7p*mQjmR-n\lOZG-dmGWA/VeL7NgM/uFf5bh/)utU9DbP;"bA'$n<6=1_>bm?%oM#$Os2d%P%mT<n9NG$SOmnS6dknWXIaW_W:A8n%NNN*X9Tu%S5NtDUUANmsrKkVe%QtGRdXT4[h%)a75<ej4j#Pg'hl0oG522j)%+J1(:ZJmosk.7F-l<7&O2+K/HL??8nq:$BHL1ad^"hj6-0&uIqQ6%oW-1)4-:"SjU@BEtaJ<k5#>V!D4>*+=\n,`ptpXpUK*#\aJ%:+4d;]HB_UCh2TFGt%]H)d?-fTb!@W'E'^QDSIPDm+$600/BhBL>.B>@.Zj&h<uN^e7H3]5='o7i<f?G*C@4F:V;8NA;p,Fi+f?#%"^:4IoSC(8'Ebgi2(E+OAZQE<_Hr=Fm#1h9cL;A36oYop^SD%n1$C^WHk)13S5Th]CI]_".7R:?o5i4RA";#^M4TPNA1-TsM!Gm^%:E7EBAjuV"S.e%_*Q]'773^;^VeUm(cZGc$]ruo07?O;[V'4m7!,1h/*&lkeWRr)t#h)tg>QHbnqP.k'P_N()[5Q^lbX+m30tEK'%qR4hNhaV])P:_g&fq&eB/W+VHCPlk074Ek625Wl)p3[LM+L+Jai^>&80FGV*$B8nb\<^l&.ef=C@i.qL.EYA)7%uZ[X,K"^;TR=8%/jr>\E@P:(k[jPkjn?"bq1FeURO_9P4N9Z(c_pYM&6&LHK<bA,p.6MGI7/j>PDUcqpO!U[BGQjHEi9R76N>^5O]XOc'?qIfRDe&3%lC;!=Ye$I;A-')64D]W*M7k8ZI8&Nn=:\4[qt<eKSW6J:T$64s`;W@Al_/gSQ5i,oAmhClfMPpJqXaBq'E%068fimk'[nd%/"XQ5%&Nu(E?OUpGkpR'!s$L'MVMg;"Lh_Tf&fl=njM_FtKHA12\qp4#=PfF$!tng)lk^N`P*er+cF4XI86E18QCI$'l+2[>V?e+'dmP#f%_rsYhe(7&ue:^>B`Q"W:fMr89&]I(7")/epO3^cEBjU("NXl&$'Q_CQC#-Y%:<?S"cS9:HOg1fPLaX>(>+"ZM8Qu>&h"MJN6^,o<%C6TjkH?/@/7*O3b=tGO@lp'DOU&e3a2,K6EKig6(7Dq#W6nCh"+Vl:`^cKj4X/8;X@`,"i(9ta='jIn2_mKs7ON'Pm9aVC;NM,(e%R4jDD_A1@r%#3^`)\gsFOf.fK@SCjY'ljL3f/A7G"-*\t6D3"/O.uTuk'=Vf$k\JhLcDGVkR9?]?Z`.]Jo`^%#pU\a#(5*QPo/K3%`FT:!#JNnRqaLOVc"$B!RTZW8.?93rBiRj;V-,SqTD[A%XXV?D";/(Nkb))*4)efkr!,I.5%n5#dh!DkP-ADdll!11&J^a%a^-ff%"Edq]DGU`s,?+PE!'%p)%GUCF82sBE,gls<rDJ!;Q7$E*=uujLd0^_9V\Vp?GJ*c_BLg@A[:WR_)>]^CqKrX=buR>t4Jm0:qH1,-%!kr2[pV=-.\5m=f$!U?pZF\14W7;'>n0LPGk$p-9`QlhqbMkQl%(RQC+P@l?[8;k%k=4\./=-re8'^$5I#Ot-1HqLZPG^ALdE-Fm%4?eIeRH[XARn:UrRQd2a1K9^8O2P#IX%m1ss!3(X*QW()Oh"l2cBAuL:jiAm>[R)_5PIsUhT'9FZ0Isa<K"cse,ON%!Oe&p)#fID%&KN4Y-`BqjG$$Po"D%5b:?U=>B/W$jiE+Zp+,=K#?sk6\JpiS0A4oEW#k9!W:M\%=*<I;\QqAP+RCf?@*LT_"Lo6Xj*`MT_Sd='#%I4_@FMNi=4R0'W14(B*qY'>ns-jQm#%6!fHmP3]qo$hV:_f>hM0m])FC5N3Mpsc)9P]+Q'E#tc2gj&`i6%/qOrgF)6';@NO2i-(7%V"uu9SOBM`<nmM:#15.%`!XUN%bljh&s(!HE8nEe=pRt=a*\5/%(6cg@O@U@:b&JfVUr18;2?&eF,1E&'0_[h)uEM]O1NSX:<m"n%"E"mANm@TC9KuEac0^P1Fd^d@j&(>=,!$Y-)laF"r#&H<_Zg!RKQjG3NT*@UOF+pViDNsfQBPfQ*9Fo[Fc$ueFdZr,^^-pb$"lOu%):Nl<6M"u0>CcVmq#aU[U4t>SUAX%0`&3PF*N-olZ)fd:G(u<]2*rgt$Iq%:'bAh`(k[`g()uSqO/,<t3j_S\9DepI23`XiJWGpF%_amZ0/Qf]JUA;lfB^?CL:M_0L=#_T4%$Cii>)O4e\5L7U):.)O+j(&;VZ2KN0[ApTW#9K;,5Q!]@?c^NfF^cPXaBgn_LC&^5"N6)%/%2TfWJX.jk+l+H??7l`)i!TNQ>Ti+g_rZG04TJ_k(d"Y&hB"UeT94bQki9k,aF_T;U557B__7cM,H#hN*D]N%XrgiL2b%d>9M`0%0]OJFF&l/$#[!lYZGau@s('`<7$1MW^'r+e$YNgum]UKIUE"RdSX7tX(akH#fE1%C&,lBTlo_ZmV2RmXE*X8sb\AmO?c$TOe4YUF%7:-6BW58E0BF:-kaYnHi`#E1;,^$DE8nXc*']h/0BU43tCR>\NkFjhr$9F@+9faf6>^r;t72f3HP'ThF-l:mRhB[)F;uNe8`/l(?%RAf6"CcR>eU>b*b:E?^[.*_7]+O%-)%I_UbATjUO3@2A5r`%,!RVhUHgT\='C,VMFBQZpZ-T^N#[75:PCWSeJ[to.)&-Tn[\:HAt%Y&=lInl0PLXJ*SF,Og=F;?Qk2Nnb2$&Su22IrLp&W!T^5=pkgL:*J5ArV6QkIK`(oo@qUs5].5)_jLV8VDC.hq]e4k53Cp&1NX'f%VC.eQ$0)@FZPg"^l:.S3).O<Mi4#SR\D\>d7;6]]h[Sc4kU?p/7./DoRf=7=Ki"5fpTOnOk6YW:Q(*&G*.t-.C'*BDZmK6<&rEal%i8!51K0WtuCa\eo\AFS*Y;9'%Z83*<Ynrt5k4qm%+2c\H:O:M^h`CHAX`5&t]1B-VP%oo9b>2<:`E\9t]!=c1JO%LMqdmEr=EEDC%D85YgHs3(M$X0%peXOo]Ymk4XPd<n3,Vioh]E)2-F9\0cG,k=K7Cm&Sg\>X6!W*eqH,&,!f'0_QS".%[L8,gg7OHf<q:Pr:Ad?'s%RJBG"kV),$&Y.SDG=T?a:9C!g+l>NH8q$W#C7RG5HhT#-<Goc?&8kd5RR8`8DY@,/G3$*SI?1-NTeY53T<h``?EMt#LX#)2@ct5P%lLlFX#"Qh,.X,+bpL\VthC<`lI?#9XH9Q'BL,3Df;:p);ClV96_Zjb]]M<S\oLX8erR#,]qn&ldf3J3CeK55=>cHIp"l70o"hjeg%a\el6T/">GC!\m+:^)i>j:`e/1AeuhEMEO,j:U>2s5`&(Ei[`lpWL6>Z][43b5#EjHL<<!qU9oZ[[MhlLo8=Vo5]?5XL,X@5D,Z]%T%4iqUXnd2!Ji#bK\Ub*4hR8;]5!RW*pIauE!bW+d%U"3JMA)>Ek..I=e/)kA@I#(E@]Y3::]al\U&3RaD*'h+=D-T8N$+,iA3P5%r,O&9ne/TG?K"mjj)oSa]ZFBjbsRNNMnCRu2^h+>8V/KAJgtI'dKK`qE!nurA-nqX\0<R5)=i2J8X,ne;b8F6MhYo&(0Pj$`1lJ4%=O<*S8s1GmMPNi_]QD8W9Z`H6GWAZ!Eb.G@#Q._f"VYiJ[5:Oc%'4\)gN'Bi7I,.0k[du'<KbmOL1AmpjL1eBkuD[j7ri-1EE"LO%*Q'TfNoepg*D4@(njT6#(8[a1</N0d9"emPc(\4FMb^M_Gn&hXJR)?#'j#OOLiNs'$XdK])FJi*!t>TBp;Q;1<Q^t#)>#/+n1oeH%bH_1&<S$*)bD'iMbE?][30K3H.Be7STkp!E%0*;aVI8q).Nl!*B,!ib_T9A>W1kc@d$(K.WiE&0C8e"EWOD)j7Gs+0F,6JX=]7-l%^P&U)RL(X*>b<G0W(J4D(+`7!;UEM@%gorUH"`o3frIg?A\qScJF2p%6LW4X'K%Oo`(1M!9KhdP%*f-(J=OgiI&po5BkV3@JM/^a%cfkF-WWu)5"[qVWhuJcJEdYFm!jM7tqoZ/,_d4P6QO3R)iW?.K#3Z=RE<^fY)<);FnI++G%J1-X\bH4Z_&)KAo\Dq[/gD%=;2FPR%MZ=0J'tB\#A2+T&r@@NCW,IB]jnk;oA-bG3+.O%6'UT;p%$XU[g1,@11a94,<98CZhSkZp.!.j305H.O=Eu(k+s\hGPO\j<9W%T'%iC$FnM7a/tKd^A<1(9=SL^XAr(`oHg0u[mq^LO]d<m,m8CpSab`fD<m%"[W_"3O&<dUc_3<F+'r*@=OmV;&SV(Ek^-J:Gt.$lPpl%WhC<?c=Io[@2k5(1u+&3Rt<)X&qiQi<65q)%/g+:Bq(+h;`0I<Y7]q.pmLq%rqld]1IoC`(CL1/iEn#2$\a)(n1PJRTb(0jlot'G%&rr23kpL29m,+)0i((-u&!,#;G*;0&_SfU;:[]qhG^dHY?fb^m_21u!V'#`H,l/>Irs$5fU$s]Lre85(;"th6J%m8g-WEJ25?8&L%YFSJ&T(qCO#!IU"^)?oaH%X?'EMr\8L[8taR?^;B@7!bjgucq'gZ(1IRodjXYN7JOSi[=ur.(om$kr%g'0bI>mLSY(_8\PVqMUQJ%;ss14kGiLnmZOO@Y+"%>=8oWaga3F;T7fLl-tI7nN9B;g2]R-sM=\3l=NT_S+\RI3f[H,2.iIY),>P6e,L8jeTCQLB@5,ln<,H*:%k>oAXj6nL!3<9njVARbi+df>L^H;-3,^M'>AWuM6&TP!W5p_cmJ&jg_Gr=sK($HD(:_:-eQ<_r%r5\h^II=c:iD[&o)lit!m#.l/%.,m,qJJO[m>e*(Hl^%EJY!O1"-#de)O\a,@Ro[#QnqX0L+[.sCb"$Y4jQcBkn.a=5TSj>:Jj)?g:pY]IdOVfjpnuuA_-N?36a,DF%0DZZin1dV$?@h%9:M*`47QbTqg:gW_iSnZ1m"%RRq%+eL![^!]?FfNI.Xtk(AsF;ls3$mqLJYrGXUu.^->alo&@2Rl5l\=6Q+[,*%\RMs,/AF&Hc/G9[%t9l*3'&L4lD&CUj3G8"B'LWS),%b65;E)/f,`:,'$l<3p6td[B$.7<+E=>c*dm`7<G&.8\a%AINSJR:B\3bF%2@`lBl]lhT!J>!2e1-5S'IKj,5HdD2%qq=sluM95H#OK,PgmRIg$b9l-?+1j[1:>HBFDLurBk3_cMB-A.8RO?EXU\[8fK')Q,/At%<$,XE/c2[<>Ien@ogZ&L+J]thdLQO!/1sD'1d#u6:\u+*>b7u"JHHn)ea.P9&3r#n-,f'9LGp&;<Kspfba&(m<JCKVi4IdDGiPHV%2X)skG(4l;*X9n8=:u&mX_&(PMFm;%i"L6\OreJF,05$nc``)>o><\48$*Q5nr;6k*PtsVIo(0^gTPqREN;IHm1*X(KdcdYh2l-L%fc_>X#NY_DiT9UZX#<K88<eC'NC@uP"-?<8jACUC=rRXSIDIS3JnnfMTVU(S2K,N7XI(#m87\OG6.WuX&(,ou#`Zd;j,HeF'DROq%Cd^TcZI*J'#[HotC0hoWilOe0V`jX6HPJte<*,<#DIl]9YA0!(R]W`+i(CrP?FduOGm6[)?Z(HfqouUtcl6fpHMr5&1`1DjnUZi[%<Ee>Ufa+\GbE/OsX'$H$Ht=30W>]*LhXEU2J_CFkYB"Q232bX:[u'#cfru,lT24dbP$fG6,H(2@Z+oB4S],P*VLlXg`Df*mg@Kqb%HETm,PD'E@+mi:aprLV'gar)tZhgIU%1#n?L!"/i'2S3OY;Vo/E7jR&KE.k8LDHH_"A8RB*<lM6@b5M"2XmU68]VeVZ8"e^GMbZJ%K4_eq*j>$qKZ&gfpe@d)ACC[7h-./H9coeMPm;6P@Ct<a:.f6sM,9:'?"nj+G<=_E6`dm(dj]q!oS--KSjM28k.?$MBB:#K"(;XJ%Dkl(eYFn3RV'9%rg/j.DEE(l#<USrfF41#YbZh:-rlBF,/>/k$%ABP'',kit.2ZaN*!Y!6Y9g#R*(dt^1"A\OdR6QOi""",XZM0:%+.4%n+=5S*>Ictck2/]8$M(4T4#;LTN&V(KF3mBC_Aq(QTV,%*DjU>CK/hJ(&;O\12Jn-53N/]XVrlEpN2(q/g"aI#.6^u%%.i"M%Y@$U=VR^kgON0Bqil,:d/-^BUO'"2^J2B8VMc0PPQgZ<>&#jm'.-pI-.\QCn<&h?X;c?4WB,6\XlrX(:\:4m#<[)'jShQNEb:DsB%Rrq]aJ#5ZTOK^f_Y_$7T?LhRp+7B_saO7r4fRnGm<Wo6gGUt4SL!G-qG'F0/5I:dq7&g8]?9Qlk9Y)[HRM,9sPs83k6YIs?_)+jf%c*5lYXuW?Ui;a\XB$_)rSJ>Z3/=rZB9\hX>P#Rmdk`&.[V7URp2K_fjG\^dY5F&&)eKJl/SgHB#&h%?QdqMteL7<4*Pp[k=6Ek0g%X'X[&9_$CLp!(i>[Bou:JjOM.+>n+',r.=ZFaKB&$'l,2VMItQWh[,eZ&*YQ4dX0e;5Z0$!"blFVo)QeVGPO+f0KNI;7U_<^WLW,%hA].]b<qYWrE?bC4Zi\Ob5E)'9qF$?7S;OE)B*:.*X$tTjZBb%M+]'?,NQ_\Xfnm!$;l+)ZVRY;BpoX:l+sagW;FS`A:Y+)ou:$3%;ATW68Q;N/S^!OT:Cc\mqa("\:I01aJS;Hg;[kpZ4Xfb\;\Bq1oc^(%#9L2&T5Ri?CcX@F0uA`;PISD2GaU.D`=W0k_E2$Ipt2sB%9Xj/LI<_\@%d:BZQbTisO0b\'opsjnjmDWp`f[WMQEpqsrH;\OhH;gY(H,<[m:J@Cpo[pF'\11)_Y*obWVg8ljO`s:Tg,PjDG`OH%Z[s_]o)-:KGNp.FpVQWFI]]i\d2Nc(a5U\X>M),BkVJs.TiF=e3%=48hNcpPh5`O2r,R4%W0?L0N2J[RG"[27+$/jdQMcj!0\bEI%JU)JtCom*)M^-i9^Y`5`Xl\;2euA10DlK:Uf8Q/AF7K%K/D9igab*(I[[mgf+7<'9CQNJ<3uck8]<YeGA[4^,md&'LaJh>YC0%C^%]%a5fNM51T*e]nA?C.1>E:R/aq6><?qZ2ufp2g2C$X68rc=-Bb_92$2hp&4W@YaMn=0@Q==lXpA]i(p[(FsYrIbER4ZdR:5olK/9%]jNL#]='Y%gUfILCi!0&jU^-]Xqtk$%6Cf1DjIe[oD@iSoD,>"[B`#_F8bc=,P0u2knEl"/SlLdn0\=HDk7;JVm>)ah`]fPeCqZ\%S!pcGW(CU9E[\#=C^ECg($B7L")?;N4mc;0X'8;FZOHOB:3Tc[)kPU.cJ)<Mqibj4529;R/T)EJ!:4b$W%RLPG5$91kGJ*c-,(rp%O`'nS=V,7B?!B^\4K>mU70iLmB76k]3?O\KeIu86>!-pcb<&Ab_YQVA7oAfp1[0UTA?u-f[mQR"YOB"`rmoA3nX,Ko)oYn4R<UA+%!d*o+otA&uL?SQ6n,!"<md=mmhg[g'9*PelIqP),Nrh`#;8BtGaFLM#H\k.^9TCP0QLdFBm<F7*ZML6.=3Qj!^@'K/O$AQao($ut%ICm3IcEh`Hk*^(W412-OBArGrX.IF:npTbV.e>s.4qq@Woc$Q<1XB=hrV"3J^8maX[<B"Hg9id='Y*n;Bp[@f31bTlffh=?:=bG2%B=3%ZFi+nfYn,D-p@9$c5AnW9<1lBS0,M&i_f'/OBK-nH/YUjR*ge,=q?sC*/+B&bH^Mnj+0+#*pq$(7iS@iEM*PJ3FiSV)*GZV[%<nDRkg+'8YW*u);-usbn"s]igO<pp)UQ^,tj[^MMfidc\^Ubr'j1NM&PTIcnn'=([OgmI%dA>g4.ndQU]:iP['\?.ODMV82JGUrg%R&a[2&R#14C+k-OMlV$7;&j9(Q0V(AHOt+Z2E3p7h8K0h[U76q]GYE10g<6[4-MNpVq#pG0RJOaS_S^jED%])FSkf9%@j:Do&@B2%3f]`h\\!1Eg3+Lu6!W=%J'DQ1Tj/^?V</O67C1M!faS6IH/[[nK+.$]^@p-ZpL1IH[5p6PZdcM^%UC'X#9EGo)r7-\]9Lbcc-':#%)4E]?=mGiTK1=$aVm^uG!k6tiNIo-=])rhc@=[C9P2mDD]6>+M?_'-dEGJln.t]h;P'L2VD!CDjg^]0S@3U5!_XlS.I`M:ekr%:f%I:4E7gE/'"b#+]p/r9^HJU\UR=*?fH_b?7R$V4SAC3<q1],Ec7^TMJs%VcQ[.uT92N*;;)ea&@bT/FjE_Tm_'#Em[XL]SqsQLHSS%0s=%m3BTrj+caBiG+i9r>,'T*qWI#>cAscnUKuI9/&L'4[4*[ZHnQ\@D.2<c.H&buJ$^lqo%r-P%q/terXg.)$X7/I+XK.+],$,f%RkuD&lIC`9JS01@CGp^&a"5r4\W_(l-0JNj0+Y`?P3``hgiYC*J3=9sIYRgJ;/j0m(PRD8]qE>&+[L"k#toiZ-=J0`-"9c'OX]\q%i3\0X[Rk,j.&;csMAXOY6-4#khj$Dud$h>p`q)TW+/(.j3FRt`YuBPo#ZPb3oGNUnP;""Z5AmD6e,BeD,g>2-6JJ0=_S1jD6r.fF%lk6;7?.)k0npUoVKiD4KAt+IZ9X]Nol(IQP$4D[fPCPA"(.`fc8/4H;<E\Ac+F.3p]2Vhj3D:I*U!-&TQDW/bVZmL`V&E!_8T_6Q%n)?j-)`nn)@QH4l+V)0qO;qFSB%=R+[=fMW@A^QWG/3'^&3M@3aU-l!8[i&.olRhXPnPa4SpcQo"[F88i0n#*+Z2jL6SqsZ*\UN!%=?Rm5<;e3L@34;IihbP$=h6W]\:nLt"I4F1N$\tNlp._TT=D)&pKR(&=rssdb,)F\TDK+`Mt9fU?+d>pc0(E[Z1@Fq6rR6aS5=t'%PG^4aZ=Ej!9P7`c(8&qb7\+jCo`m)Ic4=!+KfLbDgYs"W2p3_+h&'E]360(3<`C4-`A9//c<9,k\c2jKCobnuihNT=\\luo^@edq%HZcsBZ^]iQ+(5e.djnHW8t2-X+m(!?7_sDO45O02+KV]L;E>^6TjmpLm$E/:RCYhF#ah(?gt$/Lh&7lk`]CVnTinP1H$];07)#<l%JneS:q!UmOk*VTFV=`Z8SBN]FnZ0A(TfEgH:75U5hrg&>L8)0Jr<(p]f@^\L5.Wh]8/WB3.I?@"YF,Q^8@/-A_(Y!(;O:gBeMlfg%n@3(9A=nUP*6(gKV<B?h(Ep$?;igOqiO`,#eHRf;<1L.@ZZDeqZqa6Ug%@)8*P@Sf1Lt%EUk7lQ:K?!J#M?LhCAj8os7gOi<r\4:%lCBs4+'B-0lXC)82(Gi<1#25GHS^WRD>@hWgQMr-PauA(@J7sH<ad"Pf0=u3jc;4&E4oZS1Y'pB#Kln)B2&0@LQ=m9nS;P@(k-a=%epkhp\9[Rllf3(--6hV13H1'3S/=@m+6)]TGTm,L^K#-[GVmlHClYT#mS<:R53PFVT:a[Mh-t""?7BKG[SDsmnU:"+f.&.<f#;n8%ZGh7hVpFSj5&4L&]Xkqi2EPpU0)7Qr0(IZ9kj=m)l/c.HK/9^'(tnZ+`7Y+^aI-iE8[m(82m28Ee(YsTJ8P;+p++GVCqaN6LQT<s%HIdWnO"=Vi\/m3>D".49)V`<Ci'^09bVr6O(FsA;qVR;CgpPZA)8aoUb\oD>*QV!BY5>N9cp11!_TpnWVf7!f^9lEm^M6++1YrG`%,LLdQ!TP<c*;.oi.E9@>ZV]GPP_&kS3h+HB7FbWe)%bD.B)/VE/ilc%h?Y@i]eC2ff'MOlWT'pEmdZH).Xp*.*p8pP8%QB9JBZ9N%=+^#)\4&rs"FU;cIWtJaHtXSY$WUr]h;b,-VqO$e)#..G_*%Z$n(7l'1`>Dd$[[01&3s=CDKh?tmrcbDolP/eBsmMu!d&b=+_=.j%91So*XZmP-T!OKnI!q^XBg&X&)64A-%\g-&4U[]4%Pd.rMf5'qc$0[b,5*7L]DMF#U^iZQG'hrTMW\kLWU35FYP<M=p&_YD2?o]*%C9b(is"`[Nir[*TX\NX4Is>\4Yk-n$aZ4/r+"cU:/oP'tS_)-0dQ5T'p9XWlRe7h'qpA;q-C!=\kOA"P%?$3=63>P[k:2I:]sRG1%b'dDt\p%n^0<:q!hf+TV<`_h3'DObj,jO%n^kD5p]Cu3'OYWjD8b@%">[LEFdI`1%lFg<GKq%PK@5.6YR(0l'%StkQ5dF;1k@1?T%(\kngr>iY2+MX'Sg=,e"D6(3pE=+#JL?Ubn#A\%J`TWQZ9Qp<4qtOqFdES-RZa,"F+PHI[=$Obeg=FUHG-e^+I1RMV.Y;rB\53"h%iS$'8]s@u#L8)WfjH@sr/S'=/GPh)0qrUBM)ueBGrk]nEc(C>1jMGQ*3qU&Do:Xsp?7&;tJ>Cg?&,pjUWk7]^_2cu*;8OO02raGg%JlB:-mFog'h\?."HtIQq%_HEl6G"B(cFT:4EE_*2bd4G2EFIVe74W;KZ^m@J5A,p/-5TACWVY)C)6]OK#B.,:d&6Ej?S4Y$J%dkR%NO(Lh=<&kX\O:UjL!0Wt57Sndg"TN'1k6DbB!Gl]`[*&Q?_#ih!&?;='gB)3Mlpn\eQod`^HD;*.ib"tk(f@"@]mB\DG#[qGK1Rj%\:I2`poUcCldZAhYQ$r?--&N,$/HN)'qjd'0s@C[b_u5$Zemf\YO?3&#EW:V+1CV?6V.h;MZ[4]^ArAg0,8A>V,=&W4nWLLj=dRE%_Ud'-O%=7#D^G(GgTg]M07g`aRQ,Z%g5u8Bl<eFG2SA3SVJ8neWoN#Rj;^8m#0t5X>MNB[T"P=ZhLA_rZTVk>0,NLgI=44cV6hhU%5b+%E:o]d=SQ`!'P<HY2Nd0L@i9>AKlRj.nqMWZeVq17u;ZLSueuZ(7[@KD2Y5OGKp[RE"=<)"a&5,YIp\WcnP8BLFL9nX]oq95W%<4W9<\To"ph/9hTLXfV!>lMSWET_R.cT"oAXbRQTG*PR$>?TLArq7pC7JlQ9R:&T?c2R61f\,RB7X^Da6*OAFN+e=qCcnYCf5f8<%ElSt5."q+f#SCM;fbI/Z3U*#[dOA4]%ZHq$YGN^`g!m0"?*M0D\_/iU/*WgZk)]1,?*$<a`7MInf-SM6V58mV4>d=iC6qN-%i4'u%+ZOJ@A+JUipB!VQaqlT&IDmWToKF/_7McFnPlb\"^<e&?%fP[%IJ;sa.&%a'3_rdL.sr^C$3*>hMAI)9[1UE:bH5#dV]SGJ?%P%!%=QQYcX7r'M^kWbbV!YYN)o&^!Xl0.!<I2MuPs)c0Z%s33Gk84f13>G"5-(b_qA9B@8+R*+AZ8f-VEVgiAteZ/ouhtuZ13*YGsWk#%gU6b'&kq';eZ]f]W;o[:@MeXSfJ(I4RUZ0&\:1m!%LRU/9r$H)"ZJRC%O8U][#m/t@-lXb:<Qq&f&4ZqXsX#d]'uWrZY7"7KX/<N%GVI"m#gj8Rg0M6k]uM#5cctV3erF+a1*ZIh[AcKO<*KOnY$NsXrP9$uIHTCNUYLh\>djsmhUYRDAA2<.NkG,>-<2>2j<#*i*\BmZ%rmn,?;?@07%i==0W:db"G&?=5PG,Itk%mLj";ce!BJN``;_YAIhS+$d66/=?2(DU=j&[Oj?D7[p#FkjCDFLKoG#$;_N<7b/^=J.$%6GQa*N4uumH7o4,$UQ]O01\SRc]UMm<V>MNksj9RfEZT[Z2+oB=PjHI(XfX2I(]&&\6,8;#5+?f?7H`!T<=mSe1T<tET=A,;?#MV%Ec/!l?FH*Q=:d+B'aC^_hji^O$"1M]p#9,.3_1qB:f16f-u'/glJC^XO]/O.+3n&2ZSE<&JoDGmWZXk2ML?B#r';jH0(s;%[8tq/%k$QY7IaEaFh@"TlZ61Qe0<O]3`@CY.ah2c]o$[i2Bip0B8lChYjelQ_eX@'#f"TNH&/M@)>LdJb[.X%dD</DpN>hRtL$IVP`iNND%@bi\@+3sG(nY,OIOO@VTe:3R$c-(h?4Puj*D4Aj0Y)[hZf)G0FqIUf+>,Td>rTXR2:=;sbf\*c![S2,0E7_'^Fr5]Wh`Dc%Vcm@*%H*P9qa(@228gSYk6];Vr.-`bOU[W_1d(Zo+s1Vbk^-PB\*k0>%h03M<pmrcT&Om(pWctP%H$4Rcf3.G6i&TD`Ft;tD:3BOG_&TC#%M9d!g)tkSC!X,Rm*B!1F,UV&dZ&70(hqaV^o+@=0p=%U*TsK`i=`O^^^dF03M^c(;Hi`?GWOiRFYcJDNg*tWg*go[@A-r+[oS`.&%F0nd(@uK;S5Ih"i7b5Xdm2tboFT@H6$fS%lP_WY:]8oI2QDZDN1q1-R`HEC(<YXm:^D>Xj@nSc,+-1jc.mK=6E7.qG^M:M,DMKHT%f38&oR.$L\p-$4WC!/_%3e'(]fCi]pl!>>=Ta\/_hi#f&63D;NZK$+7m[U3O'-Ap;9R>BsNVg/*=BSd8Z9XpaEAm8X[)=0M)&i/'%nQ]cS0'PNRUXS^*:%$I/8T3Ei>\Jr=Tl_bFh]K=PDrH(F=g6K\W9OisA-n)\R(ILHLf>?H*U_qBmn"SAh)j4+5(&-]?MLlk<h<X4%9E0>lpd/6`H].ZhJ?c:BdOujm^AZ+on*RXa*L(g38sa^b]]V+4_U%FI<@?Q`3VSj]e%Sd@c^i#=2]Ek]+O>t*\$e9P^H.!&hXW\k%T#n@:Vqk+Wdcbo0?J,7efr7aF0([j/$V7s,KFN?!DGP=^CpQA(X5!ZYB&#-spFX\Tho/",P&UfkGZ/p$GYZ#^)nG-OWhT7bjZet%%/5L,@RL\'nir+>g>PIl>G=&3M(uE\9nJlhe`L#)''&5/tO5B5@Vb6A^404&5R^FL>^8s@'TQYQU:5H+\Fqu=)nEq*/FP^jlfc:Z3%POL??i?WHIEY?c@4G745-a>$mR$E-pXZS]ps7+aTB(B1:pgsF!i'$F+>,.mF6o")KJTMkZZ']j`_3^a%0K0R@B/.VrFb8)f06/7+%-=oremqZ*kr!G>Yhijl8)O*n]#+Lmu_\SU[msP<@r11I3Vb2=oHGb<GS`(m+K!/ToRZjM.-*U$e/&A$N6!9+D^Y(e&pHNO?GD&Zm%!DMp:9mX-dbj\Qa,)/n_221tVX!:8Ea<X&>SDF!$JF5,$X*(;7Uo!/:*(;^VF2e[`XGQt!WBWVFhNAQ4b6m[3SH\jH#pod_g5+Mc%)D)(m8e$TW*<&4MYi0U$NW0uK';$:&i;RJ9*H"^QNUi>r*'2%g2Ii>0Ob,(on6B&qZ=buT\a':\(Z#Cm=fg@Bh%A7kaMpLqnBf0/%"u8LAXI#CsY1XuC\;2qYE%l+T^'!qF__1X]n[Kok$;-_%PtA;Hp]RR:Y6S1,$"krl1m$J0N^I^.&,W*]da:=*,N-(9$b9s]\5DDk%+,cGW>W+9l<;OkrI"6>_bhm_b2bibEfu2+*Vqkc%Zh$c\#4$R#ip$3\1+BD]j\E5=T5qgnUFc)S!:8"N=n+($8'_tCElJRG1#gWg%HRONb^h,OsKG)E`A<8gA(3Nn(HDSW[rRNDV>O9)f)$9kde"3J&?7:p@Jfmr`IsTRR%^?T?-tuVKE@Yh!0J5ec:,Z<q$HOR+:McUp%0B2Rl)BJ0bO$6UGaX1mZB8%\>5du@s4>rhE.f]3;+g*[G;O[+pbPoMfCd<m/@$l][&T=K5%ARYZ7pee>jNFZ6V:CnZ.ll=mIqQ>7%W1bcC!6hrO89,`@Q)BA1k[<@TT^#4jC45Pl'Uj&;60*:o&b=14j;.L&Q<KG?l!`j5#d?Ks:4*aIGWRFJ(M4'u`WqmMIGDbTaGj&P%@*#CJ2^*t+I%6>+qc]2B7.-_<c8Rrtc0<`!9#uLIN>ROc&P$<u$j]Hh"N<#kb6_gek`]^m5YV$+/+Htg,q0lKdcRi!EMY`(nki__%ea&QL84ra*Hoqf.(fcI*s,<>3TUkMja_3^G[I>JWOY&`@<(NqDRP,!:?\t?O<trN$aX-^8WK7(:ab>Bi:F2">LKWI[-+thuAG]05%1XhK^=V#Zp7t<_45`;p*DkNB0&eCh;*bWY3pYe@npKjoNrG/9J`;H]La@0h'A'OQT53a4g66'"e=7V9689;*s&Ykl?6C[a/b9CpI%b_ShVVl,#aDMX-VaJ)#VX_2?DLh_u65iJs=_;Wk@;kL2.#r6p6-=5#LGrg:U"7'Eti!uCS*Ih*IrjHk<f9FB$E:A6np,Hs7hulp?%6j8'MO$$_Hj=R])B^o.k:HBBaJD=Sml+/$,jC/jcKaTiTg.R1`bfkmUkYogjI(HkYQR-$1&G$74(gJ#@i%G/i&R!JjPDkXUFB+D^%J^;M#BMHbkL;n#!O]T%4TBCL9:aE>JalERV058'a:J(]$MZT-4U?(c7.]"@OMNF0H:#gh+WYFc_lrGld<n0XM)f$;XP&<W%%mq8N%3WMEEnt9e$5@sc._A<?[1O)6?EZ^<4\r&g@COl_TJT-L`lYn,KR1juE3d[7,eH"p4s7.IXWG/@XieF2n@!&"4C-\tZ8$biX?54cG%m,lr\.-3;g?mFc%6.IurSZ1"L\;rC\@,&>qabkU5")@&4ADdYT^jTafRR9__H/8P:_2^p4bY^Ve^a@HrS\ZmAYG:)G*B4ai`aiAA%n<;IG!>T.<&jU#K?H&L)7"HP73oGh1bCBs&BI"=X#gDcBVr[AL(OR7gZE0`0aY:G0%0a`2'iC_rGY&SuNCr];b(_Gih@*E5;0en5%+oW\4J/t,PNAn(ke=V7fdg;U4)06D3"*.4/9N?8U"`l_%rQ1]sUfTEFa1WH0'`([L9d/7WpEGVI#lpNHgk`NF&1MmU.*+Z9GQTA`%;r^.Ne-=,("T\XU-4r84=s^@FL5sClFUe!JOOc\)TQ=D%3Fi-V+9=8A0+e[#-\=W$O32"R76CTaX^,SB$*<Tq)3nE/jmI$,%q&(N%86c0j<L!eAjh.5gk6,@p>Zo=0U9*ACNN1p+S?,Te!*MG4CO+ao<<NqR.mRK>pq3?l$Aq4oVZ7o/0JfZVd%DTee:t8Zs/TNln6;0U%6g/fP=+U=G)(Rln,QdeWnra[gJj^[@M'+:']GLVcKK0#j#>eG1"0e_%F<\X'pH!PL#QeBI$,i"B<g'%U&>TV\OPa_B$Ooq8+g[U<%_P4Zc@U9_qch".\BOW_R.(C5tSE)r=\tP"WJV]3.aU5D.:\5GDHI21`>+sEWFp<U#jlhMC70-$][Z$H:M?.Q^I"EqP5fua*U2a5q%mu1u*4!q;K"F?4R-GaYM=A-naYpZJOfM?c'n>Eq0n<%!%mp0SEGclrJ(GVD3nR5Z+>oHj#Hr+2Z,%(Fj5Yfc/N3HI,k]pHr'G5P>%7$^+b!'LUr!]lVK#<2lT#(Ns8QlRkfW1Zrr4;.]`!pAI]-9t?.Qd7r=crD&`V>c#3P-JFd'bUUV'2ts3,#aR(^g&!%8Tg33"Z"C*%UoZ!P!@14/)`jiJ6PLh;M?uZX-o*'<*-;Q-i%9fpVM1\-KA\$'h['LR()9SC!7VWIUniX<n-XDY:'5\E=4bl(jo@Yk&g4$-OQQcb%HjMLt2[6\P*YcHk^`7AY#&kfEam4lt6p=dO71baeep&92TOCt\a=]&Y1noG"m>ukVQU*fLd"WOZ^;pM?Z)7-r+)Sn#IIY]>fEUg=%`7(7;Dp;4b#S[F:'2gT""HqmNJ?V(HIR'G6Sj7$*[ZeToBuhK4R]KJ?*ut=%:bbgW)V@:[ha3,+.%mLFa?5?8XE0=CTG32q!l;KE%/eFoe-mdGJMY+tJ,f*Q&R,r<hoZ]nSX<`t!:3Pm!hk(1,#c\;Q/"l"'VXZL7dgTEo0fkmajb(hqOX+uH^c(4\Er&M&#G@d[?Xt?g%=_7ga,F@6M'<;#q^d$_S0iedgh])\2lW=FU!/6[O6kMs>O:DhW3H/J+.7.tTcc.1@\p-o@H?_h)k7pDk=oe2S=9jR&?2YubUj[i6%FO]S?+DVeq`2)u,Ru/jErgk"`cbUPiH]6RN+G/'oKURjR/\%d]8]:%BSOeIr2+X9j3eZ!B+\9GgE<:[;_1PSG$&0c1%4%MZ_pLXk%@E<uB?s(dWba8gKSWO($%D%W4gBIi^>nQ/&a\'i[+6F=Zas78C3CtEoOpb#.HO<p^17Bg\</))P)bLGs&PO94+C.to1fY]7l%0*W%cS.$ms1L.h09&PllBmKBQR-!k&2>V0UE643Lp.L]&"'na#+=X'=Ag8:7+e5g+s?ER3"!e!(`O2.9*@Hc7)BoH6&=?#!^Vt$(QF97%&7hT0:IGmt5&<(2a)ZfPK/784GVF$/1BA1_73V6H^_TU>"[`d("nR+OXL<r=)>"#+NYt'g'A+(uo&FBrnmjp"-,g<!!rsPt$))'=%O+AXSCFf^=AH$Wu#m8H%WWUB\L_VrdQio!X4MhKA/GQuU.[WtQa>kGTA":I>j1:VE<?P:$S`_[2BEBaqU!CX*&;.>@9E's3>,YuQ%%YPciJb[J.OHK`-nOjU&O-D>Q&nsUS=BBT7U!"hg9_1(l<aji06RX`Y$7K.ZU?*pGO^sDfJ/O<8-eJH&PS#(,O<frf_ACd6!/(Ch%C(a4Q<J7-#jeas0F*YR6TZd>'%,3KZdMiD94Co8mSM)S;&@J4BoY;mbU+d0MEKdC1j<r*EC6ZQA)GufO8d!TL$In42)I+3_>!T!_%OQ'?)a`8+9+X%%klYrR%7qAnD,6b,&TKN^f&1'p$9@YK.&HIt@P/S7Y6`>Uc(u:jQ=I898Js+0Hc]eu?Os/jLKb]FWJ.o$'a<'s^%P@>-P(>8>6;aZZb0dqY=L)"=1LNOIG#c]<2%Tj(i6=dY5'6H\H<u%!B7VHAUN_J(+*Yg4ja?bLq&djp4&?lFn+M31e)HMol99g`0%"'l9==ecR>d8qG^(M"g+N'Mt=_&mPMX/Q,T?t#TW%>Yu=`V)as)s]$`2%aEq.`@*&WtBh]E"ts05U9@+,q>o:lsN)[!]L1X@&f9'%)&g"+A36U-:,Le!:BD[Mdruf[:_4,@BN'#<qROCoj:M6#bR"J+TGf)Ln2UA(,cW?HLKVAcI99Nm>iX,I'G;g5L+8Bi/^ZcUJBK75%DhSO-:_s-I0I\4Nec!2aFNd9/K#!#@j!uUJMOooKCh-,XGr/,<lSK]^)XebFH(ko,!%qhf'a;,jh5Cm70R2OR;$#MV<EE(%jqIp)%0.T.;WVFFNA;S&UVD\+8&/kQYkR12qMK4+D3bqGX,rMKSFY%?l$3;:nq.Sg)cY79PnVJR^&6g`=8fON=V?)W,=ISJbOVfJLKFjHO%\GDs&5d6K0(iq;p96jCOeJOj[+eji^77[%ofSLH9"Bd(6^n=iK^bnZ!6.VLHP'%o+XP-_eYuJLR&1t(nrdb'I5W,'*%(Kgpiu/d,%C62?7^kG=19S[nll-P&.$lCaVc3@GO!'L>CED]n<GnihJ;HcDTV+>\G)(Z+n)dSfPqT%1m[H8O[:r/\WX8&Z>cLh]BoTqd-?b.`9%jTe[Ai//8h"1"].@KM8t,`'I!S5bfai^kLE;!jIqoWSpA5^'@NZGAS7oK;MpY'Kd]?WclL8>5!95W<54SQM>t&UA19(0:JZ<;H3;%^B5T*CJHm[cmns<5nI2r+Hg1ZLFf,936<H_!X6.?RooR'#PbjR@n'sM6q<&QSXeYp__<Q?+misK-1h5+YM:8&C1K>WQqPhP1'LKc%QIK;8V\p3VHkM5Q),IVt]W$RI-SFa!_59uVS)99&KNnH@$2sdOG`<qbPlma%'Nc9N0!Has>8.c9hk"@8T%"Ia0L`/4S7$T)nV@42%R"%LOlW0,4=9EM))5eB]HecT57ZTf'*tX+#s5U."'@o6%>QW@g?WobDkUr5AC1j%qo-D(<(,IZ56eL?4R1pT$c1L5DG[Z7Vc`0kK%cO'_X_R`=SU+n;mjSCj4<j>mCUe#tb?=qWF?pmtrNp]6dn[\R1QT9l2PBjVA.7K/r)sBC!(J\WF^%C;[*c^Tr_RrFh"_gRr0PYWZ%A,alWYDrh?*A9)FUXN7#U.iInC;:TS732/%8c:*rX?rg8#o\fMYXe)W&mTsl+Wj6;9O:6u`$c]s`CR'=_8=&n2!Fa\7L;+CjA;5l%EH#9<)%G[o`An4,mnso5JNT1.a?5St#(SNNk1+2H+AK[fk#2:++BDnl))2K3WX`$!&iP!6'Yc;_,YnZge=Nf<H3QXV\G5ZFI6lm=%r/l9qD&3':pFP/9<U,p?/[(eG&'DXMNr5tSH0F3?_;MMH%u/oS`sisC^[MLc@H?L8SsRM7nR%r5DKG%7gNXYO2"lZopE-U0^F1E-%";A!K<;I:YEg%0I6P'ORFMe"*Qf'f?-hgS+Su8)+5@c'8A3-23T"19h"2Q$/OT~>%AI9_PrivateDataEnd