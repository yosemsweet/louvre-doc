%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: page-check.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Nick La
%%CreationDate: 2/26/10
%%BoundingBox: 0 0 128 64
%%HiResBoundingBox: 0 0 128 64
%%CropBox: 0 0 128 64
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 64 8%%BeginData: 10480 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45A8A8AFA8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8AFA8A9A8AFA8A9%A8AFA8A9A8AFA8A9A8AFA87D7DA8FD57FF7DFD25FF7D84A8A8A9FD55FFA8%FD10FFA9FFFFFFA8FFFFFFA8FFAFFFA8FFA8FFA8FFA8FFA8847DFFA8A8FD%55FF7DFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8AFA8FFA8AF7D7EFD05A8FD53FFA8FD10FFAFFFFFFFA9FFFFFF%A8FFAFFFA8FFA9FFA8FFA8FFA8A87DFFA8FFA8A8FD53FF7DFFAFFFFFFFA8%FFAFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%AF7D7EA9FFA8FFA8A8A8FD51FFA8FD0AFFAFFFFFFFA8FFFFFFA8FFAFFFA8%FFA9FFA8FFA8FFA8FFA8FFA8FFA8847DFFFFFFA8FFA8A8AFFD50FF7DFFAF%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8AFA8%FFA8A9A8FF7D7DFFFFA8FFA8AFA8A8A8FD4FFFA8FD0AFFAFFFFFFFA9FFFF%FFA8FFFFFFA8FFAFFFA8FFA9FFA8FFA8FFA8FFA8A87DFD05FFA9FFA8A8FD%4FFF7DFFFFFFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8AFA8FF7D84FD04FFA8FFA8A9A8A8A9FD4DFFA8FD04FFAF%FFFFFFA8FFFFFFA8FFFFFFA8FFAFFFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8%FFA8A87EFD07FFA8FFA8A8FD4DFF7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8A97DA8FD06FFA8FFFD%05A8FD4BFFA8FD08FFAFFFFFFFA8FFFFFFA8FFAFFFA8FFAFFFA8FFA9FFA8%FFA8FFA8FFA8FFA8A884FD09FFA8FFA8A8FD4BFF7DFFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8AFA8FFA8AF7EA8%FD08FFAFFFA8FFA8A8A8FD49FFA8FFFFA9FFFFFFA8FFFFFFA8FFAFFFA8FF%A9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FD0BFFA8FFA8A8%AFFD48FF7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8AFA8FF%A8AFA8FFA8AFA8FFA8A9A8FFA8A8FD0AFFA8FFA8AFA8A8FD48FFA8FFFFAF%FFFFFFA9FFFFFFA8FFAFFFA8FFAFFFA8FFA9FFA8FFA9FFA8FFA8FFA8FFA8%FFA8FFA8A9A8AFFD04A884A87EA87EA87DA87D8459FD48FF7DFFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8AFA8FFA8AF%A8FFFD06A87EA87EA87DA87D847D847D7DFD48FFA8FD04FFA8FFAFFFA8FF%A9FFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8AFA8FF7EFD48FF7DFFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8A9A8FFA8A9%A8AFFD0CA8FD48FFA8FD04FFA8FFFFFFA8FFAFFFA8FFAFFFA8FFA9FFA8FF%A9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8AFA8FFA8AFA8FFA8AF%A8FF84FD48FF7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8AFA8FFA8AFA8AFA8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9FD04%A8FD48FFA8FFFFA8FFA9FFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8A9A8AFA8A9A8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AF7D%FD48FF7DFFA8FFA8FFA8FFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8%AFFD11A8A9A8A8A8A9A8A8A8A9A884FD48FFA8FFFFA8FFAFFFA8FFAFFFA8%FFA9FFA8FFA9FFA8FFA9FFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FF7EFD48FF7DFFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFFD0BA8A9A8A8A8AFA8A8A8AFA8A8A8FFA8A8A8FFA8%A9A8FFA884FD48FFA8FFFFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%AFA8A8A8AFA8A9A8AFA8AFA8FFA8AFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FF7EFD48FF7DFFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8A9FD0FA8%A9A8A8A8AFA8A8A8AFA8A8A8AFA8A9A8AFA8A9A8A8FD48FFA8FFFFA9FFA8%FFA9FFA8FFA9FFA8FFA9FFA8AFA8A9A8FFA8AFA8FFA8AFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF84FD48FF7DFFA8FFA8FFA8%FFA8FFA8FFA8AFA8AFFD0BA8A9A8A8A8AFA8A8A8FFA8A9A8FFA8AFA8FFA8%AFA8FFA8AFA8FFA8FFA8A8FD48FFA8FFFFA8FFA8FFA8FFA8FFA8FFA8A9A8%A9A8A8A8AFA8A9A8AFA8AFA8FFA8AFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FF7DFD48FF7DFFA8AFA8FFA8AFA8FFA8AFFD04A884FD%0CA8A9A8A8A8AFA8A8A8AFA8A9A8FFA8AFA8FFA8AFA8FFA8FFA8FFA884FD%48FFA8FFFFA8FFA8FFA8FFA8FFA8A9A8A8A8AFA8A9A8FFA8AFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA9CAC2C2BBC1BBC1BBC1C1C9CAFF7EFD28%FFA884A87EA884A87EA884A87EA884A87EA8847E59A8FD0BFF7DFFA8AFA8%FFA8AFA8FFFD0BA8A9A8A8A8A9A8A8A8FFA8A9A8FFA8AFA8FFA8FFA0C1C1%C9CAFFCFFFCAFFCFCFC2C1C1A1FD28FF7DFD11FFA884A8A8FD0AFFA8A9FF%A8FFA8FFA8FFFD05A8A9A8A8A8AFA8A9A8FFA8AFA8FFA8FFA8FFA8FFA8FF%A8FFA8CFC1C2C9FFCFCFCACFCACFCACFCFFFCFCFC1C2CAFD26FFA8FD08FF%AFFFFFFFA8FFFFFFA8A87DFFA8A8FD09FF7DFFA8FFA8A9A8AF84A884A8A8%A884FD0CA8AFA8A8A8AFA8A9A8FFA8C998C9CACFC9CAC9C9C9CAC9C9C9CA%C9CACAFFC9C1C9FD25FF7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A97D7E%FFFFA8A8FD08FFA8AFFFA8FFA8FFA8A8A8AFA8A9A8AFA8AFA8FFA8AFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA9C9C1CFCFCFC9CFC9CAC9CFC9CAC9CFC9CA%C9CFC9CFCAC1C9FD24FFA8FD08FFA8FFAFFFA8FFA9FFA8A87DFFFFFFA8A8%FD07FF7DFFA8FFA8A884FD0CA8A9A8A8A8AFA8A8A8FFA8AFA8FFA8FFA8C9%BBCAFD13C9CAC9C1C9FD23FF7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8AF%84A8FD04FFA8A8FD06FFA8FFFFA8FFFD07A8A9A8A8A8AFA8A9A8FFA8AFA8%FFA8FFA8FFA8FFA8FFA8CFBBCFFD15C9CFC9C1CFFD22FFA8FFFFA8FFFFFF%A8FFA9FFA8FFA8FFA8FFA8A87EFD05FFA8A8FD05FF7DFFA8A984A884A884%FD0CA8A9A8A8A8AFA8A9A8FFA8AFA8FF9FC9C9C9C2C9A0C9C2C9A0C9C2C9%A0C9C2C9A0C9C2C9A0C9C2C9A0C1FD22FF7DFFA8FFA8FFA8FFA8FFA8AFA8%FFA8A9A8AFA8A8FD04FFA8FFA8A8FD04FFA8FFFFA8A9A8A8A8AFA8A9A8AF%A8AFA8FFA8AFA8FFA8FFA8FFA8FFA8FFA8FFA8FFC9C2FD04C9C8C9C9C9C8%C9C9C9C8C9C9C9C8C9C9C9C8FD04C9CFC1CAFD21FFA8FFFFA8FFAFFFA8FF%A9FFA8FFA8FFA8FFA8AFFD04A87EA87D7E59FD04FF7DFFA8A884FD0CA8A9%A8A8A8AFA8A9A8FFA8AFA8FFA8FFA8C1C2C9C2C9C2C9C2C9C2C9C2C9C2C9%C2C9C2C9A0A7C2C9C2C9C2C9C2C9C1FD21FF7DFFA8FFA8FFA8FFA8FFA8AF%A8FFA8AFA8FFFD06A87EA87E7DFD04FFFD0AA8A9A8A8A8AFA8AFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA9CAC1C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9%A07D52A7C2C9C2C9C2C9C9C1CAFD20FFA8FFFFA9FFA8FFA8FFA8FFA8FFA8%FFA8FFA8AFA8A9A8AFA8A9A8FF7EFD04FF7DA87EA884A884FD0CA8A9A8A8%A8AFA8A9A8FFA8FFA8FFA0C2A0C8C2C8A0C8C2C8A0C8C2C8A0C8C2C8A07D%525252A1C2C8A0C8C2C89FC9FD20FF7DFFA8FFA8AFA8FFA8A9A8FFFD10A8%FD04FFA8A8A9A8A8A8AFA8A9A8AFA8AFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A9FFA8FFFFC2C2C9C2C8C2C9C2C8C2C9C2C8C2C9C2C8A07D527D527D52C8%C2C9C2C8C2C9C1FD20FFA8FFFFA8FFA8FFA8FFA8FFA8A9A8FFA8AFA8FFA8%FFA8FFA8FFA8FF84FD04FF7DA884FD0CA8A9A8A8A8AFA8A9A8FFA8AFA8FF%A8FFA8FFBAC8C2C8C2C2C2C8C2C2A0FD04C2C8A0FD0652FD04C2C8C2C2C2%C1FD20FF7DFFA8FFA8AFA8FFFD07A8A9A8A8A8AFA8A8A8FFA8A9A8A8FD04%FFFD08A8A9A8A8A8AFA8A9A8FFA8FFA8FFA8FFA8FFA8FFA8FFAFFFA8C1C2%C8C2C8C2C8C2C8A05252C2C2C8A0FD0652C2C2C8C2C8C2C8C2C2BAFD20FF%A8FFFFA8FFA8FFA8A9A8A8A8AFA8A9A8FFA8FFA8FFA8FFA8FFA8FF7DFD04%FF7DA884A884A8A8A884FD08A8A9A8A8A8AFA8A9A8FFA8FFA8FFA8CF98C1%98C199C2C1C29F52275227A0A0522752275227A0C1C29FC2C1C199C1BAC1%FD20FF7DFFA8A8A8A9A8A884FD08A8AFA8A8A8FFA8CAA8FFA884FD04FFFD%04A8A9A8A9A8AFA8AFA8FFA8AFA8FFA8FFA8FFA8FFA8FFA9FFA8FFFFFFA8%C1C1C1BBC1BBC1BB4B2727275227522752272727C2C1C1BBC1BBC1BBC1BB%C1BBFD20FFA8AFFFA8FFA8A8A8AFA8AFA8FFA8FFA8FFA8FFA8C9C1C1C1C2%BBC2A0FD04FF7DFD0CA8A9A8A8A8AFA8A9A8FFA8AFA8FFA8FFA8FFA8FF98%C1BAC198C1BAC17527F827F827F827F827F89998C1BAC198C1BAC198C1BA%C1FD20FF7DFFA8A884FD08A8AFA8A9A8FFA8C1C1CACACFCAFFC9C299CFFF%FFFD06A8A9A8A8A8AFA8A9A8FFA8AFA8FFA8FFA8FFA8FFA8FFAFFFA8FFFF%C1BAC1BBC1BAC1BBC17527F827F827F827209FBBC1BAC1BBC1BAC1BBC1BA%C1BBFD20FFA8A8AFA8A8A8A9A8A9A8AFA8AFA8FFA8FFA8C1C9CFCACFC9CF%C9CFCAC9BBFFFF7DA884A8A8A884FD08A8A9A8A8A8AFA8A9A8FFA8FFA8FF%A8FFA8FF9FC198C198C198C198C17527F827F827F89998C198C198C198C1%98C198C198C1FD20FF7DA87EA8A8A884FD04A8A9A8A8A8FFA8C1A0CAFD09%C9C899FFA8A8A9A8A8A8AFA8A9A8FFA8AFA8FFA8FFA8FFA8FFA8FFA9FFA8%FFFFFFAFFFFFC9BBC1BBC1BBC1BBC1BBC17527F827279FFD04C1BBC1BBC1%BBC1BBC1BBC1C8FD20FFA8A8A9A8A8A8AFA8AFA8FFA8FFA8FFA9C9C1CFFD%0BC9C2C97DA884FD08A8A9A8A8A8AFA8A8A8FFA8AFA8FFA8FFA8FFA8FFA8%FFC9C198C1BAC198C1BAC198C17527F89FC0C1BAC1BAC198C1BAC198C1BA%C198CFFD20FF7DA884FD08A8FFA8AFA8FFC1C8C2C9C2C8C2C9C2A152A1C2%C9C2C2FD04A8A9A8A8A8AFA8A9A8FFA8AFA8FFA8FFA8FFA8FFA8FFAFFFA8%FFFFFFAFFFC1C1BAC1BBC1BAFD05C1759FFD08C1BAC1BBC1BAC1BBC1FD21%FFFD04A8A9A8A9A8FFA8FFA8FFA8FFA8C1C8C8C2C9A0C8C2A1527D52C9C2%C9BA7DA8A8A884FD0CA8AFA8A9A8FFA8FFA8FFA8FFA8FFA8FFA8C998C198%C198C198C1C0C19EC1C0C19EC1C0C19EC1C0C198C198C198C1C9FD21FF7D%A884A884FD04A8A9A8A9A8FFA8FF98C2C1C276527CA0285252C29FC2C1C1%FD04A8AFA8A9A8FFA8AFA8FFA8FFA8FFA8FFA8FFA9FFA8FFFFFFAFFD06FF%C2BBC1BBFD06C1C7C1C7C1C7C1C7C1C7FD06C1BBC1C1FD22FFFD04A8AFA8%AFA8FFA8FFA8FFAFFFA9C1BBC1BB4BFD0527C1C1C1BBC1BB7DFD0CA8AFA8%A8A8FFA8AFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCAC198C1BAC1C0C1C0C1C0%C7C0C7C0C7C0C7C0C7C0C1C0C1BAC198CFFD22FF7DFD08A8FFA8AFA8FFA8%FF98C1BAC17527F82727C1BAC198C1BAC1FD06A8AFA8A9A8AFA8AFA8FFA8%FFA8FFA8FFA8FFA9FFA8FFFFFFA9FD05FFC9C1BAFD04C1C7C1C7C1C7C7C7%C1C7C1C7C1C7FD04C1BBC9FD23FFA8A8A9A8A8A8AFA8FFA8FFA8FFA8FFFF%C2BAC1C1C1992727FD05C1BAC1C17DA884FD0CA8AFA8A8A8FFA8AFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFC9C198C1C0C1C0C7C0C7C1C7C7C7C1C7C0C7C0%C1C0C198C9FD24FF7DA884FD04A8A9A8A8A8FFA8FFA8FFA1C198C1C0C198%C1C0C19EC1C0C198C9A8A8AFA8A9A8AFA8AFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFAFFFA8FD0BFFC9FD04C1FD04C7CDC7CDC7CDC7C7C1C7C1C1BBCFFD25%FFA8A8AFA8AFA8FFA8FFA8FFA9FFA9FFFFFFFD05C1C7C1C7C1C7C1C1BBC2%FF7DFD0AA8A9A8A8A8FFA8A9A8FFA8FFA8FFA8FFA8FFA8FFA8FFAFFFA8FF%FFFFCAC2BAC1C0FD04C7CDC7CDC7C7C7C1BAC1C1CFFD26FF7DFD06A8AFA8%AFA8FFA8FFA8FFAFCF98C1C0C1C0C7C0C1C0C1BAC1CAFFFD04A8A9A8A8A8%AFA8A9A8FFA8FFA8FFA8FFA8FFA8FFA8FFAFFFA8FD0CFFC9C1C1BBC7C1C8%C7CDC7C7C1C1BBC1A0FD28FFFD04A8AFA8AFA8FFA8FFA8FFFFFFAFFFFFCF%FD05C1C7C1C1BAC2CFFFFF7DA87D847DA87D847DA87D847DA87D847DA87D%847DA87D847DA87D847DA87D847DA87D847DA87D847DA87DA099C198C198%C198C1A0A77D84FD28FF7DA87D847DA87D847DA87D847DA87D847DA87D84%7CC198C198C199A1FFFFFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">page-check</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2010-02-26T07:09:47-05:00</xmp:CreateDate>
         <xmp:ModifyDate>2010-02-26T07:09:47-05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2010-02-26T07:09:47-05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>128</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAgAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A775d8u6Ld6LbXNzb+pNJ&#xA;z5NzkFeMjKNgwHQZMk2wAFJgfKvlwf8AHn/yUl/5qwcRTwhafLHlsf8AHl/yUl/5qx4ivCFp8t+W&#xA;x/x5f8lZf+asbK8IWHy95bH/AB4/8lZf+asbK0GjoHlv/lhP/I2T/mrGytBadD8tD/jwP/I2T/mr&#xA;GytBo6L5a/5YD/yNk/5qxsooLTo/lof9K8/8jZP+asbK0GK+eNM0FPqXpWRSvq8v3kh/k8TkoljI&#xA;Bmel6o1mwtbo/wCj9IpT/uv2b/J/V8ukSGYLIMiydirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVSLyqaeXLP/AJ6/8nWyUubGPJMWfAlTZsVUmbFCwnFVjHFVMnCq0nFVjHFWKeeA&#xA;T9Sp/wAW/wDGmSiwkzW/0/rtkAWZClpmptZsLW6P+j9IpT/uv2P+T+r5dCQoKf5Fk7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWP8Alk08uWX/AD1/5Otkpc2MeSPZsCVNmxQpk4qt&#xA;JxVYThVYTiq0nFVpxVjvmyL1Bbe3P/jXJRYSejOiuKHK21KL/TwakDCCxIUdN1JrNha3R/0fpFIf&#xA;91+x/wAn9Xy6EhQU+yLJ2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVjnl1qeXbL/n&#xA;r/ydbJHmxHJGs2BVhOKrC2KrCcKtE4qtOKrScVWnFCV63D6ixe3L+GEILOsg2NMqsKHFUqv9PBBI&#xA;G2EFiQoadqLWbC2uT/o/SOQ/7r9j/k/q+XQkKCnuRZOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxVjPl8/8AOvWX/PX/AJONkjzYDkjC2BKwthVaTirVcVWnFWjirWKtHFVGeASgVNKfxxRS&#xA;Ek09j/u4j7/64bRSEl0on/j6p95/UcNrSFk0N26XZ+4/1xtFJXq/lqb6lIwujtTsf5h74QUEPX8q&#xA;bnYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqxfQTTy/Zf89f+TjZI82A5IotilonFVtc&#xA;VarirsVaJ8cVUHuYV/aqfAb4UKTXrH7K09zitqZmmbq1Pltiq3iTud8VbCYqu4Yqg9XSmnSn/V/4&#xA;kMIQWfZW2OxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVimhH/cDZD/jL/wAnDkzzYDki&#xA;ycCWq4q1iq13RBViAPE4oQkuoDpEtf8AKP8ATDSoZ5ZZD8bE+3bFXKuKFRUxSvCYqvCYquCYFXcM&#xA;VQOtrTS5j/q/8TGEILOMg2OxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxViWiH/cFZ/8A&#xA;PT/k4cmebAckUTgS6uKoO41BEqsfxv49hhpFoJnklbk5LHFC5VxVUVcVVFTFKoqYqqBMCrwmKrxH&#xA;irfDFKA19QNJnP8Aqf8AE1whBZlkGbsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYfop&#xA;/wBwdn/z0/5OHJnmwHJFFgASdgOpwJS26v2kJSLZO57nCi0Oq4oVVXFVVVxVVVMUqqrgVVVMVQmo&#xA;6rbWJSLi095LtBaRDlIx+XYe+Yer10MO31TPKI5ubpNFPNZHpgOcjyCiNP1m6HPU779HREbWdnQy&#xA;iv8ANKa0Py2zWylnyb5J+GP5sefzdhEYMf8Adw8Q/wA6XL5N/wCG/Kp/vbWW5fvJNNJyP/AsBlP5&#xA;TT9YmXvJbhrNQOREfdEO/wAN+VR/dWstq/aSGeTkP+CYjH8pp+kTH3EqdZqDzIl74hQv9F1f6pJD&#xA;p2ofX4WAra3dBN8J5fDLtU7d9svhPPj3xz8QfzZc/m0zjgybZIeGf50eX+lZTonmKy1XnEoa3vof&#xA;96LKb4ZE96d19xmfpdbDNt9Mxziebg6rRTw0fqgeUhyTXMxw3Yq7FXYq7FXYq7FXYq7FWJeX/L+i&#xA;XOi21zdW3qTSc+T85FrxkYDYMB0GTJNsABSMby55aH/Hl/yVl/5qwWU0FM6D5aH/AB4/8lZf+asb&#xA;K0Fh0Xy2P+PA/wDI2T/mrGyigx3zppegppcZisijeutT6kh24N4nJRJRIBmNndyadILW6P8AovSK&#xA;U/7r/wAlv8n9Xy6QZDZOcDJ2KsM0Y/7hbX/np/xM5M82sckPe3hlb00P7sdT4nFVBRiqsq4qqquK&#xA;qqLilWVcCqypiqE1jUv0fagxp6t3MwitYf5pD0+gd8wtdq/BhY3kdojzc3Q6Txp0doDeR8kFYRCw&#xA;5ys/r6nPvdXZ3NT+xH4KM0cDwEkm8kucv0Dydzk9YEQOHHHlH9J81U3JO5O+HjRwO+sY8a8DvrGP&#xA;GvA4XJG4O+PGvAsu1N48c8Un1fVbfe0vB1r/AL7k8VOCZ4yCDWQcpfoPknH6AQReOXOP6R5sn8t6&#xA;4NWsS8iejewN6V5B/JIOtP8AJPUZutDq/GhZ2kNpDzdRrtJ4M6G8TvE+Sa5muG7FXYq7FXYq7FXY&#xA;q7FWOeXX4+XbIf8AGX/k62SPNiOSJeTAqkz4VUmbFUm8yQevYqvWkgP/AArYQxLNrq0juIyrDfsc&#xA;gzpL7W5k0+QW1yf9F6RSn/dfsf8AI/V8uhRyTfAyefW1yV0W1iU7t6nI+3M5YebX0U0GKqyjAqso&#xA;xVVRcUq6Liqsi4FVlXFLFbq7+sa7dXJ3Sy/0W29npWVvmPs5yusz8eeR6Q9I/S9RpMHBgjHrP1H3&#xA;dP1tfWMxuNv4HfWMeNeB31jHjXgUL7VbaytnublwkSd+5PYAdyctxQlklwx5teWUcceKXJJNE872&#xA;1/dtbTKIHdv9HNdmHZSf5sztVoJY48Ud+9wdNrRklwy27mRfWM1nG7LgROjaibPzJaXANItQpZ3Q&#xA;8ZP90v8AOvw5kaTPwZ4npP0n9DTqsHHglHrD1D3dXoedS8w7FXYq7FXYq7FXYq7FWKaG9NAsh/xl&#xA;/wCThyZ5sByRLPgSsLYqpSTxrszb+HU4oQ08scy8OJI61OFUFLpwl6yOvyOG0UlWseXYjZSOZ5aj&#xA;j3H8wHhhBQQ9VypteaWn+8UH+y/4llhagiUGBKsgxVVQYqroMUq6LgVXRcUqyrQVOAq8vs9VgEVJ&#xA;H4yOzyPUbFmYnrnn8M46830DJpze3IbIxb2J/suG+RBywZAWk4iGOa/5+stLvI7WJfrEisPrVD9h&#xA;fAf5WbbSdnSyx4ieEdPx3Oq1faEcUuEb9/4701bzNpS6V+lDODZkVDDqT/LT+b2zEGmyHJ4der8b&#xA;+5yzqcfh+Jfp/G3veaa95uudXuubnhboT6MIOyjxPixzqNJpY4Y0OfUvM6rVSzSs8ugTjyh5flv2&#xA;W/vQUslNYk6GUj/jXMPtDtEY/RH6/u/a5fZ/Z5yeqX0fe9Ba9iT7ThfmQM5g5AHpRiJQl3q0Ppj0&#xA;n5SxukkdOzIwPXK55x05t2PTm9+R2e1537wLsVdirsVdirsVdirsVYboz/7hLQeHqf8AJw5M82A5&#xA;K011HEPiPxHoo64FQb3M0vfivgP64VbSPFCukOKVZYPbAqD1yLjpU5/1f+JjCEFm2QbHmll/vHF/&#xA;sv8AiRywtQRaDAlWUYqrIMUq6DFVdBgVXQYpV0XArxOaJopnifZo2KMPdTQ55rKJBIPR9NhISAI6&#xA;rMil4v8AmJ5I1HRJpNV0uWZ9LlYtMgdi0LMe5rUoT0P352XZfaYzDgltMfa8Z2p2YcJ4474z9n47&#xA;2EDWtY4CP69cemG5BPVfjy6VpWmbit7dRfRn/wCXPk7WNWdNX1a4uF0xTyggMjgzkd+v93+vNN2p&#xA;2oMI4If3n3ftdz2X2X4x45/3f3/sewhmChASEUAKo6ADoAM5AyJNl7CMABQDWRSvgieaaOFN3kYI&#xA;o92NBkoxsgDqiUhEEno+hM9JfNHYq7FXYq7FXYq7FXYqwCwuxFpFso3c86D/AGZ3yw82sclqBnbk&#xA;xqT1OBUVHHilFxRYqgdS1G4W6XTdOCm9Zecsz/YhT+ZvfwGanXa6UZeHj+vqekQ7XQ6GMo+Lk+jo&#xA;OsiojQ9EcV1B5tSn/aklkZFr/kKhFBmrODHLfIZZD5l2Q1GSO2MRxjyA+1ZN5e0B4mSzMunu37Uc&#xA;jOhPbmrk1GIw4474zLHLyKnUZJbZBHJHzH3UyHy75iuZrptJ1UKuoIvOGdNo7iMftKOzDuM2Wh10&#xA;pS8PJ9fQ9JB1+t0UYx8TH9HUdYli1h/vLH9P6zm5LpgjEwJVlGKq6DFKIQYFV0GKVdBgVERjFXlv&#xA;nrS2sdelkC0hvP30Z/yj9sf8Fv8ATnEdsafw85PSW/6/te57G1HiYAOsdv1fYx4Ak0Gap2qutgk8&#xA;bRyoJI3BV0YVUqRQgg5DxTE2NiGrIQRR5MEh/IvSh5nN80nLRB+8XTzXl6lf7st/vvv49vfN5L2j&#xA;l4NV+97+nv8Af9nXyed/keHi3f7vu6+73fjzejjT0jRURAqKAqqooABsAAM505STZ5u9jMAUENNa&#xA;EdMsjNtjNCkEGhy1tZL+X2ktf+YoZStYLL9/If8AKX+7H/Bb/Rm07H0/iZwekd/1fa6vtjUeHgI6&#xA;y2/X9j2LO3eHdirsVdirsVdirsVdirzLTwTbp7Vp95ywtQTKJcCUZCmKUbFHgSwTTtUV1nnLD17u&#xA;VpZRXcCtFX5AdM4aGo4iZHnI29vk03CBEcoilkfmzSZLi5t1u09W0HKcE0CgdTU7Hj38MyziyiIl&#xA;RqXJwhlxkkWLjzY2PP2oalrcVto687dD8QbYOvRnc/sr4f5jNp+UhixGWU7/AHe51n5qeTKBjG34&#xA;5spvdXEJtrpXH1iymWWLf4iKgOvyYdc0E9RwkSHOJt6DHpuK4nlIUmGn/wC8qfT+s53ZeFCNTAlW&#xA;TFVdMUohBgVEJilXQYFRCDFKA8yeXotb0xrckJcJ8dtKf2X8D7N0OYHaGiGox8P8Q5Od2frTp8nF&#xA;/CeYeTNYT2t5Ja3UZiuIjRkbr9HiM4LPjljJjIUQ9wMsZxEom4lMre32G2YE5NE5JjFZMw6ZXu40&#xA;stNyWLKOmO6xygpfcW4odssjJyITS0WFxd3kdpaxmW5lbika9fmfAeJzP0+OWSQjEWS5BzRhEyka&#xA;iHsHlXy7DoWlrbAh7mT47mUftPToP8legzvez9ENPj4f4jzeI7Q1p1GTi/hHJOMznBdirsVdirsV&#xA;dirsVdirzXTR/oyfT+s5YWoJnEuBkjoVwKj4UrgS8du9Oltr+4tJPtwOyH3odj9OebaiBxzMT0L6&#xA;RizicBMfxB5N5y/KPWf0pFceWmYWl5JxntzIUW3Zty43/u/Ybjt7dHoO3oGBGU1KI+f7Xl9d2SRO&#xA;8X0y+z9j0Dyt5NtfLumLawu01w9GurpyeUj/AHmijsP45otd2lPUTs7R6B3eh0kNPGhvLqU6stNl&#xA;u9Qt7KPd7iRYx7VNCfoynBA5JiI6lzcuYQgZnoGVWd3bxwKjvRhWooT3PgM9NIfNAUUupWQ6yf8A&#xA;Ct/TBSbVV1WwHWX/AIVv6Y0tqqaxpo6zf8K39MaW1Zdc0sdZ/wDhX/pgpbVl8waQP93/APCP/wA0&#xA;40U2FZfMeijrcf8ACSf804KK2FZfM+hDrc/8JJ/zTjwleIKq+a9AHW6/5Jyf8048JTxBLdfm8la3&#xA;CBcXJiuUFIbqOOQOveh+H4h7HMDW9mw1A9QqXe52i7Snpz6d49Qw12msJuAddQtx0miDI1PdXA3/&#xA;AM65x+r9ns8DcRxDy/Vzehx9pafMPq4JefL5ppZ+ZNDUUuDJC3gyE/8AEa5qTppRNEJnpckt4ESH&#xA;kV155l0JlpAZJm8EjI/4lTEaaUjQCIaTJHeZER5lJZp7u75mNRaxjoZKl2qewAoPpzbaP2ezzNyH&#xA;CPP9XNGTtLT4R9XHLuHL5vUPL3lbTNDiP1dTJcuKTXUm7t7D+VfYZ1+i7Px6ceneXe6HW6/JqD6t&#xA;o9B0TjM5wXYq7FXYq7FXYq7FXYq7FXmFjeW0UCLI9GFaihPc+Ay0hqBR8WraevWX/hW/pgpNouLX&#xA;dJXrPT/YP/TBS2jIvMmiL1uaf7CT/mnBRTYSDzZHoWpFb+wu1TUY1oyNHIFlUdATx2Ydjmj7W7IO&#xA;f1w+v7/2u67M7VGEcE/o+5jCXkKClwjRN7io+g5xOfR5cZqQI9702OUcguEhIOe7hf4bdGlb2FB9&#xA;JOOn0eXIaiCVySjjF5JCIeh+TfJraW51DUCr6i44oi7rEp6gHux7nO17K7K8D1z+v7v2vN9p9p+M&#xA;OCH0fe//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:AC6034D90C2068118F62AD85486E0984</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:AC6034D90C2068118F62AD85486E0984</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:8bf2366b-c181-194a-a69b-095e2774af77</stRef:instanceID>
            <stRef:documentID>uuid:AACC553A2CEEDD11AF8BBF931F055AD6</stRef:documentID>
            <stRef:originalDocumentID>uuid:AACC553A2CEEDD11AF8BBF931F055AD6</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:OriginalDocumentID>uuid:AACC553A2CEEDD11AF8BBF931F055AD6</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AC6034D90C2068118F62AD85486E0984</stEvt:instanceID>
                  <stEvt:when>2010-02-26T07:09:47-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>128.000000</stDim:w>
            <stDim:h>64.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 8.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -64 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 64 li
128 64 li
128 0 li
cp
clp
[1 0 0 1 0 0 ]ct
55 63 mo
53.5782 63 li
54.0636 62.8193 54.5381 62.6157 55 62.3904 cv
55 63 li
42.4187 63 mo
1.99999 63 li
1.99999 60.1668 1.99999 51.9145 1.99999 42.3592 cv
11.4777 27.5872 31.3112 20.3475 55 18.1035 cv
55 33.6102 li
52.8852 32.5788 50.5099 32 48 32 cv
39.1602 32 32 39.168 32 48 cv
32 54.8734 36.333 60.7352 42.4187 63 cv
false sop
/0 
[/DeviceCMYK] /CSA add_res
gsave
[71.16 0 0 71.16 54.5181 63.5 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%!<E3%!WiE)!WiE)!WiE)!WiE)!s8W-!s8W-!s8W-!s8W.
"9\i1"9\i1"9\i1"9\i2"U,&5"U,&5"U,&5"U,&6"pP89"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ>#RC\A
#RC\A#RC\A#RC\B#mgnE#mgnE#mgnE#mgnF$47+I$47+I$47+I$47.K$O[=M$O[=M$O[=M$O[@O$k*OQ
~>
0 0 <~zzzzzzzzzzzzzzz!!**$!WiE*!s8W."9\l3"U5/8#6tJ>#RC_C#mgqG$4@4L$k*OR%1NdW%M''\&.fBa
&J5Tf&eYik',2,p'bqH!()@]&(Ddo*(`=2/)B'M5)]Kb:*$$%?*?H7C+!2RI+<VgN+X/*S,9nEY,U=W]
,palb-7:/g-n$Jm.4H_r.kE5&/1iG*/hSb00/#"50JP::1,:U?1G^gD1c.'I2)[?N2`EZT3&ioY3B9,]
3]fDb4?P_h4Zttm5!M7r~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
np
40 -.000961304 mo
0 -.000961304 li
0 64 li
56 64 li
56 16 li
40 -.000961304 li
39.5859 .999019 mo
55 16.4141 li
55 63 li
1.00001 63 li
1.00001 .999019 li
39.5859 .999019 li
.05 0 0 .25 cmyk
f
1.99999 42.3592 mo
1.99999 24.9271 1.99999 3.15338 1.99999 1.99903 cv
3.59293 1.99903 29.594 1.99903 38 1.99903 cv
38 18 li
55 18 li
55 18.1035 li
31.3112 20.3475 11.4777 27.5872 1.99999 42.3592 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[54.24 0 0 41.76 1.44 20.8 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 113 
/H 87 
/M[113 0 0 -87 0 87 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 113 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 113 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 113 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 113 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
qZ-0fncJ4]l3-S[n-/jto)O@BX8r5#rW<'$rWN3(rW`?,rWrK0rX/W4rXA`7rsf#=r=Al=!>,nB&cE@@
'DrRD(&SjF(]G9K)?(QR)uCWS*W7&X+8l30!V-<["9/Mk"RcN`#6+q?!.k43!!!'!!rW6#"TAT(#6"l,
#lY/0$N:G4%/gY7%fHq9&H3:@&ciXYrY,5Er"],FrYPGKrYbSOrYkhWrZ(nXr>tnZ!$M7@ncA7^mfVhX
mfiUnr<;p"!!\&USH/WjrWE-&rWW9*rWiE.rX&Q2r<rT5rXJf9r=Ai<r=Sr?r=f/E!>Q=J(&SjF(]G9K
)>tKQ)uCWS*W7&X+9)?3!V-<e"8;o_"Qfm\#0Hpt!7_)L!r`<$"TAT(#6"l,#lY/0$N:G4%/gY6%fHq:
&H*4=')`LA'`AdE(B,-J(]YEO)>kEO)u^iU*W7&X*s!JancA:_mK;_Wklq%ioELHYNW9%\rWE-&rWW<+
!!`E-rWrK0rX/W4rXA`7r=8c:r"/f=rY#)ArY,AJ'`JjF(AepI)#G3M)ZCZW*#fjr*;poV*rR2O!VQTn
!q$0h"98Pm"QfmZ#2'!.!6,$<"9&H&"o\`*#Q>#.$2t;2$iUS5%K-e8&,["<&c<:?'DiLC'`]!I(',3e
rYPGKrYbSOr>Y_Ur>kbVrZC_4ncJ4]rWN6'n-&Rk!!N6(nHJIfT`BZErW)s#rWN3(rW`?,rWrK0rX/W4
rXA`7r=8c:r=Jo>r"ArAq\8uDr"f/GrYYMMr>PPPrZ(kWr>tnZp&P-onH/.]rWN3&n-&[nr<2Nln-8(V
JcN7[rWN3(rW`?,rWrH/rX/W4rXA`7r=8c:r=Jo>!>6"D')`IE'GLH[r"],F!>cON(],'J)>b?O)uUcR
*W7&Y+8,a+!q$0j"T8Gm"9J]0"oAGj"n)Z"!.k4>!<33$"o\`*#Q>#.$2t;2$iUS4%K-e9&,[":&c<:?
'DrRB(&JdE(]>3J)?(QO)uUcT*W7&X+85g,!q$0j"TAMe"RQB\#4hhH!3?/#"TAT(#6"l,#lY/0$N:G3
%/gY6%fR":&-*:?&c<:?'DrRB'`f'brYGAIr##AMq\oDPr>YhY*;poU*rd>W!V-<[!rrK&"8N)h"RQB\
"onn?!.k43!<*0$#6"l,#lY/0$N:G3%/gY7%fHq9&H!.=')WCD'GLEZr"])ErYGSP(]>3J)>tKN)ZUlW
*;poV*rR2V!V-<V"6]mT"oAN%"o&9%#(loH!<36%#6"l,#lY/0$N:G3%/p_7%f?k9&H!.=')N@?'`8^D
(AepF)#Y<Q)B&Jlr>YVRr#P_Wru_(<ncAjp!s7upquc-cmKERpp'(-oaoI"neH#RQr<N<-rX&Q2rX8]6
r=/Z7rX\o<r"8i>r"JuBr"],F!>cOM(BG?hr>>PPr>GSQ!ZN$rr>Y\Tr#PbXr?(q<ncJ"WkQL#Or<;iu
OoULBrs&H-rWrK0!"/`5rX8Z5r=/Z7rX\o<r"8i>q\/lAr"])Eq\T,HrYYbU)&`Akr>PbW)uUcS*W7&Z
+8l62!r<#g"6]mI"nMrO!.k3j!!!6&#Q>#.$2t;2$iLM4%K-e8&,[":&cE@='DrRB(&SgK(Ddkd(BG?h
r##;Kq\oDPr>bbV!ZiC'r>kq\rW2Qk!WrN+liZGSnceOenckcfJcPcMrWiE.rX&Q2rX8Z5r=/]8r=Ai<
q[rc>!>?+E'DiL@(&JdD(],'G)?(QN)uL]S*W7&Z+9)B:!rE$#!s8Vk"6]m_"TS\l"n;f\!.k3[!<3<'
#lY/0$N:G3%/p_6%fHq9&H!.;')`LC'E]$`'bpQ\q\B2K(B#$M(`3,f!>uaQ)>Y9M)uLZW*??.!*W-rY
!V-9n!s8Vk"6]mf"oJQ'"RH<]#-\)Z!:Kmf#Q>#.$2t;2$iUS5%K$_6&,d(<&HNLVr=]#Aq@riB!>ZFI
(AepF)#>-K)YtEO*;poX*r[2\+7fR5!rrDh"6]mc"oSSi"n)Ze!.k3P!<3?($2t;2$iLM3%K-e9%fm4P
r=Jo>!>6"D&cr[Z')`L@'`/XB('59g(B,*O(`+"e(]bKkr>GGMr#>JPr>khXoE#'r!s7cjmf`Ljr<<'$
lilb\])[E_j8]/crX&Q2rX8Z5r!iW8r=8o?&,m.:&cE=C',(6Wr"K/H'`8^@(AepF)#G3K)?Lir)ZC]U
)uUcT*W7#Z+8#[:!s8Vk"6]me"o8Ag"o/B!"oJQ)#(loH!<*<($N:G3%/gY6%fHq<&H37<&c34='D`F@
'`f'bq\K&F!Z2^irYP\S(`<2h!ZDspr#5MQ!ZW1!r#GYUrZ:b7!WrN+li[+fmKEOnq#p$f!!`#uq?G(B
JcO=$rsAZ3rX8Z5rXJc8r"&`;!>,nA&c34<'DiL?(&8XB(],'K)>kBK)Z:WP*;poV*qo^;!s8Vk"6]jf
"o&5^"o/>t#*JtH!!!?)$N:G4%0$e:%K$_6&,d(:&c34<'DrOF'bpN[qA/oD!Z2^irYP\S(`<)er#5AM
r#GYUruUq:!WrN+o)ngkh?;X<p]fCOJcNdjrsJ]4rXA`7r!r]:!>#e?&Gm(:')N@='`&RA('59f(AepE
)#>-G)Z1QQ*!.-$*;giR!pBaD"RuZ^"nr4p!.k4M!!!B*$iLM4%K-e8%fm4Pr"/c<q\&c>q\8i@q%ifC
!>lXL)#5'J)?Lis)Z(KP*;gfW*r?$:"7?9J"SN!!"R-*_#3Z&=!4Mt-$iLM4%K-e6&,m+@&J4mQq\&c>
!>H4F'E]'a'c$Z^!>ZFI(',3eqA8uF!Z;glr##PS)&`Akr#>DNrZ1n<kl]cFrWW-%rrhQioEMN"JcP6>
rsSc6r=/]8r"&`;!>,nA&c*.<'*/d\r"K/H'_rL>(A\gJ(`2ubqAK&Hr>YVRr>kh<kl]cFq$$^"klpY_
o)O@BX8i5.r=&Z7r!rW8r=Jf;q\&`=q\0)H'bpN[q%`uI(A\gK(`4(b)#>-I)Yk?M*<.&Y!pKgJ"T&?!
"oAGe"nDl0!.k43!<*E*%K$_8%fm4Pr=Jf;q\&c>q@rZ=p_NT?q%s/N(`<2hrYbbSrYbbTq]#GQrZ(t?
kQB]FqZZj"kQUqio`Y=!K)hGB!"Ac7r=8c:!>#e>&H!+?')WC='D`CD'bpHYp_ElH(ASaI(`2ubp_j#K
ru:tVr#>MQkl^DXmf`Olq?5CRaoI"neH#LVr=8c:!>#e@&-3@Sr=Sl=q@`lD'D`F='`f'bp_NT?!Z2aj
r>5VR)&O4g)$1]o)>b?M)uL]U*U3a`"T8N""QfmX"d/kG!<!B+%f?k8&-3@Sr=Sl=q@iW<q@s&I'c$KZ
!>cOF(\nmL)&X:h)>G-I)uUcB"8rA^"TAT""P*_V#2'!.!6,$=%K-e7&,["9&c*.:'DiIF'bhAY'a,9e
'c%PZ(B50N(A\gK(`4(a)#,!H)YY0N*:*da"TJZ""S;it"98Sd"oee#!.k4M!;m?*&,Qq8&c*.;'*/d\
p_<N=!YuLcp_F#L()@]&(A\jB(]kQl)#G0P)AsFh)Z1QS*;0L0"5a7]"ni)m"oSSc"o\_i!.k3[!<!E+
&,Qq8&c34;'*/d\q@irF'_rID('>9e()?QZ!Z)UfqA02M(Dli`ru(hRr#,5Ir#>),h?<i^pB:L"q$$[!
jTYPdYQ07Tmf<=srX\l;q[rZ;q@`lD'D`CD'bpBW!YuOdp_F#L()@]&(ASdH)#kEI)#"pG)ZLcT)t3sd
"98W!"S`/t"Q]ga#4hhH!3?/#%fHq9&Gd"8')E:9'EAjK'bpHY";V^f()?QZ!>cOD(BPEi(\ejE)?1WS
)>kEP)t=$`"Sr8t"o/;_"o8G8!.k43!<!H+&Gd"8')<49'ET!a'_`@5(B53N(A/LD)#kEM)#kKQ)#G3K
)Z:WG"4@>L"o&5W"TS^Y!1a,h&,[":&HNLVq@`]>!YZ7]p_<?8";V^f()?QZ!#PVM!Z)XgoG@KD!#PML
rYY\Qq\f8Lo)n+Xm0*=jpB9pgrWM`paoI"neH#U[r"/c<!>6"@')N=C'GL6U!>Q=@'`o-d(%;t?(Ddk`
(],$B)#G3J)?:`K"4IDN"ni)j"o8?%"n;bZ!0.'V&H!+?&c`O@')E7B'GL6U!>Q=@'`o-c(%E%>(]G0O
(Ddk](B><N(\\dD)>tKI"7cTR"T8Mt"S;ln"RZHH!.k3j!;mE+&c*.;'*/d\p(RNB'_`=I()7Q"'bqK!
obRH@rtk\NrYGPMpD<iHrYPGKq\f;MquZp%r<(INrWVrtpBC6nm000`JcPcMrXer=q@`Z=!>H4A'ET!a
'_N1K()7Q"()7T#'c%Q"neM3ArYGMMrtb;ErYPVOqAB)I!#ke<!!N6&rrggSrWVrtq$$BnlilSQJcN7[
!"f#>q[roC')N=C'GL3TneD9C'bqK!#o+3j'c%Q"()@YP(B53M(AAXA(]YHP)#bEQ"9/N&"4@>P"nr0!
"Sr;n"R?5q!.k4>!;mH*&ciXYq\/]<!u2Lb'_E+I()7Q"'c%Q"()@YH(B53M(A8R@)#Y<R!sAc*"4IDP
"nVrq"n;`\"nM_G!3?2!&c*+@',(0UpCm]E'GV>W(&/LO()7Q"()7T#'c%Q"rY>JKrY>JKrY>JKneV6A
rtbGI!#YVMq\]>9rWCROrrrE*p&t9sn-%tZ])[E_j8f/kr"9#D')E:8'E]'a'bp*O()@W"()7Q"'bqK"
'c%Q"'c%Q"'c%Q"m2#^<rYG;GqAB58rr^[Prrr#tr<;Zno*+gj!!IoSSH/L!!>?+B'D<.>'`\s@'`]$I
'cIi&'c%N!()7Q"'bqK"'bqK!'c%Q"'c%Q"(&f!K(&\mJ(%rFA(]P9I(]G6Q"9Sb\"S`*""nMlr"n)Th
"n)T:!.k4$!;dE)'DN7C'bhA>'a#3d'c-c`!#GPK!#GPKrtbVLrY>JKrtYPLrtY/AqA9)Irr^[P!!Vrs
rrqfnquup"nH>!TNWB"jq%NK:!>Q=7'aYWj'c%N!()7Q"q\9)HneD-?r=o;Jr>#>Jr>"r?q\K57kQL5T
rrqusrrqfnrWVHff`6U(`W-&Q',(-Tp(RNB'^HJB()7Q"'bqK!'c%N!(AAR-'`]$J(&8XA(XiKe"nMls
"muKo"9mojrro(rJcPcM!>?+C'DE1C'bhAslP0C8bn^6or"]&DrtkA3hZNo_o)o$scij=OkQ$27[fH7<
pCmWC']0Yr'`\sI'`\sI(&o!I(&o!H(&o!H(&o!D(&f!J(&\ou"98Vs"98W%"P3eT"g@uY!:Kpc'DN7B
'bp$M!u;Ud(?6/0'`SpJ'`JjH'`SpH'`SpH'`AdH'_rID(B#$""98VA"T/Gp!.k3P!<!T+'EJp_oG%?A
q\9;N'bqK!()6ib(@2b9'`JgK'GM;]'EAm5'`8^G'`&R*"98Vu"98Vt"O7/I"hObd!9=+['D<.2'`o-c
(B"sU()7Q"'c%N!()7Q"n.ks;rtXi6!#,/Bq@r`?jTGPep&tC!oE5-taTMSHK)hGBp_<34!#>SM(B"sR
()7Q"'c%N!(@;h<'GM;]'EAmE'EAgF'EAgF'`JdF'`A^C'`SjB'`Sp1"98W!"TJYJ"T8Gp"Ng^r!7_)G
'_)nM()7T"()7T#'c%N!()7T"'c-<S!Yc@arY,>IpCmT@r=o8FrtPAE!#5>ErtP>Dq%WfCk6(bgp&tC!
blmqH!!DcpOoULB!u)Fa'_rL='a>Eh'c%N"(&\mQ'c%Q"()7Q"nJ)3A'bqDs(&&FB'E8dF'*&a/'DrR.
"98T*"nr0""jdDI"7ZNI!.k3j!!3iL'_E+A()7S^('#*H('bQi()7T"'c-<S"V_[d'GM;Z'EAgG'ESp]
'`A[F'`A[F')`LD')WFB')3.;'^>i#"nr0""k<bT"SMre"JGgI!<)s!'bpEX!#GPKneM3?r>#VQ()@W#
'bqMV(&&CD',2/['*&aB'*&[E'E&RD'DiFB'DiF<'D;P1"9eu)"TAT""TASR"SDlc"R#i;!4Mt&($QJ=
'c%Q"()7Q"pD!ZBrtY;C!YZ7^ob7?<rtG)=!"nu=rtG5Ap&tC!q#p[#p]UR"iWSlVo)nC`YQ07Tmf<5"
jq\1:()@W#'bqMY'`o'a(&/IE',2/S'Cuk9&cE@@&c*.='))P/"o/<#"o&6""kEhI"766_!.k3P!<*]6
()>jF"r.mg'c%N!q%X&I'bqDs(&SaI',))V'*&[E'DW7@&cE@?&HEI?&cNF>&cWL="TAT$"T8N""TASj
"RQ?_"7$*%!.k43!!<rN()>jF";M[f'c-NY!Yc@aq%NlD',:<Wrt>>Fq@`c>rt=r9!"el:r=\o/rWW-$
r<<!"rWUmVncSLep]CKuK)hGB!#=Z4p(dZD(AS[H'GVAY'ESp]'`/OF&eYlS')`CB')W=A&H!.=&H!.<
&H!.:"TAT%"T/H""T/H!"Q9LR"8N)i"3LUq!7_)@('59f(\ngH(\SUF'c-KXq%NiC'`/RC&c`UA')N:@
&cWFA&c3+>&bck6&c;e0"oJN#"oAH#"nr0""m,sW"8i<#"7ZJV!0.'W('#0M('59f(CV&q()I`&()@]%
(D[h\('53d(AAR?'ESp]'`/OF&eYlW&c`OC')<.=&-*=>&H<:<&H!(8&H)b0"oJN#"oAH#"nr0""m,sW
"9&Gg"5*[+!6,$;('tcm(D[f&(D[f&q\K>M(D[h\('53d(AAR?'ESp]'`/OG&eYij";2=Z&eb!Pp^mE8
rXei8q[`c=&H2h1"oJN#"oAH#"nr0""m6$["9&E&"Qol\!.k4M!!F&R()Ibc(B>6F(BtWk()I`%(\SUF
'c-T[!>H:H'ESp]'`8XA&c`OC')iIC&H3:;&G-M4%egM6"T&B%"98T$"oJN$"nr0""m6$X!rrJc"6]`:
!4Msn(BG9fp(dZD(AS[G'G^N[!YZ4]r"Jr?!YH%XrXf,ArXnr;r=8l<q[`Q6r=A`7!!N0&rWN$#r<2s#
p]UU#k6(bedfZfSJcP6>knaI<()I`&q\B5J()H`]!>H:H'ESp^'`8XA&crXX')iIE&.oNQ&-*7?&H*.>
%fR"8%KHt5%fHn6"oe`$"oST#"o/<#"m?*9"7lME!3?1`(BG9fp_NcB!u2Ob(&SaI',2/Y'*f-_'+toi
&JG'Trt,2BrXf)?rt,,>rXJo=q[WT7q@<<1qZ[!&p]^X"q??ZtrWV`nq?5+H])[E_j8e<Y!YuOfq\B2I
(AnmJ'G^N[!YZ7^r"B;J&eblj&J5ZT&HWLT&cN@@%fd1>&,6Y4%0-k<%eC/,"TS]#"o\Z#"o8B#"mH0B
"8Dot!eUKD!"0S[(Dmr*(Dmr*(Du]Z!>ZLK('53d(A\dE'ESp^'`8XB&crXW')iIE&.fHQ&-<@Q&H*.8
%f6\8%/LG-%/^8/"SW*""Si5t"T8N&"RQ?I"7cN9!.k4$!!*oQrYPtY(`+#*(`+#*(Dul_!>ZLH(A\dE
'ESp^'`8XB&dK!]&eP]e&/"mQrXSu?rX\r;r=8`7rXAc8ndP'mrri-$q?6a#klflGrW;TkOoULBob[fK
(Dmr*q%j/L(Ddi'q\K#Cq@ri@r"95H&eYcg&.fHQ&Gm":%KHt;%fHk/%/()#"TS]""TS]("T/Gf"Q0CK
!ndR*!6,$1(]bEir>,GNq%j&I(]>*N'bqM_'`f!`r"T&B!>6(F&ciRWrXf5D&.oKR&Gm";%KHt;%fHk1
%.su0$471*"oJN#"mQ6T"8W,a!hfUG!<)ue(]bEiq%j&I(]"pD(&\gS',)&n'+trl&eYchrXf2C&/"mQ
r"&`9!Y#VLr=/]6rsSf7q?us'p'('lr<3!$l3-,Lk5siIJcN7[n/)9E(`*u*q%roD!YlFcr>#8F"VVO`
',(u^',(uk&JG'T":u+V&.n^LrXJu=%1`=Gr=&]6rs\c4pBpd(l37+hq??0fp&jacjT;XdJcP6>!>uaR
)$Lip(`=/.pD<oI)#G-G(',-cr>#5E"qq[a'+trlr=])A":u.W&.n^LrXJu=%1`@Hr=&Z5!"Ac5q[3*)
r<_cnr<2s#lNH;Oir\fPJcMkP!#Y\Q"W/*o)&O7c(^(Wl(Ddqc(]>*M'c-`_!#,SN'bh>q'`8XB&dAp[
&.oKc&H!(<%f-Y6%/C;/$MXr'#jVZn"Sr;f"TJSf"5s<n!.k43!;@?5(`=/.q%s,K)#G-G(B"sO'GV;r
',:?Xr"92G&J,Nd&.naMrXJu=%1`@HrXAT1r<iH/rsA<'limClp]^!ejoaiLq#LHrK)hGBp_a/N)&O7e
(]bEir>5GL!>ZLM(B"sP'GV;r',2/Z'DrII&J5Qd&J,NO&,m%?%1NgH%K6e8$NLP5$iLG1$2Fl%#ODTo
"S`/p"SDo]"7-*\!QkCo!7_)A)$(Qlq%s,K)#Y6O()Qobr=oAJ'c$Z]r"K#A$P<s^&J5Qc%hB3^&,m%A
%1NdV%K6e7$NLP6$iLG2$2Y#"#OMZp"SW)d"R#sU!WW8k!KmGC!!F2X)AsIi)$(Qlq%s,K)#Y6P()Iea
(B#!H'Ef'_'GD/Y')W=G&.f?_&.]<N%f?e8%/pV9$4@7?$N1;/#l4f##3Q0g"mcBU"7QBZ!SII)!6,!B
)&aA2)&i5e!>l^O)#G-H(B"sR'GM8r'GD/o'E&RA&I&dX%hB3^&,m(:%K6e8$N^YC$iUM3$2k/,#P/.M
~>

%%EndBinary
grestore
np
55 18.1035 mo
55 18 li
55 18.034 55 18.0685 55 18.1035 cv
55 18.1035 li
gsave
[38.2949 45.5858 -45.5858 38.2949 2.44092 -.211426 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzz!!**$!<E3%!<E3%!<E3%!<E3%!<N<(!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8W-!s8W-!s8
Z/"9\i1"9\i1"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,&5"U,)7"pP89"pP89"pP89"pP89"pP8:#6t
J=#6tJ=#6tJ=#6tJ=#6tJ>#RC\A#RC\A#RC\A#RC\A#RC\B#mgnE#mgnE#mgnE#mgnE$47+I$47+I$47
+I$47+I$47+I$O[=M$O[=M$O[=M$O[=M$O[=M$k*OQ$k*OQ$k*OQ~>
0 0 <~z!!**$!<N<(!WrN,!sA`0"9er4"U5/8"pYA<#7(S@#RLeD#mq"H$4@4L$OdFP$k3XT%1WjX%M''\%hB3
_&.fEc&J5Wg&eYik',)&o'GM8s'bqK"()@]&(Ddo*(`4,.)&X>2)B'P6)]Kb:*#ot>*??1B*ZcCF+!;[
L+X&!Q+sJ3U,9nEY,U=W],paia-71&e-RU8i-n$Jm.4H\q.Olnu.k<,$/1`>(/M/P,/hSb00/"t40JG1
70ekC;1,:U?1G^gC1c.$G2)R6K2E!HO2`EZS3&ilW3B9)[3]];_4$,Mc4?P_g4Ztqk5!D.o5<h@s~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
np
1.99999 63 mo
1.00001 63 li
1.00001 62.3063 1.00001 54.1744 1.00001 44.0137 cv
1.3191 43.4522 1.65279 42.9003 1.99999 42.3592 cv
1.99999 51.9145 1.99999 60.1668 1.99999 63 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[2.4 0 0 22.08 .48 .160005 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 46 
/M[5 0 0 -46 0 46 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~#6tJ<"pYA<"pP;;#6tJ=#6tJ=#6tJ=#7(P>#6tM>#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=
#6tM?#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC_C#mgnE
#mgnE#mgnE#mgnE#mgnE#mgnE#m^hD#mgkD#mgnD#mgnE#RLeD#m^hD#mgkD#mgnD#mgnE#RLeD#m^hD
#m^eC#mgkC#mgnD#RLeD#RC_C#m^eC#mgkC#mgnD#RLeD#RC~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~,9e<T+X80T+sJ6V+sJ3U,9nEW,U4NX+s\EZ,9nK[,U4NZ,U=W[,paf^,:+W^,pXf`,pX`_-71#b-RL/d
,pjrc-7(#e-71#d-RL2f-n$Gi-7C5h-RU>k-mpAk-n$Jl.4HYn-RgJm-mpGm.4HYp.Ocep.Olns.4Zkt
.4Hbs.Ocet.k<)!/1W5#.P*,%.k3,%.k<)#/1W5#/1`;%.P*,$.k3)$.k<)#/1W5#/1`;%.P*,$.k3)$
.k3#"/1W2"/1W5#.P*)#.Olu".k3#".k<)!/1W5#.P*)#.Ok~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.99999 63 mo
1.47265 63 1.12501 63 1.00001 63 cv
1.00001 63 li
1.99999 63 li
1.99999 63 li
gsave
[7.21547 47.8162 -47.8162 7.21547 16.6177 4.82715 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00001 44.0137 mo
1.00001 26.224 1.00001 2.21292 1.00001 .999019 cv
2.66264 .999019 30.9189 .999019 38 .999019 cv
38 1.99903 li
29.594 1.99903 3.59293 1.99903 1.99999 1.99903 cv
1.99999 3.15338 1.99999 24.9271 1.99999 42.3592 cv
1.65279 42.9003 1.3191 43.4522 1.00001 44.0137 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[38.4 0 0 44.16 .479998 19.36 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 80 
/H 92 
/M[80 0 0 -92 0 92 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 80 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 80 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 80 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 80 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcPKEr;i#\JcN=]p]8hDJcLB&quH9gQ2lL:_#Wd%fDpL'
K)blPl2gndRfJ$?`W50&qZ>RRJcL]/p]9ga!<N;r!h]OF!:^'E!9O=P!n%)0!;uqn!1j2Q!<<2j!riA4
!;Z`X!.k40!9=1L!rE)O!94(T!N6!n!9O=Z!qQKf"1nR-!U9Z:!9F4C!UTsZ"5En<!:g/m!2fhZ!VZZh
!q-63!:'[S!.k47!9O=L!q$0h"Q9@J!9F6e!3#t^!V6Bi!q$0c"OmG.!V?AD!9sRI!UKmU"82l[!;$9E
!Oi'0!9jOR!r`6%!s7upmf_AFf)b[IJcP!7liHGSmK<%`"9eo2"U42lnc75A]E"f/n,_qY!!;Tkmf`Ij
h#Pt+rW%NMirJ]PliQSWnc\Uhn,VnWe,dAcnGofop&XU`mfVq[oEF+PdfK%?JcP3=qZ6'cmK;t^nHJmr
jT*O+[K*B/quQ6fncSgnn-&7br!)Kf`W>i7JcP$8!!2Hgn,r4anHJUjo)SOda8rmQVZ?8hmfWLkoE54!
"U+E#!<r`$#5J80!W<"M!9=.O!q?B]"S)`d"ono-!:g0.!Pe]0!;HW`"8rAt"RlT_"p>/8#64b2!<<.Q
!8deQ!qHH^"9AZ/nceLeqZd*$o`;i/rrU.>SH/NgoE,*s"8`5r"RuZd"p"r5p'8/0rW;ruL]H-/nH8=b
nHJ7`p'1R'q#SA6pB&J;QiQg^p&t0on-/@emg$K+p&^3ReH#=Go*"Lco*,7$#6sW%rWrK(blRhGpAt!i
rW1=FP5tI^p&t?tnHJ=bnco4%#RC23b5hSEp]:Bqp]C?oJcO^/rWDZno*+UfmKWau#P\Sr!R:`B!r2l8
!1j/j"7u`f"oebs#42Zd#f-Q=!rN)t!<<1V!8@MJ"S2fd#4Dfa#QP2+!QtNA!r;rq!m(G1!;H]g"n2`e
#6G/:#Oi!%#mgkD$,clB!r`3#!qubT!7h/J"RuZf#42Ws#R:V)#QP21#lY//!QbB0!mUe1!:pBm#58>f
#OMfk$-E;C!qHDT!7:f?"nW!"#6sT$mg/Fi!"%!QiW@R/Nr\qYr<E!#!=&i$#OD^"#mgkD#mg).f)b=A
m/iRRbQ.JCo*4mn!sf,;#Or')#m^hD#RLeCo*P:#h#Z%-fDpd/!!W3'q?HHp!sf,;#O_p"#m^h)#ltA>
rX.]ek5siKRfLJ/pBCX'#4Mla#jr!&$4."G$46V;lN,$-h#N-/rW`6(!=&i&#OD``#mq"H#mgqF#mq"G
$2Y)"!T*t=!h]P1!;Qip#OD`[#ltA>!=9,4$2+`$!P/?\!0@0\#4r/j#j_j%$4."G#mgt;$1A6#!QP90
!gNc1!;-Th#jVd%$4."G#mgqFm0`auYl`MWMZEMWp':a,#RLe&#m(G?$/u<6!pKcT!6>0?#Oi!"#mfl(
jU1nmrX8`5Yl`\\L&h/Xoa'sli<oJjrsJc6rsJc6c3!&.T)cb/pB^0nnHo7(nd>='!XfACrX/c7$4Hh?
rX5t4i;eH0!!)s'mg8Ij#R^tI$47.J$4H_<p'V!1$4@4KpC#FOp&Y3rlN3j^^&S-=nd4^k#R^tH$OR7K
$4Hh?oF(*q!=B4e!riAX!p0K7!;cck$1S?5$OR7K$OR7L$4@1J$OR7Kg'cR8!!<3'gB+>S\H)R7!=B/&
$3gkG$4@1K$Kql]$g%Nj"8;ls"53hB!.k4E!<*9*$46>3!Xf>Br!NK3i<o_r$O[C4$g7Zk"8N#u!riAU
!j2O1!!<N6$46J7!"8c5ljF"+$k!IO$Olq@rX8W4nI#=*r!W)trr`&urWDosrWCdSn,S%?nGr4hmgK"$
#n%.M$OdCN$k!I=$j$eF%/C85$k!IPp'^Korr`&urWDosrWDoshu]YR^B"':ndG+!!t,MG$hFc0$OdFO
$iUS5$j$eF%.t#$!riAu!r`;s!r`;Q!p'E6!;lfs$LnMQ$j$eE%/UD5$k*%CrX8E$rWDuur<)isrWE$!
gB+;R\cDI4isYnsndPC(!t,JF$iCG5$i^Y5$hj`%"8W)t"8N#t"5EtU"9&Ae!.k4F!<!;d%/LD6$k;t?
rseH+!XfAEq?m<*"8W)u"8`/t"8W)s"9/G`!r)lq!j)I1!:^I!%1E^B%.ju0$k<.Dq[EN7nI5C)!XoGE
r!WT6"8`/t"8i5t"8`/t"8;ls"7uZd"8W)f!.k4A!;[*(%K6b@%1E[S%1E[Si=5Pj!"JT0!"8c7rX/].
quZcuquZ`tqZ?]u!!Drsrr`&umK<7dZ2h*/q[<W;$k3US%,VNm%K6e7%0?qH%J:,2$OdIA$iC)("8i5t
"8`/t"8;ls"9/Ge"8;lh!.k4<!<*B-%1Mh;#S%=R%LimW%1`+A!Y,YLndPX/$k;n=!"8c7q[<?(qZHcu
q?-Ws!!E0%q#]RYp&_]'WrVc$oaV!3%fHk5%K[(L%J(#1$k*UE%0$e6$jI(J$k!FO$iUP7$iU5)"9&At
"8r;t"9/GZ"8)`k!.k47!;d5b%K[(L%fQq9%KR"KoF:I%!XfDFrX/]-q#gWuq#gTt!!:^Ro)cQ)V?#Ze
!"\r:pC735%eL23$k*U@%0$_8%/gS0"9/GF"7cNm!.k42!:(-k%g!4N&+g>4%1`4D!"So9!XoJHr<rZ8
rX8i9$Oln?q#^Tuq#f%InH-N,nGofo%Ls!Z%h9*[%h9*[%h9*[o+(j3&,He9&,He7%K[(L%f?b9%/gV:
$k*UE$j$eE%/^J6$k'oSn,i1]JcP3=!tPkP%fQt=%dac,%egM-%K[(L%egD:$k3XS$k!IA%/pV9$k!I)
"5a4L!k&*1!;$d*&.f?`%hSCE!"f#<r=8Q3pC.04%1W+Aq[3B2_uoE/p],mGklCSkpCI?9&H*+@&.]<K
&-3:Qr=8l<q[W];&,-P7%1`@H!=TG8$igb9%/C:r"5F"G!kSH1!94Uk%hSXLp^d-0!Y#VLq@*K7$k<1E
p^?*aqZQ0dliR+cJcOj3l4<q-q%*N:r"&o?%hS[M!"Su=#7_4S%LrpX%f-V;$k*RR%/:51$L\)p"9/N&
"8W/d"7$$(!29Gq&J,NcrXfAH&J,Nc&J,NL&HNFTq@NN8!=ob:%gidW%LrpX%LijW%fQn=$k3[A%/pV9
$4711"8W0!"8W/d"7$!g!eUL1!!3`E&H37C&.oKG&H`RV&.n[Mr=Au?&Glt@&.]9]&,-P:%1N^T%JgM4
$iCA+"9&Gs"TAN""R?0S!lY/1!;@'/&eYch&JFdLr"8W6"V2.T%h9-L%f[(;%Km4M$k3[B%/pV9$471?
$N:.p"TJT!"RH6Y!rE%T!87GP&c!%A&J>Zgq@NcA&JFpP!>#k=&-3:Qp^d94q@3?2rX8`5r<iT4q#p6k
!!E!!lN?>PaoIe/lOs10!>,t=&cE7B%hK<O%fd1=&,d";%1!FR%1N^S%1E[@$iUM!"98Pu"RH6]!ql\T
!7_&R'+trk'+tuJ&ciRWoF^m1":l"S%hJFF"q;"M$k3URq$[0/!"&W-j94fOliR+frrULHP5kn%'+trk
'+trk')E7C'+tuO')N:<&-`^X&.]<_&,6V;%1N^S%K$Y4$iUM5$/u*S"8)`p!qufr!eLF1!;7'+'`8UF
&ejpN!YH"Wq%3cA&J,Ka&Gcq9%fQn<$k<+C!=K>8$iUM4$1e;h"RH6d!q?Bk!lP)1!;mN/'EJj]nIkm8
r"8uArY#/A"qV@X&.]<`rXT&A%hJUKq@3E4!=K>8$iUM3$0)0`"9/Mu"9&Ah!rrE#!f$d1!;$s-',2)n
r=f8G'`Jd>&ciRWr=So<!tPqR&,Zq7%K6b:$Om"B#7:eE$47(G$@i~>

%%EndBinary
grestore
np
55 16.4141 mo
54.5331 15.948 43.9477 5.36203 40.5855 1.99903 cv
40.5857 1.99903 40.5858 1.99903 40.5859 1.99903 cv
55 16.4141 li
40.4141 1.82726 mo
40.2778 1.69095 40.1556 1.56883 40.0493 1.46265 cv
39.7962 1.20949 39.6349 1.04809 39.5859 .999019 cv
39.4937 .999019 38.9295 .999019 38 .999019 cv
38 .999019 li
39.5859 .999019 li
40.4141 1.82726 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[18.24 0 0 16.8 37.44 46.72 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 38 
/H 35 
/M[38 0 0 -35 0 35 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 38 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 38 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 38 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 38 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
gD@6trG21CnS.c3gD@[+o`4f&pM'#.gDAQDg]7=gphAo)gDBG]_Z9OIib7Tnr>,)B[/g2?m:c''rtk;D
l5$c-nn@<$pD;p,^B"!.pLs85n7MP6i>1&Gh>mFdq.K/.qdodDh%oM\`;opOqIfM6mq(Pqp_L7;r+Ge:
l"0f/h\NU"!,)+>q.8o(gD7I&q#CD+rFYD-ojlemec=V.!Fo[1AaO$_(@M7D!!?Y=@q>CHp13`(rtXT1
qA-I=#@ChH@:NhZAbfm&A,[5B(?$%:!!Z\6?=7/M@f9j5A,^!.@K7,@'`o-d(#p(A!;ca%=^#'9?=.,L
@f'[#@f$l<($-4\!9*ta=BSg2>?tNA@,tbs')`LC'`Ad0(@;+D!"2e-='8[1>?kK@?t&P6pgO.7rY,5E
rY=f9r"c[?%9$5+<EE:*>$P?=?=..=@d[Y)&cNFA'E/^E($ZRB!"Vn';H-Xs<`iL.>?kK@?XWe?r*f8+
rXo,Br=f/ErY=`7\H)R.&Pc/!;,U=m<EE7)>$G6;?=...?iUc;&cE@A'E&XE(&A^<("**C!"qpu:/=\_
;H$Op<`iL.>$P?>?i+7'?iL]9&cNFA'E/[G(&ep9($bkC!#%ps92&&U:f1+g<)lt#=^#$6?!cu,!"]&?
r=T#A!YZ1Zr=f/Eo+h6>[/^n184cEH92//X:f:4j<E3+&>$>0:n6c2+r=B&C&J,QR&cNFB'E&X9't"#W
77Ka:8P2WL9MSA[;,^Fo<E<4)>?bA5?MRt*?MtB9&.]<M&H3:?')iRC'_E-L!<3$95sn%07Rp!@91quR
:Jand<)lq"=BSg3>kD>'%Lr@HrX\u>r=T#Ar=f/EobGaPkPuSf5X@_)77Ka;8P2WL:/=\_;H$Rr<`iL/
>?tQApg*h-rXSl;rXf&@r=])Cr=nu@k5`g.*'HJN5sRb(77Kd<8P2WL9i"S_;H$Oq<``F->[7&0rs\l9
r=8f;r=Jr?r=])CrY5,B!!'G-*BQ>F5!M:u5sn%07S$*C91quS:f1+h<E<1'=B\r)>l>*1%K6k9&,m.=
&cNFA'E/^B't"#[3&s&^4?Yno5XIe*77Kd=8kViO:/=_a;cHd"='/U/qHX%.rXA`7rXSo<r=Jr?rXo2C
rY#/Cr"QO=s#(rX3BB5a4[)+r5sn%/77Tm@92&&T:f1(f<)m"$=^#&.>lG-0%/p_7%fQt=&H34>&H3:?
')iRC'[-RB!!"hS2'+\93]]Ad5!M:u6:=737S$*D92//W;,L7k<``C+>Q.n-$N:G4%/gV:%LimG%fR";
&H3:?')iRE']f>B!$s<R1GgsI2E3]X4$>bl5X@_(77B^;8kViO:/=\a;H-Xt=BSg3rX/T3!XoJFrXA`7
rXSl;rXf#?rY#/CrW'G.,q^i)0etRB2E*QT3]fGf5<qJ#6UX@484cHJ9hnM^;GpFn<`iIS~>

%%EndBinary
grestore
np
56 18 mo
55 18 li
55 17.0582 55 16.4942 55 16.4141 cv
55 16.4141 li
40.5859 1.99903 li
40.5859 1.99903 40.5859 1.99903 40.5859 1.99903 cv
40.5859 1.99903 li
40.5859 1.99903 li
40.5264 1.93954 40.4691 1.88225 40.4141 1.82726 cv
39.5859 .999019 li
38 .999019 li
38 -.000961304 li
40 -.000961304 li
56 16 li
56 18 li
gsave
[5.76947 -9.39511 9.39511 5.76947 40.1318 20.1846 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~$k*OQ$k*OQ$k3XT%1NaU%1NaU%1NaU%1NaU%1WjX%LrsY%LrsY%LrsY%LrsY%M''\%hB0]%hB0]%hB0]
%hB0]%hB3_&.fBa&.fBa&.fBa&.fBa&.fEc&J5Te&J5Te&J5Te&J5Te&J5Wg&eYfi&eYfi&eYfi&eYfi
&eYfj',)#m',)#m',)#m',)#m',)#n'GM5q'GM5q'GM5q'GM5r'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu
'bqGu'bqGu'bqGu'bqGu()@Z$()@Z$()@Z$()@Z$()@Z$(Ddl((Ddl((Ddl((Ddl((Ddl((`4),(`4),
~>
0 0 <~5<qJ!5X7S"5X@\%5sdn)6:4+-6UO4.6UX=16q'O577Ka97Rfj:7Ros=7n?0A84cBE8P)KF8P2TI8kVfM
91qrP9MA,R9MA/T9heAX:/4S\:JXb^:JXe`:f("d;,L4h;GpCj;GpFl;c?Xp<)cjt<E3%!<E3(#<`W:'
='&I*=BJ[-=BJ[.=]nm2>$>*6>?b<9>?b<:>[1N>?!U`B?=$rE?=$rF?XR8M@:<SQ@:<SR@U`eV@q0"Z
A7T4]A7T4]AS#FaAnGXeB4kjiB4kjiBP;'mBk_9qC2.KuC2.KuCMR^$Ci!p(D/F-,D/F-,DJj?0Df9Q4
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
np
55 18 mo
38 18 li
38 1.99903 li
39.5175 1.99903 40.462 1.99903 40.5855 1.99903 cv
43.9477 5.36203 54.5331 15.948 55 16.4141 cv
55 18 li
40.0493 1.46265 mo
39.7974 1.21091 39.635 1.04872 39.5859 .999019 cv
39.4942 .999019 38.9294 .999019 38 .999019 cv
38 .999019 li
38.9295 .999019 39.4937 .999019 39.5859 .999019 cv
39.6349 1.04809 39.7962 1.20949 40.0493 1.46265 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[18.24 0 0 18.24 37.44 45.28 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 38 
/H 38 
/M[38 0 0 -38 0 38 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 38 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 38 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 38 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 38 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
r"8E2nIr;1s%rVjr_i_oqc!JnrDiVnr`B%1n.P4(_#X-.s%rYkr)3Dj!`W)sr`&ksq,[Jr!*K44n.P4(
!#4,eg].=Nr)*Gkpf%/kqc3JnrDrt2mh5+'rtP&)_Z0[5r_`Pjpf%/krDi\prDru$mh5O3r=\f;[/g,%
r_iJhr`&bpqH!Prrt=Q/ob4_5r_`Pjqc!JmrD`brq,[Gq!*JFtoFnt>pAk+gr_iMir_rr!<)iisq,[Gq
kn<S$fDsb.r_`Pjpf%,jr`/\nr`9.6&eXLDne:Nn`;oj6r_iJhqc*Ppq,[Gqrt4Z3q%NN:[/g5(qbm/e
r`&hrpK%8p!"o2CnIk:([/g2'rDNDh!*&kqrDiYorE&D"mM!86q#CFl;>a>d;uK\o<<6-#pf@Drrt4c6
mLoR7ec=V.!_uNgr_iJhqc*Moq,[GqrXn`7q\/l?pCluq`rH38:/=^c;YO,g<;T\j<rZ8$&H3:9&c`U=
')`L?'=@fD91quS:f7!d!`W)srD`_qq,[GqrXf&@!"nW3ob4_5#"M9Y9heD[pJ_)k"&r6"<;fhl<WZ?(
&,d(=&b-M*'>"8A!!l"`8P2ZN:Jasa;uK\o<VBGn=8ia0&H*45'(Q^c!9*tc6q'U:8P;`P:Jk$f;u0Jk
<V]Ys='#k0&,m.=&bcq.'C>eA!"2([6q0[=8k_rS:f@0hrD`\p!`i?%q,[J)rX\r=rXnr=ob76:[/^V#
5sn".7S-3G9MJ;ZrDWPlrDiVn!ETa0%fHq;&H*4='(6LA!"M.V5XIh,77^!C9MJ;Z;Z9Vo<<#qo<V]\p
%K6k9&,m.>&cWL2'=e,A!#%FW5!VD#6q'U:8kVlR:Jk"h;cETnrDiYo!ET^/%K-e9&,d%@&J5ZP'D`@=
'@HmA!"q:Q4?Yqp6:4.17nQBI9i"S_;uKYs<E3#r<Vfbr%/gY7%fHq;&-*@B&bZk6'C,YA!#.@P3]fGg
5XIe)77Kg?92&)V;,U?l<;T\k<WEO,%/gY7%fR";&H3::')WFB'=@fT1cIBS4$,Si5sdq,77TpA92//Y
;H*Kmr)NVprsSc6rXAi;rXSo<rXf#?q\&Z;[/^su1c@9Q3]fJg5X@_(7Rp!A8k_rT;,RHo<)ifr!`i?%
r)Wb(rXA`7rXSl;rXf#?rY"r=[fHF.(bd^$2)[ES3]oPi5XIe*7S$*C9MJ8Y;H!KnrDi_q!=B/3$iUS6
%K-e9&,d(=&bQg_!9aD$0/,+91c76P3]fGf5=%V'6q9d?8k_uU;,UBh<W6#!$2t;2$iLM5%K6k9&,m+?
&cNF;'B]AA!$!RC0JG4;1c@<R3]oPh5XIh+7Rp$B92&)W;,UBk<W,tu$2t;1$iUS5%K6k9%g!:S&cNF<
'*&$@!$3U?/MAe31,CdG3B9/`5!M;!6UaI88P;`P:Jaqe<;]br<rE@($N:G3%/p_7%K[.O&H*4?')E9L
!#d46.kE;+0JP=?2)dNV4$>eo6:+(/7n?6F9a"3f;,UBm<W6&!#lY//$N:G4%/gY7%fR">&,m.=&c<9L
!<4Af-n6`!/het71c73O3BB8c5=%V'6q9d>8k_rT:f:4krDih&r<`H1r<rT5r=/`9rX\r=rXo)AbQ-o.
!$hIi,:P)n/MAe41,UsK3B92a5!VG$6q'R:8P;`P:f1+i<E<-*#Q>#.$2k51$iLM5%K-e9&,d(=&cWL*
!7:cm+X/0Y-R^Do/1rS11,CdH3&s#^5!M>"6UXC68P2WM:/Fed<)ro&r<WB/rX/T3rXA`7rXSl;rXf&@
!##82\,[is+X/-W-7:5l.kNA-0f(XE2`WlZ4?c"r6:4448P)NJ9i"S`;[31*!XK#9r<`H1!"8c6rXAc8
r=8f;r=JuA[/_0d*?QFL,UOid.4Zr%0/,.;2)[ES4$,Ph5XIe*#Xq6T8kViQ:f7)o!!iK/rX&N1rX8Z5
rXJf9rXT)B&J5Y`!!=/[*ZcLI+sSB\-R^Gp/MAe30f1aH3&s&`5!M>"6UXC68P2ZN:'CM!rWiE.r<`H1
r<rT5r=/`9!"]&?rt3BRli8=K)B0Y;+<VgQ,pjug.P*/)0JP@?2E*WV4$5_m5sdq.7nH9F9Rm~>

%%EndBinary
grestore
np
55 18 mo
55 18 li
55 16.4141 li
55 16.4141 li
55 16.4942 55 17.0582 55 18 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 2.88 54.24 45.28 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 6 
/M[3 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~()@Z$()@Z$()7T#'bqJu'c$~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~AS#F_AS#:[A7/hU?XR;J?=3~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
40.5859 1.99903 mo
40.5858 1.99903 40.5857 1.99903 40.5855 1.99903 cv
40.3779 1.79134 40.1978 1.61116 40.0493 1.46265 cv
40.1556 1.56883 40.2778 1.69095 40.4141 1.82726 cv
40.5859 1.99903 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.92 39.36 61.12 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 4 
/M[4 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%1NaU%1NaU%1NaU%1NaU~>
<~!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!~>
<~5X7S"5X7S"5s[e&5s[e&~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
40.5859 1.99903 mo
40.5859 1.99903 li
40.4141 1.82726 li
40.4691 1.88225 40.5264 1.93954 40.5859 1.99903 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.92 39.84 61.12 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 4 
/M[3 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%1NaU%1NaU%1NaU~>
<~!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!~>
<~5X7S"5X7V$5s[e&~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
40.5855 1.99903 mo
40.462 1.99903 39.5175 1.99903 38 1.99903 cv
38 .999019 li
38.9294 .999019 39.4942 .999019 39.5859 .999019 cv
39.635 1.04872 39.7974 1.21091 40.0493 1.46265 cv
40.1978 1.61116 40.3779 1.79134 40.5855 1.99903 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[3.84 0 0 2.4 37.44 61.12 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 5 
/M[8 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X@\%~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
56 16 mo
40 16 li
40 -.000976563 li
56 16 li
cp
gsave
[7.00894 -7.45573 7.45573 7.00894 43.2754 13.0259 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%!<E3%!WiE)!WiE)!WiE)!WiE)!s8W-!s8W-!s8W-!s8W.
"9\i1"9\i1"9\i1"9\i2"U,&5"U,&5"U,&5"U,&6"pP89"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ>#RC\A
#RC\A#RC\A#RC\B#mgnE#mgnE#mgnE#mgnF$47+I$47+I$47+I$47.K$O[=M$O[=M$O[=M$O[@O$k*OQ
~>
0 0 <~zzzzzzzzzzzzzzz!!**$!WiE*!s8W."9\l3"U5/8#6tJ>#RC_C#mgqG$4@4L$k*OR%1NdW%M''\&.fBa
&J5Tf&eYik',2,p'bqH!()@]&(Ddo*(`=2/)B'M5)]Kb:*$$%?*?H7C+!2RI+<VgN+X/*S,9nEY,U=W]
,palb-7:/g-n$Jm.4H_r.kE5&/1iG*/hSb00/#"50JP::1,:U?1G^gD1c.'I2)[?N2`EZT3&ioY3B9,]
3]fDb4?P_h4Zttm5!M7r~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
np
48 63 mo
39.7285 63 33 56.2705 33 48 cv
33 48.168 33.0195 48.332 33.0254 48.5 cv
33.0468 47.8528 33.1094 47.2152 33.2104 46.591 cv
35.4876 47.2181 37.9356 47.7077 40.5109 48.034 cv
40 48.5449 li
45.9531 54.5 li
45.957 54.4922 li
45.9668 54.5 li
52.0972 48.3625 li
55.9272 48.1035 59.5328 47.4878 62.7891 46.5906 cv
62.8904 47.2153 62.953 47.8523 62.9746 48.5 cv
62.9805 48.332 63 48.168 63 48 cv
63 56.2705 56.2715 63 48 63 cv
45.957 48.5859 mo
45.8329 48.4618 li
45.9128 48.4646 45.9931 48.4673 46.0732 48.4698 cv
45.957 48.5859 li
gsave
[12.6892 0 0 12.6892 47.9058 63.5 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~zzzzzzzz!<E6(!sAc2"pP;<#RLhF$OdFQ%Ls![&.oKe',)&p'c%T%(`4,/)B0Y9*?H7D+<VgO+sS<X,p
alc-R^Dm.P*,&/M8\00JP:;1G^jF2)[?O3&ioZ3]fGd4[)%o5<h@t5X7S#5sdn*6UO4/6q'O67Ros=7n
?0B8P2TJ92&#R9hnGZ:Jakb;,U:j;cH^r<E<.%='/R-=^#!5>?b?;?!UcC?XI2K@:<VTA7T7_AnG[gBP
;*oC2.O#D/F0.Df9T6EH-#?FEDYJG'8(RG^+L[H[C-fI=6Qn~>
<~Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR?['[6L[^WfX]"5Md]Y;.q^qmk(_o0O5`lH-Ab0%oO
bg"GZd*U1gdaQ^rf%8O+g"P39gtgfChr*JQioB+\jlbgjkiqBum-X3.n*fc:o(2JFp%A(Sq"ad_qu-Km
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /4 /Gradient get_res exec grestore
np
48 32 mo
39.1602 32 32 39.168 32 48 cv
32 56.8359 39.1602 64 48 64 cv
56.832 64 64 56.8359 64 48 cv
64 39.168 56.832 32 48 32 cv
48 33 mo
56.2715 33 63 39.7295 63 48 cv
63 56.2705 56.2715 63 48 63 cv
39.7285 63 33 56.2705 33 48 cv
33 39.7295 39.7285 33 48 33 cv
0 .5 1 0 cmyk
f
56 44.4551 mo
53.043 41.5 li
45.957 48.5859 li
42.959 45.5859 li
40 48.5449 li
45.9531 54.5 li
45.957 54.4922 li
45.9668 54.5 li
56 44.4551 li
0 0 0 1 cmyk
f
46.0732 48.4698 mo
45.9931 48.4673 45.9128 48.4646 45.8329 48.4618 cv
42.959 45.5859 li
40.5109 48.034 li
37.9356 47.7077 35.4876 47.2181 33.2104 46.591 cv
34.3647 39.4619 40.5507 34 48 34 cv
55.4489 34 61.633 39.4622 62.7891 46.5906 cv
59.5328 47.4878 55.9272 48.1035 52.0972 48.3625 cv
56 44.4551 li
53.043 41.5 li
46.0732 48.4698 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[30.72 0 0 15.84 32.64 15.04 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 64 
/H 33 
/M[64 0 0 -33 0 33 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 64 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 64 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 64 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 64 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
_#V=j!#i[2_Z7FO`#Sar_)]I7]`?%nr#W[;`rN^Oa<CC'_*Z6D\H'bsp`mUEb5f!ObU)s/_+MrP[/eK"
oI%IMcN(9OcmeN7_,J_]YlN3&n12=Vdf?QOe1L)?_->FiXT6p*ln?1^f)ViOfJ;_I_.;4!W;tX/kVU+h
gAn,Ogc":Q_/.p-V#]@3j>atphZ0DOi&]jY_0+]:i;g[o_E7f\_0Nou^Au29r]\/H`;mRO`^'Ge_1BW,
])]o>qEr)RaT/jOb!l(o_2?D9[fFWBp.)rZblG-Oc:RY"_3<1FZN/?Fnk6fcd/^EOdS94*_4/mRY5m'J
mSCZkeGu]Oel(j4_5,Z_WrUdOl;YTuf`7uOg/dE<_5uAkVZ>LSk#fI(h#O8OhHJuD_6r/#UB'4Wi`s=1
i;hg:_#V>Y!+*LT_Z9]:J,~>

%%EndBinary
grestore
np
48 48.5 mo
47.3527 48.5 46.7103 48.4898 46.0732 48.4698 cv
53.043 41.5 li
56 44.4551 li
52.0972 48.3625 li
50.7572 48.4531 49.3894 48.5 48 48.5 cv
45.8329 48.4618 mo
44.0102 48.3972 42.2324 48.2521 40.5109 48.034 cv
42.959 45.5859 li
45.8329 48.4618 li
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~!!!$$!sAc3#7(VC$OdIS%hK<c',2/s(Dn#.)]Tk>+!;^N,:"Q^-R^Dn/1iJ-0JP==1c70M3&s#]4?Ykm
5<qM$6UX@47n?3D92&&T:Jand;cHat='/U/>?kH??XR;O@q9._B4u!oCM[j*DfB]:F*)PJGBeCZH[L6j
It3*%K7nr5LPUeEMi<XUO-#KePE_>uQ^F20S"-%@T:hmPUSO``Vl6SpX/rG+YHY:;Za@-K\%&u[]=bhk
^;%J"_Sa=2`lH0Bb0/#RcHjkbdaZguf@\d1gYCWAhr*JQj5f=akNM0qlg4$,n*ol<oCV_Lp\=R\qu$El
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
np
48.3186 33.0033 mo
48.3184 33.0033 li
48.3186 33.0033 li
47.6814 33.0033 mo
47.6816 33.0033 li
47.6814 33.0033 li
48.3077 33.0031 mo
48.3072 33.0031 48.3072 33.0031 48.3067 33.0031 cv
48.3077 33.0031 li
47.6923 33.0031 mo
47.6933 33.0031 li
47.6928 33.0031 47.6928 33.0031 47.6923 33.0031 cv
48.2968 33.0029 mo
48.2962 33.0029 48.2953 33.0029 48.2948 33.0028 cv
48.2957 33.0029 48.2958 33.0029 48.2968 33.0029 cv
47.7032 33.0029 mo
47.7042 33.0029 47.7043 33.0029 47.7052 33.0028 cv
47.7047 33.0029 47.7037 33.0029 47.7032 33.0029 cv
47.7145 33.0027 mo
47.7154 33.0027 47.7158 33.0026 47.7167 33.0026 cv
47.7157 33.0026 47.7155 33.0027 47.7145 33.0027 cv
48.2855 33.0027 mo
48.2845 33.0027 48.2843 33.0026 48.2833 33.0026 cv
48.2842 33.0026 48.2845 33.0027 48.2855 33.0027 cv
48.2738 33.0025 mo
48.2733 33.0024 48.2724 33.0024 48.2719 33.0024 cv
48.2729 33.0024 48.2729 33.0024 48.2738 33.0025 cv
47.7262 33.0025 mo
47.7271 33.0024 47.7271 33.0024 47.728 33.0024 cv
47.7275 33.0024 47.7267 33.0024 47.7262 33.0025 cv
48.2624 33.0023 mo
48.2614 33.0022 48.2614 33.0022 48.2604 33.0022 cv
48.2609 33.0022 48.2619 33.0022 48.2624 33.0023 cv
47.7376 33.0023 mo
47.7381 33.0022 47.7391 33.0022 47.7395 33.0022 cv
47.7385 33.0022 47.7386 33.0022 47.7376 33.0023 cv
48.2508 33.0021 mo
48.2503 33.002 48.2494 33.002 48.2489 33.002 cv
48.2494 33.002 48.2504 33.0021 48.2508 33.0021 cv
47.7491 33.0021 mo
47.7496 33.0021 47.7506 33.002 47.751 33.002 cv
47.7505 33.002 47.7497 33.002 47.7491 33.0021 cv
47.7605 33.0019 mo
47.761 33.0019 47.7621 33.0019 47.7626 33.0018 cv
47.7621 33.0019 47.761 33.0019 47.7605 33.0019 cv
48.2395 33.0019 mo
48.239 33.0019 48.2379 33.0019 48.2374 33.0018 cv
48.2379 33.0019 48.239 33.0019 48.2395 33.0019 cv
48.1737 33.001 mo
48.1727 33.001 48.1714 33.001 48.1704 33.0009 cv
48.1713 33.001 48.1727 33.001 48.1737 33.001 cv
47.8263 33.001 mo
47.8273 33.001 47.8287 33.001 47.8296 33.0009 cv
47.8286 33.001 47.8273 33.001 47.8263 33.001 cv
48.163 33.0009 mo
48.1615 33.0009 48.1603 33.0008 48.1588 33.0008 cv
48.1603 33.0008 48.1616 33.0009 48.163 33.0009 cv
47.837 33.0009 mo
47.8384 33.0009 47.8397 33.0008 47.8411 33.0008 cv
47.8396 33.0008 47.8385 33.0009 47.837 33.0009 cv
48.152 33.0008 mo
48.1505 33.0007 48.1483 33.0007 48.1468 33.0007 cv
48.1487 33.0007 48.1501 33.0007 48.152 33.0008 cv
47.848 33.0008 mo
47.8499 33.0007 47.8513 33.0007 47.8532 33.0007 cv
47.8517 33.0007 47.8495 33.0007 47.848 33.0008 cv
48.1405 33.0006 mo
48.1385 33.0006 48.1374 33.0006 48.1353 33.0006 cv
48.1372 33.0006 48.1386 33.0006 48.1405 33.0006 cv
47.8595 33.0006 mo
47.8614 33.0006 47.8627 33.0006 47.8646 33.0006 cv
47.8626 33.0006 47.8615 33.0006 47.8595 33.0006 cv
48.1286 33.0005 mo
48.1271 33.0005 48.1249 33.0005 48.1234 33.0005 cv
48.1248 33.0005 48.1272 33.0005 48.1286 33.0005 cv
47.8713 33.0005 mo
47.8728 33.0005 47.8751 33.0005 47.8765 33.0005 cv
47.875 33.0005 47.8728 33.0005 47.8713 33.0005 cv
47.8829 33.0004 mo
47.8848 33.0004 47.8864 33.0004 47.8882 33.0004 cv
47.8867 33.0004 47.8844 33.0004 47.8829 33.0004 cv
48.1171 33.0004 mo
48.1156 33.0004 48.1132 33.0004 48.1117 33.0004 cv
48.1136 33.0004 48.1152 33.0004 48.1171 33.0004 cv
48.1056 33.0004 mo
48.1036 33.0003 48.1016 33.0003 48.0996 33.0003 cv
48.1015 33.0003 48.1037 33.0003 48.1056 33.0004 cv
47.8944 33.0004 mo
47.8962 33.0003 47.8985 33.0003 47.9004 33.0003 cv
47.8984 33.0003 47.8964 33.0003 47.8944 33.0004 cv
48.094 33.0003 mo
48.092 33.0003 48.0901 33.0003 48.0881 33.0002 cv
48.09 33.0003 48.0921 33.0003 48.094 33.0003 cv
47.906 33.0003 mo
47.9079 33.0003 47.91 33.0003 47.9119 33.0002 cv
47.9099 33.0003 47.908 33.0003 47.906 33.0003 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~!!!!"!<N<)!sA`1"U5/9#7(SA#mq"I$OdFQ%1WjY%hK9a&J>]i',2/r()Ic((`=20)B0V8*$$%@*ZlIH
+<VgN+sJ6V,U=Z^-71)f-n$Mn.Olr!/1`A)/hSe10JG491,:XA1c.'I2E!KQ3&ioY3]]>a4?Pbi5!D1q
5<qJ"5sdn*6UX=277Ka:7n?0B8P2TJ92&#R9hnGZ:Jakb;,U:j;cH^r<E<.%='/R-=^#!5>?kE=?!^iE
?XI2K@:<VS@q0%[AS#IcB4kmkBkhBuCi!s*DJjB2E,]f:EcQ5BFEDYJG'8(RG^+LZH?spbI!g?jIXZcr
~>
<~!!!$$!sAc3#7(VC$OdIS%hK<c',2/s(Dn#.)]Tk>+!;^N,:"Q^-R^Dn/1iJ-0JP==1c70M3&s#]4?Ykm
5<qM$6UX@47n?3D92&&T:Jand;cHat='/U/>?kH??XR;O@q9._B4u!oCM[j*DfB]:F*)PJGBeCZH[L6j
It3*%K7nr5LPUeEMi<XUO-#KePE_>uQ^F20S"-%@T:hmPUSO``Vl6SpX/rG+YHY:;Za@-K\%&u[]=bhk
^;%J"_Sa=2`lH0Bb0/#RcHjkbdaZguf@\d1gYCWAhr*JQj5f=akNM0qlg4$,n*ol<oCV_Lp\=R\qu$El
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
np
48.0822 33.0002 mo
48.0802 33.0002 48.078 33.0002 48.0759 33.0002 cv
48.0783 33.0002 48.0798 33.0002 48.0822 33.0002 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.9178 33.0002 mo
47.9201 33.0002 47.9217 33.0002 47.924 33.0002 cv
47.922 33.0002 47.9198 33.0002 47.9178 33.0002 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.0705 33.0002 mo
48.068 33.0001 48.0668 33.0001 48.0643 33.0001 cv
48.0667 33.0001 48.0682 33.0001 48.0705 33.0002 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.9295 33.0002 mo
47.9318 33.0001 47.9333 33.0001 47.9357 33.0001 cv
47.9331 33.0001 47.932 33.0001 47.9295 33.0002 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.0588 33.0001 mo
48.0568 33.0001 48.0542 33.0001 48.0522 33.0001 cv
48.0541 33.0001 48.0569 33.0001 48.0588 33.0001 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.9412 33.0001 mo
47.9431 33.0001 47.9458 33.0001 47.9477 33.0001 cv
47.9457 33.0001 47.9432 33.0001 47.9412 33.0001 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.953 33.0001 mo
47.9549 33.0001 47.9572 33.0001 47.9591 33 cv
47.9571 33.0001 47.955 33.0001 47.953 33.0001 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.047 33.0001 mo
48.045 33.0001 48.0429 33.0001 48.0409 33 cv
48.0428 33.0001 48.0451 33.0001 48.047 33.0001 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.0352 33 mo
48.0332 33 48.0301 33 48.0281 33 cv
48.0305 33 48.0328 33 48.0352 33 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.9648 33 mo
47.9672 33 47.9695 33 47.9719 33 cv
47.9698 33 47.9668 33 47.9648 33 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.0236 33 mo
48.0211 33 48.0184 33 48.0159 33 cv
48.0188 33 48.0207 33 48.0236 33 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.9764 33 mo
47.9792 33 47.9812 33 47.984 33 cv
47.9815 33 47.9789 33 47.9764 33 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.9883 33 mo
47.9921 33 47.9962 33 48 33 cv
47.9959 33 47.9923 33 47.9883 33 cv
48.0117 33 mo
48.0077 33 48.004 33 48 33 cv
48.0038 33 48.0079 33 48.0117 33 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
62.9746 48.5 mo
62.953 47.8523 62.8904 47.2153 62.7891 46.5906 cv
62.8346 46.5781 62.8804 46.5654 62.9258 46.5527 cv
62.2114 39.1258 56.0628 33.2627 48.5116 33.0086 cv
56.5472 33.2791 63 39.9006 63 48 cv
63 48 li
63 48 li
63 48.168 62.9805 48.332 62.9746 48.5 cv
48.5107 33.0086 mo
48.507 33.0084 48.5041 33.0083 48.5003 33.0082 cv
48.5038 33.0083 48.5072 33.0084 48.5107 33.0086 cv
48.4993 33.0082 mo
48.496 33.0081 48.4927 33.008 48.4894 33.0079 cv
48.4929 33.008 48.4958 33.0081 48.4993 33.0082 cv
48.4874 33.0078 mo
48.4846 33.0077 48.481 33.0076 48.4782 33.0075 cv
48.4812 33.0076 48.4844 33.0077 48.4874 33.0078 cv
48.4759 33.0074 mo
48.4731 33.0073 48.4693 33.0072 48.4665 33.0071 cv
48.4695 33.0072 48.4729 33.0073 48.4759 33.0074 cv
48.4648 33.0071 mo
48.4615 33.007 48.4581 33.0069 48.4548 33.0068 cv
48.4583 33.0069 48.4613 33.007 48.4648 33.0071 cv
48.4538 33.0068 mo
48.45 33.0066 48.4475 33.0066 48.4437 33.0065 cv
48.4472 33.0066 48.4503 33.0067 48.4538 33.0068 cv
48.4415 33.0064 mo
48.4382 33.0063 48.4356 33.0062 48.4323 33.0061 cv
48.4358 33.0062 48.438 33.0063 48.4415 33.0064 cv
48.4304 33.0061 mo
48.4044 33.0053 48.3787 33.0047 48.3527 33.0041 cv
48.3788 33.0047 48.4043 33.0053 48.4304 33.0061 cv
48.3524 33.0041 mo
48.3491 33.004 48.3463 33.0039 48.343 33.0039 cv
48.346 33.0039 48.3494 33.004 48.3524 33.0041 cv
48.3406 33.0038 mo
48.3377 33.0037 48.3351 33.0037 48.3322 33.0036 cv
48.3348 33.0037 48.338 33.0037 48.3406 33.0038 cv
48.3289 33.0035 mo
48.3265 33.0035 48.3231 33.0034 48.3207 33.0034 cv
48.3237 33.0034 48.3259 33.0035 48.3289 33.0035 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[16.32 0 0 17.28 47.52 14.56 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 34 
/H 36 
/M[34 0 0 -36 0 36 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
hZ2OJh^Rahec=SDh_4L"blHW>h_b00_uS[8iB%!"]`?q4l9P&.]`?q7o1&+:]`?q9r(H*D]`@(@r@$Q#
]`@CLoIJg#]`@^XlRq(#]`A$di\B>#_Z9Q6h_a5(bQ.26h`'G1eH"h6h`BY:h>lI6h`]kCk5a*6h`p"J
n,U`6ha64Sq#JA6haQI]!/nMjham!opQ<,hhb3O+mZtNdhbO'=jda!ai_f\PhkIdalW!OVhl+3goN(<Z
hlXQlrE8/`hm:0"quGVZhmpo1o)RZThnRY@l2]^Nho+=Ni;hbHhob']fDsfBhpCflnGqGHheV-#kQ'06
heh9*nGpf6hf.K3q>eG6hfIc>s6%&qhfe;Pp?fNnhg+hbmIT38J,~>

%%EndBinary
grestore
np
63 48 mo
63 48 li
63 48 li
63 48 li
63 48 mo
63 39.9006 56.5472 33.2791 48.5116 33.0086 cv
48.5107 33.0086 li
48.5072 33.0084 48.5038 33.0083 48.5003 33.0082 cv
48.4993 33.0082 li
48.4958 33.0081 48.4929 33.008 48.4894 33.0079 cv
48.4885 33.0078 48.4884 33.0078 48.4874 33.0078 cv
48.4844 33.0077 48.4812 33.0076 48.4782 33.0075 cv
48.4773 33.0075 48.4769 33.0075 48.4759 33.0074 cv
48.4729 33.0073 48.4695 33.0072 48.4665 33.0071 cv
48.4655 33.0071 48.4657 33.0071 48.4648 33.0071 cv
48.4613 33.007 48.4583 33.0069 48.4548 33.0068 cv
48.4538 33.0068 li
48.4503 33.0067 48.4472 33.0066 48.4437 33.0065 cv
48.4432 33.0064 48.442 33.0064 48.4415 33.0064 cv
48.438 33.0063 48.4358 33.0062 48.4323 33.0061 cv
48.4318 33.0061 48.4308 33.0061 48.4304 33.0061 cv
48.4043 33.0053 48.3788 33.0047 48.3527 33.0041 cv
48.3524 33.0041 li
48.3494 33.004 48.346 33.0039 48.343 33.0039 cv
48.3425 33.0038 48.341 33.0038 48.3406 33.0038 cv
48.338 33.0037 48.3348 33.0037 48.3322 33.0036 cv
48.3308 33.0036 48.3303 33.0036 48.3289 33.0035 cv
48.3259 33.0035 48.3237 33.0034 48.3207 33.0034 cv
48.3198 33.0034 48.3195 33.0033 48.3186 33.0033 cv
56.4435 33.1735 63 39.835 63 48 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
33.0254 48.5 mo
33.0195 48.332 33 48.168 33 48 cv
33 48 li
33 48 li
33 39.9006 39.4528 33.2791 47.4884 33.0086 cv
39.9372 33.2627 33.7886 39.1258 33.0723 46.5527 cv
33.1182 46.5656 33.1643 46.5783 33.2104 46.591 cv
33.1094 47.2152 33.0468 47.8528 33.0254 48.5 cv
47.4893 33.0086 mo
47.4928 33.0084 47.4962 33.0083 47.4997 33.0082 cv
47.4959 33.0083 47.493 33.0084 47.4893 33.0086 cv
47.5007 33.0082 mo
47.5042 33.0081 47.5071 33.008 47.5106 33.0079 cv
47.5073 33.008 47.504 33.0081 47.5007 33.0082 cv
47.5125 33.0078 mo
47.5156 33.0077 47.5188 33.0076 47.5218 33.0075 cv
47.519 33.0076 47.5154 33.0077 47.5125 33.0078 cv
47.524 33.0074 mo
47.527 33.0073 47.5305 33.0072 47.5335 33.0071 cv
47.5302 33.0072 47.5273 33.0073 47.524 33.0074 cv
47.5352 33.0071 mo
47.5387 33.007 47.5418 33.0069 47.5453 33.0068 cv
47.542 33.0069 47.5385 33.007 47.5352 33.0071 cv
47.5461 33.0068 mo
47.5496 33.0067 47.5528 33.0066 47.5563 33.0065 cv
47.5525 33.0066 47.5499 33.0066 47.5461 33.0068 cv
47.5584 33.0064 mo
47.5619 33.0063 47.5642 33.0062 47.5677 33.0061 cv
47.5644 33.0062 47.5617 33.0063 47.5584 33.0064 cv
47.5696 33.0061 mo
47.5957 33.0053 47.6212 33.0047 47.6474 33.0041 cv
47.6214 33.0047 47.5956 33.0053 47.5696 33.0061 cv
47.6475 33.0041 mo
47.6505 33.004 47.654 33.0039 47.657 33.0039 cv
47.6537 33.0039 47.6508 33.004 47.6475 33.0041 cv
47.6594 33.0038 mo
47.6619 33.0037 47.6652 33.0037 47.6678 33.0036 cv
47.6649 33.0037 47.6623 33.0037 47.6594 33.0038 cv
47.6711 33.0035 mo
47.6741 33.0035 47.6763 33.0034 47.6793 33.0034 cv
47.6769 33.0034 47.6735 33.0035 47.6711 33.0035 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[16.32 0 0 17.28 32.16 14.56 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 34 
/H 36 
/M[34 0 0 -36 0 36 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
hZ2OJh^Rahec=SDh_4L"blHW>h_b00_uS[8iB%!"]`?q4l9P&.]`?q7o1&+:]`?q9r(H*D]`@(@r@$Q#
]`@CLoIJg#]`@^XlRq(#]`A$di\B>#_Z9Q6h_a5(bQ.26h`'G1eH"h6h`BY:h>lI6h`]kCk5a*6h`p"J
n,U`6ha64Sq#JA6haQI]!/nMjham!opQ<,hhb3O+mZtNdhbO'=jda!ai_f\PhkIdalW!OVhl+3goN(<Z
hlXQlrE8/`hm:0"quGVZhmpo1o)RZThnRY@l2]^Nho+=Ni;hbHhob']fDsfBhpCflnGqGHheV-#kQ'06
heh9*nGpf6hf.K3q>eG6hfIc>s6%&qhfe;Pp?fNnhg+hbmIT38J,~>

%%EndBinary
grestore
np
33 48 mo
33 39.835 39.5566 33.1735 47.6814 33.0033 cv
47.6805 33.0033 47.6802 33.0033 47.6793 33.0034 cv
47.6763 33.0034 47.6741 33.0035 47.6711 33.0035 cv
47.6697 33.0036 47.6692 33.0036 47.6678 33.0036 cv
47.6652 33.0037 47.6619 33.0037 47.6594 33.0038 cv
47.6589 33.0038 47.6575 33.0038 47.657 33.0039 cv
47.654 33.0039 47.6505 33.004 47.6475 33.0041 cv
47.6474 33.0041 li
47.6212 33.0047 47.5957 33.0053 47.5696 33.0061 cv
47.5691 33.0061 47.5682 33.0061 47.5677 33.0061 cv
47.5642 33.0062 47.5619 33.0063 47.5584 33.0064 cv
47.5579 33.0064 47.5568 33.0064 47.5563 33.0065 cv
47.5528 33.0066 47.5496 33.0067 47.5461 33.0068 cv
47.5453 33.0068 li
47.5418 33.0069 47.5387 33.007 47.5352 33.0071 cv
47.5347 33.0071 47.534 33.0071 47.5335 33.0071 cv
47.5305 33.0072 47.527 33.0073 47.524 33.0074 cv
47.5231 33.0075 47.5227 33.0075 47.5218 33.0075 cv
47.5188 33.0076 47.5156 33.0077 47.5125 33.0078 cv
47.5116 33.0078 47.5115 33.0078 47.5106 33.0079 cv
47.5071 33.008 47.5042 33.0081 47.5007 33.0082 cv
47.4997 33.0082 li
47.4962 33.0083 47.4928 33.0084 47.4893 33.0086 cv
47.4884 33.0086 li
39.4528 33.2791 33 39.9006 33 48 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.6827 33.0033 mo
47.6852 33.0032 47.6881 33.0032 47.6906 33.0031 cv
47.6883 33.0032 47.6851 33.0033 47.6827 33.0033 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.6816 33.0033 mo
47.6851 33.0032 47.6888 33.0032 47.6923 33.0031 cv
47.6913 33.0031 47.6916 33.0031 47.6906 33.0031 cv
47.6881 33.0032 47.6852 33.0032 47.6827 33.0033 cv
47.6822 33.0033 47.6821 33.0033 47.6816 33.0033 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.3173 33.0033 mo
48.3149 33.0033 48.3117 33.0032 48.3094 33.0031 cv
48.3119 33.0032 48.3148 33.0032 48.3173 33.0033 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.3184 33.0033 mo
48.3179 33.0033 48.3177 33.0033 48.3173 33.0033 cv
48.3148 33.0032 48.3119 33.0032 48.3094 33.0031 cv
48.3084 33.0031 48.3087 33.0031 48.3077 33.0031 cv
48.3112 33.0032 48.3149 33.0032 48.3184 33.0033 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.6944 33.0031 mo
47.6969 33.003 47.6995 33.003 47.702 33.0029 cv
47.6996 33.003 47.6967 33.003 47.6944 33.0031 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.6933 33.0031 mo
47.6968 33.003 47.6997 33.003 47.7032 33.0029 cv
47.7028 33.0029 47.7025 33.0029 47.702 33.0029 cv
47.6995 33.003 47.6969 33.003 47.6944 33.0031 cv
47.6939 33.0031 47.6937 33.0031 47.6933 33.0031 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.3056 33.0031 mo
48.3032 33.003 48.3003 33.003 48.298 33.0029 cv
48.3005 33.003 48.3031 33.003 48.3056 33.0031 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.3067 33.0031 mo
48.3062 33.0031 48.306 33.0031 48.3056 33.0031 cv
48.3031 33.003 48.3005 33.003 48.298 33.0029 cv
48.2975 33.0029 48.2972 33.0029 48.2968 33.0029 cv
48.3003 33.003 48.3032 33.003 48.3067 33.0031 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.7063 33.0028 mo
47.7083 33.0028 47.7116 33.0027 47.7136 33.0027 cv
47.7108 33.0027 47.7091 33.0028 47.7063 33.0028 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.7052 33.0028 mo
47.7082 33.0028 47.7115 33.0027 47.7145 33.0027 cv
47.7136 33.0027 li
47.7116 33.0027 47.7083 33.0028 47.7063 33.0028 cv
47.7052 33.0028 li
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.2937 33.0028 mo
48.2909 33.0028 48.2892 33.0027 48.2864 33.0027 cv
48.2884 33.0027 48.2917 33.0028 48.2937 33.0028 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.2948 33.0028 mo
48.2937 33.0028 li
48.2917 33.0028 48.2884 33.0027 48.2864 33.0027 cv
48.2855 33.0027 li
48.2885 33.0027 48.2918 33.0028 48.2948 33.0028 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.7175 33.0026 mo
47.72 33.0026 47.7231 33.0025 47.7256 33.0025 cv
47.7228 33.0025 47.7204 33.0026 47.7175 33.0026 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.7167 33.0026 mo
47.7197 33.0026 47.7232 33.0025 47.7262 33.0025 cv
47.7256 33.0025 li
47.7231 33.0025 47.72 33.0026 47.7175 33.0026 cv
47.7167 33.0026 li
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.2824 33.0026 mo
48.2796 33.0026 48.2772 33.0025 48.2744 33.0025 cv
48.2769 33.0025 48.2799 33.0026 48.2824 33.0026 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.2833 33.0026 mo
48.2824 33.0026 li
48.2799 33.0026 48.2769 33.0025 48.2744 33.0025 cv
48.2738 33.0025 li
48.2768 33.0025 48.2802 33.0026 48.2833 33.0026 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.7289 33.0024 mo
47.7314 33.0024 47.7346 33.0023 47.7371 33.0023 cv
47.7343 33.0023 47.7317 33.0024 47.7289 33.0024 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.728 33.0024 mo
47.731 33.0024 47.7346 33.0023 47.7376 33.0023 cv
47.7371 33.0023 47.7376 33.0023 47.7371 33.0023 cv
47.7346 33.0023 47.7314 33.0024 47.7289 33.0024 cv
47.728 33.0024 li
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.2711 33.0024 mo
48.2683 33.0024 48.2657 33.0023 48.2629 33.0023 cv
48.2654 33.0023 48.2686 33.0024 48.2711 33.0024 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.2719 33.0024 mo
48.2711 33.0024 li
48.2686 33.0024 48.2654 33.0023 48.2629 33.0023 cv
48.2624 33.0023 48.2628 33.0023 48.2624 33.0023 cv
48.2654 33.0023 48.2689 33.0024 48.2719 33.0024 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.7405 33.0022 mo
47.7435 33.0022 47.7457 33.0021 47.7487 33.0021 cv
47.7464 33.0021 47.7428 33.0022 47.7405 33.0022 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.7395 33.0022 mo
47.7425 33.0022 47.7461 33.0021 47.7491 33.0021 cv
47.7487 33.0021 47.7492 33.0021 47.7487 33.0021 cv
47.7457 33.0021 47.7435 33.0022 47.7405 33.0022 cv
47.74 33.0022 47.74 33.0022 47.7395 33.0022 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.2595 33.0022 mo
48.2571 33.0022 48.2536 33.0021 48.2512 33.0021 cv
48.2542 33.0021 48.2565 33.0022 48.2595 33.0022 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.2604 33.0022 mo
48.26 33.0022 48.26 33.0022 48.2595 33.0022 cv
48.2565 33.0022 48.2542 33.0021 48.2512 33.0021 cv
48.2508 33.0021 48.2513 33.0021 48.2508 33.0021 cv
48.2538 33.0021 48.2574 33.0022 48.2604 33.0022 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.752 33.002 mo
47.7545 33.002 47.7578 33.0019 47.7603 33.0019 cv
47.7579 33.0019 47.7544 33.002 47.752 33.002 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.751 33.002 mo
47.7546 33.002 47.757 33.0019 47.7605 33.0019 cv
47.76 33.0019 47.7607 33.0019 47.7603 33.0019 cv
47.7578 33.0019 47.7545 33.002 47.752 33.002 cv
47.7516 33.002 47.7515 33.002 47.751 33.002 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.2479 33.002 mo
48.2456 33.002 48.2421 33.0019 48.2397 33.0019 cv
48.2422 33.0019 48.2454 33.002 48.2479 33.002 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.2489 33.002 mo
48.2485 33.002 48.2484 33.002 48.2479 33.002 cv
48.2454 33.002 48.2422 33.0019 48.2397 33.0019 cv
48.2392 33.0019 48.24 33.0019 48.2395 33.0019 cv
48.243 33.0019 48.2454 33.002 48.2489 33.002 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.2367 33.0018 mo
48.2339 33.0018 48.2306 33.0017 48.2278 33.0017 cv
48.2308 33.0017 48.2337 33.0018 48.2367 33.0018 cv
48.2265 33.0017 mo
48.2232 33.0016 48.2197 33.0016 48.2164 33.0015 cv
48.2199 33.0016 48.223 33.0016 48.2265 33.0017 cv
48.2147 33.0015 mo
48.2014 33.0013 48.1883 33.0012 48.175 33.001 cv
48.1881 33.0011 48.2016 33.0013 48.2147 33.0015 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.2374 33.0018 mo
48.2369 33.0018 48.2372 33.0018 48.2367 33.0018 cv
48.2337 33.0018 48.2308 33.0017 48.2278 33.0017 cv
48.2273 33.0017 48.227 33.0017 48.2265 33.0017 cv
48.223 33.0016 48.2199 33.0016 48.2164 33.0015 cv
48.2159 33.0015 48.2152 33.0015 48.2147 33.0015 cv
48.2016 33.0013 48.1881 33.0011 48.175 33.001 cv
48.1745 33.001 48.1741 33.001 48.1737 33.001 cv
48.1948 33.0012 48.2163 33.0015 48.2374 33.0018 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.7632 33.0018 mo
47.7663 33.0018 47.7692 33.0017 47.7722 33.0017 cv
47.7693 33.0017 47.7661 33.0018 47.7632 33.0018 cv
47.7734 33.0017 mo
47.777 33.0016 47.7801 33.0016 47.7836 33.0015 cv
47.7803 33.0016 47.7768 33.0016 47.7734 33.0017 cv
47.7853 33.0015 mo
47.7984 33.0013 47.8119 33.0011 47.825 33.001 cv
47.8117 33.0012 47.7986 33.0013 47.7853 33.0015 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.7626 33.0018 mo
47.7837 33.0015 47.8052 33.0012 47.8263 33.001 cv
47.8258 33.001 47.8255 33.001 47.825 33.001 cv
47.8119 33.0011 47.7984 33.0013 47.7853 33.0015 cv
47.7848 33.0015 47.784 33.0015 47.7836 33.0015 cv
47.7801 33.0016 47.777 33.0016 47.7734 33.0017 cv
47.773 33.0017 47.7727 33.0017 47.7722 33.0017 cv
47.7692 33.0017 47.7663 33.0018 47.7632 33.0018 cv
47.7628 33.0018 47.763 33.0018 47.7626 33.0018 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.1702 33.0009 mo
48.1678 33.0009 48.1666 33.0009 48.1643 33.0009 cv
48.1663 33.0009 48.1682 33.0009 48.1702 33.0009 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.1704 33.0009 mo
48.1702 33.0009 li
48.1682 33.0009 48.1663 33.0009 48.1643 33.0009 cv
48.163 33.0009 li
48.1656 33.0009 48.1679 33.0009 48.1704 33.0009 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.8298 33.0009 mo
47.8318 33.0009 47.8337 33.0009 47.8357 33.0009 cv
47.8334 33.0009 47.8322 33.0009 47.8298 33.0009 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.8296 33.0009 mo
47.8321 33.0009 47.8344 33.0009 47.837 33.0009 cv
47.8357 33.0009 li
47.8337 33.0009 47.8318 33.0009 47.8298 33.0009 cv
47.8296 33.0009 li
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.8413 33.0008 mo
47.8433 33.0008 47.8453 33.0008 47.8473 33.0008 cv
47.8454 33.0008 47.8432 33.0008 47.8413 33.0008 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.8411 33.0008 mo
47.8437 33.0008 47.8455 33.0008 47.848 33.0008 cv
47.8473 33.0008 li
47.8453 33.0008 47.8433 33.0008 47.8413 33.0008 cv
47.8409 33.0008 47.8416 33.0008 47.8411 33.0008 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.1586 33.0008 mo
48.1567 33.0008 48.1546 33.0008 48.1527 33.0008 cv
48.1547 33.0008 48.1566 33.0008 48.1586 33.0008 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.1588 33.0008 mo
48.1584 33.0008 48.1591 33.0008 48.1586 33.0008 cv
48.1566 33.0008 48.1547 33.0008 48.1527 33.0008 cv
48.152 33.0008 li
48.1545 33.0008 48.1563 33.0008 48.1588 33.0008 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.1466 33.0007 mo
48.1447 33.0007 48.143 33.0007 48.1411 33.0006 cv
48.1432 33.0007 48.1446 33.0007 48.1466 33.0007 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.1468 33.0007 mo
48.1466 33.0007 li
48.1446 33.0007 48.1432 33.0007 48.1411 33.0006 cv
48.1405 33.0006 li
48.1425 33.0007 48.1448 33.0007 48.1468 33.0007 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.8534 33.0007 mo
47.8554 33.0007 47.8568 33.0007 47.8588 33.0006 cv
47.8569 33.0007 47.8553 33.0007 47.8534 33.0007 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.8532 33.0007 mo
47.8552 33.0007 47.8575 33.0007 47.8595 33.0006 cv
47.8588 33.0006 li
47.8568 33.0007 47.8554 33.0007 47.8534 33.0007 cv
47.8532 33.0007 li
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.8649 33.0006 mo
47.8669 33.0006 47.8689 33.0006 47.8709 33.0005 cv
47.869 33.0006 47.8668 33.0006 47.8649 33.0006 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.8646 33.0006 mo
47.8666 33.0006 47.8693 33.0006 47.8713 33.0005 cv
47.8709 33.0005 47.8713 33.0005 47.8709 33.0005 cv
47.8689 33.0006 47.8669 33.0006 47.8649 33.0006 cv
47.8646 33.0006 li
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.1351 33.0006 mo
48.1332 33.0006 48.131 33.0006 48.1291 33.0005 cv
48.1311 33.0006 48.1331 33.0006 48.1351 33.0006 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.1353 33.0006 mo
48.1351 33.0006 li
48.1331 33.0006 48.1311 33.0006 48.1291 33.0005 cv
48.1286 33.0005 48.1291 33.0005 48.1286 33.0005 cv
48.1307 33.0006 48.1333 33.0006 48.1353 33.0006 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.1232 33.0005 mo
48.1213 33.0005 48.1194 33.0005 48.1175 33.0004 cv
48.119 33.0005 48.1217 33.0005 48.1232 33.0005 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.1234 33.0005 mo
48.1232 33.0005 li
48.1217 33.0005 48.119 33.0005 48.1175 33.0004 cv
48.1171 33.0004 48.1176 33.0004 48.1171 33.0004 cv
48.1196 33.0005 48.1209 33.0005 48.1234 33.0005 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.8768 33.0005 mo
47.8783 33.0005 47.8809 33.0005 47.8824 33.0004 cv
47.8805 33.0005 47.8787 33.0005 47.8768 33.0005 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.8765 33.0005 mo
47.8791 33.0005 47.8803 33.0005 47.8829 33.0004 cv
47.8824 33.0004 47.8829 33.0004 47.8824 33.0004 cv
47.8809 33.0005 47.8783 33.0005 47.8768 33.0005 cv
47.8765 33.0005 li
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.8885 33.0004 mo
47.8905 33.0004 47.892 33.0004 47.894 33.0004 cv
47.8921 33.0004 47.8904 33.0004 47.8885 33.0004 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.8882 33.0004 mo
47.8903 33.0004 47.8923 33.0004 47.8944 33.0004 cv
47.894 33.0004 li
47.892 33.0004 47.8905 33.0004 47.8885 33.0004 cv
47.8882 33.0004 li
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.1114 33.0004 mo
48.1095 33.0004 48.1079 33.0004 48.106 33.0004 cv
48.108 33.0004 48.1094 33.0004 48.1114 33.0004 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.1117 33.0004 mo
48.1114 33.0004 li
48.1094 33.0004 48.108 33.0004 48.106 33.0004 cv
48.1056 33.0004 li
48.1076 33.0004 48.1097 33.0004 48.1117 33.0004 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.0993 33.0003 mo
48.0974 33.0003 48.0961 33.0003 48.0942 33.0003 cv
48.0963 33.0003 48.0973 33.0003 48.0993 33.0003 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.0996 33.0003 mo
48.0993 33.0003 li
48.0973 33.0003 48.0963 33.0003 48.0942 33.0003 cv
48.094 33.0003 li
48.096 33.0003 48.0976 33.0003 48.0996 33.0003 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.9007 33.0003 mo
47.9027 33.0003 47.9037 33.0003 47.9057 33.0003 cv
47.9038 33.0003 47.9026 33.0003 47.9007 33.0003 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.9004 33.0003 mo
47.9024 33.0003 47.904 33.0003 47.906 33.0003 cv
47.9057 33.0003 li
47.9037 33.0003 47.9027 33.0003 47.9007 33.0003 cv
47.9004 33.0003 li
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.912 33.0002 mo
47.913 33.0002 47.9142 33.0002 47.9152 33.0002 cv
47.9162 33.0002 47.9167 33.0002 47.9178 33.0002 cv
47.9159 33.0002 47.9139 33.0002 47.912 33.0002 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.9119 33.0002 mo
47.9129 33.0002 47.9142 33.0002 47.9152 33.0002 cv
47.9142 33.0002 47.913 33.0002 47.912 33.0002 cv
47.9119 33.0002 li
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.088 33.0002 mo
48.0861 33.0002 48.0841 33.0002 48.0822 33.0002 cv
48.0832 33.0002 48.0837 33.0002 48.0847 33.0002 cv
48.0858 33.0002 48.087 33.0002 48.088 33.0002 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.0881 33.0002 mo
48.088 33.0002 li
48.087 33.0002 48.0858 33.0002 48.0847 33.0002 cv
48.0858 33.0002 48.0871 33.0002 48.0881 33.0002 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.924 33.0002 mo
47.9255 33.0002 47.9279 33.0002 47.9295 33.0002 cv
47.928 33.0002 47.9254 33.0002 47.924 33.0002 cv
48.0759 33.0002 mo
48.0745 33.0002 48.0719 33.0002 48.0705 33.0002 cv
48.072 33.0002 48.0744 33.0002 48.0759 33.0002 cv
47.9357 33.0001 mo
47.9372 33.0001 47.9396 33.0001 47.9412 33.0001 cv
47.9393 33.0001 47.9376 33.0001 47.9357 33.0001 cv
48.0643 33.0001 mo
48.0624 33.0001 48.0607 33.0001 48.0588 33.0001 cv
48.0603 33.0001 48.0628 33.0001 48.0643 33.0001 cv
48.0522 33.0001 mo
48.0503 33.0001 48.0489 33.0001 48.047 33.0001 cv
48.049 33.0001 48.0502 33.0001 48.0522 33.0001 cv
47.9477 33.0001 mo
47.9498 33.0001 47.951 33.0001 47.953 33.0001 cv
47.9511 33.0001 47.9496 33.0001 47.9477 33.0001 cv
47.9591 33 mo
47.9611 33 47.9628 33 47.9648 33 cv
47.9629 33 47.961 33 47.9591 33 cv
48.0409 33 mo
48.039 33 48.0371 33 48.0352 33 cv
48.0372 33 48.0388 33 48.0409 33 cv
47.9719 33 mo
47.9734 33 47.9749 33 47.9764 33 cv
47.975 33 47.9733 33 47.9719 33 cv
48.0281 33 mo
48.0267 33 48.025 33 48.0236 33 cv
48.0251 33 48.0266 33 48.0281 33 cv
47.984 33 mo
47.9856 33 47.9868 33 47.9883 33 cv
47.9869 33 47.9855 33 47.984 33 cv
48.0159 33 mo
48.0145 33 48.0131 33 48.0117 33 cv
48.0132 33 48.0144 33 48.0159 33 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~'GM5q(Ddl()B'M4~>
<~.4H\p0/"t31c.$G~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
33.2104 46.591 mo
33.1643 46.5783 33.1182 46.5656 33.0723 46.5527 cv
33.7886 39.1258 39.9372 33.2627 47.4884 33.0086 cv
47.4893 33.0086 li
47.493 33.0084 47.4959 33.0083 47.4997 33.0082 cv
47.5002 33.0082 47.5002 33.0082 47.5007 33.0082 cv
47.504 33.0081 47.5073 33.008 47.5106 33.0079 cv
47.5111 33.0079 47.512 33.0078 47.5125 33.0078 cv
47.5154 33.0077 47.519 33.0076 47.5218 33.0075 cv
47.5228 33.0075 47.523 33.0075 47.524 33.0074 cv
47.5273 33.0073 47.5302 33.0072 47.5335 33.0071 cv
47.534 33.0071 47.5347 33.0071 47.5352 33.0071 cv
47.5385 33.007 47.542 33.0069 47.5453 33.0068 cv
47.5461 33.0068 li
47.5499 33.0066 47.5525 33.0066 47.5563 33.0065 cv
47.5568 33.0064 47.5579 33.0064 47.5584 33.0064 cv
47.5617 33.0063 47.5644 33.0062 47.5677 33.0061 cv
47.5682 33.0061 47.5691 33.0061 47.5696 33.0061 cv
47.5956 33.0053 47.6214 33.0047 47.6474 33.0041 cv
47.6475 33.0041 li
47.6508 33.004 47.6537 33.0039 47.657 33.0039 cv
47.658 33.0038 47.6584 33.0038 47.6594 33.0038 cv
47.6623 33.0037 47.6649 33.0037 47.6678 33.0036 cv
47.6688 33.0036 47.6701 33.0036 47.6711 33.0035 cv
47.6735 33.0035 47.6769 33.0034 47.6793 33.0034 cv
47.6803 33.0033 47.6817 33.0033 47.6827 33.0033 cv
47.6851 33.0033 47.6883 33.0032 47.6906 33.0031 cv
47.6921 33.0031 47.6929 33.0031 47.6944 33.0031 cv
47.6967 33.003 47.6996 33.003 47.702 33.0029 cv
47.7035 33.0029 47.7048 33.0029 47.7063 33.0028 cv
47.7091 33.0028 47.7108 33.0027 47.7136 33.0027 cv
47.7151 33.0027 47.716 33.0026 47.7175 33.0026 cv
47.7204 33.0026 47.7228 33.0025 47.7256 33.0025 cv
47.7271 33.0024 47.7274 33.0024 47.7289 33.0024 cv
47.7317 33.0024 47.7343 33.0023 47.7371 33.0023 cv
47.7381 33.0022 47.7395 33.0022 47.7405 33.0022 cv
47.7428 33.0022 47.7464 33.0021 47.7487 33.0021 cv
47.7498 33.002 47.751 33.002 47.752 33.002 cv
47.7544 33.002 47.7579 33.0019 47.7603 33.0019 cv
47.7613 33.0019 47.7622 33.0019 47.7632 33.0018 cv
47.7661 33.0018 47.7693 33.0017 47.7722 33.0017 cv
47.7727 33.0017 47.7729 33.0017 47.7734 33.0017 cv
47.7768 33.0016 47.7803 33.0016 47.7836 33.0015 cv
47.7841 33.0015 47.7848 33.0015 47.7853 33.0015 cv
47.7986 33.0013 47.8117 33.0012 47.825 33.001 cv
47.8265 33.001 47.8283 33.001 47.8298 33.0009 cv
47.8322 33.0009 47.8334 33.0009 47.8357 33.0009 cv
47.8377 33.0009 47.8393 33.0008 47.8413 33.0008 cv
47.8432 33.0008 47.8454 33.0008 47.8473 33.0008 cv
47.8493 33.0007 47.8514 33.0007 47.8534 33.0007 cv
47.8553 33.0007 47.8569 33.0007 47.8588 33.0006 cv
47.8609 33.0006 47.8628 33.0006 47.8649 33.0006 cv
47.8668 33.0006 47.869 33.0006 47.8709 33.0005 cv
47.8729 33.0005 47.8748 33.0005 47.8768 33.0005 cv
47.8787 33.0005 47.8805 33.0005 47.8824 33.0004 cv
47.8845 33.0004 47.8865 33.0004 47.8885 33.0004 cv
47.8904 33.0004 47.8921 33.0004 47.894 33.0004 cv
47.896 33.0003 47.8987 33.0003 47.9007 33.0003 cv
47.9026 33.0003 47.9038 33.0003 47.9057 33.0003 cv
47.9078 33.0003 47.91 33.0003 47.912 33.0002 cv
47.9139 33.0002 47.9159 33.0002 47.9178 33.0002 cv
47.9198 33.0002 47.922 33.0002 47.924 33.0002 cv
47.9254 33.0002 47.928 33.0002 47.9295 33.0002 cv
47.932 33.0001 47.9331 33.0001 47.9357 33.0001 cv
47.9376 33.0001 47.9393 33.0001 47.9412 33.0001 cv
47.9432 33.0001 47.9457 33.0001 47.9477 33.0001 cv
47.9496 33.0001 47.9511 33.0001 47.953 33.0001 cv
47.955 33.0001 47.9571 33.0001 47.9591 33 cv
47.961 33 47.9629 33 47.9648 33 cv
47.9668 33 47.9698 33 47.9719 33 cv
47.9733 33 47.975 33 47.9764 33 cv
47.9789 33 47.9815 33 47.984 33 cv
47.9855 33 47.9869 33 47.9883 33 cv
47.9923 33 47.9959 33 48 33 cv
48.004 33 48.0077 33 48.0117 33 cv
48.0131 33 48.0145 33 48.0159 33 cv
48.0184 33 48.0211 33 48.0236 33 cv
48.025 33 48.0267 33 48.0281 33 cv
48.0301 33 48.0332 33 48.0352 33 cv
48.0371 33 48.039 33 48.0409 33 cv
48.0429 33.0001 48.045 33.0001 48.047 33.0001 cv
48.0489 33.0001 48.0503 33.0001 48.0522 33.0001 cv
48.0542 33.0001 48.0568 33.0001 48.0588 33.0001 cv
48.0607 33.0001 48.0624 33.0001 48.0643 33.0001 cv
48.0668 33.0001 48.068 33.0001 48.0705 33.0002 cv
48.0719 33.0002 48.0745 33.0002 48.0759 33.0002 cv
48.078 33.0002 48.0802 33.0002 48.0822 33.0002 cv
48.0841 33.0002 48.0861 33.0002 48.088 33.0002 cv
48.09 33.0003 48.0922 33.0003 48.0942 33.0003 cv
48.0961 33.0003 48.0974 33.0003 48.0993 33.0003 cv
48.1013 33.0003 48.1039 33.0003 48.106 33.0004 cv
48.1079 33.0004 48.1095 33.0004 48.1114 33.0004 cv
48.1135 33.0004 48.1155 33.0004 48.1175 33.0004 cv
48.1194 33.0005 48.1213 33.0005 48.1232 33.0005 cv
48.1252 33.0005 48.1271 33.0005 48.1291 33.0005 cv
48.131 33.0006 48.1332 33.0006 48.1351 33.0006 cv
48.1371 33.0006 48.1391 33.0006 48.1411 33.0006 cv
48.143 33.0007 48.1447 33.0007 48.1466 33.0007 cv
48.1486 33.0007 48.1507 33.0007 48.1527 33.0008 cv
48.1546 33.0008 48.1567 33.0008 48.1586 33.0008 cv
48.1606 33.0008 48.1622 33.0009 48.1643 33.0009 cv
48.1666 33.0009 48.1678 33.0009 48.1702 33.0009 cv
48.1717 33.001 48.1735 33.001 48.175 33.001 cv
48.1883 33.0012 48.2014 33.0013 48.2147 33.0015 cv
48.2152 33.0015 48.2159 33.0015 48.2164 33.0015 cv
48.2197 33.0016 48.2232 33.0016 48.2265 33.0017 cv
48.227 33.0017 48.2273 33.0017 48.2278 33.0017 cv
48.2306 33.0017 48.2339 33.0018 48.2367 33.0018 cv
48.2377 33.0019 48.2387 33.0019 48.2397 33.0019 cv
48.2421 33.0019 48.2456 33.002 48.2479 33.002 cv
48.249 33.002 48.2502 33.002 48.2512 33.0021 cv
48.2536 33.0021 48.2571 33.0022 48.2595 33.0022 cv
48.2605 33.0022 48.2619 33.0022 48.2629 33.0023 cv
48.2657 33.0023 48.2683 33.0024 48.2711 33.0024 cv
48.2726 33.0024 48.2729 33.0024 48.2744 33.0025 cv
48.2772 33.0025 48.2796 33.0026 48.2824 33.0026 cv
48.2839 33.0026 48.2849 33.0027 48.2864 33.0027 cv
48.2892 33.0027 48.2909 33.0028 48.2937 33.0028 cv
48.2952 33.0029 48.2965 33.0029 48.298 33.0029 cv
48.3003 33.003 48.3032 33.003 48.3056 33.0031 cv
48.3071 33.0031 48.3079 33.0031 48.3094 33.0031 cv
48.3117 33.0032 48.3149 33.0033 48.3173 33.0033 cv
48.3183 33.0033 48.3197 33.0033 48.3207 33.0034 cv
48.3231 33.0034 48.3265 33.0035 48.3289 33.0035 cv
48.3299 33.0036 48.3312 33.0036 48.3322 33.0036 cv
48.3351 33.0037 48.3377 33.0037 48.3406 33.0038 cv
48.3416 33.0038 48.342 33.0038 48.343 33.0039 cv
48.3463 33.0039 48.3491 33.004 48.3524 33.0041 cv
48.3527 33.0041 li
48.3787 33.0047 48.4044 33.0053 48.4304 33.0061 cv
48.4309 33.0061 48.4318 33.0061 48.4323 33.0061 cv
48.4356 33.0062 48.4382 33.0063 48.4415 33.0064 cv
48.442 33.0064 48.4432 33.0064 48.4437 33.0065 cv
48.4475 33.0066 48.45 33.0066 48.4538 33.0068 cv
48.4548 33.0068 li
48.4581 33.0069 48.4615 33.007 48.4648 33.0071 cv
48.4653 33.0071 48.466 33.0071 48.4665 33.0071 cv
48.4693 33.0072 48.4731 33.0073 48.4759 33.0074 cv
48.4769 33.0075 48.4772 33.0075 48.4782 33.0075 cv
48.481 33.0076 48.4846 33.0077 48.4874 33.0078 cv
48.4879 33.0078 48.4889 33.0079 48.4894 33.0079 cv
48.4927 33.008 48.496 33.0081 48.4993 33.0082 cv
48.4998 33.0082 48.4998 33.0082 48.5003 33.0082 cv
48.5041 33.0083 48.507 33.0084 48.5107 33.0086 cv
48.5116 33.0086 li
56.0628 33.2627 62.2114 39.1258 62.9258 46.5527 cv
62.8804 46.5654 62.8346 46.5781 62.7891 46.5906 cv
61.633 39.4622 55.4489 34 48 34 cv
40.5507 34 34.3647 39.4619 33.2104 46.591 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[31.68 0 0 15.36 32.16 16.48 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 66 
/H 32 
/M[66 0 0 -32 0 32 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 66 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 66 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 66 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 66 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
^Au1Tqujb>aT/^Kc33\@^Br?hWrUcUkQS^/h#O,KiWe6D^CB?+QN6@Xe-Nf"nGnOKp'JkJ^CpDDK)blY
^^@sor=t%ep]/&;bo$$hO9"\K^CAd6ko6&kj8cq*i?$ktU]B*K^CfcUeKV-rciCfnod.d-\,aMK^D-\s
_(!5$]E#tgq%pdtbQ+pKd2DBj^G=@?VuYQkjVtrm_uR@KaW:*r^H0X?YQ3,pm3'//fDqcKh'1l'^I@,^
S,h^tfd+=)li<1KnL)X1^JFP'L]I<&`@J]'!!%TNr;aSaaBSFDMZE>K^G+)DmU2:[klAISgh5\\T)daK
^Gb4lg2<kieH!?Fn9!$!ZN//K^HMF>`d5;u_#V><r^";N`rNRKbXM.m^PU><XT6pCl:A[OgAp=8^Au2G
r(OklaT2&8J,~>

%%EndBinary
grestore
np
48.5116 33.0086 mo
48.5107 33.0086 li
48.5116 33.0086 li
47.4884 33.0086 mo
47.4893 33.0086 li
47.4884 33.0086 li
48.5003 33.0082 mo
48.4998 33.0082 48.4998 33.0082 48.4993 33.0082 cv
48.5003 33.0082 li
47.4997 33.0082 mo
47.5007 33.0082 li
47.5002 33.0082 47.5002 33.0082 47.4997 33.0082 cv
48.4894 33.0079 mo
48.4889 33.0079 48.4879 33.0078 48.4874 33.0078 cv
48.4884 33.0078 48.4885 33.0078 48.4894 33.0079 cv
47.5106 33.0079 mo
47.5115 33.0078 47.5116 33.0078 47.5125 33.0078 cv
47.512 33.0078 47.5111 33.0079 47.5106 33.0079 cv
48.4782 33.0075 mo
48.4772 33.0075 48.4769 33.0075 48.4759 33.0074 cv
48.4769 33.0075 48.4773 33.0075 48.4782 33.0075 cv
47.5218 33.0075 mo
47.5227 33.0075 47.5231 33.0075 47.524 33.0074 cv
47.523 33.0075 47.5228 33.0075 47.5218 33.0075 cv
48.4665 33.0071 mo
48.466 33.0071 48.4653 33.0071 48.4648 33.0071 cv
48.4657 33.0071 48.4655 33.0071 48.4665 33.0071 cv
47.5335 33.0071 mo
47.534 33.0071 47.5347 33.0071 47.5352 33.0071 cv
47.5347 33.0071 47.534 33.0071 47.5335 33.0071 cv
48.4548 33.0068 mo
48.4538 33.0068 li
48.4548 33.0068 li
47.5453 33.0068 mo
47.5461 33.0068 li
47.5453 33.0068 li
48.4437 33.0065 mo
48.4432 33.0064 48.442 33.0064 48.4415 33.0064 cv
48.442 33.0064 48.4432 33.0064 48.4437 33.0065 cv
47.5563 33.0065 mo
47.5568 33.0064 47.5579 33.0064 47.5584 33.0064 cv
47.5579 33.0064 47.5568 33.0064 47.5563 33.0065 cv
48.4323 33.0061 mo
48.4318 33.0061 48.4309 33.0061 48.4304 33.0061 cv
48.4308 33.0061 48.4318 33.0061 48.4323 33.0061 cv
47.5677 33.0061 mo
47.5682 33.0061 47.5691 33.0061 47.5696 33.0061 cv
47.5691 33.0061 47.5682 33.0061 47.5677 33.0061 cv
48.3527 33.0041 mo
48.3524 33.0041 li
48.3527 33.0041 li
47.6474 33.0041 mo
47.6475 33.0041 li
47.6474 33.0041 li
48.343 33.0039 mo
48.342 33.0038 48.3416 33.0038 48.3406 33.0038 cv
48.341 33.0038 48.3425 33.0038 48.343 33.0039 cv
47.657 33.0039 mo
47.6575 33.0038 47.6589 33.0038 47.6594 33.0038 cv
47.6584 33.0038 47.658 33.0038 47.657 33.0039 cv
48.3322 33.0036 mo
48.3312 33.0036 48.3299 33.0036 48.3289 33.0035 cv
48.3303 33.0036 48.3308 33.0036 48.3322 33.0036 cv
47.6678 33.0036 mo
47.6692 33.0036 47.6697 33.0036 47.6711 33.0035 cv
47.6701 33.0036 47.6688 33.0036 47.6678 33.0036 cv
48.3207 33.0034 mo
48.3197 33.0033 48.3183 33.0033 48.3173 33.0033 cv
48.3177 33.0033 48.3179 33.0033 48.3184 33.0033 cv
48.3186 33.0033 li
48.3195 33.0033 48.3198 33.0034 48.3207 33.0034 cv
47.6793 33.0034 mo
47.6802 33.0033 47.6805 33.0033 47.6814 33.0033 cv
47.6816 33.0033 li
47.6821 33.0033 47.6822 33.0033 47.6827 33.0033 cv
47.6817 33.0033 47.6803 33.0033 47.6793 33.0034 cv
48.3094 33.0031 mo
48.3079 33.0031 48.3071 33.0031 48.3056 33.0031 cv
48.306 33.0031 48.3062 33.0031 48.3067 33.0031 cv
48.3072 33.0031 48.3072 33.0031 48.3077 33.0031 cv
48.3087 33.0031 48.3084 33.0031 48.3094 33.0031 cv
47.6906 33.0031 mo
47.6916 33.0031 47.6913 33.0031 47.6923 33.0031 cv
47.6928 33.0031 47.6928 33.0031 47.6933 33.0031 cv
47.6937 33.0031 47.6939 33.0031 47.6944 33.0031 cv
47.6929 33.0031 47.6921 33.0031 47.6906 33.0031 cv
48.298 33.0029 mo
48.2965 33.0029 48.2952 33.0029 48.2937 33.0028 cv
48.2948 33.0028 li
48.2953 33.0029 48.2962 33.0029 48.2968 33.0029 cv
48.2972 33.0029 48.2975 33.0029 48.298 33.0029 cv
47.702 33.0029 mo
47.7025 33.0029 47.7028 33.0029 47.7032 33.0029 cv
47.7037 33.0029 47.7047 33.0029 47.7052 33.0028 cv
47.7063 33.0028 li
47.7048 33.0029 47.7035 33.0029 47.702 33.0029 cv
47.7136 33.0027 mo
47.7145 33.0027 li
47.7155 33.0027 47.7157 33.0026 47.7167 33.0026 cv
47.7175 33.0026 li
47.716 33.0026 47.7151 33.0027 47.7136 33.0027 cv
48.2864 33.0027 mo
48.2849 33.0027 48.2839 33.0026 48.2824 33.0026 cv
48.2833 33.0026 li
48.2843 33.0026 48.2845 33.0027 48.2855 33.0027 cv
48.2864 33.0027 li
48.2744 33.0025 mo
48.2729 33.0024 48.2726 33.0024 48.2711 33.0024 cv
48.2719 33.0024 li
48.2724 33.0024 48.2733 33.0024 48.2738 33.0025 cv
48.2744 33.0025 li
47.7256 33.0025 mo
47.7262 33.0025 li
47.7267 33.0024 47.7275 33.0024 47.728 33.0024 cv
47.7289 33.0024 li
47.7274 33.0024 47.7271 33.0024 47.7256 33.0025 cv
48.2629 33.0023 mo
48.2619 33.0022 48.2605 33.0022 48.2595 33.0022 cv
48.26 33.0022 48.26 33.0022 48.2604 33.0022 cv
48.2614 33.0022 48.2614 33.0022 48.2624 33.0023 cv
48.2628 33.0023 48.2624 33.0023 48.2629 33.0023 cv
47.7371 33.0023 mo
47.7376 33.0023 47.7371 33.0023 47.7376 33.0023 cv
47.7386 33.0022 47.7385 33.0022 47.7395 33.0022 cv
47.74 33.0022 47.74 33.0022 47.7405 33.0022 cv
47.7395 33.0022 47.7381 33.0022 47.7371 33.0023 cv
48.2512 33.0021 mo
48.2502 33.002 48.249 33.002 48.2479 33.002 cv
48.2484 33.002 48.2485 33.002 48.2489 33.002 cv
48.2494 33.002 48.2503 33.002 48.2508 33.0021 cv
48.2513 33.0021 48.2508 33.0021 48.2512 33.0021 cv
47.7487 33.0021 mo
47.7492 33.0021 47.7487 33.0021 47.7491 33.0021 cv
47.7497 33.002 47.7505 33.002 47.751 33.002 cv
47.7515 33.002 47.7516 33.002 47.752 33.002 cv
47.751 33.002 47.7498 33.002 47.7487 33.0021 cv
47.7603 33.0019 mo
47.7607 33.0019 47.76 33.0019 47.7605 33.0019 cv
47.761 33.0019 47.7621 33.0019 47.7626 33.0018 cv
47.763 33.0018 47.7628 33.0018 47.7632 33.0018 cv
47.7622 33.0019 47.7613 33.0019 47.7603 33.0019 cv
48.2397 33.0019 mo
48.2387 33.0019 48.2377 33.0019 48.2367 33.0018 cv
48.2372 33.0018 48.2369 33.0018 48.2374 33.0018 cv
48.2379 33.0019 48.239 33.0019 48.2395 33.0019 cv
48.24 33.0019 48.2392 33.0019 48.2397 33.0019 cv
48.2278 33.0017 mo
48.2273 33.0017 48.227 33.0017 48.2265 33.0017 cv
48.227 33.0017 48.2273 33.0017 48.2278 33.0017 cv
47.7722 33.0017 mo
47.7727 33.0017 47.773 33.0017 47.7734 33.0017 cv
47.7729 33.0017 47.7727 33.0017 47.7722 33.0017 cv
47.7836 33.0015 mo
47.784 33.0015 47.7848 33.0015 47.7853 33.0015 cv
47.7848 33.0015 47.7841 33.0015 47.7836 33.0015 cv
48.2164 33.0015 mo
48.2159 33.0015 48.2152 33.0015 48.2147 33.0015 cv
48.2152 33.0015 48.2159 33.0015 48.2164 33.0015 cv
48.175 33.001 mo
48.1735 33.001 48.1717 33.001 48.1702 33.0009 cv
48.1704 33.0009 li
48.1714 33.001 48.1727 33.001 48.1737 33.001 cv
48.1741 33.001 48.1745 33.001 48.175 33.001 cv
47.825 33.001 mo
47.8255 33.001 47.8258 33.001 47.8263 33.001 cv
47.8273 33.001 47.8286 33.001 47.8296 33.0009 cv
47.8298 33.0009 li
47.8283 33.001 47.8265 33.001 47.825 33.001 cv
48.1643 33.0009 mo
48.1622 33.0009 48.1606 33.0008 48.1586 33.0008 cv
48.1591 33.0008 48.1584 33.0008 48.1588 33.0008 cv
48.1603 33.0008 48.1615 33.0009 48.163 33.0009 cv
48.1643 33.0009 li
47.8357 33.0009 mo
47.837 33.0009 li
47.8385 33.0009 47.8396 33.0008 47.8411 33.0008 cv
47.8416 33.0008 47.8409 33.0008 47.8413 33.0008 cv
47.8393 33.0008 47.8377 33.0009 47.8357 33.0009 cv
48.1527 33.0008 mo
48.1507 33.0007 48.1486 33.0007 48.1466 33.0007 cv
48.1468 33.0007 li
48.1483 33.0007 48.1505 33.0007 48.152 33.0008 cv
48.1527 33.0008 li
47.8473 33.0008 mo
47.848 33.0008 li
47.8495 33.0007 47.8517 33.0007 47.8532 33.0007 cv
47.8534 33.0007 li
47.8514 33.0007 47.8493 33.0007 47.8473 33.0008 cv
48.1411 33.0006 mo
48.1391 33.0006 48.1371 33.0006 48.1351 33.0006 cv
48.1353 33.0006 li
48.1374 33.0006 48.1385 33.0006 48.1405 33.0006 cv
48.1411 33.0006 li
47.8588 33.0006 mo
47.8595 33.0006 li
47.8615 33.0006 47.8626 33.0006 47.8646 33.0006 cv
47.8649 33.0006 li
47.8628 33.0006 47.8609 33.0006 47.8588 33.0006 cv
48.1291 33.0005 mo
48.1271 33.0005 48.1252 33.0005 48.1232 33.0005 cv
48.1234 33.0005 li
48.1249 33.0005 48.1271 33.0005 48.1286 33.0005 cv
48.1291 33.0005 48.1286 33.0005 48.1291 33.0005 cv
47.8709 33.0005 mo
47.8713 33.0005 47.8709 33.0005 47.8713 33.0005 cv
47.8728 33.0005 47.875 33.0005 47.8765 33.0005 cv
47.8768 33.0005 li
47.8748 33.0005 47.8729 33.0005 47.8709 33.0005 cv
47.8824 33.0004 mo
47.8829 33.0004 47.8824 33.0004 47.8829 33.0004 cv
47.8844 33.0004 47.8867 33.0004 47.8882 33.0004 cv
47.8885 33.0004 li
47.8865 33.0004 47.8845 33.0004 47.8824 33.0004 cv
48.1175 33.0004 mo
48.1155 33.0004 48.1135 33.0004 48.1114 33.0004 cv
48.1117 33.0004 li
48.1132 33.0004 48.1156 33.0004 48.1171 33.0004 cv
48.1176 33.0004 48.1171 33.0004 48.1175 33.0004 cv
48.106 33.0004 mo
48.1039 33.0003 48.1013 33.0003 48.0993 33.0003 cv
48.0996 33.0003 li
48.1016 33.0003 48.1036 33.0003 48.1056 33.0004 cv
48.106 33.0004 li
47.894 33.0004 mo
47.8944 33.0004 li
47.8964 33.0003 47.8984 33.0003 47.9004 33.0003 cv
47.9007 33.0003 li
47.8987 33.0003 47.896 33.0003 47.894 33.0004 cv
48.0942 33.0003 mo
48.0922 33.0003 48.09 33.0003 48.088 33.0002 cv
48.0881 33.0002 li
48.0901 33.0003 48.092 33.0003 48.094 33.0003 cv
48.0942 33.0003 li
47.9057 33.0003 mo
47.906 33.0003 li
47.908 33.0003 47.9099 33.0003 47.9119 33.0002 cv
47.912 33.0002 li
47.91 33.0003 47.9078 33.0003 47.9057 33.0003 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[2.88 0 0 1.44 46.56 30.4 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 3 
/M[6 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~"9\i1"9\i1"9\i1"pP89"pP~>
<~#6tJ=#6tPA#mgnE$O[=M$OZ~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
116.125 63 mo
98 63 li
98 60.9264 98 56.1614 98 51.0742 cv
101.867 46.3836 108.162 43.1709 116.832 41.5 cv
123 41.5 li
123 48.5812 li
122.073 48.2059 121.061 47.999 120 47.999 cv
115.58 47.999 112 51.583 112 55.999 cv
112 59.0116 113.665 61.6355 116.125 63 cv
gsave
[34.9608 0 0 34.9608 123.018 63.5 ]ct
clp
/0 /Gradient get_res exec grestore
np
116 32 mo
96 32 li
96 64 li
124 64 li
124 40 li
116 32 li
115.586 33 mo
123 40.4141 li
123 63 li
97 63 li
97 33 li
115.586 33 li
.05 0 0 .25 cmyk
f
98 51.0742 mo
98 43.4014 98 34.9971 98 34 cv
99.4091 34 109.927 34 114.5 34 cv
114.5 41.5 li
116.832 41.5 li
108.162 43.1709 101.867 46.3836 98 51.0742 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[20.16 0 0 18.72 97.44 12.16 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 42 
/H 39 
/M[42 0 0 -39 0 39 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 42 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 42 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 42 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 42 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
rrDiqq?$Eop&t9sXT/>%'ES@="9er5#6tM@#mq%J$k3XU%M/OM!"o2C%20Ei'bqK"(Ddo*)&WGN!Vlfl
"82lp"k<V+!#u%B"9\l4"pYD>#mq"I$k*RT%M'']&.oKe&ebrX'EAmI('59g)#bEL!Vulm"82ln"o\M+
!$;:G"9eu7#7(VB$4@4M%1NdW%hB3_&J5Wg',)&o'c$]`rtk\PrYbY8!!2lsp]L3mp][c""9\l3"pYJ@
#RLhF$OdFQ%1`@Jrt,2Brt>>FrtPGIrtbSM!#Y\Q!#ke:q?$Eo!X&W.q#p^$rri0%d/_u&(^1*J#7(VB
$4@4M%1NdW%hB3_&J5Wg',1?ZrY>GKrtkYOrYY\SrW2isp]CO""8)fl"o85+!##PA#7(VB$4@7N%1NdW
%hB3_&J>!TrtGDHrtYMKrYPSOrYYbU)?K[9o`Ojip]UX%XT/V3#RC_D$4@7O"q;%P%hB3_rXo/CrtGAG
rY>GKrYPPNrYY_T)u9X2!s/T-"8)fj"jI&+!"K8@#mq%J$k3XU%M'']&H3:A')iRE'`SpH(B,-M)#bBS
)B'Rl!ql`h"S;lk!4W"9#mq"I$k*RT%M'*L&H<@B')iRE'`AdH(B#'K)#bEP)Z9a5!s8W.!sA3!r<30(
p][c"$jm@M$k3XU%M'']&/"pSrt>;ErY5AIr>#MP(Dmr*r#,JPrW;is!<`Mt"T8K("SW'"#0?l,!!N`=
$k3XUrX]#?rt58DrY,8Fr>#>Jr>5GMr>GPP!!;ot!X&T-o`Y6trrhuunc6<&#Rh.O%Ls![&.ngQrt>;E
rY5>Hr>,>Jr>>MOr>PG5!X&T-r<2p!rrrE*o*)5r":YhN%hJXNrt55CrY#8G!#5AHrYGGKr>5PQ)#bEO
)YjI9"9\<"rrrB)nccu4klC_nrt#)?!"o2CrY,8FrY>>Hr>5DLr#,GOqZ?m&"9\<"!!W?)n-/4[^]=BF
rXf)ArY#2DrY5;Gr>,;Ir>5PQ)#bBT)AsG3qucNn!!N?+rWM]o!!]P*rXf)ArY#2DrtPDHr>,DKr>5>J
!>uaR)$:cp)B/SWncSprr<2Nl_#Wj&!"f,Art>;Er=o5Gq\K)Gq\T>O)#P9O)ZKp2"TJZ)"T/E'"S)`]
!5nm;&cWLB'E/^E(&\pD(],$M)&W8h!ZDsZo*#'srWN0'rrhiqXT/A6')`LC'`AdD(AemK(`3&d!>uaN
)=n"2"oe`'"TS\o"hap+!!!Z2'E/^E(&\mK(Dcf_q%s8Q(`=/.)#bEG"TJZ)"T/E'"RZHU!6>0?'E/^D
(&SjE(BPEj(\S[M)&O5.)&X:b"TJZ)"T8K("Sr9%"S`-#"TAS,!<3c1(&JdC(\npA(]bKkp]UR"rri6'
!!N0&!!N'#!!N3'\H):&!#5AHr>,2F"rJ0n(Dmu*qA98M(`2ubr<3-(rri<)rrhuu!!N-%rWN*%iW.1&
rY>AIp_WoH!#PVO&f2B%(Dmr*(`+#*(`*u*(Dmr*rWN6)rri<)!!MWlrri-$XT8;8qA9,JrtkDH"W&!l
(`+%e(B><N(B=R?"9er3n-&dpq??j$q??m%XT8A:q\S`=";_mk(Duub";Vdi()QrR!!MNir<3$%qukLL
g&V!dmMGs@)#G*T()I`&()@]%(?Pf""T/H""T8>*!<*f0(]YHI)#+pB(An@&"o\Z'"o&5&!;dT8(`=2.
r>GGK";_ml(E!)e!>ZLN('YKh'bqK!($Po$"T/Gu"98VP!8[_U)"eaJ(`=4g)#G-H(B"sL'GVAJ"o\Z'
"n`#o!4;gr)>b9L(BG9frY>ML(B,'H'_hk("o\Z'"nVr"!!!o6)ZCWS)Z1KN(^Uuq(Ddi'()@W#rY>AG
!YZ4]limClquuZpbQ-W&oc!ZErttYMrY>_R()7Mu'GD2Z'*&[E"TSbs"oe`'"nDfh!4`+,)uCNT)&X@l
)>k<S(Ddi'(B#!I'F>Ed&eblj&Hr=Br<30*quus$!!N3'nH8goXT85;q&92Lr>>PNr>,AI!Yc:^rY,;E
rXo,6rWW<+nHJIdrWC4AjoGE$q&B8NrYYkV)&O2,(]>-K'`\sI'*8d[')`CF&-`=B"o\_q"nVrq"7ZB)
!;mi7)uUZW)&aA1rYYVNrtbSKrtPGG$5*s`&.oHb%gE4Ar<E6)rs&B)qZZTpqZEr#!$1nUr>Y_S!Z;jm
rtt_OrtbSK"V_Xa&eboW&I&dX%hB-S"oSZ)"oef#"n`#o"2k3)!<+#:*;piV)ZCTY(`=/-(Ddkd'b1ol
'+trk&J,Nc%hB-[%=e~>

%%EndBinary
grestore
np
98 63 mo
97 63 li
97 62.2833 97 57.7437 97 52.3984 cv
97.3131 51.9445 97.6462 51.5034 98 51.0742 cv
98 56.1614 98 60.9264 98 63 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[2.4 0 0 13.44 96.48 .160005 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 28 
/M[5 0 0 -28 0 28 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~#RC\A#RLeD#m^hD#m^eC#mgkC#mgkD#mq"G#mgqF#mgnF#mgnE$4."F#mgnE#mgnE#mgnE#mgnD#mgnE
#RLeD#m^hD#m^eC#mgkC#mgnD#RLeD#RC_C#m^eC#m^eB#mgkC#RLeC#RC_C#RC\B#m^eB#mgkC#RLeC
#RC_C#RC\B#m^eB~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!~>
<~.Olkq-n?et.Oco!.k2u"/1`;%/hJV).k`M,/M&P-/M/M-0.nh-0J>"/.k`M,/1WA+/M&D*/hAM&/hJV)
.P<;(.k3/'/1N)#/1W2!/M&D%.4m)$.Ocr#.k)ku/1N(s/1W2!-nHku.4?_t.Ocbs.k2tr/1W2!-nHku
.46Ys.Oc_r.k2tq~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
98 63 mo
97.5117 63 97.166 63 97 63 cv
97 63 li
98 63 li
98 63 li
gsave
[3.8794 17.8545 -17.8545 3.8794 103.522 33.4453 ]ct
clp
/1 /Gradient get_res exec grestore
np
97 52.3984 mo
97 44.1974 97 34.0997 97 33 cv
98.5251 33 110.72 33 114.5 33 cv
114.5 34 li
109.927 34 99.4091 34 98 34 cv
98 34.9971 98 43.4014 98 51.0742 cv
97.6462 51.5034 97.3131 51.9445 97 52.3984 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[18.72 0 0 21.12 96.48 10.72 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 39 
/H 44 
/M[39 0 0 -44 0 44 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcP*:q>m2gdK'(DrW9_4\H)F+qZ6a"h#RET!!&Ylp]:6nr<)`nm/Zq_UB(2mr;lcsqZHj$joG&T])_0t
q#U<nqZHa!lMpte!<D]lfDsA#p]:3mqucj"r<;Nf!<E2j!VHH'!;HTk!rN/u"T/H'#4)<i!Up,o!;QZl
!rN/t"TAQ)"oAMo!9sTk!<*#s!Vulp"8i<""oJT(#PJ/^!W<)E!9X@Z!W3#q"8i<""oSZ'#QG)+!9jO`
!WW9"!pTd.!<*#r!rN/u"T&B##6"i.#RC>7!"&Q'l2ghb!!2ruZN0h'r<)p"r!!!&r<N6+rX&Q(!!2?c
rW<*#q?!u'rW;s!qulp$r<E0)r!<6-rsJc+klLecrrMlr_>s-,!!<*$qZQj$r!**)q[!-,r!EE(l2gGW
hZ21,rWE$#r<<0)qZm$)r<`E0r<qrmmfNCe\,ZL2rWN-&qZd$)r!<3,r<iH1rs\H!!!2?dZN1".r!!$'
r<N9,q[*3.q[<?2o`=@[quaD.r;cg#r!**)r!<3,r!NB1r<rc;$k3[B!U9a]"4R>/!!!3$#5e`*#lG#-
$Mk//%/gY8%fQLp!WiH*!ql`d!5eg9#6"l*#lP),$N1A2%/UM4%KHOt!rN-#!qZT$!<*6%#lG#-$N1A/
%/^S6%KI"@%M'';!rN-#!qQN#!!!9'#lY/.$N(;/%/gY2%fHq1!riB%!rW3$!r<!!!r2r?!:'Xb#lb5.
$N(;1%/gY3%f-_9&G?2)"9/H#!rrE"!rrDs"6KU/!<3B'$N1A3%/^P9%LrsH%f$V9&.eaOqZ?d"rrW0%
rrVKg!<WJ2!<3E)$iLM0%K-e5%fm4Pr"&oA&.na@!WrN+!!<-%!!;Ni!X&T-rWKP-rsSc6q@3?4r"&T7
";)1W&.ngQr;m$&!s8H(mK<FkrWE*%ZN't5rXA`7r=8Z7!"er;!YGtTq%<W.rW<-%mfWFir<)s#]E%^,
r=/]8q[`K6o+;';&J>05"8E#u"8i<%"5*\/!;m?)&,d%@&J,NM&cWLA&cE=B&cNF6"7u`q"8rB$"82`/
!;mB+&-<FU&H37A')`FA&c`O9&ciRWpB1*lqum!$qulp"ZN0q8q[rZ;rtG>DrtG>DrtG;C!YZ1ZqZH6h
rWE*%qucs%ZN1";r=Sl=nIkm8r=]>I'+tok"6p$g"8rB&"8`5H!9O7_&J>`O'*8j^'E&XF'E/[H',:EZ
!u)C^')`LD'']W""7lZ]!6G6<'D`CC(&\jG(&AUO',)&n'GD)m&eYlU"98Vq"TJT&"98W)"Sr8-!!*`I
o+_6@q%X#H'bhAsrY#8GrY,;ErWE6)"oSQ("nVrr"n`#)!;mT2(B5-K(A\gH(&o'L(&emI(&emP'+trk
',(KOrWW9(rrr0#q??Ko_Z93,!#GPMrYG8Fr>#GN()Hc^r=o5E!tl7["TAT)"TAT&"SDrj"Q0:0!<*f5
(]YBN)#b<V(`+#*(D[f'rYGDHrtPGG!YQ+Xr<30(q??m'p'('k!!E0"[fHCFrttYO!#Y\Qr##DL";Vdi
()Hla"V_Xa&eboW&cMq6"Sr9'"pP8*"n`#t"1%t-)>tKR)?(QS)?1WT)>tBS)&O2,!>cON'aYQg'+trk
&J,NcrWW3(!!W<*pBC3mr<'P0qu?d;)]JVn!#khUq\oJPrttbPrY>PM'bpW\"VMCY&J,KL"oni*#58;o
"T/AP!8deV*<-uV*<-uX*<-uW)@IE#(`4&*()I`$'bpW\"qhL[&.f?^o`k?u!!`?)r<**(qZQcunc6N,
!$;%Y!$;+[rYtnWr>Gt[)&O2,(D[`#'`JaN&eP]e&.]6[J,~>

%%EndBinary
grestore
np
123 41.5 mo
116.832 41.5 li
118.769 41.1265 120.825 40.8301 123 40.6113 cv
123 41.5 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[7.68 0 0 2.4 116.16 21.76 ]ct
snap_to_device
<<
/T 1
/W 16 
/H 5 
/M[16 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%Ls![&.fEd&eblk',2,p%1NdW%M'']&.oKe&ebom$OdFQ%1WjY%hK9a&J>`j$4@4M$k3XU%M'*^&J5Wg
#mq"I$OdFQ%Ls![&.fEc~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
<~5X@e-7nQHM;,^Fq=^,-93^#_o6UaL;9MJ>]<**4,2E<f\5<qS)7S-9J:f:7o0f(^I3BTMj6:F@89MJ>^
/2&\42)dNW5!MA&7S-9J~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
124 41.5 mo
123 41.5 li
123 40.6113 li
123 40.6113 li
123 40.5137 123 40.4863 123 40.4141 cv
123 40.4141 li
122.718 40.1314 115.766 33.1796 115.587 33.001 cv
115.586 33 li
114.5 33 li
114.5 32 li
116 32 li
124 40 li
124 41.5 li
gsave
[3.12681 -5.09175 5.09175 3.12681 115.619 42.6621 ]ct
clp
/2 /Gradient get_res exec grestore
np
116.832 41.5 mo
114.5 41.5 li
114.5 34 li
115.657 34 116.434 34 116.586 34 cv
116.586 34 li
116.586 34 li
116.07 33.4844 115.695 33.1094 115.586 33 cv
115.483 33 115.096 33 114.5 33 cv
114.5 33 li
115.137 33 115.53 33 115.586 33 cv
115.586 33.0003 115.587 33.0006 115.587 33.001 cv
123 40.4141 li
123 40.4141 li
123 40.6113 li
120.825 40.8301 118.769 41.1265 116.832 41.5 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[10.08 0 0 10.08 113.76 21.76 ]ct
snap_to_device
<<
/T 1
/W 21 
/H 21 
/M[21 0 0 -21 0 21 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~&J5Wf&J5Wg&eYfi&eYik',)#m'+kfg&J>]h&eYfi&eYik',)#m',(ri&J>]h&eYfi&ebol',)#m',)&l
&J>]h&eYfi&eblj&eYik',)#m&eYfi&eYfi&eYfi&ebol',)#m'+toj&eYfi&eYfi&ebol',)#m',(oh
&eYfi&eYfi',)#m',)#m',2,l&.oNf&eYfi',)#m',)#m',)#m%hK9a&J>]i&eYfi&ebol',)#m'+PN`
&.fEc&eYfi&ebol',)#m',(fb%M'']&J5Wg',)#m',)#m',)#f%1WjY%hK9a&ebol',)#m',)&o$k*RS
%Ls!\&J5Wf&eYfj',)#m'+50V$k3XU%M'*^&J5Zi',)#m',(][$O[@P%1WjY%hK<c&ebol',)#c#mq%J
$k*RS%M'*^&J5Wh',)#m#RLeE$4@4M$k<aX&.fEb&J5Zi'*edK#mgqG$k*OR%1WjY%hK<c&ebHS#7(SA
$47.K$k*RS%M'*^&J>]["pYA=#RLeE$4@4M$k<dY&.fEc"U,)7#6tM?#mgqG$k3XU%M'']&-~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~:Jaka;,L4h;c?Un<)lpu<`W7&=&;^i:f1+g;H$Lm<)cjt<`W7%='/9q;,L4h;c?Un;cH^r<E<.$='&L#
:f1(f;c?Un;cH^r<E<.$<``@):f1(f;H$Lm;cH^q<E3(#<`W:(=AVjl;H$Lm;c?Xp<)lq!<`W:'=BJ9n
;GpFl;c?Xp<)lq!<`W7&='&Kp9MSG`;c?Uo<)cjt<`W7%<``@)77^$F:f:4k;cH^r<E<.$<`W:'=@,AF
8k`#Y<)cgs<E<+#<`W7&='.UN6UaO=9i+bf<E3%!<`W7%='&Kb4[28$7nQHN;H6^s<E<.$<``@)2`Wr`
5sn+4928>_<E3(#<`W:'=>;Zm3B]Vo6qBmC:Jk(l<`W7&='.(01H%6T5!_P*8P2`T;cZq"<`W9P/MJq;
3''/e6:==99MeVd<`W7%-7LJu0f(^J4?Ytt7S-6I:fC@p<[&h;.P<A02)mTZ5=%_.8PDoW<E:+`,UOoi
0/,1?3BKDi6:OL<:/Fk-*ZlRP-Rp]%0f1jM4?l,"7nHBM(`=;7+<r3\.P<D12)mW[5XIn18c~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
123 40.6113 mo
123 40.4141 li
123 40.4141 li
123 40.4863 123 40.5137 123 40.6113 cv
123 40.6113 li
123 40.4141 mo
115.587 33.001 li
115.766 33.1796 122.718 40.1314 123 40.4141 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[9.12 0 0 9.12 114.72 22.72 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 19 
/M[19 0 0 -19 0 19 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~&eYfi&ebol',)#m'GM5q'GM5o&eYik',)#m',)&o'GM5q'GV5n',)#m',)#n'GM5q'GM5r'bV/n',)#m
',2,p'GM5q'bqGu',)#m',)&o'GM5q'GM8s'bqGs',)#m'GM5q'GM5r'bqGu'bqAq',)&o'GM5q'GV>t
'bqGu((q8p'GM5q'GM8s'bqGu'c%Q#&JGfl'GM5q'bqGu'bqH!()@Yt&eYik'GM8s'bqGu()@Z$()@Gn
&J>`k'bqGu'bqK"()@Z$((_#h&JGfl'GV>t()@Z$()@Z$%hB6a&eYik'GVB!()@Z$()@Yq%hK9a&J>`k
'bqK"()@Z$()@Ai%hK9a&ebom'GV>u()@Z$((C``%hB6a&eYik'GVB!()@Z$$k3XU%hK9a&J>`k'bqK"
()@\o$k3[V%hB3`&ebom'GV>u()I;d$k3[V%hB6a&eYik'GVB!('~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~;H$Lm<)cju<`W:(=BSd0>$G30;c?Xq<E<.$='/U.=^#!5>[13,<)lt"<``@)=]nm2>?b?;>Z=^'<`W7&
=BJ^/>$>-8>[1Q?<E<.$='&L,=]np3>?kE<?!^i<<`W:(=BSd0>$G39>[:WA?XHi8='/U.=^#!5>[1N>
?=$uG?W:'.=]nm2>?b?;>[:ZB?XI2K:fCCt>$>-8>[1Q??=.&H?t!J<:fCCt>?kE<?!^iE?XI2L@U_u(
:fCCs>[:WA?XI/J?t!MR@Rj$b:fCCs>@(ZD?XR;N@U`eV77TsE:f:=s>@(]F@:E\T@q0%96q9mD:fC@r
>@(]H@U`hXA7[tk77TsE:f::q>@(]I@q9.^ANW1C77TsE:f::r>$YQGAS#Fb3]fPm6q9mD:fC@r>?tWH
AS,R53BTMl77TsE:f::q>?tWHAS<nY3B]Sn77TsE:f::r>$YQGAH~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
116.586 34 mo
116.434 34 115.657 34 114.5 34 cv
114.5 33 li
115.096 33 115.483 33 115.586 33 cv
115.695 33.1094 116.07 33.4844 116.586 34 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[3.36 0 0 2.4 113.76 29.44 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 5 
/M[7 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%1NaU%1NaU%1NaU%LrpW%1WjX%LrsY%LrsY%LrsY%Lrs~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~5s[e&5s[e&5s[e&5sdk'6:+"*6:+"*6:4+-6:4+-6UX<~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
124 40 mo
116 40 li
116 32 li
124 40 li
cp
gsave
[3.50418 -3.72755 3.72755 3.50418 117.637 38.5127 ]ct
clp
/3 /Gradient get_res exec grestore
np
120 62.999 mo
116.141 62.999 113 59.8584 113 55.999 cv
113 56.168 113.014 56.333 113.025 56.499 cv
113.051 56.1351 113.105 55.779 113.184 55.4323 cv
114.159 55.6758 115.188 55.8717 116.261 56.0105 cv
116 56.2715 li
118.977 59.249 li
118.979 59.2451 li
118.982 59.249 li
122.05 56.178 li
123.741 56.0604 125.341 55.8008 126.816 55.4323 cv
126.895 55.779 126.949 56.1351 126.975 56.499 cv
126.986 56.333 127 56.168 127 55.999 cv
127 59.8584 123.859 62.999 120 62.999 cv
118.979 56.292 mo
118.916 56.2293 li
118.956 56.2308 118.996 56.2321 119.037 56.2335 cv
118.979 56.292 li
gsave
[13.4214 0 0 13.4214 119.563 69.4141 ]ct
clp
/4 /Gradient get_res exec grestore
np
120 47.999 mo
115.58 47.999 112 51.583 112 55.999 cv
112 60.417 115.58 63.999 120 63.999 cv
124.416 63.999 128 60.417 128 55.999 cv
128 51.583 124.416 47.999 120 47.999 cv
120 48.999 mo
123.859 48.999 127 52.1396 127 55.999 cv
127 59.8584 123.859 62.999 120 62.999 cv
116.141 62.999 113 59.8584 113 55.999 cv
113 52.1396 116.141 48.999 120 48.999 cv
0 .5 1 0 cmyk
f
124 54.2265 mo
122.521 52.749 li
118.979 56.292 li
117.48 54.792 li
116 56.2715 li
118.977 59.249 li
118.979 59.2451 li
118.982 59.249 li
124 54.2265 li
0 0 0 1 cmyk
f
119.037 56.2335 mo
118.996 56.2321 118.956 56.2308 118.916 56.2293 cv
117.48 54.792 li
116.261 56.0105 li
115.188 55.8717 114.159 55.6758 113.184 55.4323 cv
113.897 52.3246 116.679 49.999 120 49.999 cv
123.321 49.999 126.103 52.3246 126.816 55.4323 cv
125.341 55.8008 123.741 56.0604 122.05 56.178 cv
124 54.2265 li
122.521 52.749 li
119.037 56.2335 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[15.36 0 0 7.68 112.32 6.88 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 32 
/H 16 
/M[32 0 0 -16 0 16 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
i;hgXiB6*"huM^[iC2c,hZ2U_iD/G6h>lLbiE,+@h#QCfiF(dJg]6:jiG.NUgAp1miH+2_g&U(qiI'ki
f`9ttiJ$OsfDsl#iK!4(f)Xc&iKrm2ec=Z*iLoQ<eH"Q-iMl5Fe,\H1iNqtQdfB#Hqd&i#iOnX[dK')P
"(>SE?M[q1?=.)K@JOBk`UNru!.Y~>

%%EndBinary
grestore
np
120 56.249 mo
119.676 56.249 119.355 56.2438 119.037 56.2335 cv
122.521 52.749 li
124 54.2265 li
122.05 56.178 li
121.38 56.2247 120.696 56.249 120 56.249 cv
118.916 56.2293 mo
118.006 56.196 117.119 56.1215 116.261 56.0105 cv
117.48 54.792 li
118.916 56.2293 li
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/5 /Gradient get_res exec grestore
np
120.741 49.0379 mo
120.74 49.0379 120.74 49.0379 120.74 49.0378 cv
120.74 49.0379 120.74 49.0379 120.741 49.0379 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.731 49.0369 mo
120.73 49.0368 120.729 49.0368 120.729 49.0367 cv
120.73 49.0368 120.73 49.0368 120.731 49.0369 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.72 49.0358 mo
120.72 49.0357 120.719 49.0357 120.718 49.0356 cv
120.719 49.0357 120.72 49.0357 120.72 49.0358 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.71 49.0348 mo
120.709 49.0347 120.708 49.0346 120.708 49.0345 cv
120.708 49.0346 120.709 49.0347 120.71 49.0348 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.699 49.0337 mo
120.699 49.0336 120.698 49.0335 120.697 49.0334 cv
120.698 49.0335 120.699 49.0336 120.699 49.0337 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.689 49.0327 mo
120.688 49.0326 120.687 49.0325 120.686 49.0324 cv
120.687 49.0325 120.688 49.0326 120.689 49.0327 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.678 49.0316 mo
120.678 49.0315 120.677 49.0315 120.676 49.0314 cv
120.677 49.0315 120.678 49.0315 120.678 49.0316 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.668 49.0306 mo
120.667 49.0305 120.666 49.0304 120.665 49.0303 cv
120.666 49.0304 120.667 49.0305 120.668 49.0306 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.657 49.0296 mo
120.656 49.0295 120.655 49.0294 120.654 49.0293 cv
120.655 49.0294 120.656 49.0295 120.657 49.0296 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.647 49.0286 mo
120.645 49.0285 120.644 49.0284 120.643 49.0283 cv
120.644 49.0284 120.645 49.0285 120.647 49.0286 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.636 49.0277 mo
120.635 49.0275 120.633 49.0274 120.632 49.0273 cv
120.633 49.0274 120.635 49.0275 120.636 49.0277 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.626 49.0267 mo
120.624 49.0266 120.622 49.0265 120.621 49.0263 cv
120.622 49.0264 120.624 49.0266 120.626 49.0267 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.615 49.0258 mo
120.614 49.0257 120.613 49.0256 120.612 49.0256 cv
120.613 49.0256 120.614 49.0257 120.615 49.0258 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.595 49.0241 mo
120.594 49.024 120.594 49.024 120.594 49.024 cv
120.594 49.024 120.594 49.024 120.595 49.0241 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.588 49.0235 mo
120.586 49.0233 120.584 49.0232 120.583 49.023 cv
120.584 49.0232 120.586 49.0233 120.588 49.0235 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.578 49.0226 mo
120.576 49.0225 120.574 49.0223 120.572 49.0222 cv
120.574 49.0223 120.576 49.0225 120.578 49.0226 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.567 49.0218 mo
120.565 49.0216 120.563 49.0214 120.561 49.0213 cv
120.563 49.0214 120.565 49.0216 120.567 49.0218 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.556 49.0209 mo
120.554 49.0207 120.552 49.0206 120.55 49.0204 cv
120.552 49.0206 120.554 49.0207 120.556 49.0209 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.448 49.0206 mo
119.448 49.0206 119.448 49.0205 119.448 49.0205 cv
119.448 49.0205 119.448 49.0206 119.448 49.0206 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.546 49.0201 mo
120.544 49.0199 120.541 49.0197 120.539 49.0196 cv
120.541 49.0197 120.543 49.0199 120.546 49.0201 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.457 49.0199 mo
119.458 49.0198 119.459 49.0197 119.46 49.0197 cv
119.459 49.0197 119.458 49.0198 119.457 49.0199 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.535 49.0193 mo
120.533 49.0191 120.531 49.0189 120.528 49.0187 cv
120.531 49.0189 120.533 49.0191 120.535 49.0193 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.467 49.0191 mo
119.469 49.019 119.469 49.0189 119.47 49.0189 cv
119.469 49.0189 119.468 49.019 119.467 49.0191 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.524 49.0184 mo
120.522 49.0183 120.52 49.0181 120.517 49.0179 cv
120.52 49.0181 120.522 49.0183 120.524 49.0184 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.478 49.0183 mo
119.479 49.0182 119.48 49.0181 119.481 49.018 cv
119.48 49.0181 119.479 49.0182 119.478 49.0183 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.513 49.0176 mo
120.511 49.0175 120.509 49.0173 120.507 49.0172 cv
120.509 49.0173 120.511 49.0175 120.513 49.0176 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.489 49.0175 mo
119.49 49.0174 119.491 49.0173 119.492 49.0173 cv
119.491 49.0174 119.49 49.0174 119.489 49.0175 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.502 49.0168 mo
120.5 49.0167 120.498 49.0165 120.495 49.0164 cv
120.498 49.0165 120.5 49.0167 120.502 49.0168 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.499 49.0167 mo
119.5 49.0167 119.502 49.0166 119.503 49.0165 cv
119.502 49.0166 119.5 49.0166 119.499 49.0167 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.492 49.0161 mo
120.489 49.0159 120.487 49.0158 120.485 49.0156 cv
120.487 49.0158 120.489 49.0159 120.492 49.0161 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.51 49.016 mo
119.511 49.0159 119.512 49.0158 119.514 49.0157 cv
119.512 49.0158 119.511 49.0159 119.51 49.016 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.481 49.0153 mo
120.478 49.0152 120.476 49.015 120.474 49.0149 cv
120.476 49.015 120.478 49.0152 120.481 49.0153 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.52 49.0153 mo
119.522 49.0152 119.523 49.0151 119.525 49.015 cv
119.523 49.0151 119.522 49.0152 119.52 49.0153 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.47 49.0146 mo
120.467 49.0144 120.465 49.0143 120.462 49.0141 cv
120.465 49.0143 120.467 49.0144 120.47 49.0146 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.531 49.0145 mo
119.533 49.0144 119.534 49.0144 119.535 49.0143 cv
119.534 49.0144 119.533 49.0144 119.531 49.0145 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.459 49.0139 mo
120.456 49.0137 120.454 49.0135 120.451 49.0134 cv
120.453 49.0135 120.456 49.0137 120.459 49.0139 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.542 49.0138 mo
119.543 49.0137 119.545 49.0136 119.547 49.0135 cv
119.545 49.0136 119.544 49.0137 119.542 49.0138 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.448 49.0132 mo
120.445 49.013 120.442 49.0128 120.44 49.0127 cv
120.442 49.0128 120.445 49.013 120.448 49.0132 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.552 49.0132 mo
119.554 49.013 119.556 49.0129 119.558 49.0128 cv
119.556 49.0129 119.554 49.013 119.552 49.0132 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.437 49.0125 mo
120.434 49.0123 120.431 49.0121 120.428 49.012 cv
120.431 49.0121 120.434 49.0123 120.437 49.0125 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.563 49.0125 mo
119.565 49.0124 119.567 49.0123 119.568 49.0122 cv
119.567 49.0123 119.565 49.0124 119.563 49.0125 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.426 49.0118 mo
120.411 49.0109 120.397 49.0101 120.382 49.0093 cv
120.397 49.0101 120.412 49.011 120.426 49.0118 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.574 49.0118 mo
119.576 49.0117 119.578 49.0116 119.58 49.0115 cv
119.578 49.0116 119.576 49.0117 119.574 49.0118 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.585 49.0112 mo
119.588 49.011 119.592 49.0107 119.596 49.0105 cv
119.592 49.0108 119.589 49.011 119.585 49.0112 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.596 49.0105 mo
119.599 49.0103 119.603 49.0101 119.607 49.0099 cv
119.603 49.0101 119.599 49.0103 119.596 49.0105 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.61 49.0098 mo
119.612 49.0096 119.615 49.0095 119.618 49.0093 cv
119.615 49.0095 119.612 49.0096 119.61 49.0098 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.381 49.0093 mo
120.378 49.0091 120.375 49.0089 120.371 49.0087 cv
120.374 49.0089 120.378 49.0091 120.381 49.0093 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.621 49.0091 mo
119.624 49.009 119.626 49.0089 119.629 49.0087 cv
119.626 49.0089 119.624 49.009 119.621 49.0091 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.369 49.0086 mo
120.366 49.0085 120.363 49.0083 120.36 49.0082 cv
120.363 49.0083 120.366 49.0085 120.369 49.0086 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.632 49.0086 mo
119.635 49.0084 119.637 49.0083 119.639 49.0082 cv
119.637 49.0083 119.635 49.0084 119.632 49.0086 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.358 49.008 mo
120.355 49.0079 120.352 49.0078 120.349 49.0076 cv
120.352 49.0078 120.355 49.0079 120.358 49.008 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.644 49.008 mo
119.646 49.0079 119.648 49.0078 119.65 49.0076 cv
119.648 49.0077 119.646 49.0079 119.644 49.008 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.346 49.0074 mo
120.343 49.0073 120.341 49.0072 120.339 49.0071 cv
120.341 49.0072 120.343 49.0073 120.346 49.0074 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.655 49.0074 mo
119.657 49.0073 119.659 49.0072 119.661 49.0071 cv
119.659 49.0072 119.657 49.0073 119.655 49.0074 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.335 49.0069 mo
120.332 49.0068 120.33 49.0067 120.328 49.0066 cv
120.33 49.0067 120.332 49.0068 120.335 49.0069 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.666 49.0069 mo
119.668 49.0068 119.67 49.0067 119.672 49.0066 cv
119.67 49.0067 119.668 49.0068 119.666 49.0069 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.324 49.0064 mo
120.321 49.0063 120.319 49.0062 120.317 49.0061 cv
120.319 49.0062 120.321 49.0063 120.324 49.0064 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.677 49.0064 mo
119.679 49.0063 119.681 49.0062 119.683 49.0061 cv
119.681 49.0062 119.679 49.0063 119.677 49.0064 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.313 49.0059 mo
120.311 49.0058 120.308 49.0057 120.306 49.0056 cv
120.308 49.0057 120.31 49.0058 120.313 49.0059 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.688 49.0059 mo
119.69 49.0058 119.692 49.0057 119.694 49.0056 cv
119.692 49.0057 119.69 49.0058 119.688 49.0059 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.302 49.0054 mo
120.299 49.0053 120.297 49.0052 120.295 49.0051 cv
120.297 49.0052 120.299 49.0053 120.302 49.0054 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.699 49.0054 mo
119.701 49.0053 119.703 49.0052 119.705 49.0052 cv
119.703 49.0052 119.701 49.0053 119.699 49.0054 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.291 49.005 mo
120.288 49.0049 120.286 49.0048 120.284 49.0047 cv
120.286 49.0048 120.289 49.0049 120.291 49.005 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.71 49.005 mo
119.712 49.0049 119.714 49.0048 119.716 49.0047 cv
119.714 49.0048 119.712 49.0049 119.71 49.005 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.28 49.0045 mo
120.277 49.0044 120.275 49.0043 120.273 49.0042 cv
120.275 49.0043 120.277 49.0044 120.28 49.0045 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.72 49.0045 mo
119.722 49.0044 119.725 49.0043 119.727 49.0043 cv
119.725 49.0043 119.723 49.0044 119.72 49.0045 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.269 49.0041 mo
120.266 49.004 120.264 49.0039 120.262 49.0038 cv
120.264 49.0039 120.267 49.004 120.269 49.0041 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.731 49.0041 mo
119.733 49.004 119.736 49.0039 119.738 49.0039 cv
119.735 49.0039 119.734 49.004 119.731 49.0041 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.258 49.0037 mo
120.255 49.0036 120.253 49.0035 120.251 49.0034 cv
120.253 49.0035 120.255 49.0036 120.258 49.0037 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.743 49.0037 mo
119.745 49.0036 119.747 49.0035 119.749 49.0035 cv
119.747 49.0035 119.745 49.0036 119.743 49.0037 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.247 49.0033 mo
120.244 49.0032 120.242 49.0031 120.239 49.003 cv
120.242 49.0031 120.244 49.0032 120.247 49.0033 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.753 49.0033 mo
119.756 49.0032 119.758 49.0031 119.76 49.0031 cv
119.758 49.0031 119.756 49.0032 119.753 49.0033 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.236 49.0029 mo
120.233 49.0028 120.23 49.0027 120.227 49.0026 cv
120.23 49.0027 120.233 49.0028 120.236 49.0029 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.764 49.0029 mo
119.767 49.0028 119.769 49.0028 119.772 49.0027 cv
119.769 49.0028 119.767 49.0028 119.764 49.0029 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.225 49.0026 mo
120.222 49.0025 120.219 49.0024 120.216 49.0023 cv
120.219 49.0024 120.222 49.0025 120.225 49.0026 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.775 49.0026 mo
119.778 49.0025 119.781 49.0024 119.783 49.0023 cv
119.781 49.0024 119.778 49.0025 119.775 49.0026 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.214 49.0022 mo
120.206 49.002 120.199 49.0018 120.192 49.0016 cv
120.199 49.0018 120.206 49.002 120.214 49.0022 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.786 49.0022 mo
119.794 49.002 119.801 49.0018 119.808 49.0016 cv
119.801 49.0018 119.794 49.002 119.786 49.0022 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.19 49.0015 mo
120.187 49.0015 120.184 49.0014 120.181 49.0013 cv
120.184 49.0014 120.187 49.0015 120.19 49.0015 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.811 49.0015 mo
119.813 49.0015 119.816 49.0014 119.819 49.0013 cv
119.816 49.0014 119.813 49.0015 119.811 49.0015 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.177 49.0012 mo
120.175 49.0012 120.173 49.0011 120.17 49.001 cv
120.172 49.0011 120.175 49.0012 120.177 49.0012 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.823 49.0012 mo
119.825 49.0012 119.828 49.0011 119.83 49.001 cv
119.828 49.0011 119.825 49.0012 119.823 49.0012 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.165 49.0009 mo
120.163 49.0009 120.161 49.0008 120.159 49.0008 cv
120.161 49.0008 120.163 49.0009 120.165 49.0009 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.835 49.0009 mo
119.837 49.0009 119.839 49.0008 119.841 49.0008 cv
119.839 49.0008 119.837 49.0009 119.835 49.0009 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.154 49.0007 mo
120.152 49.0006 120.15 49.0006 120.148 49.0005 cv
120.15 49.0006 120.152 49.0006 120.154 49.0007 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.846 49.0007 mo
119.848 49.0006 119.85 49.0006 119.852 49.0005 cv
119.85 49.0006 119.848 49.0006 119.846 49.0007 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.143 49.0005 mo
120.141 49.0004 120.139 49.0004 120.137 49.0003 cv
120.139 49.0004 120.141 49.0004 120.143 49.0005 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.857 49.0005 mo
119.859 49.0004 119.861 49.0004 119.863 49.0003 cv
119.861 49.0004 119.859 49.0004 119.857 49.0005 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.132 49.0002 mo
120.13 49.0002 120.128 49.0002 120.126 49.0001 cv
120.128 49.0002 120.13 49.0002 120.132 49.0002 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.868 49.0002 mo
119.87 49.0002 119.872 49.0002 119.874 49.0001 cv
119.872 49.0002 119.87 49.0002 119.868 49.0002 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.121 49 mo
120.119 49 120.117 49 120.115 48.9999 cv
120.117 49 120.119 49 120.121 49 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.879 49 mo
119.881 49 119.883 49 119.885 48.9999 cv
119.883 49 119.881 49 119.879 49 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.11 48.9999 mo
120.108 48.9998 120.106 48.9998 120.104 48.9998 cv
120.106 48.9998 120.108 48.9998 120.11 48.9999 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.89 48.9999 mo
119.892 48.9998 119.894 48.9998 119.896 48.9998 cv
119.894 48.9998 119.892 48.9998 119.89 48.9999 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.099 48.9997 mo
120.097 48.9997 120.095 48.9996 120.093 48.9996 cv
120.095 48.9996 120.097 48.9997 120.099 48.9997 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.901 48.9997 mo
119.903 48.9997 119.905 48.9996 119.907 48.9996 cv
119.905 48.9996 119.903 48.9997 119.901 48.9997 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.088 48.9996 mo
120.086 48.9995 120.084 48.9995 120.082 48.9995 cv
120.084 48.9995 120.086 48.9995 120.088 48.9996 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.912 48.9996 mo
119.914 48.9995 119.916 48.9995 119.918 48.9995 cv
119.916 48.9995 119.914 48.9995 119.912 48.9996 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.077 48.9994 mo
120.075 48.9994 120.073 48.9994 120.071 48.9994 cv
120.073 48.9994 120.075 48.9994 120.077 48.9994 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.923 48.9994 mo
119.925 48.9994 119.927 48.9994 119.929 48.9994 cv
119.927 48.9994 119.925 48.9994 119.923 48.9994 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.066 48.9993 mo
120.064 48.9993 120.062 48.9993 120.06 48.9993 cv
120.062 48.9993 120.064 48.9993 120.066 48.9993 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.934 48.9993 mo
119.936 48.9993 119.938 48.9993 119.94 48.9993 cv
119.938 48.9993 119.936 48.9993 119.934 48.9993 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.055 48.9992 mo
120.053 48.9992 120.051 48.9992 120.049 48.9992 cv
120.051 48.9992 120.053 48.9992 120.055 48.9992 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.945 48.9992 mo
119.947 48.9992 119.949 48.9992 119.951 48.9992 cv
119.949 48.9992 119.947 48.9992 119.945 48.9992 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.044 48.9991 mo
120.042 48.9991 120.04 48.9991 120.038 48.9991 cv
120.04 48.9991 120.042 48.9991 120.044 48.9991 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.956 48.9991 mo
119.958 48.9991 119.96 48.9991 119.962 48.9991 cv
119.96 48.9991 119.958 48.9991 119.956 48.9991 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.033 48.9991 mo
120.031 48.9991 120.029 48.9991 120.026 48.9991 cv
120.029 48.9991 120.031 48.9991 120.033 48.9991 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.967 48.9991 mo
119.969 48.9991 119.971 48.9991 119.974 48.9991 cv
119.971 48.9991 119.969 48.9991 119.967 48.9991 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.022 48.999 mo
120.02 48.999 120.017 48.999 120.015 48.999 cv
120.017 48.999 120.02 48.999 120.022 48.999 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.978 48.999 mo
119.98 48.999 119.983 48.999 119.985 48.999 cv
119.983 48.999 119.98 48.999 119.978 48.999 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.989 48.999 mo
119.993 48.999 119.996 48.999 120 48.999 cv
119.996 48.999 119.993 48.999 119.989 48.999 cv
120.011 48.999 mo
120.007 48.999 120.004 48.999 120 48.999 cv
120.004 48.999 120.007 48.999 120.011 48.999 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2803 ]ct
clp
/6 /Gradient get_res exec grestore
np
126.975 56.499 mo
126.949 56.1351 126.895 55.779 126.816 55.4323 cv
126.867 55.4195 126.918 55.4066 126.969 55.3936 cv
126.683 52.0621 124.055 49.3882 120.741 49.0379 cv
124.253 49.4092 127 52.3898 127 55.999 cv
127 55.999 li
127 56.168 126.986 56.333 126.975 56.499 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[7.68 0 0 8.64 120 6.88 ]ct
snap_to_device
<<
/T 1
/W 16 
/H 18 
/M[16 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~1c.$G1c.$G1c.$G1c.$G3B9)[3B9)[3B9)[3B9)[4Ztqk4Ztqk4Ztqk4Ztqk6:+"*6:+"*6:+"*6:+"*
7n6'>7n6'>7n6'>7n6'>91qoN91qoN91qoN91qoN:f'tb:f'tb:f'tb:f'tb<E3%!<E3%!<E3%!<E3%!
=]nm1=]nm1=]nm1=]nm1?=$rE?=$rE?=$rE?=$rE@U`eU@U`eU@U`eU@U`eUB4kjiB4kjiB4kjiB4kji
Ci!p(Ci!p(Ci!p(Ci!p(E,]c8E,]c8E,]c8E,]c8F`hhLF`hhLF`hhLF`hhLH?sm`H?sm`H?sm`H?sm`
I=6NmIXZ`pIXZ`pIXZ`pG^4R\H[L6jIt)rtIt)rt~>
<~BP;'mBP;'mBP;'mBP;'mEcQ2@EcQ2@EcQ2@EcQ2@H[C*dH[C*dH[C*dH[C*dKS5#3KS5#3KS5#3KS5#3
NfK-[NfK-[NfK-[NfK-[Q^=&*Q^=&*Q^=&*Q^=&*TV.sNTV.sNTV.sNTV.sNWiE)!WiE)!WiE)!WiE)!
Za7!EZa7!EZa7!EZa7!E]Y(ni]Y(ni]Y(ni]Y(ni`Pog8`Pog8`Pog8`Pog8cd0q`cd0q`cd0q`cd0q`
f\"j/f\"j/f\"j/f\"j/iSibSiSibSiSibSiSibSlg*m&lg*m&lg*m&lg*m&o^qeJo^qeJo^qeJo^qeJ
rVc]nrVc]nrVc]nrVc]ns8W-!s8W-!s8W-!s8W-!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
113.025 56.499 mo
113.014 56.333 113 56.168 113 55.999 cv
113 55.999 li
113 52.3255 115.846 49.3031 119.448 49.0206 cv
116.046 49.2875 113.324 51.9992 113.031 55.3936 cv
113.082 55.4066 113.133 55.4195 113.184 55.4323 cv
113.105 55.779 113.051 56.1351 113.025 56.499 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[7.68 0 0 8.64 112.32 6.88 ]ct
snap_to_device
<<
/T 1
/W 16 
/H 18 
/M[16 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~1c.$G1c.$G1c.$G1c.$G3B9)[3B9)[3B9)[3B9)[4Ztqk4Ztqk4Ztqk4Ztqk6:+"*6:+"*6:+"*6:+"*
7n6'>7n6'>7n6'>7n6'>91qoN91qoN91qoN91qoN:f'tb:f'tb:f'tb:f'tb<E3%!<E3%!<E3%!<E3%!
=]nm1=]nm1=]nm1=]nm1?=$rE?=$rE?=$rE?=$rE@U`eU@U`eU@U`eU@U`eUB4kjiB4kjiB4kjiB4kji
Ci!p(Ci!p(Ci!p(Ci!p(E,]c8E,]c8E,]c8E,]c8F`hhLF`hhLF`hhLF`hhLH?sm`H?sm`H?sm`H?sm`
IXZ`pIXZ`pIXZ`pIXQWmIt)rtIt)rtI=-BfH$OXZ~>
<~BP;'mBP;'mBP;'mBP;'mEcQ2@EcQ2@EcQ2@EcQ2@H[C*dH[C*dH[C*dH[C*dKS5#3KS5#3KS5#3KS5#3
NfK-[NfK-[NfK-[NfK-[Q^=&*Q^=&*Q^=&*Q^=&*TV.sNTV.sNTV.sNTV.sNWiE)!WiE)!WiE)!WiE)!
Za7!EZa7!EZa7!EZa7!E]Y(ni]Y(ni]Y(ni]Y(ni`Pog8`Pog8`Pog8`Pog8cd0q`cd0q`cd0q`cd0q`
f\"j/f\"j/f\"j/f\"j/iSibSiSibSiSibSiSibSlg*m&lg*m&lg*m&lg*m&o^qeJo^qeJo^qeJo^qeJ
rVc]nrVc]nrVc]nrVc]ns8W-!s8W-!s8W-!s8W-!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
120.74 49.0378 mo
120.737 49.0375 120.734 49.0372 120.731 49.0369 cv
120.734 49.0372 120.737 49.0375 120.74 49.0378 cv
120.729 49.0367 mo
120.726 49.0364 120.723 49.0361 120.72 49.0358 cv
120.723 49.0361 120.726 49.0364 120.729 49.0367 cv
120.718 49.0356 mo
120.715 49.0353 120.713 49.0351 120.71 49.0348 cv
120.713 49.035 120.716 49.0353 120.718 49.0356 cv
120.708 49.0345 mo
120.705 49.0342 120.702 49.034 120.699 49.0337 cv
120.702 49.034 120.705 49.0342 120.708 49.0345 cv
120.697 49.0334 mo
120.694 49.0332 120.692 49.0329 120.689 49.0327 cv
120.692 49.0329 120.694 49.0332 120.697 49.0334 cv
120.686 49.0324 mo
120.684 49.0321 120.681 49.0319 120.678 49.0316 cv
120.681 49.0319 120.684 49.0321 120.686 49.0324 cv
120.676 49.0314 mo
120.673 49.0311 120.671 49.0309 120.668 49.0306 cv
120.671 49.0309 120.673 49.0311 120.676 49.0314 cv
120.665 49.0303 mo
120.662 49.0301 120.66 49.0299 120.657 49.0296 cv
120.66 49.0298 120.662 49.0301 120.665 49.0303 cv
120.654 49.0293 mo
120.652 49.0291 120.649 49.0289 120.647 49.0286 cv
120.649 49.0289 120.652 49.0291 120.654 49.0293 cv
120.643 49.0283 mo
120.641 49.0281 120.638 49.0279 120.636 49.0277 cv
120.638 49.0279 120.641 49.0281 120.643 49.0283 cv
120.632 49.0273 mo
120.63 49.0271 120.628 49.0269 120.626 49.0267 cv
120.628 49.0269 120.63 49.0271 120.632 49.0273 cv
120.621 49.0263 mo
120.619 49.0261 120.617 49.026 120.615 49.0258 cv
120.617 49.0259 120.619 49.0261 120.621 49.0263 cv
120.612 49.0256 mo
120.606 49.025 120.601 49.0246 120.595 49.0241 cv
120.601 49.0245 120.607 49.0251 120.612 49.0256 cv
120.594 49.024 mo
120.592 49.0238 120.59 49.0236 120.588 49.0235 cv
120.59 49.0236 120.592 49.0238 120.594 49.024 cv
120.583 49.023 mo
120.581 49.0229 120.579 49.0228 120.578 49.0226 cv
120.579 49.0228 120.581 49.0229 120.583 49.023 cv
120.572 49.0222 mo
120.57 49.022 120.569 49.0219 120.567 49.0218 cv
120.569 49.0219 120.57 49.022 120.572 49.0222 cv
120.561 49.0213 mo
120.559 49.0211 120.558 49.021 120.556 49.0209 cv
120.558 49.021 120.559 49.0211 120.561 49.0213 cv
119.448 49.0205 mo
119.451 49.0203 119.454 49.0201 119.457 49.0199 cv
119.454 49.0201 119.451 49.0203 119.448 49.0205 cv
120.55 49.0204 mo
120.549 49.0203 120.547 49.0202 120.546 49.0201 cv
120.547 49.0202 120.549 49.0203 120.55 49.0204 cv
119.46 49.0197 mo
119.462 49.0194 119.465 49.0193 119.467 49.0191 cv
119.465 49.0193 119.462 49.0195 119.46 49.0197 cv
120.539 49.0196 mo
120.538 49.0195 120.536 49.0194 120.535 49.0193 cv
120.536 49.0194 120.538 49.0195 120.539 49.0196 cv
119.47 49.0189 mo
119.473 49.0187 119.475 49.0185 119.478 49.0183 cv
119.476 49.0185 119.473 49.0187 119.47 49.0189 cv
120.528 49.0187 mo
120.527 49.0187 120.525 49.0185 120.524 49.0184 cv
120.525 49.0185 120.527 49.0186 120.528 49.0187 cv
119.481 49.018 mo
119.484 49.0179 119.486 49.0177 119.489 49.0175 cv
119.486 49.0177 119.484 49.0179 119.481 49.018 cv
120.517 49.0179 mo
120.516 49.0178 120.515 49.0177 120.513 49.0176 cv
120.515 49.0177 120.516 49.0178 120.517 49.0179 cv
119.492 49.0173 mo
119.494 49.0171 119.497 49.0169 119.499 49.0167 cv
119.497 49.0169 119.494 49.0171 119.492 49.0173 cv
120.507 49.0172 mo
120.505 49.0171 120.504 49.017 120.502 49.0168 cv
120.504 49.0169 120.505 49.0171 120.507 49.0172 cv
119.503 49.0165 mo
119.505 49.0163 119.508 49.0161 119.51 49.016 cv
119.507 49.0162 119.505 49.0163 119.503 49.0165 cv
120.495 49.0164 mo
120.494 49.0163 120.493 49.0162 120.492 49.0161 cv
120.493 49.0162 120.494 49.0163 120.495 49.0164 cv
119.514 49.0157 mo
119.516 49.0156 119.518 49.0154 119.52 49.0153 cv
119.518 49.0154 119.516 49.0156 119.514 49.0157 cv
120.485 49.0156 mo
120.483 49.0155 120.482 49.0154 120.481 49.0153 cv
120.482 49.0154 120.483 49.0155 120.485 49.0156 cv
119.525 49.015 mo
119.527 49.0148 119.529 49.0147 119.531 49.0145 cv
119.529 49.0147 119.527 49.0148 119.525 49.015 cv
120.474 49.0149 mo
120.472 49.0148 120.471 49.0147 120.47 49.0146 cv
120.471 49.0147 120.472 49.0148 120.474 49.0149 cv
119.535 49.0143 mo
119.537 49.0141 119.54 49.014 119.542 49.0138 cv
119.54 49.014 119.537 49.0141 119.535 49.0143 cv
120.462 49.0141 mo
120.461 49.014 120.46 49.014 120.459 49.0139 cv
120.46 49.014 120.461 49.014 120.462 49.0141 cv
119.547 49.0135 mo
119.549 49.0134 119.551 49.0133 119.552 49.0132 cv
119.551 49.0133 119.549 49.0134 119.547 49.0135 cv
120.451 49.0134 mo
120.45 49.0133 120.449 49.0133 120.448 49.0132 cv
120.449 49.0133 120.45 49.0133 120.451 49.0134 cv
119.558 49.0128 mo
119.559 49.0127 119.562 49.0126 119.563 49.0125 cv
119.561 49.0126 119.56 49.0127 119.558 49.0128 cv
120.44 49.0127 mo
120.439 49.0126 120.438 49.0126 120.437 49.0125 cv
120.438 49.0126 120.439 49.0126 120.44 49.0127 cv
119.568 49.0122 mo
119.57 49.012 119.572 49.0119 119.574 49.0118 cv
119.572 49.0119 119.57 49.0121 119.568 49.0122 cv
120.428 49.012 mo
120.427 49.0119 120.427 49.0119 120.426 49.0118 cv
120.427 49.0119 120.428 49.0119 120.428 49.012 cv
119.58 49.0115 mo
119.581 49.0114 119.583 49.0113 119.585 49.0112 cv
119.583 49.0113 119.581 49.0114 119.58 49.0115 cv
119.596 49.0105 mo
119.596 49.0105 li
119.596 49.0105 li
119.607 49.0099 mo
119.608 49.0099 119.609 49.0098 119.61 49.0098 cv
119.609 49.0098 119.608 49.0099 119.607 49.0099 cv
119.618 49.0093 mo
119.619 49.0093 119.62 49.0092 119.621 49.0091 cv
119.62 49.0092 119.619 49.0093 119.618 49.0093 cv
120.382 49.0093 mo
120.382 49.0093 120.381 49.0093 120.381 49.0093 cv
120.381 49.0093 120.382 49.0093 120.382 49.0093 cv
119.629 49.0087 mo
119.63 49.0087 119.631 49.0086 119.632 49.0086 cv
119.631 49.0086 119.63 49.0087 119.629 49.0087 cv
120.371 49.0087 mo
120.37 49.0087 120.37 49.0087 120.369 49.0086 cv
120.37 49.0087 120.371 49.0087 120.371 49.0087 cv
119.639 49.0082 mo
119.641 49.0081 119.642 49.008 119.644 49.008 cv
119.642 49.008 119.641 49.0081 119.639 49.0082 cv
120.36 49.0082 mo
120.36 49.0081 120.358 49.0081 120.358 49.008 cv
120.359 49.0081 120.359 49.0081 120.36 49.0082 cv
119.65 49.0076 mo
119.652 49.0076 119.654 49.0075 119.655 49.0074 cv
119.653 49.0075 119.652 49.0076 119.65 49.0076 cv
120.349 49.0076 mo
120.348 49.0076 120.347 49.0075 120.346 49.0074 cv
120.347 49.0075 120.348 49.0076 120.349 49.0076 cv
119.661 49.0071 mo
119.663 49.007 119.664 49.007 119.666 49.0069 cv
119.665 49.0069 119.662 49.007 119.661 49.0071 cv
120.339 49.0071 mo
120.337 49.007 120.336 49.007 120.335 49.0069 cv
120.336 49.007 120.337 49.007 120.339 49.0071 cv
119.672 49.0066 mo
119.674 49.0065 119.675 49.0064 119.677 49.0064 cv
119.675 49.0065 119.674 49.0065 119.672 49.0066 cv
120.328 49.0066 mo
120.326 49.0065 120.325 49.0065 120.324 49.0064 cv
120.325 49.0065 120.326 49.0065 120.328 49.0066 cv
119.683 49.0061 mo
119.685 49.006 119.686 49.006 119.688 49.0059 cv
119.686 49.006 119.685 49.006 119.683 49.0061 cv
120.317 49.0061 mo
120.315 49.006 120.314 49.006 120.313 49.0059 cv
120.314 49.006 120.315 49.006 120.317 49.0061 cv
119.694 49.0056 mo
119.696 49.0055 119.697 49.0055 119.699 49.0054 cv
119.697 49.0055 119.696 49.0055 119.694 49.0056 cv
120.306 49.0056 mo
120.304 49.0055 120.303 49.0055 120.302 49.0054 cv
120.303 49.0055 120.304 49.0055 120.306 49.0056 cv
119.705 49.0052 mo
119.706 49.0051 119.708 49.005 119.71 49.005 cv
119.708 49.005 119.706 49.0051 119.705 49.0052 cv
120.295 49.0051 mo
120.293 49.0051 120.292 49.005 120.291 49.005 cv
120.292 49.005 120.293 49.0051 120.295 49.0051 cv
119.716 49.0047 mo
119.717 49.0046 119.719 49.0046 119.72 49.0045 cv
119.719 49.0046 119.717 49.0046 119.716 49.0047 cv
120.284 49.0047 mo
120.282 49.0046 120.281 49.0046 120.28 49.0045 cv
120.281 49.0046 120.283 49.0046 120.284 49.0047 cv
119.727 49.0043 mo
119.728 49.0042 119.73 49.0041 119.731 49.0041 cv
119.73 49.0042 119.728 49.0042 119.727 49.0043 cv
120.273 49.0042 mo
120.271 49.0042 120.27 49.0042 120.269 49.0041 cv
120.27 49.0042 120.271 49.0042 120.273 49.0042 cv
119.738 49.0039 mo
119.739 49.0038 119.741 49.0037 119.743 49.0037 cv
119.741 49.0037 119.739 49.0038 119.738 49.0039 cv
120.262 49.0038 mo
120.26 49.0038 120.259 49.0037 120.258 49.0037 cv
120.259 49.0037 120.261 49.0038 120.262 49.0038 cv
119.749 49.0035 mo
119.75 49.0034 119.752 49.0033 119.753 49.0033 cv
119.752 49.0033 119.75 49.0034 119.749 49.0035 cv
120.251 49.0034 mo
120.249 49.0034 120.248 49.0033 120.247 49.0033 cv
120.248 49.0033 120.25 49.0034 120.251 49.0034 cv
119.76 49.0031 mo
119.762 49.003 119.763 49.003 119.764 49.0029 cv
119.763 49.003 119.762 49.003 119.76 49.0031 cv
120.239 49.003 mo
120.238 49.003 120.237 49.003 120.236 49.0029 cv
120.237 49.003 120.238 49.003 120.239 49.003 cv
119.772 49.0027 mo
119.773 49.0026 119.774 49.0026 119.775 49.0026 cv
119.774 49.0026 119.773 49.0026 119.772 49.0027 cv
120.227 49.0026 mo
120.226 49.0026 120.226 49.0026 120.225 49.0026 cv
120.226 49.0026 120.227 49.0026 120.227 49.0026 cv
119.783 49.0023 mo
119.784 49.0023 119.785 49.0023 119.786 49.0022 cv
119.785 49.0023 119.784 49.0023 119.783 49.0023 cv
120.216 49.0023 mo
120.215 49.0023 120.215 49.0023 120.214 49.0022 cv
120.215 49.0023 120.215 49.0023 120.216 49.0023 cv
119.808 49.0016 mo
119.809 49.0016 119.81 49.0016 119.811 49.0015 cv
119.81 49.0016 119.809 49.0016 119.808 49.0016 cv
120.192 49.0016 mo
120.191 49.0016 120.19 49.0016 120.19 49.0015 cv
120.19 49.0016 120.191 49.0016 120.192 49.0016 cv
119.819 49.0013 mo
119.821 49.0013 119.822 49.0012 119.823 49.0012 cv
119.822 49.0012 119.821 49.0013 119.819 49.0013 cv
120.181 49.0013 mo
120.18 49.0013 120.178 49.0013 120.177 49.0012 cv
120.178 49.0013 120.18 49.0013 120.181 49.0013 cv
119.83 49.001 mo
119.832 49.001 119.833 49.001 119.835 49.0009 cv
119.833 49.001 119.832 49.001 119.83 49.001 cv
120.17 49.001 mo
120.168 49.001 120.167 49.001 120.165 49.0009 cv
120.167 49.001 120.168 49.001 120.17 49.001 cv
119.841 49.0008 mo
119.843 49.0008 119.844 49.0007 119.846 49.0007 cv
119.844 49.0007 119.843 49.0008 119.841 49.0008 cv
120.159 49.0008 mo
120.157 49.0008 120.156 49.0007 120.154 49.0007 cv
120.156 49.0007 120.157 49.0007 120.159 49.0008 cv
119.852 49.0005 mo
119.854 49.0005 119.855 49.0005 119.857 49.0005 cv
119.855 49.0005 119.854 49.0005 119.852 49.0005 cv
120.148 49.0005 mo
120.146 49.0005 120.145 49.0005 120.143 49.0005 cv
120.145 49.0005 120.146 49.0005 120.148 49.0005 cv
119.863 49.0003 mo
119.865 49.0003 119.866 49.0003 119.868 49.0002 cv
119.866 49.0003 119.865 49.0003 119.863 49.0003 cv
120.137 49.0003 mo
120.135 49.0003 120.134 49.0003 120.132 49.0002 cv
120.134 49.0003 120.135 49.0003 120.137 49.0003 cv
119.874 49.0001 mo
119.876 49.0001 119.877 49.0001 119.879 49 cv
119.877 49.0001 119.876 49.0001 119.874 49.0001 cv
120.126 49.0001 mo
120.124 49.0001 120.123 49.0001 120.121 49 cv
120.123 49.0001 120.125 49.0001 120.126 49.0001 cv
119.885 48.9999 mo
119.886 48.9999 119.888 48.9999 119.89 48.9999 cv
119.888 48.9999 119.886 48.9999 119.885 48.9999 cv
120.115 48.9999 mo
120.114 48.9999 120.112 48.9999 120.11 48.9999 cv
120.112 48.9999 120.113 48.9999 120.115 48.9999 cv
119.896 48.9998 mo
119.898 48.9997 119.899 48.9997 119.901 48.9997 cv
119.899 48.9997 119.898 48.9997 119.896 48.9998 cv
120.104 48.9998 mo
120.102 48.9997 120.101 48.9997 120.099 48.9997 cv
120.101 48.9997 120.102 48.9997 120.104 48.9998 cv
119.907 48.9996 mo
119.909 48.9996 119.91 48.9996 119.912 48.9996 cv
119.91 48.9996 119.909 48.9996 119.907 48.9996 cv
120.093 48.9996 mo
120.091 48.9996 120.09 48.9996 120.088 48.9996 cv
120.09 48.9996 120.091 48.9996 120.093 48.9996 cv
119.918 48.9995 mo
119.919 48.9995 119.921 48.9994 119.923 48.9994 cv
119.921 48.9994 119.92 48.9995 119.918 48.9995 cv
120.082 48.9995 mo
120.08 48.9995 120.079 48.9994 120.077 48.9994 cv
120.079 48.9994 120.081 48.9995 120.082 48.9995 cv
119.929 48.9994 mo
119.931 48.9993 119.932 48.9993 119.934 48.9993 cv
119.932 48.9993 119.931 48.9993 119.929 48.9994 cv
120.071 48.9994 mo
120.069 48.9993 120.068 48.9993 120.066 48.9993 cv
120.068 48.9993 120.069 48.9993 120.071 48.9994 cv
119.94 48.9993 mo
119.942 48.9992 119.943 48.9992 119.945 48.9992 cv
119.943 48.9992 119.942 48.9992 119.94 48.9993 cv
120.06 48.9993 mo
120.058 48.9992 120.057 48.9992 120.055 48.9992 cv
120.057 48.9992 120.058 48.9992 120.06 48.9993 cv
119.951 48.9992 mo
119.953 48.9992 119.954 48.9992 119.956 48.9991 cv
119.954 48.9992 119.953 48.9992 119.951 48.9992 cv
120.049 48.9992 mo
120.047 48.9992 120.046 48.9992 120.044 48.9991 cv
120.046 48.9992 120.047 48.9992 120.049 48.9992 cv
119.962 48.9991 mo
119.963 48.9991 119.965 48.9991 119.967 48.9991 cv
119.965 48.9991 119.964 48.9991 119.962 48.9991 cv
120.038 48.9991 mo
120.036 48.9991 120.035 48.9991 120.033 48.9991 cv
120.035 48.9991 120.036 48.9991 120.038 48.9991 cv
119.974 48.9991 mo
119.975 48.9991 119.976 48.999 119.978 48.999 cv
119.977 48.999 119.975 48.9991 119.974 48.9991 cv
120.026 48.9991 mo
120.025 48.9991 120.023 48.999 120.022 48.999 cv
120.023 48.999 120.025 48.9991 120.026 48.9991 cv
120.015 48.999 mo
120.013 48.999 120.012 48.999 120.011 48.999 cv
120.012 48.999 120.014 48.999 120.015 48.999 cv
119.985 48.999 mo
119.986 48.999 119.988 48.999 119.989 48.999 cv
119.988 48.999 119.987 48.999 119.985 48.999 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[2.88 0 0 1.44 118.56 14.08 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 3 
/M[6 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~1c.$G1c.3Q3B9)[4Ztqk4Zr~>
<~BP;'mBP;F,EcQ2@H[C*dH[>~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
113.184 55.4323 mo
113.133 55.4195 113.082 55.4066 113.031 55.3936 cv
113.324 51.9992 116.046 49.2875 119.448 49.0206 cv
119.448 49.0206 119.448 49.0205 119.448 49.0205 cv
119.451 49.0203 119.454 49.0201 119.457 49.0199 cv
119.458 49.0198 119.459 49.0197 119.46 49.0197 cv
119.462 49.0195 119.465 49.0193 119.467 49.0191 cv
119.468 49.019 119.469 49.0189 119.47 49.0189 cv
119.473 49.0187 119.476 49.0185 119.478 49.0183 cv
119.479 49.0182 119.48 49.0181 119.481 49.018 cv
119.484 49.0179 119.486 49.0177 119.489 49.0175 cv
119.49 49.0174 119.491 49.0174 119.492 49.0173 cv
119.494 49.0171 119.497 49.0169 119.499 49.0167 cv
119.5 49.0166 119.502 49.0166 119.503 49.0165 cv
119.505 49.0163 119.507 49.0162 119.51 49.016 cv
119.511 49.0159 119.512 49.0158 119.514 49.0157 cv
119.516 49.0156 119.518 49.0154 119.52 49.0153 cv
119.522 49.0152 119.523 49.0151 119.525 49.015 cv
119.527 49.0148 119.529 49.0147 119.531 49.0145 cv
119.533 49.0144 119.534 49.0144 119.535 49.0143 cv
119.537 49.0141 119.54 49.014 119.542 49.0138 cv
119.544 49.0137 119.545 49.0136 119.547 49.0135 cv
119.549 49.0134 119.551 49.0133 119.552 49.0132 cv
119.554 49.013 119.556 49.0129 119.558 49.0128 cv
119.56 49.0127 119.561 49.0126 119.563 49.0125 cv
119.565 49.0124 119.567 49.0123 119.568 49.0122 cv
119.57 49.0121 119.572 49.0119 119.574 49.0118 cv
119.576 49.0117 119.578 49.0116 119.58 49.0115 cv
119.581 49.0114 119.583 49.0113 119.585 49.0112 cv
119.589 49.011 119.592 49.0108 119.596 49.0105 cv
119.596 49.0105 li
119.599 49.0103 119.603 49.0101 119.607 49.0099 cv
119.608 49.0099 119.609 49.0098 119.61 49.0098 cv
119.612 49.0096 119.615 49.0095 119.618 49.0093 cv
119.619 49.0093 119.62 49.0092 119.621 49.0091 cv
119.624 49.009 119.626 49.0089 119.629 49.0087 cv
119.63 49.0087 119.631 49.0086 119.632 49.0086 cv
119.635 49.0084 119.637 49.0083 119.639 49.0082 cv
119.641 49.0081 119.642 49.008 119.644 49.008 cv
119.646 49.0079 119.648 49.0077 119.65 49.0076 cv
119.652 49.0076 119.653 49.0075 119.655 49.0074 cv
119.657 49.0073 119.659 49.0072 119.661 49.0071 cv
119.662 49.007 119.665 49.0069 119.666 49.0069 cv
119.668 49.0068 119.67 49.0067 119.672 49.0066 cv
119.674 49.0065 119.675 49.0065 119.677 49.0064 cv
119.679 49.0063 119.681 49.0062 119.683 49.0061 cv
119.685 49.006 119.686 49.006 119.688 49.0059 cv
119.69 49.0058 119.692 49.0057 119.694 49.0056 cv
119.696 49.0055 119.697 49.0055 119.699 49.0054 cv
119.701 49.0053 119.703 49.0052 119.705 49.0052 cv
119.706 49.0051 119.708 49.005 119.71 49.005 cv
119.712 49.0049 119.714 49.0048 119.716 49.0047 cv
119.717 49.0046 119.719 49.0046 119.72 49.0045 cv
119.723 49.0044 119.725 49.0043 119.727 49.0043 cv
119.728 49.0042 119.73 49.0042 119.731 49.0041 cv
119.734 49.004 119.735 49.0039 119.738 49.0039 cv
119.739 49.0038 119.741 49.0037 119.743 49.0037 cv
119.745 49.0036 119.747 49.0035 119.749 49.0035 cv
119.75 49.0034 119.752 49.0033 119.753 49.0033 cv
119.756 49.0032 119.758 49.0031 119.76 49.0031 cv
119.762 49.003 119.763 49.003 119.764 49.0029 cv
119.767 49.0028 119.769 49.0028 119.772 49.0027 cv
119.773 49.0026 119.774 49.0026 119.775 49.0026 cv
119.778 49.0025 119.781 49.0024 119.783 49.0023 cv
119.784 49.0023 119.785 49.0023 119.786 49.0022 cv
119.794 49.002 119.801 49.0018 119.808 49.0016 cv
119.809 49.0016 119.81 49.0016 119.811 49.0015 cv
119.813 49.0015 119.816 49.0014 119.819 49.0013 cv
119.821 49.0013 119.822 49.0012 119.823 49.0012 cv
119.825 49.0012 119.828 49.0011 119.83 49.001 cv
119.832 49.001 119.833 49.001 119.835 49.0009 cv
119.837 49.0009 119.839 49.0008 119.841 49.0008 cv
119.843 49.0008 119.844 49.0007 119.846 49.0007 cv
119.848 49.0006 119.85 49.0006 119.852 49.0005 cv
119.854 49.0005 119.855 49.0005 119.857 49.0005 cv
119.859 49.0004 119.861 49.0004 119.863 49.0003 cv
119.865 49.0003 119.866 49.0003 119.868 49.0002 cv
119.87 49.0002 119.872 49.0002 119.874 49.0001 cv
119.876 49.0001 119.877 49.0001 119.879 49 cv
119.881 49 119.883 49 119.885 48.9999 cv
119.886 48.9999 119.888 48.9999 119.89 48.9999 cv
119.892 48.9998 119.894 48.9998 119.896 48.9998 cv
119.898 48.9997 119.899 48.9997 119.901 48.9997 cv
119.903 48.9997 119.905 48.9996 119.907 48.9996 cv
119.909 48.9996 119.91 48.9996 119.912 48.9996 cv
119.914 48.9995 119.916 48.9995 119.918 48.9995 cv
119.92 48.9995 119.921 48.9994 119.923 48.9994 cv
119.925 48.9994 119.927 48.9994 119.929 48.9994 cv
119.931 48.9993 119.932 48.9993 119.934 48.9993 cv
119.936 48.9993 119.938 48.9993 119.94 48.9993 cv
119.942 48.9992 119.943 48.9992 119.945 48.9992 cv
119.947 48.9992 119.949 48.9992 119.951 48.9992 cv
119.953 48.9992 119.954 48.9992 119.956 48.9991 cv
119.958 48.9991 119.96 48.9991 119.962 48.9991 cv
119.964 48.9991 119.965 48.9991 119.967 48.9991 cv
119.969 48.9991 119.971 48.9991 119.974 48.9991 cv
119.975 48.9991 119.977 48.999 119.978 48.999 cv
119.98 48.999 119.983 48.999 119.985 48.999 cv
119.987 48.999 119.988 48.999 119.989 48.999 cv
119.993 48.999 119.996 48.999 120 48.999 cv
120.004 48.999 120.007 48.999 120.011 48.999 cv
120.012 48.999 120.013 48.999 120.015 48.999 cv
120.017 48.999 120.02 48.999 120.022 48.999 cv
120.023 48.999 120.025 48.9991 120.026 48.9991 cv
120.029 48.9991 120.031 48.9991 120.033 48.9991 cv
120.035 48.9991 120.036 48.9991 120.038 48.9991 cv
120.04 48.9991 120.042 48.9991 120.044 48.9991 cv
120.046 48.9992 120.047 48.9992 120.049 48.9992 cv
120.051 48.9992 120.053 48.9992 120.055 48.9992 cv
120.057 48.9992 120.058 48.9992 120.06 48.9993 cv
120.062 48.9993 120.064 48.9993 120.066 48.9993 cv
120.068 48.9993 120.069 48.9993 120.071 48.9994 cv
120.073 48.9994 120.075 48.9994 120.077 48.9994 cv
120.079 48.9994 120.08 48.9995 120.082 48.9995 cv
120.084 48.9995 120.086 48.9995 120.088 48.9996 cv
120.09 48.9996 120.091 48.9996 120.093 48.9996 cv
120.095 48.9996 120.097 48.9997 120.099 48.9997 cv
120.101 48.9997 120.102 48.9997 120.104 48.9998 cv
120.106 48.9998 120.108 48.9998 120.11 48.9999 cv
120.112 48.9999 120.114 48.9999 120.115 48.9999 cv
120.117 49 120.119 49 120.121 49 cv
120.123 49.0001 120.124 49.0001 120.126 49.0001 cv
120.128 49.0002 120.13 49.0002 120.132 49.0002 cv
120.134 49.0003 120.135 49.0003 120.137 49.0003 cv
120.139 49.0004 120.141 49.0004 120.143 49.0005 cv
120.145 49.0005 120.146 49.0005 120.148 49.0005 cv
120.15 49.0006 120.152 49.0006 120.154 49.0007 cv
120.156 49.0007 120.157 49.0008 120.159 49.0008 cv
120.161 49.0008 120.163 49.0009 120.165 49.0009 cv
120.167 49.001 120.168 49.001 120.17 49.001 cv
120.173 49.0011 120.175 49.0012 120.177 49.0012 cv
120.178 49.0013 120.18 49.0013 120.181 49.0013 cv
120.184 49.0014 120.187 49.0015 120.19 49.0015 cv
120.19 49.0016 120.191 49.0016 120.192 49.0016 cv
120.199 49.0018 120.206 49.002 120.214 49.0022 cv
120.215 49.0023 120.215 49.0023 120.216 49.0023 cv
120.219 49.0024 120.222 49.0025 120.225 49.0026 cv
120.226 49.0026 120.226 49.0026 120.227 49.0026 cv
120.23 49.0027 120.233 49.0028 120.236 49.0029 cv
120.237 49.003 120.238 49.003 120.239 49.003 cv
120.242 49.0031 120.244 49.0032 120.247 49.0033 cv
120.248 49.0033 120.249 49.0034 120.251 49.0034 cv
120.253 49.0035 120.255 49.0036 120.258 49.0037 cv
120.259 49.0037 120.26 49.0038 120.262 49.0038 cv
120.264 49.0039 120.266 49.004 120.269 49.0041 cv
120.27 49.0042 120.271 49.0042 120.273 49.0042 cv
120.275 49.0043 120.277 49.0044 120.28 49.0045 cv
120.281 49.0046 120.282 49.0046 120.284 49.0047 cv
120.286 49.0048 120.288 49.0049 120.291 49.005 cv
120.292 49.005 120.293 49.0051 120.295 49.0051 cv
120.297 49.0052 120.299 49.0053 120.302 49.0054 cv
120.303 49.0055 120.304 49.0055 120.306 49.0056 cv
120.308 49.0057 120.311 49.0058 120.313 49.0059 cv
120.314 49.006 120.315 49.006 120.317 49.0061 cv
120.319 49.0062 120.321 49.0063 120.324 49.0064 cv
120.325 49.0065 120.326 49.0065 120.328 49.0066 cv
120.33 49.0067 120.332 49.0068 120.335 49.0069 cv
120.336 49.007 120.337 49.007 120.339 49.0071 cv
120.341 49.0072 120.343 49.0073 120.346 49.0074 cv
120.347 49.0075 120.348 49.0076 120.349 49.0076 cv
120.352 49.0078 120.355 49.0079 120.358 49.008 cv
120.358 49.0081 120.36 49.0081 120.36 49.0082 cv
120.363 49.0083 120.366 49.0085 120.369 49.0086 cv
120.37 49.0087 120.37 49.0087 120.371 49.0087 cv
120.375 49.0089 120.378 49.0091 120.381 49.0093 cv
120.381 49.0093 120.382 49.0093 120.382 49.0093 cv
120.397 49.0101 120.411 49.0109 120.426 49.0118 cv
120.427 49.0119 120.427 49.0119 120.428 49.012 cv
120.431 49.0121 120.434 49.0123 120.437 49.0125 cv
120.438 49.0126 120.439 49.0126 120.44 49.0127 cv
120.442 49.0128 120.445 49.013 120.448 49.0132 cv
120.449 49.0133 120.45 49.0133 120.451 49.0134 cv
120.454 49.0135 120.456 49.0137 120.459 49.0139 cv
120.46 49.014 120.461 49.014 120.462 49.0141 cv
120.465 49.0143 120.467 49.0144 120.47 49.0146 cv
120.471 49.0147 120.472 49.0148 120.474 49.0149 cv
120.476 49.015 120.478 49.0152 120.481 49.0153 cv
120.482 49.0154 120.483 49.0155 120.485 49.0156 cv
120.487 49.0158 120.489 49.0159 120.492 49.0161 cv
120.493 49.0162 120.494 49.0163 120.495 49.0164 cv
120.498 49.0165 120.5 49.0167 120.502 49.0168 cv
120.504 49.017 120.505 49.0171 120.507 49.0172 cv
120.509 49.0173 120.511 49.0175 120.513 49.0176 cv
120.515 49.0177 120.516 49.0178 120.517 49.0179 cv
120.52 49.0181 120.522 49.0183 120.524 49.0184 cv
120.525 49.0185 120.527 49.0187 120.528 49.0187 cv
120.531 49.0189 120.533 49.0191 120.535 49.0193 cv
120.536 49.0194 120.538 49.0195 120.539 49.0196 cv
120.541 49.0197 120.544 49.0199 120.546 49.0201 cv
120.547 49.0202 120.549 49.0203 120.55 49.0204 cv
120.552 49.0206 120.554 49.0207 120.556 49.0209 cv
120.558 49.021 120.559 49.0211 120.561 49.0213 cv
120.563 49.0214 120.565 49.0216 120.567 49.0218 cv
120.569 49.0219 120.57 49.022 120.572 49.0222 cv
120.574 49.0223 120.576 49.0225 120.578 49.0226 cv
120.579 49.0228 120.581 49.0229 120.583 49.023 cv
120.584 49.0232 120.586 49.0233 120.588 49.0235 cv
120.59 49.0236 120.592 49.0238 120.594 49.024 cv
120.594 49.024 120.594 49.024 120.595 49.0241 cv
120.601 49.0246 120.606 49.025 120.612 49.0256 cv
120.613 49.0256 120.614 49.0257 120.615 49.0258 cv
120.617 49.026 120.619 49.0261 120.621 49.0263 cv
120.622 49.0265 120.624 49.0266 120.626 49.0267 cv
120.628 49.0269 120.63 49.0271 120.632 49.0273 cv
120.633 49.0274 120.635 49.0275 120.636 49.0277 cv
120.638 49.0279 120.641 49.0281 120.643 49.0283 cv
120.644 49.0284 120.645 49.0285 120.647 49.0286 cv
120.649 49.0289 120.652 49.0291 120.654 49.0293 cv
120.655 49.0294 120.656 49.0295 120.657 49.0296 cv
120.66 49.0299 120.662 49.0301 120.665 49.0303 cv
120.666 49.0304 120.667 49.0305 120.668 49.0306 cv
120.671 49.0309 120.673 49.0311 120.676 49.0314 cv
120.677 49.0315 120.678 49.0315 120.678 49.0316 cv
120.681 49.0319 120.684 49.0321 120.686 49.0324 cv
120.687 49.0325 120.688 49.0326 120.689 49.0327 cv
120.692 49.0329 120.694 49.0332 120.697 49.0334 cv
120.698 49.0335 120.699 49.0336 120.699 49.0337 cv
120.702 49.034 120.705 49.0342 120.708 49.0345 cv
120.708 49.0346 120.709 49.0347 120.71 49.0348 cv
120.713 49.0351 120.715 49.0353 120.718 49.0356 cv
120.719 49.0357 120.72 49.0357 120.72 49.0358 cv
120.723 49.0361 120.726 49.0364 120.729 49.0367 cv
120.729 49.0368 120.73 49.0368 120.731 49.0369 cv
120.734 49.0372 120.737 49.0375 120.74 49.0378 cv
120.74 49.0379 120.74 49.0379 120.741 49.0379 cv
124.055 49.3882 126.683 52.0621 126.969 55.3936 cv
126.918 55.4066 126.867 55.4195 126.816 55.4323 cv
126.103 52.3246 123.321 49.999 120 49.999 cv
116.679 49.999 113.897 52.3246 113.184 55.4323 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[15.36 0 0 7.68 112.32 7.84 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 32 
/H 16 
/M[32 0 0 -16 0 16 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
i;hgCi=Y&LhuM^Di>:MShZ2UFi>ptZh>lLIi?[Lbh#QCLi@F$jg]6:NiAB]tgAp1RiB6<(g&U(ViCE,4
f`9tZiDJk?fDsk_iEPUJf)XbciFhKWec=YiiH+AdeH"PniIL=re,\GtiJm:+dfA?$iLKB;dK&6+iN)JK
nGn(~>

%%EndBinary
grestore
np
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 9.0%%AI8_CreatorVersion: 14.0.0%%For: (Nick La) ()%%Title: (page-check.eps)%%CreationDate: 2/26/10 7:09 AM%%Canvassize: 16383%AI9_DataStream%Gb"/Lf66/r[cmT/K7B!;NAFZs321qngGu_F"qb[7$,(NNL\'nWc75(l,'`Ktc8bQY2?nl(<ATC[,a$>TSRK.YB\0?2^G`Tl,]Z"[%W15>MZJ#2rL"DsDmW?UhQId1Jof?ZfhmY\l:9VFKftU0sm\Eg7Q4eE124L/O33-13ImgkQ%_LP/_lEchcEIPe2n1K!de<s9=m<SE%02:o%f+_T9",.EZJ/%j_L*1gj071B1V#_f,1S8J1,7nl*>!N=OU&p^H$?jd4%f:lbC!c,?f[Aa$rAsEk!\up8[9kS\OC/3^&Hma"%\;dBKG'^:=J5c%"S4)VQmK6`;.bpr"&)-.-Yi;4)TY(UT]8mET$e`;e"p5\a`$>>+qrI`).WdZ9^Qooo]NTsWe*+02Q2qhiV`6?C%DMas?d:ejmP`4X&9>fnB'#TE"YWGtL#d^F74OGOI<3Q@[N;$[CE]lCu?9&&d6a4s$g_Vu-P6m\a1C$d5ZsDcR=b0W$LDRsh^P#"L%#d:mA[ojVo`)J$;YAfYT+)K8Y!hE.t(,Zs\>*V*>dQ(I[BmXODhQM\.f*7U_\^;I?qK4:-ZUU?4fB`r!)ug*o$DL98!`*,2RpPQp%h&([H6p,&-?72;$fCVk$Y&:S!lAQ&Q56VC5<U/,I!I@7WLn`ebFPaL++2cZLl*o9>[X\WY]3bB7F$kc.WB0OCa@&rVI.3dF?Srs#%,W/Ph59fgAhJ?:'P]6msGM6i^)XS!no[FZNHAtO1MOMWNoRkM_f->3d]d\fRm9nk[I?Fd(`BFUKiVEDn,t2cQ+1C%[V+-Y?Q$Ac%%2ViOKK+a^9AY&#X]mk%QmfC!*%tBaqT;md@L4Pu*c-AooDC#Tn,mdd%M70uJp85N&'qnSAO&Qjf<#)*+eTKQ4L4M%5JM7<+@;j%K%.)S:ugqup@Z>G9#D<tukfOES@j1<n.\uLY$>o27$QhI*e;gKlU'I.J6Suc4\10ONC.-(\!&INemSC0=V#X8n*3PnSQRn85*7@ru^%O,tUa`0%!gkfCgWINm[Z`O!W!ihY"up^ml/_G>i)>s-1"K9T:P;^kTni@""a3N(A*g*pkQ4&X@G`$"7c66UjRM'Gk,;Qa^QeJN09%$Me0MVGa+9O[&c^,NOmM+$V49GQpAE$MhS8W^UYK<3?p"@UqBIPV`2F3hu=EW?W+B)j:ZkS5PE4;n=A`3\o/#Kj]B9KA83)7..9<%jdNV%J,"jse@q&0.MLMP57n+1b@I#P1Z+mhUDTqP1E0r7_Q41qVj9YdJb]Ju.?uukN_5l%V/erGR78$3P]h^hf]hV,5Ad<JP]H&W%e=*A^WGLc(0);:9)gXU5PK>Ru%6]Wk.C=M<h9>:Sqnq9a%5CWh[EPEdl2`>CP/Q4N1`3?R?A=f,97%!I:]><+US?]HM'?dC\+EI^%l#F50J!mC4cnjXHrb396%_)(+fBKQC1YfSAB:?1RgsSF1U;u5YraiBq6dLEiqH#5rj)@Zkpu%4QF4;4Z;SCLgG!rgTT.&I"@d<H'%:#1N4BoLr<Yq>%9`#6/:*6j$uNhX(ek.$GMi)Z0N('Di43$.;6&V(A?TX5gW[Pc_rp=<dl%Iq6dW#7@:]\eZdUmrG/I)BW$d<0\f%cn:H(8tkQ\0UU@!1`FcHOo'*iN^M*r0p(iYr6=d:gk<raX,fcDo^ZT.=&Paq[kVc:.c4'g-kdGcB,m#iIuA'*iV'A[/L5oqi'MTc%\F:a3(^h5?L1gRoaP*T#i5dY@`_'[F[=f<J((GNLi2jc]>BYBHA1"^[2PtO-lJ(J./Q7R2(1ISeD)TPsp7BnTe8'?[V\,^oI6k;h%Ie64?Q/lQ,>0t,o'I1VOQ-Mf:jjPc>DS\8&CuM-'1&E^CjccDKi1AU_kd\8?*i"Jl-@NIKdPtVh26N?D?GnWD?:-IC4GC4U9[cb*%c%R(2OW5qiFb\K1^E%^fZ=8c5pf3<m[75M<oo3FUDtIe:f?ihQ2>.3gSjp9ZkJbQs9[>$6I#W!B^4@LjU<A)%Bfc0TV2gZuqW-81%FZeP4ReuV/AW-JKhGN$uBURm42/]Z2ac>IdF"fY6kBNH`W.,1A3epCt&[',di":FYi>g0fpmu)ql+Jfp76#8H>;riV>GHNO*bVcD%PZhU6VQDS#Nh^uda%=u/Q53;g`ns>[WfM0Y?=T2cD&/+"hs"GamnG*oXt_kh(+So$<@NAUl3#%^eGc>b@M\5sGoY?Ob;Z6fYfBl-%'RA0aPP@dkPoOA0`XLV/79d,M>@;Ao_-(NBU>MI%bjeo>W$#tU3J?tmX$&D\1QCpNL,Y08^`8tCJl?0jKpRTIVLZ$N%1!$1cj]1G%[-)ZLV":6nZ3oKj2dd="Vr;,E,B)0uL[?G86gIEDVid@8W5mOaMSL&`T-q(GbDZhI9e&dth,\@0cquQK)a=f&$FWoK6s^)_P0I(+%q(1+?>*2ij5*a?PA)9,cIjWZ=#,-cDbQoVXD$f=2eat;W6^a*7@[WKRPgN-=A1].[:l8u7,sn45FUQhcBMjk=MC<pf-HQ;GW&[oA%R*f%AZT`6=oqd#6m/f_DR2''Y!Zm2-Cg8o\H.op9kg(1s7=c2@#.$0m-;mK/.-;D%lWY-L!Vg5B$b6$)(A)!,mJ*\,S3aL85;N+p%<K3dGRAi!#oJ][$UVU"*H-qJN)::6VlU.CRUK7i.a?*g"`Ss%_oJ%Cb%[bk'[R_g=&;=f9)>=?X74)MC)hAPKc/YVF4>_l9_>Jtf%1<AOHR?7/6<(tCX_K^r*b"Z2`'JVn]iCfUM,b8+i7:pU<X.ei474.=S0?&?(]!`CmQ+'2,lTg4hIZ"rL,3$c[U+PRHPjXe4c(OVB%GX!tZO^V,sP5Yr.c,K$>V5B=.;@0ZgZ1BAs&<h0-%Z#1gN(e&A#j%Qp>@[V!CU$P_0g`Xi20n1qKP%SY7:aFQ$7H_=V4/)l,F&Ck%*$gS2hFOP_bhH^c#IkYb^($b/.IE)JJ<PL>bI:r1m[oU,F;h(_,3;e<X<-kB4bX^,KrP,f-N#\/;C@<UX,*L)Dho,jgS`*!S^p^>%07]&c[+%q3TtL[*,I4aP\n*ccWa+6G0jAc@fJU&o;L8aZ/Lju!L9E#]pnBT8CKC@V!C)upa4JGQq&"rN!nB5gi`i4^LP_<;I2di[%PTEF<[m6nSlH-MDYkIiMC$,e:Z^MEh1hl>K1E,K$V<c2ZMU,V`RR-V^-mpeB[n5jR-s!,1iAMkNpe"+MCa1sWp$5Z1YP+X?Jhc'-%k%D$p0XcK@'1k[NE?;(>UMo$_r&9g'boHh63Q+^m#G3`UFsiO?L63P)VqHF$VF`t6qkPg!oS]/(Wf"$7=DBfsdj*::c.IJop8^^Q%:lArA+G(tfVGtU`%#cF-feK<?FM[hiP%s0akD%Dspd9GM;*:VA!mS;Ejs$qf^2E76R?Q88fJ(mq83N*A5&01]:&-sgM/=K""R4M9%\lYe/PPf2mat4;&%4o[\Ve.1.[om'QjGgH&MIX(,HR;`!W<)6W11AK0<^Wcf6A'*Ofd8B;1s</*5jO`h/N]%KRJgOT61#AI@6?.;%VW[34".^rqpqjG1L`VO01SESm/XeDGW9sH3hB[FG[iM_OPTkMXjVmJ3hZC-$hhjie;^=&j[3RO/;B#365@V7"EH5SB(mV0gB5tB=%>HSs0.(i(\NQRSW%Y#gpN"U,(^;`hr;o:l#WHZ^1Z'm<l;N+gm@M-ME+I/g"0A2M0KQ:hJrk(J2Q\`QY>DW'-*qTrU_2-*da]3NN%qerclAK+TljAWCUaI>b&TX/]:@Gbaq`EbFtk))bdB)aiB8?9H!SBIH9)r/LsPiND)f,L?TQVd!`e>4Zp"ID0pa(Po"d8XNF=EVQ)%iNIdX67:EE^D_eg,O[\`0d]]U_,u-ERU.9%,j[>.R4a=i8g$W/_fT#j6,-]p[)LRafc\u!`%.R8GXTR)2uV$lY!gPn?7)`+O_AU!%Jo;aH;mt>]i2)NWcgJ10>1GgK8Fik6Bm+6u/_DF&Qel-&V:U'Wj-Li.J8Vaa)U-D9d\=LH22BPcfBWjW#OQ7RZUCs6k,s#T$#GS_%I=(_2K4SrB58!<h%N>L'?YX\L-P#2q90J?2NR4(5ZL.;@N`YW?>%)W$[b1T@2*9X8Yec`*]>EBiHJRgQT/B:/;NE'cK9;36^S%D+%1()&3ccn.WBi*uoVUr!CK/)V!Hou^mqKS?<]SO#:=hS7Yc<YQRc!]1K;_Ye4R[chAruF)E8;HnQRgNgCP7NbnAG-6-l`^B]GRVso%^Njq5e8.$X]i)>r.&S4ZBb)oF[]^P!n((^@g$#n3H]"=R/+j++EmqYuh&gmD8Y_t9Wf;0*%$:[`OP3I1Mta5jQh=8.,@_5K/qLYD%##nnO0LeE:/sfEpWuVM*m)G1tDX"ag0"&>!<t"FR=jEh6j9/6;X@hV0_e6D5Gj-M-ne/TG?K"mjj)oSa]ZFBjbrbDEnudMpB8Z2A%"BeP(<RB[#$\i$r(8NGc?:D[FH'h`rX#22#L:US8M]96@Lo+jJeKm^:MD!h=E?nDE,[""j<RTg%986tLQ=RnVOc#;Po9gVlc]XqX%<\2eL/DYn\LBWObEic!(k%-6DABVDjX,o:)2b96O6P_<.OA:?Xd?,F%;&n,;<94sWR;jdu`[`kd\&]A>U0*Y;E`"9c7BNL)NM9R_%MK[Ar(5o='I(MYH/%^\>\kr+;bhR:@ZO<<I^$U=Q"YT[]onY#-OJ!$QOb%cq=Hd<!JX7j%nBtl82W85h[L<kl72V7j5aF)iOT5gi%<(0`-`DB533*,C)i[@72bc?=FWfd]6WJ[^UR]<ECC9!S7X,^?db'6a<#Z?mE78r^h=3])cGZdk%35?>f;@&*_c')?S1idMg!Zs`M%HKa"-RE<1%Bsmfi0/"gIh@E@Yo)`li+CW=?B"r!*,36T$A5;&m4k#jnVr\&q^oVrb#N/NDJ6rL;,'<qG!9F":i$AR\.<rtN9*np>%nBun)\5('<+8.IBQPI1"huuSBbUDV2Td,;0(cl*hJl)dFh(S&?)<,sCbjD-"(V3l8E1r!HH%k,D6T(=0ZO%aRj8Rjr$>uTH'qYAb%oIHi==&*N)^HnaZ=/8Fi!Y#?K&-uqdJ09ps;1QW9BEYP0gj^[6chQAcq`[D"?5I]\QZQA3FB-q7>rQ/sA*LGikXC;A]HJ,d+W7SZ%(oj8I\@Q>lQ=1_m;)I&:fWJV>V?GjN0iaEd;.5nI7kl$j#Q^'s"A>7J:hOBue?]DFbRBX1O"'u]Kg2I(`t\N?_B2]I22.^o@<\W)%'l9].8T4MKWHQduC.J5$bPmRSZD*_Q28Mi60l-ZI1p*Zi>$iUP+8DVqM44D_HMYsiA$VtqCY-GU'q?B&?X3)rONYC2K6!Lr_%tJF%s-`$Ia^T`,RQm\=`t\N?_B2_O@g[^8R_t2SiUHm"jC\%2XGPj%J%:1t>OWe;KATD,T34BnGQ)?@")]?io]SLtltMklrrI7"\!C13%Cp^cJO+HfUBu&j9ls4-=F%;YfBjQ"uiSY8jhVlskSBROCO&%l>J[9P:7&5$lbW>\<IP\mD"'X=i!eI,.]W"#bQ($Q;i"70YhD4,_%R"cmZ1F(4C4"FsF[u<;LU5V2@/UX.V<<Hct26PZO1!cqOE(8_dZuQR#7TD/e(BQ9s2#_I\O_=<tP*^<7$qeI57N$nVlMW'Mh"p-*%LKB*ZR0S>Z"gI%h'@)*SQe19CH6,6l%rGeoN$J4o.M.KIo`K_uXp.tm%Gj.B?A0nn#L<_3>BB"\o%^h,kqmf&'o(_Ch'mhqL'*g[%Om=hNJ2[6EHk[QZl&j"&#/D$]WCcWPGl9[I;<e\)?K9r8M0In\f-n95_-%jUZ3Z,.hQ3qEYED5kl#=uQN[E3u7`GV$D"kQ<T%>Up%#5jGff5LTARurG%`)F&U@;RK1^mYh`"u1\c09<a9r\`VkQ,]Khen?rG^B6Lk6]TmJEN*4_Q>.Ibf'+qi-S:IC"B>"+kkj2]J=_pK%L8NC9j:aFMC,YpF;lrst_saQ[4`sC4T>+*rQ8=;K:8"jhP;TjfW='coDmY8D;Q*#mX9ecJ'iKDZ_ZXG8g:p8Yb5bC;$L;<-=/*;l%h5/`Y0+FR-N8jL?S3CZ[H_s.OGKQa/\nMj:$?/uH01)bSOYO--2*5`Qk(VD-2Z!N=EeI"K(gsR-+-oangbD"EF4>8VXr7EQE:@J7%m;W4^Rb8f,:3Sn7reOQC@=(CJ\R/Zg!%&(qQeH"he7bU_]$,O`^V!kh")$%a&fo->7Mcbr8ap*F'/b/L-LJ&`aE]tq08IC8_`Vmn%bpLp1NRpN867\6a#eAaT<P6JQefj's#-hb`C45JE828_0'8ei!EifbDjmg9i1kr,'P^-Gm7<O^p,G,OhUB2[E2DT1IN*esjf>>$`%6)iV?hbZI<0g-qIa@N"WXGN;7d=@bnNPrTlSW;)EnEMFg6pa\TdrZ0->k.0$<Z+`lnNn(H4nUE$12=?s=])DkKgihm.P9@i]""Jc%.hS\kV)Ir..4348EZIR%CV1)]?@TZCmH)O/rh._t,>,gPBS#2V,LEaB6PAgj7V,EjKkZL"WdB_/h&gG>C+%rS_S,p1S6c<Q-=R5%%NpT+/I+m67":;=O3GhHGrCr?o/7qs.,3TQ+9E`;54[2K5O,D:J=@hoacu,\6&#X9j9L?3DD+ptY!&.DV.'*V:gGn*_We6]>#G(9^%';1H#:r<qTJ\o-D#(ZeMctfO_m<b&\,[g9JfSC[-4)Z7_I\YIHNRi;F5bc7W]W/5$?8VakVqPg1P;*`\;ZEjRBU-/m5q,J\&IQsZ%b>%Kc:)eRnJ9=qC11ZK8hXHrk'4?0PI&DbYX>C)D!*19:eiUQp#8Ki\'ZksSYu6gB=Fn>$WLL*;#kr*sD;AC],O`%FJ=>[Y"HIe&%W5K"8TV+S\&83#t6V4V("9l!J<"k*]@gVOS4#G[Ac4mKhA8441PZ5,1V-\Y7Ij6'AaK'j[9FV1\i#j/d!#l4N1I+H_JiX[[<U,#)%j&F>)*/:`_YS!mJJ<!NuRS.-Q%f7;XEsiL+ph[?$aB+hd?FA7RjP&F=*pZLU(]DHfdEb1-`1"4GTZK2t'_5VeHnQ@d8C`n.=dp^6%!Lt70_RW+(QpNbnZPYo9YL;aWrEDhA&clM6K`6X,?>elXXJ=SI4XiFHJ=Sus'a,3@Or#qSdI@d(/1jPQ4d[$p78R`Pa)YWmkj6is%LKB#r6`\"`L$HS:eRN)`KprXR.8[KVr]NP1"K'uB:Qd!=$l[CSRT$d>p2PY$$4QITBed':i^k'1e9tgV8VQC>h\]Em]%],Q;ti,)%[g!WJ'1(>Y%J%NB8UP"jJRYK>)5\ij\1'jJGuC@]"Ij_:iq9t`"Rk\Th[DYH9.M,--mVk';?I/'+ql1tVd#aS?jT)J!p]u^17W&"%S*2faF(pRO[`aj9!!+RWgMD"L!n=T&*CR-Y.[R=0Q[/#MH\2WHB`QVeT1bN[Ve85\\R4@+aV..Z8BI?%6N[bBKA[bQ^*=#L\27YM%5V?<sqWaNF&;;Jfqnu[#VA\?]*_]cJ4)aKK<4HmEDe)9_Fb,&b#B^cWZRM+-nR3GR57%:s$.^+l+I^Qs;#QGE(WuXKKER$;4btN"%^5(eBAjab-9rDSP"rLc_*#1F@0<rL$\:oI=n?0*RIB6W^-<p)i4ugn(#NT+*YJ7C6mchUKlIP@rib%Fmm8-tGbuobW?E:e;CX4$4%F)+F,G,(;jIoiiJMsC40iHfG*7,H`Zrjd8OkRG_(>80m*X<>^X4PtA>S_>"^]s.=&?R]fnFo-mlOgq")(,h6:H49"V@+FtsNsf0t%GA0"EGKNZE^K;F@F^2H^I%')-2me@RJb/kOaUbp>Zdh)(Rg5:4qWa)%5BIqAqlTPJ>eJ<lSLT-aQ9*ZBc)>A9kDqjP.m&5:*bc=+%j/K9UiB@u7qYA^BZ^)WC97)q=-;0$R^:p*ISa+\+Ai0t@]8`gj+4t`'6&:BXFhoL7a.J'fh8NSZ%ZoJTT52anfN\,m%Oq^)<_e/E%DI2JfgQ[H);Iu6;)Xg>"j^M@Q?aB"gbN>+YPnmE&+)A'\"afdn[CtPAcHY<qIC!02IGeFA[9,Sp;p5<X?IF.Zn#m[ikJN2-bjI+G%HE08ck4.QM-dob7fK?7qO+V9*4;H(`H*OcgIBpDd[=3!P1i9p5Q-<S15Zn!;&:tM;c=-_W`25,4g9&:p2B):8$1oa<CbOo$4KGHP%[3u:Sa4Z&mYVgo7>VhU.kiL`"S_qi]cL^>P:$$@^I%,U0_sXn<^sJ+Q163o1<,^=Y2TfaSqH-d>^1lG'Nd9StrkqqmD(W8=Wt.A3%U12"r)23TOZM`Id".AMZm^QL#hUZQ6Lk=As`E,*fGV:+gl/(s24$1D=dFkX=qr?ILDf&P3IlnB="pDhgVj?=P!?g\^+Q+[o5ZlaS%5TiiLkEJ!MGp/o*]`,(85,dp]o?)>cFfOatT>a]Bn[kX3?(W'Kft2%ke@*Yml=K"^nG0Fgb@E4#rp#1Eo0KK@'OQOD)b[n$:L3/^%p;Lp^X6Z8*<jq/EeJ/)f\FZ_7(R7aO:VZgD*LWhG.n?bK>WJOa@=kAb&)&+IoB30d2l0<md#P,m$Cb+LDs#U/?oZ;46F%1`0Ladi%k1ELsi&R_/+HnB@<3eCOF_fUfh4Fk-R)%;=QKs'DXK8O-*TK/ZX12]8MIh[<QEsfa%uHO$Q`-DaO8$kb6\/@`enTF#eQo0rj\:3i%l9S\Srk(Z+M2O_A?5T9G[*W*elfuGZEV2<[L6`/VE8SJ;F'5T;KbhJ'=pr."r3BV/(]2ouq>.tX*lQg/%aOd;2mKX&m1j\XDap0f%N">Buc=G2#PKG@CQlX)LNpf3\W$RN;\@m6k$;OM6H#ZVD)7?!NRCdjtgiORu6!W7!Hd---+^`#b\`sqN7C1M!km[qYH"$_bN?EAp%?b7i>qk2BCRdHT)Gu_WV%RV5<"p8t*CRlQA]9(J_c&6=b&\:+W=R,0kSOUe6Vn0CA!k"R[NIo-=]6tI3!Q!14Q/i]qgNOLm?_'-d%IVW8&bPaEUJpDA/f[SfJ\LeHA_F+B+_Y27u^L_gEFW9c"T!/ocm11!`V5R'1QUHG5^qU>:9A?)J@AZW'JgE&ZZl5%h?&l;XYH+,t%r@15%o"8E<_rd_>q0H`OXbQXTf\3h+!:kF<;;c]8&fuc\k2l))%U05n`%a7!.eLk&$WL>-s'3=rg-)jug-rEX,eQ9IS'o1/pEJ=u%/aV02"l.kk&,1`ohL"#0("S];h;I'`fHZRh+j!kLZnN3JUa%m!09=(nCu(u%)$1c'=`c?=/*CY>cFFKn*kFcCfcn4Vk[^t"GnpJ[%#fiW@&79g@69tHDcsr8i+>mebUjua7&<b-J2CZO7P]jKbEeW[7a^?8-1.5#.N8u6^EYsaZl!k$GP<PJg:>"2.77k9$GuT[gg?*Z'%JkI<6!6\D0FeJ]CU/Ftf2\_BNK9(`[6",IW'/kZ:io8T;>_RrDYQ49$$4V\g??W3HKT]%&Je9H[p`VL&M#?9AA#rfUn8Z6DBI^!u%+q7r%UVb`^]FrP!in+`d7c;`PTdDlZ&E#I3=Fs6kPE#>K]5_TP!&M%I"B#:@H6$+.W3)FfG=&>Vi$\mf`Dneu$I==^6&h*cpqBOY%rOSpTgC"TROWk[r\$<:?86?7)o4qr/<>,'<NL#7;$WS"/:WXXm5I*S2a,c"#l*k,.h&NiY_P25XQ$u_l-4Ie.6a!L2]<<UV)t)KR%*jQXRV6b!1q[SmLo23#g^TQ7LkEeN?r:.<_;d#od:^1RmV_c`+A+c-]B4*>-T?n-9SQ]oVQ^3)5#Ko?L*#G)]nahI(`?iF)%keuo%USCU8b)l;UR29`'ZuGirH\2[6=_J+]/?<=LYjm?a^22n;h+k7urS-lf9L<[/`U_a5\tuQd\]DE\Yhj,T[o1ulCFcKN%YmM%(r$FT%WLlYWDUBX0VPZ>^24AE\9$=Q'!UaL^QKtWE>l6F@/uY#->#udEPKCoT;\Q6srklk"$r[hSl3f."LTJlPF)::Ar"74NoObhHn*Amm%qr--sGD?q_@m`816iI$BZQKoq2P8_'ko<jk+s:!:Zd&r>/(T">BgBgL$l)s'S>(':@eMnK;;O<Xf1Mah?tOtAo>PXVpU-LQnWeBG%I0A[BhFW\_,\5]+K$&.)<EB5,fX%#]m?(BJpi&5os,RfXSN;*>=V'<RHj^`Jb-8?5f^"!51Q9jYq+#hbj"Za^X[O.:p<:]l@24+?%5)&RHm\s<uShp;4lICas_YT@l9_u_`O*SA:F)D'cIX,AUJ'%l*H167Jj(&lO,%jn9E0(O!(d)"Eiq?X0&/[LD;/%n5<7>8lNiZFP%<q0fd(e&M<T2t+1@XAAe.;"R*:+^8Kqtd(jQ&cHXo<SL/Mu2'9T?uPFei`tPH%U0Teo:L=q(h@hnCkqPm>O9tk*p_r;m2P'm!E:F%pHOWtP7:46/bFA^CO+t$G*a?(jEEOiEHZ!d<Pq"VN.'Efp+:Q'n\X"&IkIUNa(NlR4N[g:=7U"<@?S0'ENRUbG.@"D/?d/,Y&7Zs%ZW:d-G.MYKQfYb=E[hg4hO`JUg[isLNV_pO"-T;H:@((USOXGLp2eMfDrm8<fVld5'mD':i4lP5B(K>+2&Adf`-%G]r[W\\Ng%.8%63qlj9EdLX]?tPq\>kX;]\j<YT6=\^).r],@F+*ZF#39MTR8b7&s*PgT7`Ti?+rNBQq-m;KrT.ikXWUk[#?kSHqW@)T"`B0pAR0K%7_-h":7a'@d+,JWD.UV3?1<5%m@ULbc2<7qK3kuXfoaBSN'FK<VrGm@p(<+abnWFEkG9;2eH<F9W2kBnJg?9WbW3)jg\O8^?Ghk\%rCH)=I_J"K6)CC5SocXG\XPp#>>ij!5+fR&5]*f`!N3M6/?eV/9mOi?L[]MgdosOW0?k<AG-;^PK3%$[;Jtpnk5!/&c+LPiKpfnd%G4/#/5(lN]>,or&ZG#ZG4<C\6Z#N&p+?FFHV@g"=/UY<T?fi0mSLV_(C?j^.SAV2b,uWM$^/$58>4r&7_YCQBrI.mF5q557^$$86%=4CtA]qMU?0@k4'k5/Nt?p4c0fB1T!Z$QM;XBak.Z)5K#rnqd7b9%qLY@N@\jLnaQBIoaI5Y8Fs]$C9R8fDJ"3+Xt2h0eKMrgX+5%Z_ICHDk8:@2SJ;8&$h5(nY<PG.'@\6"Gi"o?sY>Ndp?goZA<Jg/Ad?Jd<m$Va[r$=1:ui-T)HR@fhL+Rs6W6nmLdV(cO3QiiA4@P%qEsdu&FXHpP9jRdV!&p3rct<>g[=8(QI@rs_BRW6iq*)<;n[SGfSsh,'ejJ"e84RnFOFt2on#YWg*q6*PNo_eSo,7'$Cb'T>'^"0%D(QKK3Fdk"\R9/JPoicOG[2sdG_:^'4H9*liYCPQkBjO65@";H`Jl/lQcS.3OE_m_pE3ok456d"Ag#*K=hHLIj+<MT02D2Q%iLdi%$D6&NH.OsHC9Cj@?0m'u((O#JrPM;60j!3>2cg51GKUjlW.@K%s/iMFldZ>g\+`5?,tG5UKPlM-$EWHm4tEP<b_qOf[F[NTXmTkL%qiG/K+#`Qi77e%=Mg\j-56pM!?RX]/YD/1EGLXO(PJ='W$6)4d59e',HsEZ.gpZU"ob+e#Vhq`]Ws.00-N;!HHJNpsAYSnZW&XKH%LX,m?^[J8;\](]4n(DK\`VWH3Fh4?,g<9:N87*GL==J(o9+^:I/<jmNlV@,Q#Eq<bg5:.563$1l0C-n('mfJt"/jl;j\lT=J?2mX%`p\*=>e@QtL$n!I?a)N:E$:O5=RPpqpBE9#+*D47-gO'T@An8W[X@\n%u/n^QOYLS34\sD1#gLK[[qK=0O,&7JF$J]Bk;!]=*g@F%:_iB2S#:ia_)-N5UTh/TSWEUk.t_65Z6#,Phd:_,GHU&%WT9)b0i/.N=9oH]o[st_;KL8FpUFK[.rE(lb:fb!CXLWa:L)8_rL)=n%X%V\Z5k7GA\0702HK&]Z-`[kjd]8)4R63?=p/E^*$pRjAk6Kq`=)F-;GMR<oW`Qo:^@*LG@DD]]JCchad&GNVp?i;_o#7;0?*%oc%4rd%f"'Og/C2/IkA1HPfOf@?,$ei`7j2Ju,Y.E-k3/oOVSEqp#<jUJ-9haJ4)iLNZ\)J@A[2?%(r=N&`?oCY!IOd.6?e4`/7H\pR%XIXf@=JbXE%&f3K(P64l=T50]_+\IDk8*`KrFE2'\USTm-H_h.f"qJ^gY^Pc(.tP+:*=!^o0h8^AO9+rH!=N:?!IO653F9/m@8\G%*dn:;DE\MN-6(mW/Sm<#j_,*p*:.^Yhk:F-g-:J7.nM.i48fC/%#tlNOeqHAoAt=hU&8#2b\q=n"YBgs?^g:1`(7:=d-bX;;r?mO%n>l#J]6'FPZ%_LEJ(*.SBE?Eqb>HJFT.Nr0@SGW1Hgtc02"e=q/Wp`;^jS0qm6e#-iA[f)YEo[2SJ>d#dNeNrQl&OEX*tDq-.L\9%Y$7iUO^AU%.b!cd-'MXZ#Fl$hJGIuX:lfF`R$VRlcqA5P*Q:@(ZWJ8tHSP1urYlW+C;RV+*OS%'rhrfGS*Qsk?/)d]mJ:>S)pY\%%'t2DaBBSJllW`jiEO$P5@r?"S=P/#4L9a`>?ff87cS@oaLC_J:eZO2F<,Q23\9(g90Ah2!NXd?hqg#4]cRRF1K#rP#U;A!R^`]KA%I'+GMA\7TnX>JMO,;C\S=$`VhK%/-!`;jN]g=>M:%jtU4L!=90<W2"U%D_O@aQnrl61Jc"Fk\HJ^sB4.>Gif4I=RajKufu6"Z]k9%.cs^4!F]j,)dNJQ_5b"BWKaSEIQY@Sh:JQ5*NrJA*%YRCq?\J!rOhg^/A;oBb&7e>,Bc?Mq`39@R-W";%0c.RGd_U7e?_(,#+q/>%oB=adM73..k;57l"6j60mJb0^osKEhV^C)*r1S4NXUUgnEV7BJ!\YO]Q!c&+kiE:kN!MmM^DS,IpZ$l!X`aO8olC$@;M+YQ=h="5%46sl[/.%/`,p]MA[`[asd6<$*>.Y$c\JDSWBhNY"_nllF5W&jq2QtuAMc:#pXM20oE9n.'<9(q)I[C*&^?h5J\<O=d[cS$OXjtWG%VnW9iFQle!YpJ=L-l5Y67IYmtL%s2!WESu9>Va;l0TN$&G:oH(\LJ\*$kLD#4[:d.L@0*N?nZ?sE85:98'Q`M"QS9c4S#g@KqY0E%iGHoM!rb-Q`d[o.hH`1JFS"khn7T#=]:a\<<bq]Dp1rZ"Lj?>\goJ8=h`SC:_7Z?tr3O;IGOt+RIS;BMMo,R[!ES`;nbGPN@kLo+%h"Jp^o2L(r"6(*<-sO-"hf94L91t3[LiZ57qV;l<Yt0.p$@R+\='CK&HB7%K,eU(t?._7,Y+"s'FjW42:.4:Bis+tsSS]lup5/iM%h0ttI+d!%O[n7EuMM$V8D4LJdaaL^@k;n6NmuZ$,T@V'2e*D5B^NP2:io8QAic>/j/q9Z5,UT[CA<5Gg>lP:+]Q9o:LIp?D)TD1j%HE$1sHREI?kV;J!_HH:P:;>H^kl?0=CqR0pl29*"Qgg<eEVE/(FZnur46:dle+1BT7u_\'ijHud5:drM4qWPGPh_km!cG>'poDm@%Ybp221@m*Cl.9C=AdMd13Sp"W*h:X$FsH`D:)*>,YOm1SSE5TU;:8n1"2*O;I-^^!m7ulP!Q/-qWBE`mDt,-Y*sX_5bp#*Ye#nco%f+'8Q^IGWIY*W.d)5nS4P7q-P(d3e>??l2PFunqG)siT@YAne!hJa+<=#k!B1H^>#OsdL^9UOpJkH-R#0)bLr]k6h/%esW2pr7[-%/iSPW!Jt:>N<AEgS@$8bHOdd^%"jrW_1*6<FC*!ImHcAO@UtYbo_Z?L7EMac#0M94f3^>q.s?Qidc3V,e;j8eJcbqsh;&`)^)Xj1%i_Fi>JZdp(=IJ72aQ+*"-+oLNgs)Lna&T=j3[s_cDBj@Y9eld;g^b=qB'#E>-^$n4T:fs$pk;d:P.m#LJquC7n1uc0KA`o`WK*.-%Osa0BOjK.<2r(_lrmR]ms-S%(:5geU\;PO!dALt<-32Lij;-*U+g?&gLUbLcO*(os*p;GUc[g)qZ_RBP?ZiQsoh3&]^J^OgVc^rV%bVLqNE2>b,K`rTG2H-3ZmZVYLZVS0OLAfpGEa=K;*2EWHFUU6k#WcS"e7`o_2X/4MS8jMjZpF^MnA>\r3)8/e)WW=q-*CAph1"At%Ue9GqfJ6/\rF*6se/kt;EasPX(<&qOJaeCZEMj^Qe*(kjp'3bs/O-sc?m\e>27g+3X:&J9epG#CG^iEmB'qeG%dTLRO/"X9cWV,\%^0d1GGr[:\/#D*U)\s=P<=]eZmVJC/hbnOfF@Ip\h!c<d^7'-SAWRb]lt2P[6>;/_15"&MX@iZaW]k74[7cK+].\I;!\iN=k@pb/%9&tOGBIR#t]9?_7d1H($l#S`D<n9ZIHkgofflY655rRAD@^B$[&YC`)k[9agoW_j72K=@0.s.Hg\fG>?Onn'Ll'HSqENK8(dZ!'c%p,ARS"'d\[K03s<]TKceLl-K-qEf-E?YU(nc(6auaO.9k44F-n%:rZ[b`"W7,hL%=H"n1R+q*i@<MpI1m<P>A:mEgl,1",^ODjb9%\%(V/e<2?i%o]*L@-c;;`(,rC\$PXN@1!&jNaNduE>>BSD@AQ_L:it$'64B'`sG>LY;JmBj:9>SFRu9)3>m-4%f*;k&[UJ2^lb!G%`<7LE"N<#[b6_gek`]_XR$dLL=5q!Y8l@buUs3J!i,WHIjJ0@GD:C67OHfC2fk;.5;5t=Ss!]ZU!B\toPL4IfB]2V2,$TA^.ZehU%3Em-S^CiX(Y6]g]P"Y:O&g.,gPm[m_Sd66m&(A0a8pXRsanG1$H`A=^diRj6C'!o#!\I$qXFXFK8j&?4Eh(EZgkQ!Rgj@:XkHCkj%&bFJC+W#ilj-o*PI+1A-KK(I(YN-KKOliN<,"=#LAo6Pb/;qGLCdq)R3][.s1Rjd,Ke+^lh0PO^KW+Oq!u)7!*umIm3q_/ES06;$%A`EGE0Mc=WCLBMg'\qX\^Z3Y?`nrdPrj"Oe":h$lboXp-)4Vi7S>bAlcB+s)+2;BQ#V>t,mr:EV*frHS4C'n!LjW>/@,\s3OS4jr%3AWH:0Da2ifq*)QPD$S8I\sO7n#K>mi<AX/UZF@#1plb*#WnQ8V^6M>*KMFt*9/9dfb;u>3f"pO2imaHXG_Z]iJmqg.S>L5iN/>m%I(:S3fo-.r\grY`7F23ic>$pjoE",*_o,@MHiX-?CBH??cNF+tTGXZKPD"<YTVMfs+7M8Co/Pb3,>L_k<7r?C-].3JQlPTTUs(a&%%U2)LM!S.u/(^2),,;bB7cfr%\[u'*FGSYhW7m>>-*J8fiY/NX%A&nHT+>6b\-P`N#(QVC;$=\+(IZ1!E2+Af(S96g"BTb9"\jTu%fnl54j97^MLks!Hnq$($f4]d>AtUS.fb]U[TrSemM*g(GG`@o;DGB)1?l+^#Jj@+R1g]/c/D4\dC%`_!8(m'9(fo2&+S)6XCLY^G%,X!e!Z2nnO18_sLSsKQdc[]lrWljFf]Z^bpb3:[;$XiF,)+Beb]HKp5\giSP?<>,<Y+h`S-!<P(#XVia9!%U@_J7>S<>%SU-s\uS%#eGQmIJY)*4ZXt\W)hdm7F8D,'oci_VH8)B1VJ^\0(h>oNeGH1!cq["%iXG-4>oUD8@K8cLt`5%2r7;S6deO.N61B02&"E^'>qUl%^pBt2FI+k*#**1AjI?R;9Z.T"44.^AWr[fAgX1_f/Ef.oi3f`Q@"?@t![B5$#*RU/\tB+UM?%)c$dGC;'Ersj/.Z?j'@o!H8)"VD%6-[RqZCK2BPHq4R.33J]aK$Fm?/frl"<3Gq#AE[Hi3[+8.A.;N`X9XJ3GLP*nX)'EG>9q\/EW&PeVZgI27b<=IY:WEO`$+Qn2In!%TG7`),)1&*#O[+\5-J^qY"2-\.!\NE5X7eF1).ge-p&L'"g5Y%5dE.51_IS4n1Vo!5NkKN2/&7?=K2Dm;'\S)lR6LUZjJjb$GMW-%'9c6`?UnhTL_;NiCEOoW@SHn579s'Sb\l4.6a8";`tTEO:IXCl%=\Ea7Y2$Lr1J^c9ge7lB$^'0&>rs25i4rC-*STp_A\(fTNVAO%&Wg`-,Y"u94@EQXLenN,TVt2I)X3Se'Ec40ML,oj0f`,$aq?Zf86H1I)!rZ$:*cBB()8Tk2'Y-jBc=o['k3FJ'CJD'^!7Jo*\38,%m(r$g^[+6p5Sth<pl6Bt:cX.iW*`[bJjrZ.5V(NR1TZuaP)n651(;iGrE6If"?/4`BpKr8TWX!`r?P=a6$IptCEkkV`4W+F9jh4:%#@OA4YNUfeC.QJq8e_$>*5Wg6+*(];"QU!kaUq=/!5JfY0]eD'a8ed>L21VP'p7"^%*7lQ%`En]J.hRN'c.pJ6q%0E"ZbMGQVM_F%-r<r3,N^W`6lL<OLDV.]0Hf#E1lH/iImY15e+U&,/(LfC<9^=jr/6g(Q=Z@jWc6@B5!RaSf)PP#6T\r2,l:$'%u_^j7#DE$#AleV%L>!RSC#DmNnci'K?kK[eA&NrfBL"]e^?2'78L%9%4u?roM"ZN)?IN%5Agl@Q_2?\=#C$Zj3L84BfG*>h+sqd=#jNrY@Mn0%&aEd7%.khQO*c`PP=Y*W#57r\gZb[V-Lf73i%*MHs62K-RRCph?_tpS[6;80%aC#A#OpiX%-X]Xr;b@lqjU($A%c]Oq9Bm;qh-!f5$msai%kK=8!0KlTX3n@FH^e,HWr$G"2X?m4$-&@.]SG&.3>>Q;R@NGp,0ccsPf0p`Q:_4[9f"Zpdq@Z9]LaB,JlB+pB&"!a)Of._Bi9::+%*%*-oH^17Y7ACu^;BZVh%s<\!E2`VZ=7W%Z?k<iX>U1^QF,:+,GUtCYJt]u%Lt2;\n5j7R'Li*K5>o-M!hiXOFGTH"$#B#j`J-cT%((<4-+\C^ROZ@P`UOWlF(DJ)aF<]ZH0$S:L6Y')ca.^=SN23FH*-fCa`XIgr`%_0nUBkANBPe<;.8YT#Kb:U`dPh:rM6)4%7g;QX%P.r8OKZbK(msfdT7$8_56LdV[3]f%BW\ekpWX-sIQ4$5i2b;<e=%!J.&u$jl,70TA"s9q!a>>EJ1<l"4?2$$@[Xkr<lpHK]0._KI%gb#hnrOF7O"oa1u&%E"t2,EeQMO?rLPn#2e+BkOUMq$E/F-7"G[!b\\>c."Y(*nltn.-WQ)$H=S_&47?#om[uIgld`X>8$!,Ef9.%/:t^]Gb@AT-#!_BV6(CoP_[pNO]>/=1#ZLq!P5+i:_*t%2%S)8`68B>+9rcY<$BXu+fr`dciiJ4_,D*lC`.=YUuBH!B&t#VZ6YqR%$Rm*;0Tf?*+9N(1B\;?fSWqN/a(`eWdfA!TW=t'[LFOedY?(T]%J;gp6OlAs,jt56)26-PCH=H5E?PWi%g7Cc0GT3h.`pW!KT\_=%]2dB'37JOVE?R]9<'2JdP[(**72hk+`!R9'?s\XQW7$852S^,ik?o)=U*L+-7i@]"3hZTZPq6GIRo!>J6s.en<>k=GR(hP7'8d/<%ju5-cME3@2JHU6,\<omM9jh<SEE^_"&2UHijIf>#H'&<;N7!YG?qZ/("b)+hSI3gpPtZkGN7+.4V/Cfj.AVdL"[8s[fZF;U)m(f3%@!N[Yq:-r]KmWAT\+ft&9WSt6_%8F9D4khO7t<Wk&p/p^\/_G^=9.VK`")Ds$/J%c2)?;T*TjZUBYU&g8miqpPQa&VEYOIAW)Vhb%`+[DO;)@c>P,d"Z'P5G86U^@I\339p?X%cjY7T&V,W%Z<"E4C>&NO+ddXcW`rIZKf*[Z^N?$K12=ct+P&F3b4$#B?I^RV#`$IEks%f3JjD>gu0Y0c7G$RRY?KTn5g&8>8-lE`J=fd_cJ!0u.2dK#B/iRe!qR*lu3o_F%n3U#7Z_ONd0cdP6U=8R0Ib#<LEp5RgCXaQ+<r%S>;=,7!]2Nm_S-KgFIpM!/+,5n:[K'\rhVa892euZ$miN&R+Q=j^2,e&;bt53QdMdPI1`W,EJqj6b+S&(`:@uKn#a_A5PXl3ANsU%(dDHFJr5(2M]4X.11YRF+BGD@OL1"/I7X5B#I=N#'F]Eq^J3=4?'9F<nt8ifh/jeq)B:F^5nAi;,`SpDk[\R'M'[G*(YB%b7r?Xi%)]]s]0*!Bi!lm?`dPju:cP0rHA0)_\!WQOj@5l':aq4A3(]aYSG(e0@LY"rB<^e-=60urD)<7??ha[sj849c5TrTk)eB-tiYLB]F%^]JM!#Z6>IOb:V'^B7F:&>9i'DE%cjO`bh:a#2ZQ-:5X8^.:"k\HF>.I/K4IXG,=FYQLi0M+t$Q*#U`RcuFZ?P,\t-7YV78'M(@6%7H-7&>=kTE?:M,\A19J="c#L?Wo"JMnJC=4@q/drl:-;pL`FEHe3uq.B,=K;["6/N'bDhWK-is^!e:JL0XSos(mhj#R2X:BYjr[d%'3M+/a/@"bUU7ao'';esqiB$mOWsK.3%Ea7kj4oqYUiXc^(`GW=:Ng^)T`aU[2O[4;H6`<a9Hr+Pikle)tA"a`p%^N:Dd+`\44?<%&5AKXJ-9_Kg,[-UPD'f566VZ4A:_b`!KEGt<Q8Lhr=mH(FBtVp5-[5KGJoVNAWN;]R<lY2.AB<\qd9UT5j8lc2kkYl!G_9>nF8t+%EHH!)d;d08cnBP@HWO[:_k3\Of=g+G`+SW>WN0@)dI_aQ>/0^Qj2_`2Pm/</AdnZ6G^n*)H!J,@q$YM6(C!WPrcs?*ZMt!$F6`q3%f>8K(TX-T8]RP4gs$It"a-qNpJC5f1OkZSN]n?BaV??7W]EH!(4+<t\dQF4or8a,&QKW.nGj8o?03;ap:B~>%AI9_PrivateDataEnd