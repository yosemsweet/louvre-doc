%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: folder-add.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Nick La
%%CreationDate: 2/26/10
%%BoundingBox: 0 0 128 64
%%HiResBoundingBox: 0 0 128 64
%%CropBox: 0 0 128 64
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 64 8%%BeginData: 10714 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45A884A87EA884A87EA884A87EA884A87EA884A87EA884A8A8FD68FF%7DFD16FFA87DFD67FFA8FD18FF7EAFFD65FF7DFD09FFA8FFFFFFA8FFA8FF%A8FFA8FFA8FFFFFF7DA8A8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FD49FFA8FD1AFFA8A884A884A884A884A884A884A884A8%84A884A884A884A884A884A884FD48FF7DFD05FFA8FFFFFFA8FFAFFFA8FF%AFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8AFA8A8A8FD47FFA8FD0AFFAFFFFFFFAFFFFFFFA9FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFAFFFA8FFA9FFA8FFA8FFA8FF%A8FF7EFD48FF7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8AFA8FFA8A9A8AF%A8A8A8FD47FFA8FD0AFFAFFFFFFFAFFFFFFFA9FFFFFFA9FFFFFFA8FFFFFF%A8FFFFFFA8FFAFFFA8FFAFFFA8FFA9FFA8FFA8FFA8FFA8FF84FD48FF7DFF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8AFA8FFA8AFA8FFA8A9A8FFA8A8A8AFA8A8A8FD47FFA8FF%FFAFFFA8FFAFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8AFA8FF84FD48FF7DFFA8%FFA8FFA8FFA8A9A8AFA8A9A8AFA8A9A8AFFD22A884A8A8FFA8FFA8FFA8FD%41FFA8FFFFA9FFA8FFA87D597E7D7D597E7D7D597E7D7D597E7D7D597E7D%7D597E7D7D597E7D7D597E7D7D597E7D7D597E7D7D597E7D7D597E7D7D59%7E7D7D597E7DFD40FF7DFFA8FFA8FFA8A87DFFA8FFAFFFA8FFAFFFA8FFAF%FFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFA9FFA8FFAFFFA8FFAFFFA8%FFAFFFA8FFA9FFA8FFA9FFA87DFD40FFA8FFFFA8FFA8FF7DA8FFFFA8FFA9%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8AFA8FFA8AFA8%FFA8A9A8AFA8A9A8AFA8A9A8AFA8A8A8A9A8A87DFD40FF7DFFA8A9A8A9A8%7D7DFFA8A9A8AFA8A8A8A9A8A8A8A9FD0AA884A8A8A884A8A8A884A884A8%84A884A87EA884A87EA884A87EA87EA87DA87D7EFD40FFA8FFFFA8AFA8A8%7DA8FFFFA8FFA8FFA8FFA8AFA8FFA8AFA8FFA8AFA8AFA8A9A8AFA8A9A8AF%A8A9A8AFA8A8A8A9A8A8A8A9A8A8A8A9A8A884A8A8A884A8A87E7EFD40FF%7DFFFD05A87D7DFFA8A8A8AFA8A8A8A9A8A8A8A9A8A8A8A9FD06A884A8A8%A884A8A8A884A884A884A884A884A884A87EA884A87EA884A87EA859A8FD%40FFA8FFA9A8A8A8AF7DA8FFFFA8AFA8AFA8A9A8AFA8A9A8AFA8A9A8AFA8%A8A8A9A8A8A8A9A8A8A8A9A8A884A8A8A884A8A8A884A8A8A884A884A884%A884A87E7EA8FD40FF7DFF84A8A8A8847DA8FFFD08A884A8A8A884A8A8A8%84A884A884A884A884A884A87EA884A87EA884A87EA884A87EA87EA87DA8%7EA87DA87D8453FD41FFA8FFAFA8A9A8AF7DFFA8AFA8AFA8AFA8A9A8AFA8%A9A8AFA8A9A8AFA8A8A8A9A8A8A8A9A8A8A8A9A8A884A9A8A884A9A8A884%A8A8A884A884A884A884A87E7EFD41FF7DFFFD04A8847DA8FFFD08A884A8%A8A884A8A8A884A884A884A884A87EA884A87EA884A87EA884A87EA884A8%7EA884A87EA884A87EA87E7E59FD41FFA8FFA8A8AFA8A859FFA8A8A8A9A8%A8A8A9A8A8A8A9FD06A884A8A8A884A8A8A884A8A8A884A8A8A884A8A8A8%84A8A8A884A884A884A884A884A87D84FD41FF7DFFFD04A87E7DA8A984A8%84A884A884A884A87EA884A87EA884A87EA884A87EA87EA87EA884A87EA8%84A87EA884A87EA884A87DA87EA87DA87E847D7D7DFD41FFA8FFAFA8FFA8%A87DFFA8A8A8A9A8A8A8A9A8A8A8A9A8A884A9A8A884A8A8A884A8A8A884%A8A8A884FD07A87EA87E847D847D847D847D847D8459A8FD41FF7DFFFD04%A87D7DA8A884A884A884A884A884A87EA884A87EA884A87EA884A87EA884%A87EA884A87EA87D7E7D7E597D597E597D597E597D597E597D597DA8FD41%FFA8FFAFA8A9A8A87DFFFD04A884A8A8A884A8A8A884A884A884A884A884%A884A884A8A8A87EA87D7E597E7D7E7D847D7E7D847D7E7D847D7E7D847D%7E59FD42FF7DFFFD04A87D7EA8A87EA884A87EA87EA87DA87EA87DA87E84%7DA87E847DA87EA87D84597D597D597D597E597D597E7D7D597E7D7E597E%7D7D597E597DA8FD41FFA8FFFFA8AFA8847EFF84A8A8A884A8A8A884A884%A884A884A884A884A884A884847D7E7D7E7D847D847D847D847D847D847D%847D847D847D847D847D8459FD42FF7DFFFD04A859A8A8A87EA884A87EA8%7EA87DA87EA87DA87E847DA87E7E597D597D597E597D597E7D7E7D847D7E%7D847D7E7D847D7E7D847D7E7D84597DFD42FFA8FFAFA8FFA87D7EFF84A8%84A884A884A884A87EA884A87EA884847D7E597D597E7D7E7D847D7E7D84%7D847D847D847D847D847D847E847D847E847D7E7DFD42FF7DFFFD04A859%A884A87E847DA87E847DA87D847D847D847D7D5959537D597D597D597D59%7E7D7E597E7D7D7D847D7D7D847D7E7D847D847D847D7E5384FD22FFA8FF%FFFFA8FFFFFFA8FD17FFA8FFFFA8FFA87DA8A984A884A884A87EA884A87E%A88484597D597D597E7D7E7D847D847D847D847D847DA7A0C2FD05C1C29F%A07D847DA87E847D7E84FD22FFA884A884A884A884A884A884FD14FF7DFF%FD04A859A884A87E847DA87E847DA87D847D7E5359537D597D597D597D59%7E7D7E7D847D7E7CC2C1C2C2CFCACFCACFCAC9C1C199A17D847D8459A8FD%22FF7DFFFFFFA8FFFFFFA8FFFFFF7EA8FFFFA8FFFFFFA8FFFFFFA8FD07FF%A8FFFFA8FF847DA8A87EA884A87EA87EA87EA87D7D537D597D597E7D7E59%7E7D7E7D847D847DA89FC1C8FFFFFFCACFCACFCACFCFFFCFC9C1C27DA87E%7DA8FD22FFA8FD0CFFA8A884A87EA884A87EA884A87EA884FD04FF7DFFFD%04A853A87E847D847D847D847D7E53595359537D597D597D597D597E7D7D%597E59A198C2CAFFC9CAFD09C9CACAFFC2C17C8459AFFD22FF7DFFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFFFFFA8FFFF%A8FF7E7EA8A87EA884A87EA88484597D597D597E597D597E7D7E7D847D84%7D847DA1BBC9FFCFC9CFC9CAC9CFC9CAC9CFC9CAC9CFC9FFC9C17D7EFD23%FFA8FD18FFA8FFA8FD04FF7DFFA8A9A88459A87D847D847D847D7D535953%7D597D537D597D597E597D597E7D7E7DA1BAC9CAFD12C9CFC9C17CFD23FF%7EFFA8FFA8AFA8FFA8FFA8FFA8A8A8AFA8A8A8A9FD06A884A8A8FFA8FFA8%FFAFA8FF7D7D84A87E847DA87D7D597D597D597D597D597E7D7E7D847D7E%7D847D8499C9CAFD14C9CFC8C1CFFD22FFA8FFFFA87D597D597E7D7D597E%7D7D597E7D7D597E7D7D597E7D7D597E7D7D597DFFA8A8A87E59A87D847D%84597D5359537D5359537D597D597D597D597E7D7E7D7E99C2C9C9C2C9A0%C9C2C9A0C9C2C9A0C9C2C9A0C9C2C9A0C9C2CA9FC2FD22FF7DFFA8A859FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87DA8FFFFA8%FF7D7E7EA87E847D7D597D597D597D597E597D597E7D7E7D847D847D84A1%C1FD04C9C8C9C9C9C8C9C9FD047DC9C8C9C9C9C8FD04C9CFC1CFFD21FFA8%FFA97DA8FFFFA8FFA8FFA8FFA8FFA8FFA8AFA8FFA8AFA8AFA8A9A8AFA8A8%7D7DFFA8A8A87E7D847D845959537D5959537D597D537D597D597E597D59%847D7E7DC2C2C9C2C9C2C9C2C9C2C9C2C9527D527DC2C8C2C9C2C9C2C9C2%C8C9C8C1FD21FF7DFFA8847DFFA8A8A8A9FD06A884A884A884A884A87EA8%84A87DA87D7EA8AFFFA8AF7D847E84597D597D597D597D597D597D597E7D%7E7D847D847D847DA7C1C9C2C9C2C9C2C9C2C9C2C9C27D527D52C9C2C9C2%C9C2C9C2C9C2C9C8C1CAFD20FFA8A8FF7DA8FFAFA8A9A8AFA8A8A8A9A8A8%84A8A8A884A8A8A884A884A87E7E7E7DFFA8A8A87D59845959537D535953%7D5359537D597D597D597D597E7D7E7D7EA0C1A0C8C2C8A0C8C2C8A0C8C2%C2FD0452A0C8C2C8A0C8C2C8A0C8C2C999C9FD20FF7DAFA87E7DFF84A884%A884A884A87EA884A87EA884A87EA87EA87DA87E8459A8A8FFFFA8AF5984%7D7D597D597D597D597D597D597D597E7D7E7D847D847D847EC2C1C9C2C8%C2C9C2C8C2C8C2C8C27D525352C9C2C8C2C8C2C8C2C9C2C8C2C8C2FD20FF%A8A8FF7DA8A8A9A8A8A8A9A8A884A8A8A884A9A8A87EA87E847D847D847D%7DA87DFFA8A9A87D597D5359537D5959537D5959537D597D597E597D597E%7D7E7D8499C2C2C8C2C2C2C8A0C2A0C8C2C2FD0452A0C8A0C2A0C8C2C2C2%C8C2C2C1C1FD20FF7EAFA87E7DAF84A884A87EA884A87EA87E847D7E597D%597E597D597E7D7D53FFA8FFAFA8AF597E597D597D597D597D597D597D59%7E7D7E59847D7E7D847D847DC1C1C2C2C8C2C2C27CFD0F52C8C2C8C2C8C2%C2BBFD20FFA8A8FF7DA8A8A884A884A884A884A87D7E7D7D59847D7E7D84%7D847D847D7DFF7DFFA8A8A87D597D537D5359537D5359537D597D537D59%7D597E7D7E7D847D7D98C198C199C1C1C22752275227522E522752285227%5227529FC2C1C198C198C1CAFD1FFF7DFFA87D7DA87D847DA87E847D7D59%7D537D597D597E7D7D7D847D7E7D7D59FFA8FFFFA8A9597E597D597D597D%597D597D597D597E7D7E7D847D847D847E847DC1BBC1BBC1BBC199FD0827%52FD0727C1BBC1BBC1BBC1BBFD20FFA8A8FF7DA9A8A87EA884847D7D597D%59847D847DA79FFD04C1C2A0A87D84FF7DFFA8A8847D597D537D5959537D%5959537D597D597D597D597E7D7E7D847D8498C1BAC198C1BAC1F827F827%F827F827F827F827F827F82798C1BAC198C1BAC1CAFD1FFF7DFFA87D7EA8%7D847D7E5959537D597D597E7D9F99C9C9CFCACFC2C1997D7DFFA8AFFFA8%A8597E597D597D597D597D597D597D597D597E7D7E7D847D847D847EC1BA%C1BBC1BAC1BB9F999F999F9927F827F89F999F999F99C1BAC1BBC1BAC1C1%FD20FFA8A8FF7DA87EA87E7D537D597D597E7D7E7DC1C2CFCACFC9CAC9FF%CFC299A8FF7DFFA8A87D7D527D5359537D5359537D5359537D597D597D59%7D597E7D7E7D849FBB98C198C198C198BB98C198C1F827F82798C198BB98%C198C198C198C198C2FD20FF7DA8A87D7E84597D5359537D597D597E7D9F%9FCFC9C9C2C9C9C9A0C9CAC29FFFA8FFFFA87D597D597D597D597D597D59%7D597E7D7E7D847D847D847D847DA87EA7BBC1BBC1BBC1BBC1BBC1C1C19F%27F82727C1C1C1BBC1BBC1BBC1BBC1BBC1C9FD20FFA8A8FF7DA87D7D597D%597D597E7D847DA1C1CFC9C9C8C97D7DFD05C9C1C97DFFA87D5959537D53%59537D5359537D597D537D597D597E7D7D7D847D847D847DC198C1BAC198%C1BAC198C1C0C1F827F82798C1C0C198C1BAC198C1BAC198CFFD20FF7EA8%A87D7D7D537D5959537D597D597E9FC2C2C9C2C8C27D52C8C2C9C2C9C1C2%A8AF7E537D597D597D597D597D597D597D597D597E7D7E59847D847D847D%847D849FC1BAC1BBC1BAFD06C127F82727FD05C1BAC1BBC1BAC1BBC2FD21%FFA8A8AF5984597D597D597D597E7D847DC1C2C8C2C9C2C8527DC2C8C2C8%C2C8BB7D7D537D537D597D537D597D537D597D537D597D537D597D537D59%7D537D597D537D98C198C198C198C1C0C19EC12727F8279FC19EC1C0C198%C198C198C1C9FD21FF7DA9A87D597D5359537D597D597E7D7D98C1C1C251%525252275252529FC2C1C1FD22FFC8BBC1BBFD06C1C7C1C7C1C7C1C7C1C7%FD06C1BBC1C2FD22FFA8A8A9597E597D597D597D59847D847DC1BBC199FD%0827C1BBC1BBFD22FFCFC198C1BAC1C0C1C0C1C0C7C0C7C0C7C0C7C0C7C0%C1C0C1BABB99FD23FF7DA97E59537D5359537D597D597E7D8499C1BAC199%9F7527F89F999F98C1BAC1FD23FFCAC1BAFD04C1C7C1C7C1FD05C7C1C7C1%C7FD04C1BBCFFD23FFA8A87D597D597D597D597E7D7E7D847EC2BAC1C1C1%C0C1F827FD04C1BBC1C2FD24FFC9C198C1C0C1C0C7C1C7C1C7C7C7C1C7C0%C7C0C1C0C198CAFD24FF7D7D537D597D537D597D537D597D537D76BB98C1%C0C19E2720C19EC1C0C198C9FD25FFCAC1BBC1C1FD04C7CDC7CDC7CDC7C7%C1C7C1C1C1CFFD26FFAFFD0FFFC2C1C1C7C1C7C1C1C1C7C1C1BBC8FD27FF%CAC2BAC1C0C7C7C8C7CDC8CDC7CDC7C198C1C2FD39FF99C1C0C7C0C7C0C1%C0C1BAC1CAFD29FFCFC1C1BAC7C7C8C7CDC8C7C1C1BBC2C9FD3BFFFD05C1%C7C1C1BAC8FD2DFFCAC99FC198C198C1BBC2A0CFFD3EFFC9C2BAC198C1C1%C9FFFFFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">folder-add</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2010-02-26T07:08:51-05:00</xmp:CreateDate>
         <xmp:ModifyDate>2010-02-26T07:08:51-05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2010-02-26T07:08:51-05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>128</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAgAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A795b8t6LeaLb3Nzb+pNJ&#xA;z5vzkFaSMo2VgOgyZJthGIpMv8IeXP8Alk/5KS/81ZHiKeENHyn5bH/Hp/yUl/5qw8RXhC0+VfLf&#xA;/LJ/yUl/5qx4ivCGj5W8uf8ALH/yUl/5qx4ivCFj+WNBArDC0Eo3SZJJOSnsRUkY8RXhC+21e6sJ&#xA;FttWPKInjDqCiinwEg/ZONLfenoIIBBqDuCMiydirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVSLys/Hy5Ze/q/8nWyUubGPJMjNgSsMxxVaZffFVplxVaZMVWScJEaO&#xA;RQ8bCjKwqCPlihL/APD+gf8ALHv/AMZJP+asNlFBo+X9A/5Y/wDkpJ/XGytBadA0H/lk/wCSkn9c&#xA;bK8IWnQdC/5ZP+Skn9cNlaCw6Fon/LL/AMlH/rjZWgsbRNF7W3/JR/642VoILUtL0yGymkig4yKt&#xA;Vbmxoa+5wgoIZzY/7xW//GNP+IjK2wK2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ksa0&#xA;B+Pl2w9/V/5OtkjzYjkjDL74Fa9XFWvUxV3PFVrTxjqwH04VWG7hH7VflXGlWm8TsCcaVabonov4&#xA;4qtNy/8ALihaZ5PAYqtM0ngMVWNK/gMKoHVpGNhMCOw/WMQgs1sf94rf/jGn/ERkGwK2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsU0huPl3Tvf1v8Ak6cmebAclPVL1INPunLAMkTsB32U&#xA;nEKSlWh+TPKbeXdNur3TzPc3MIkkf1ZkqTv0VwOhwmRtgIikUfKHkYf9Kk/9JE//ADXjxFPDHuWn&#xA;yn5FH/SoP/SRP/zXjZXhj3LT5V8ij/pUH/pIn/5rxsrwx7mj5Y8ij/pTn/pIn/5rxso4Y9y0+WvI&#xA;v/VnP/SRP/zXhsrUe5o+XPIn/VmP/STP/wA142VqPctPl7yL/wBWU/8ASTP/AM142e9aj3NHQPIn&#xA;/VlP/STP/wA142e9aj3LToXkT/qyn/pJn/5rxs961HuaOieRB/0pD/0kz/8ANWNnvWo9y06N5E/6&#xA;sh/6SZ/+asd+9FR7mjpHkT/qxn/pJn/5qx371qPcluu6X5UNrFBp+lG3vLm4hhil9eV6c3FfhZiD&#xA;UbYRaCA9dylyHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqwaOSRfL2lqrEA+vWn/ABlyfVr6&#xA;JTrz+not61esTL/wXw/xwjmiXJkMJMGh6RAdjHZxAj34KD+rHqnoFFpsULGm98KFhlxVYZcVWGXF&#xA;VhlxQsMuFVhkxVaXOKrC5xQtLHFVjOcKqNshufMuh24Ff9KE9P8AjAOdcB5KOYes5S5DsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVYLEK+X9L/57/wDJzJ9Wvokvm1iugTqPtSGNF+ZcH+GSjzYz&#xA;5Mk1VwkkMQ6RwooHywBJS8y4ULDLihYZcKrDLiq0y4qsMmKGuWKurirVcVaJwqtJxQpk4qr+VYjN&#xA;54s6Cv1W2mmPtzHp/wDG2RlyZQ5vUMqb3Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqwe3FdA&#xA;0v8A57/8nMn1YDkkfmv4rSyh6ma8hSniN8lFhNONXmrfSCuyhQP+BGIUoAy4ULDLihYZcVWGXCrX&#xA;OuKFsk8US8pHVF8WIH68VQUuvWKbIWlP+SNvvNMNI4kLJ5guG/uolUf5RLfqpjS8SHfU9RfrKVHg&#xA;oAw0i1Jpbp/tTO3zY4oWFHPUk1674qt9Nh0JGKsw/KiB31zUrg1Po26RVO9PUblT/hMryNuLm9Qy&#xA;pvdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirCLX/AI4Gmf8APf8A5OZPq19Ei8xfFqGixfzX&#xA;Jen+oAf45KLGXREahPyvJjX9oj7tsIYkoUy4ULDLiqwy4qgbrWrOAkF/Uf8AkTf7z0GGkWlk+vXs&#xA;u0QEK+27fecNItC/vJG5SMXY9SxqfxwoVkixVXSHAqqsOKrxDilv0cVWmHFWaflLBSDV7mm0lwsV&#xA;f+MSk/8AG+VZG7Ez/K212KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsJtP+OBpn/Pf/k5kzza&#xA;+iQa23LzLo6doxI//BUX+GTjyYS5hQnn5TSNXqxP3nCxKiZcKELealb2qcpG+I/ZQbk40tpBeaxd&#xA;3RKKfSiP7K9SPc4aY2h40wqioo8VRccWBUTFE7yJFEjSzSGkcSCrMfYZhazXwwbH1TPKI5lztHoJ&#xA;57I9MBzkeQZPYeSJCofVrv6sCP8Aea3o0m/8zmqg/IHNTPLnyfXPwx/Njz+btYYtPj+iHiH+dLl/&#xA;pf1pqnlfyiqgNZyTkftyTSA/8KwGY50unPMGXvkXJGr1A+kiI8oj9Tm8r+UWWi2ckB/njmkJ/wCG&#xA;YjEaXTjkDH3SKnV6g/URIecR+pLbzybMil9KuxdACv1W4oshp/K4oCfmMyIZc+P6J+IP5suf+mce&#xA;ePT5Prh4Z/nR5fGP6kiC/vHikRop49pYXHFlPuDm10evhn2HpmOcTzDqtZoJ4KJ9UDykORZv+VMf&#xA;Hyu0v/LRdSy/8RX/AI1zIyc2jFyZjkGx2KuxV2KuxV2KuxV2KsR8v6Bodzottc3Vv6k0nPk3N1rx&#xA;kYDYMB0GTJNsABSYf4Z8tf8ALH/yUl/5qwcRTwho+WfLlDS1KnswkkqPf7WPEV4Q3DPr9jWCOEap&#xA;AP7qVpFilUfyvy+188dl3VP0v5g/6sv/AE9R/wBMaC2XfpfzB/1Zf+nmP+mNBbKlc+YdZtYHnn0f&#xA;hEgq7fWUNN6dApONBbKfI3JFalOQBp88iyYXZf8AHA03/nv/AMnDkzzYDkxjV5B/i62/4qtQT8zI&#xA;f4ZMcmqXNAtKfHJMEs1DWFirHDRpe7dQuFbSOSR5HLuxZj1JwoXRLihGRJilFxR4FRSRuSkca85Z&#xA;CEjQdSx6Zg6/WeBCxvM7RHm5/Z+jOfJR2gN5HuDNNIsoNIhIjIkv5B/pFz4f5CeCj8c56MjEmRPF&#xA;klzl+geT0E6kBEDhxx5R/SfNEm5J3J3x40cDvrGPGvA76xjxrwOFyRuDvjxrwIbVrOHVoQHIiv4x&#xA;S3uuhP8AkP4qfwxlIyIkDw5I8pfoPkmAEQYkcWOXOP6R5p5+Xbwp5aisBVbiweSK5ib7Su0jP9x5&#xA;Zu9HrPHjZ2kNpDzdPrNH4EqBuB3ifJk2ZbiOxV2KuxV2KuxV2KuxViekXQt/LVpITsqzNuadJGOT&#xA;PNgOSB0/zB5t1CzivLTy76ttMOUUn12FaitOjAHt4YkDvYiRPREfpHzxTby1999BjQ703LuWHUPP&#xA;x/6ZxR8ryD+Jxod63LuWm98/H/pn/wDp8tv6Y0O9bl3LTd+fT/0oD/0m2+Gh3rcu5DXy+fLu2eBt&#xA;C4h6VP1y3PQg+3hiKQeLuTC+84eaNLsfrF75a9OCPghk+vQtuxCrsqsdycAiD1SZkdFll/xwNN/5&#xA;7f8AJw4nmkcmG6zLTzTcH/fcCr/wpbLI8mmXNj1/qpNYoDQdGkH8MkwSzCrgKnFUVEuKoyJMVRsS&#xA;YFTbQkVbia8O5i/cwezEVdvmBt9Ochr9Rx6iR6Q9I9/8T1+h0/h6eI6z9R938P602+sZicblcDvr&#xA;GPGvAxHz9ecPqG/X1f8AjTN12Qb4vh+l1Hasa4fj+h3kG85/X9+npf8AG+Pa5rh+P6F7KjfF8P0s&#xA;u+sZpeN2/A76xjxrwInRtRNn5ktLgGkWoUs7oeMn+6X+dfhzI0mfgzxPSfpP6GnVYOPBKPWHqHu6&#xA;vQ86l5h2KuxV2KuxV2KuxV2KvOZ2p5WhbskVyd+mxJyzq1dEfp9wYfLOixhiP9FRvD7Sg49VvYLH&#xA;vn/mP34aRai98/8AOfvxpbUWvZP5z9+GkWpNdSn9o/ecaW1NrmX+c/ecUWgbkvdahpVmzErPfQK4&#xA;r+yGq2FRzZPZf8cHTf8Ant/ycOVnm2jk8980yEa7qdD+zEo+RiFRlseTRPmxzJMXYqujG+KoyFcV&#xA;RsK4FR0K4lKpp+pW0dusbtxclmao2qT4/LPN45wefMm30iemI5cgAPkjlvYn+y4b5EHLBkBajiIY&#xA;R/ytdf8Aq3f8l/8Ar3nQfyL/AE/s/a6D+WP6H2/sSTzJ5zGtfV6W/wBX+r8/2+fLnx/yVpTjmfot&#xA;F4F73ddHC1ms8atqrzd5b85jRfrFbf6x9Y4ft8OPDl/ktWvLHW6Lx63qr6Lo9Z4N7Xfmnf8Aytdf&#xA;+rd/yX/695gfyL/T+z9rm/yx/Q+39jN2vYk+04X5kDOfOQB34xEoS71aH0x6T8pY3SSOnZkYHrlc&#xA;846c27Hpze/I7Pa8794F2KuxV2KuxV2KuxV2KvNb9uPk1j/xRcD/AIIkZYObUeS6Wf09O0yGv93Z&#xA;wrv7KB/DCGJKEe698ki0uutes4SVL83HVE3P9MNMSUA/mC6k2hjCDxb4j/AYaRambnUZvtzvv2U8&#xA;R+FMVtYbeVt2ZifcnFCZeTrT1POmlRtUhDJKf9hGxX8RkZ8mePmzGz/44Om/89v+Thys820cnmHm&#xA;C5SbVb+VDVXlKqR3CUWv4ZdHk0S5pVhQ7FVSIYoRsIxSjoRgVHQjFKTspVip6g0+7PLZxMSQej6r&#xA;CYlESHVrIsnlafkxqcYomvlB/kxOP1SZ1P8Aohj/ADD83lv9D0/54+TG/O/lvWPKv1LnrEt39c9W&#xA;lOcfH0uHi7VrzzY6DtEanioVw19t/qddr+zjpuGzfFf2V+tryP5a1jzV9d4axNafU/SrUvJy9Xn4&#xA;OtKcMdf2iNNw2L4r+yv1roOzjqeKjXDX23+pkr/kxqcgo+vlx/lROf1yZrv9EMf5h+bsf9D0/wCe&#xA;Pk9UzlnqV8ETzTRwpu8jBFHuxoMlGNkAdUSkIgk9H0JnpL5o7FXYq7FXYq7FXYq7FXl+rtx8kMev&#xA;wOPvlplo5tMuSA1jUY4BEZH+GOJF+dB2GSAYSLFL7Wrm6JSMmOI7UHU/M5KmFqdrBWmFU60zTJ72&#xA;5W2twA9OTyN9lF/mbNP2h2hKEvCx/wB51PSIdv2f2fGcfFy/3fQdZH9TLrbyx5bhjC3KyX0v7Tu7&#xA;RrX/ACVQrQZp5Ycct8hlkPmfudxHPkjtjEcY8gPttu48teXJUItRJYy/sujs61/ylctUYxw4474z&#xA;LGfI/ess+SW2QRyDzA+ykP5N02e088BbwoGS0k+ruv2ZTyG6/wCxJ+7Nro+0JTPhZP7zoekg6zV9&#xA;nxgPFxf3fUdYlL9Y83WlroFpY2cnPUFEqyEVpFzeoNehNOlM24ju6iU9mBFicsamsVdiq+NlHU4q&#xA;io7mFerfgcVRcWoWi9ZPwb+mBUXFq2nr1l/4Vv6YqhLma2lnd7d+aNudiKE9eoGcF23pTizk9J7/&#xA;AK/tfQOw9UMunA6w2/V9imASaDNQ7hEw2pbc5XKbXKbyn/nIGH0xoHv9b/D0M6X2Zlfif5v++eZ7&#xA;elfB/nfob/5x9h9Ua/7fVPx9fH2mlXh/53+9XsGVcf8Am/perTWhHTOZjN6WM0KQQaHLW1kv5faQ&#xA;1/5ihlIrBZfv5D/lL/dj58t/ozadj6fxM4PSO/6vtdV2xqPDwEdZbfr+x7FnbvEOxV2KuxV2KuxV&#xA;2KuxV5Trrf8AOjOPl+NwuWjm0y+lhGsXclzesznZQAqjoBTLGklCQrVsKpxZxdMCp9od5FDaNxYe&#xA;rM5aTfegNFB+WcBHU8RlI85G30Cel4RGA5QFfrSHzD5+0G50e4gtbv1J34cE4SLWjqTuygdBm70e&#xA;kzQygyFD3judJq9ThljIid/ce93l7z9oNto9vBdXfpzpz5pwkalXYjdVI6HHWaTNPKTEWPeO5dJq&#xA;cMcYEjv7j3slvdXEJtrpXH1iymWWLf4iKgOvyYdc0c9RwkSHOJt3mPTcVxPKQp63nbvFOxV2KuxV&#xA;2KuxV2KuxVJ/NXl2HXdLa2JCXMfx20p/ZenQ/wCS3Q5g9oaIajHw/wAQ5Od2frTp8nF/Cebx1rC4&#xA;tLyS0uozFcRHi8bdfo8RnBZ8csZMZCiHtxljOIlE3Eplb2+w2zAnJonJMYrJmHTK93GllpuSxZR0&#xA;x3WOUFL7i3FDtlkZORCaWrp9xeXsdnaRmW5lNEjX9Z8Bmfp8cskhGIslyDmjCJlI1EPYPKvl2HQt&#xA;LW2BD3Enx3Mo/aenQf5K9Bne9n6IafHw/wAR5vEdoa06jJxfwjknGZzguxV2KuxV2KuxV2KuxV4j&#xA;5j121bRYNLhYPLzLXFOigMWAr4nL4jdx5S2pibsWYscm1qkDopqxpiqaWuoWSU5SU+hv6YFWxRrK&#xA;TwbkvY+Izy/U4zimYHoafUcGcZMcZj+IW878/fl95e0Tydf6lp8U0N1b+j6T+vMwHOdEPwliPssc&#xA;3nZva+bNnjCRFG+nkS89r+zcOPDKUQbFdfMNeQfy+8va35OsNS1CKWa6uPW9R/XlUHhO6D4VYD7K&#xA;jHtLtfNhzyhEihXTyBT2f2bhyYYykDZvr5l6dZabLd6hb2Ue73Eixj2qaE/RmiwQOSYiOpehy5hC&#xA;Bmege956Q+cuxV2KuxV2KuxV2KuxV2KpP5h8raZrkQ+sKY7lBSG6j2dfY/zD2OYOt7Px6geraXe5&#xA;2i7Qyac+nePUMIufLHmXSn3tv0jbDpLb7vT3j+1X5D6c4/V9gZoG4jiHl+rm9Dj7QwZhz4Jef627&#xA;fzBpEPwXazW0g6pJGwP4VzUnTyiaIRPSZZbxqQ96648w6PN8Fos1zIeiRxsT+NMI08pGgEQ0mWO8&#xA;qiPMrbbyz5l1aTa2/Rtsestx/eU9o/tV+f35tdJ2BmmbkOEef6uacnaGDCOfHLy5fNm3l7ytpmhx&#xA;H6upkuXFJrqTd29h/KvsM7DRdn49OPTvLvef1uvyag+raPQdE4zOcF2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxVifnLya2qONQ08qmoxrxdG2WVR0BPZh2OaTtXsrx/XD6/v/a7nsztPwRwT+j7mBT+pZP6&#xA;WoW0tpKNqOhofke+cTn0mXGakK970sCMguBEg6AS3r+lp9tLdynaiIaD/WPbDg0mXIaiLWZGMXMi&#xA;IZ75N8mtpbnUNQKvqLjiiLusSnqAe7Huc7XsrsrwPXP6/u/a812n2n4w4IfR97//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:2DC8D0BD0C2068118F62AD85486E0984</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:2DC8D0BD0C2068118F62AD85486E0984</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b5eca161-f499-af46-8d38-573fc05283eb</stRef:instanceID>
            <stRef:documentID>uuid:7FDF4D4B33EEDD11AF8BBF931F055AD6</stRef:documentID>
            <stRef:originalDocumentID>uuid:7FDF4D4B33EEDD11AF8BBF931F055AD6</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:OriginalDocumentID>uuid:7FDF4D4B33EEDD11AF8BBF931F055AD6</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2DC8D0BD0C2068118F62AD85486E0984</stEvt:instanceID>
                  <stEvt:when>2010-02-26T07:08:51-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>128.000000</stDim:w>
            <stDim:h>64.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 8.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -64 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 64 li
128 64 li
128 0 li
cp
clp
[1 0 0 1 0 0 ]ct
1.00001 55 mo
1.00001 55 li
1.00001 1.00001 li
22.669 1.00001 li
27.7783 4.80274 li
28.044 5 li
28.375 5 li
55.1758 5 li
54.2148 5 28.043 5 28.043 5 cv
28.043 5 28.043 4.99999 28.0429 4.99998 cv
28.0428 4.99985 28.0417 4.99905 28.0398 4.99761 cv
28.0397 4.99758 28.0397 4.99755 28.0396 4.99752 cv
28.0394 4.99737 28.0392 4.99722 28.039 4.99706 cv
28.0388 4.99689 28.0386 4.99673 28.0383 4.99656 cv
28.0378 4.99618 28.0373 4.99578 28.0367 4.99533 cv
28.0366 4.99529 28.0366 4.99525 28.0365 4.99522 cv
27.8388 4.84805 23.1383 1.3499 22.668 1.00001 cv
22.668 1.00001 li
22.3496 1.00001 1.94728 1.00001 1.00001 1.00001 cv
1.00001 1.90236 1.00001 16.0859 1.00001 17.4141 cv
1.00001 17.4141 li
1.00001 32.8687 1.00001 53.7949 1.00001 55 cv
1.99999 54.9255 mo
1.99999 50.3038 1.99999 30.9643 1.99999 16.986 cv
3.77739 16.2458 5.68914 15.5565 7.70631 14.9201 cv
6.95106 22.5063 5 42.6241 5 48 cv
5 51.7801 3.39217 53.8456 1.99999 54.9255 cv
55.1758 12 mo
19.4938 12 li
28.0649 10.3635 37.3862 9.49999 46 9.49999 cv
49.0664 9.49999 52.1465 9.61913 55.1758 9.83593 cv
55.1758 12 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
gsave
[57.6606 0 0 57.6606 38.2236 42.0605 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%!<E3%!WiE)!WiE)!WiE)!WiE)!s8W-!s8W-!s8W-!s8W.
"9\i1"9\i1"9\i1"9\i2"U,&5"U,&5"U,&5"U,&6"pP89"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ>#RC\A
#RC\A#RC\A#RC\B#mgnE#mgnE#mgnE#mgnF$47+I$47+I$47+I$47.K$O[=M$O[=M$O[=M$O[@O$k*OQ
~>
0 0 <~zzzzzzzzzzzzzzz!!**$!WiE*!s8W."9\l3"U5/8#6tJ>#RC_C#mgqG$4@4L$k*OR%1NdW%M''\&.fBa
&J5Tf&eYik',2,p'bqH!()@]&(Ddo*(`=2/)B'M5)]Kb:*$$%?*?H7C+!2RI+<VgN+X/*S,9nEY,U=W]
,palb-7:/g-n$Jm.4H_r.kE5&/1iG*/hSb00/#"50JP::1,:U?1G^gD1c.'I2)[?N2`EZT3&ioY3B9,]
3]fDb4?P_h4Zttm5!M7r~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
np
23 0 mo
0 0 li
0 56 li
56.1758 56 li
56.1758 3.99999 li
28.375 3.99999 li
23 0 li
22.669 1.00001 mo
27.7783 4.80274 li
28.044 5 li
28.375 5 li
55.1758 5 li
55.1758 55 li
1.00001 55 li
1.00001 1.00001 li
22.669 1.00001 li
.05 0 0 .25 cmyk
f
1.99999 16.986 mo
1.99999 8.92004 1.99999 2.64022 1.99999 1.99999 cv
3.80077 1.99999 23.0527 1.99999 23.668 1.99999 cv
24.1484 2.35744 29.043 6.00001 29.043 6.00001 cv
29.043 6.00001 50.4102 6.00001 55.1758 6.00001 cv
55.1758 9.83593 li
52.1465 9.61913 49.0664 9.49999 46 9.49999 cv
37.3862 9.49999 28.0649 10.3635 19.4938 12 cv
8 12 li
8 12 7.88756 13.0995 7.70631 14.9201 cv
5.68914 15.5565 3.77739 16.2458 1.99999 16.986 cv
55.1758 5 mo
53.334 5 28.043 5 28.043 5 cv
28.043 5 28.043 4.99999 28.0429 4.99998 cv
28.043 4.99999 28.043 5 28.043 5 cv
28.043 5 54.2148 5 55.1758 5 cv
55.1758 5 li
28.0398 4.99761 mo
28.0397 4.99758 28.0397 4.99755 28.0396 4.99752 cv
28.0397 4.99755 28.0397 4.99758 28.0398 4.99761 cv
28.039 4.99706 mo
28.0388 4.9969 28.0386 4.99673 28.0383 4.99656 cv
28.0386 4.99673 28.0388 4.99689 28.039 4.99706 cv
28.0367 4.99533 mo
28.0366 4.9953 28.0366 4.99525 28.0365 4.99522 cv
28.0366 4.99525 28.0366 4.99529 28.0367 4.99533 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[54.24 0 0 16.32 1.44 46.24 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 113 
/H 34 
/M[113 0 0 -34 0 34 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 113 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 113 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 113 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 113 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
i;i$AklU,Pq#p9hJcM&9r;lftr<)p"r<<*'qZm!(r<`B/q@!92r!iQ6rX\r=rXo,Br=f2FrtXYrk5kP`
lN6;Qp&qu-JcO0ur;liur<)p"r<<*'qZls'r<WK3$2k5/$iCG2%K$_8&,Zt=&cWIB')`LD'`JgI(@(t_
!U0[M"7u`r"TS^Y!0.'X!W<)u"8rB""oJT&#Pn`'$2b/,$iLM2%K$_8&,d(=&c<:@'E8dG(&f!;!9sRb
!r`5b!rW6!!qHH\"Ng^r!6YB@!W<)t"8rB#"oJT%#Q+i.#mgD7q[36/r!WT8%/UM5%f?k9&H3:>')iRE
'`AdG('#0B!:'[b!WW8Y!q6<h"RuVX!/LXR!WN6$!r`<""T/H$#5\Z&#l=o/$46S:r!NN6$iCG2%K$_6
&,["<&c<:@'E8dE'a,9f(Ddq`!:U$d!Sdb="7u`p"k`m-!5nm:!W<)u"8rB#"oAN%#Q"f'$2Y)*$i:A4
%K-b5%f?k9&H*4=')iRD'`AdG(B53N)#XI!!SdbG"8;oi"Si4p!.k4M!;uut"8i<#"oAN%#Q"f'$2P#+
$NUYDq@*92q%!<5rXeu>r=]#ArtPDHr>#ALrYPVQp&Xddg]HU?nc\[jkQ$27[fH@/r<3'&r!*$'q[!'*
q?m$+!XoGFr!`B1r!rT7q[iZ;rY#,BrY5;GrYGMMrYYYQnH%VNrr`*!p&jddlNI%fYQ07Tmf<@jr!!!&
r!3*)q?d!*q?m<4$i(5,%JgS3&,Qq8&cWL@'E8dF(&\pJ(]P<P)#bEG!TF1["8`/^"6B[_"nM_G!3?2#
"oJT&#Q"f)$2Fr)$NgeF$k3"Ap^R$/q%*?6r"8l?q\/uDr>#8H!#PVOr>>SRr;cm"rW2![qucm!q#g$e
jokD^!!^%8JcOj3!!`?+r!<0+q?m!*p^Hp,!=fS7%K[.O%f?k7&Gm(;')WFA'`JjG(B,-M)#Y?P)W(Vl
!rrDQ"82lh"TS^Y!1a)i#Q4r)$2Y)*$NLV3$ipeGpC6j,!Y5eOq[W`>%hJOKq[r]<rtG8DrY>AIrYPSO
rYbYQl2pqer;uZpfE:dLmKL`5JcO=$q[*0-q$[!,p'h'5%Lr+Aq%!N<%hJOK!"o2Aq[rc>!##5Dq\9&F
rYGDJ!#Y\QrYkeUmK3:grrUFImK<Lmncb0VNWAtar!NN6$i(5)%06qJpC737%e^D7&.]<H&Gm(9')N@@
'`8^G(B#'K)#kKQ)ZC]N!riB$!ql`D"6KaZ"k`m-!6,$:$i1;+%J1,2%hA.@!Y>nRp^mH;rt,&>q@`Z=
rtP>FrtbPLr>5MPrYkbT!$(n<_#s<4m0*7hr<AqqJcPcMr!`E2oF:m4%e:,3&.]<B&-<FT&Gm%>')iL>
')WFA'`AdE('#0K)#bEO)Zh!!!quf?"5j=X"o8Ge!.k3[!<!?-%Lr7E!tPkP%eU>6&.]<N&-*71&H<=A
&cWF:&bcq:'DiLD(&JdH(]G9M)?1WT)u^i,!rrJp"8`5a"S)`o#-\)Z!:Kpc%KR(Mq@<`@%hK6_&*jc4
&J,Kc&.fEc&H37A&G$M1')E:='`JjH(AnsK)#Y?O)?:`U)uq#@"9/Mt"9&Gr"8)fj"8;rb"o\_t!.k3P
!;m?/&.fBB&H37A&G$M&&HEIB&cNCC&c*.9'E8dD(&o'I(]G6O)>tKQ)Zh!"*V'=4"Sr6!"Si/s"SW#s
"Sr8o"7QH\"TSb=!.k43!<!H1&J,N+&HEIC&HEIC&HEIB&cWLD&c*.?'E/XD'DiL@(&esM(Ddqe)#kKR
)ZC]T)uq&Z"9&H$"8i<#"8W/u"8N)q"82lj"6]mX"TSaZ!1a,f&HrdZ&eP`gnIk[2#n[d_&J>]g&eYfU
&dT'^&eP]g&eP`T')rR:')E:;'`SpF(B53N)#Y?P)ZLcU*<.&W"98Pk"TJSu"TAN&"8)fk"5j=W"oJSI
!.k4$!;@*:'+trk'+trk'+trk'+tokkRmk-lOs%-rtPGHr"]2Hr"f>MrYb\Rru:tXrZ0bsrr_iqp]K@U
r<3*'p]cl]NWA_clOsO:',(ul'+tokjq@Y,rY#,Br"T&DrYGJLr>>PPru1kUrYtqZ*p3[j"Si/S"Si5r
#2'!.!6,$('Ef'`'GD2Q'*T!^'+toklk9:1p_3K<rtYDHrtkYOr>>YT)]Sbr!Z`:&d00@Lj952[o*+sp
T`BZErW)O)!u)Ia(%`1A',2/S'*]'_'+tok'Clb9'DiF<'E&XC(&o'I(]P?P)>tHT)]Kdr*<@2bp]LR#
h?<f[lNHk_qulBjr!)?bJcN7[$5O?l'c%N"'c%N"ob@TD'bh>spCmWA'_`7B&ebrW&c`U<&c`UC')E:@
'`8^E(B53L)#bBQ)ZC]T*!.-$"oJN%"o/<$"mH-i"766k"8)cj"RH<k#-\)Z!:Kmf([r1@'c-QZ";DRb
'G^HYpCdN>rY,8D!#+u;p_3H;!#>DIr>,GNrYbYQru1qWrZ(q@q??d"quuft!!V?bo)nFamKERpo)O@B
X8ql/!>ZLI('G?f'bqM_'`o'a(&AUH'GD,oq\/uBrtFf5p_3W@q\9)Hr>5DLr>GSQrYkhWq#pa$p]^Ks
r<;<drrhusjok2X])[E_j8eum!>cUK(BG9fp_N]@q%NlD',:9VrXo2Elk971q\9#Er"]8KrYPPNrYb\R
rYt>1rWN$#jokA[hurZU!!RuTSH/O)!>l^N(]bEiq\K>M(D[ea(AnmJ'G^KZ!YZ4]rY#8ErY,#=!"nu=
pCmK>q\B&Fr>5GMrYb\R!#t&(pB1I"rWMlsp]K1Pp'&S=JcO=$"<&-r)&iDj!>l^M)#>$L()Qobr"T8I
'c$W\q@`oC&ek0U!"o,ArXni:rtG>Eq\8rCr>,AKrYYVPru1))q#pX"oE>!mf`_-Sp]Zf\NW9%up_j/N
)ZCTT(`E8h!>cUL(]>*S'bqK!'bh>sr"Su@p_*Q<r"Ao>q@`T;r"T)Er>,AKrYP_T)&`\W#4;Zp"TAQ$
"nMlq"3^oE"k`m-!6,!>)]\bp!?)pS)ZCTT(`E8h!Z)Xir>5DJr"T8I'G^T]!YZ4]rY#>G&ek0U!"o/B
rXo,Amh5L2r=o2FrYGJLrttbRr!*!$rs&6%!!N$"oE>0rmKE+`quc9gqurboJcPcMq],PR!?)pT)Z:QM
)#Y9L(AnpE'`/R>')N7@'(-A/')`LB'`JjG(B53M(k;~>

%%EndBinary
grestore
np
55.1758 9.83593 mo
55.1758 9.83593 li
55.1758 6.00001 li
55.1758 6.00001 li
55.1758 7.28148 55.1758 9.24701 55.1758 9.83593 cv
gsave
[4.72849 20.4233 -20.4233 4.72849 25.0977 -1.70752 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzz!!**$!<E3%!<E3%!<E3%!<E3%!<N<(!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8W-!s8W-!s8
Z/"9\i1"9\i1"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,&5"U,)7"pP89"pP89"pP89"pP89"pP8:#6t
J=#6tJ=#6tJ=#6tJ=#6tJ>#RC\A#RC\A#RC\A#RC\A#RC\B#mgnE#mgnE#mgnE#mgnE$47+I$47+I$47
+I$47+I$47+I$O[=M$O[=M$O[=M$O[=M$O[=M$k*OQ$k*OQ$k*OQ~>
0 0 <~z!!**$!<N<(!WrN,!sA`0"9er4"U5/8"pYA<#7(S@#RLeD#mq"H$4@4L$OdFP$k3XT%1WjX%M''\%hB3
_&.fEc&J5Wg&eYik',)&o'GM8s'bqK"()@]&(Ddo*(`4,.)&X>2)B'P6)]Kb:*#ot>*??1B*ZcCF+!;[
L+X&!Q+sJ3U,9nEY,U=W],paia-71&e-RU8i-n$Jm.4H\q.Olnu.k<,$/1`>(/M/P,/hSb00/"t40JG1
70ekC;1,:U?1G^gC1c.$G2)R6K2E!HO2`EZS3&ilW3B9)[3]];_4$,Mc4?P_g4Ztqk5!D.o5<h@s~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
np
1.90222 55 mo
1.00001 55 li
1.00001 53.7949 1.00001 32.8687 1.00001 17.4141 cv
1.32867 17.2694 1.66141 17.1269 1.99999 16.986 cv
1.99999 30.9643 1.99999 50.3038 1.99999 54.9255 cv
1.96733 54.9508 1.93463 54.9757 1.90222 55 cv
28.0429 4.99998 mo
28.0428 4.99985 28.0417 4.99906 28.0398 4.99761 cv
28.0417 4.99905 28.0428 4.99985 28.0429 4.99998 cv
28.0396 4.99752 mo
28.0394 4.99737 28.0392 4.99722 28.039 4.99706 cv
28.0392 4.99722 28.0394 4.99737 28.0396 4.99752 cv
28.0383 4.99656 mo
28.0378 4.99618 28.0373 4.99577 28.0367 4.99533 cv
28.0373 4.99578 28.0378 4.99618 28.0383 4.99656 cv
28.0365 4.99522 mo
27.8343 4.84469 22.9147 1.18364 22.668 1.00001 cv
23.1383 1.3499 27.8388 4.84805 28.0365 4.99522 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[28.32 0 0 55.2 .48 8.32 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 59 
/H 115 
/M[59 0 0 -115 0 115 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 59 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 59 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 59 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 59 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
p]0damfN%^]`?1TrrN-$rWE-&rWW6)rWiB-rX&N1r<rQ4r!iT7r=Ao>pAk!iq>p!cncPomh#RETrW<*%
rWN3(rW`<+rWrE.rX/T3r=&T5r=8`9!"eo*nH&=bq#^*hR/l[UrW3$#rWE-&rWW9*r<N9,rX&K0r<rQ4
r!iT7r"&Q&nH&%ZpB1<qLB.>TrW<'$rWN3(rW`<+r<W?.r<iK2r!`N5r!rZ9p]0gbmfNIjrW;froDk*U
rrN*#rWE-&rWW6)rWiB-r<`E0r<rN3r!iQ6rX\c(ncA.[!!E0$p&j:SVZ?\srW<'$rri<)r!*-*r<W?.
r<iN3rsSc6q@3B5rt"o*nGr[m!WhWhp&iYA\H)X1rW<'$r<3*'rW`<+r<W?.r<iH1r!`K4r!i];!"Sf)
nGrXl!UBg\"24cY!<3*!!r`<#"TAT(#5nf*#lG#-$N(;0%/^S4%KI%8!;HTi!UBg\"0;LY!<3*!!r`<$
"T8N'#5nf)#lP).$N(;/%/^S4%f$+n!Vc`h!rE'"!rN.h!:U!f!WE0""9&H%"o\`)#Q4r+$2b/.$i:A0
%K6k6!:KsS!rW6$!WW<"",R!X!<<0!!r`<$"TAT'#5nf)#lP)-$Mt50%/LG4%f-1o!UBde"8`/t"8)YZ
!<*#u!r`<$"T8N'#5nf)#lP)-$Mk/.%/^P9%LipE!:KsL!rN/\!2fhs!WE0""9&H%"oSZ'#Q4r+$2k22
$N(84$k)tAq@39$mfDMOqZG4G\cD^1rW<'$r<3*'r<E3*r!<3,q[36/!=TA6%/gY8%Jg(o!TX=Z"2=i[
!<*#u!r`<$"T8N&#5e`)#lG#+$Mt5-%/^S2!;HTj!<N<(!TsO]"0DR[!<*#u!r`<$"T8N&#5nf)#l=r*
$Mt5,%/p_5!:Kpi!W`>u!q$-h"9&@k!:U!g!WE0!"9&H%"oSZ'#Q+l*$2P#*$iCD8%1E[TqZ,s`kQ1_d
qZ;ZUrW3!"rW<-&rWN0'r<E3*q[!'*q?m',q$d-#m/c,Hmf8mYrW3!"rWE*%r<<-(r!*3-r<W6+q[3-,
q[<H6qZ-!ahu_^7Y5nP&rW<'$r<3'&r<E3*q?Zp(r!EE3!"/N0r!`K'liH#Gb5f?YrrN*#r<*$%r<<*'
r!3*)q?cs)q$[-0r;ZftliH#G\H((YrrN'"rWE-&r<<*'qZm$)q$Hj(p^@*1quH3erW1mXVZ>fYrrN*#
rWE*%r<<*'r!3'(q?cs)!=K80$iC"l!WE-#!VQT_!gNc[!<3*!!r`<#"T8N$#5e`'#l+f$$Mb).!:0ad
!ri;^!WW:[!!!&u!r`<#"T/H%#5\Z&#l+c-$46G6q[<?&m/[1gr;kp[n,SsY!!3$"rWE*%r<<'&r<E<-
q?Zg%p'Lm0$4@7>!9sUE!o<p[!!!'!!rW6""T/H%#5ST$#l"]+$2+]-$O[=>!9sUE!mCY[!!!'!!rW6"
"T8N$#5\Z&#QY5;p'Ca,$24f+!!!#`!TF0l!7ClG!r`<#"T&B$#5ST$#QY5;p'Cd-#mpD7r;c<fq>pNr
!!26aVuYlYr;up"r<3'&qZcm%q?R*.#k\K)$46P9r;c*`r<!!"qZ?-dQ2pUYrW<$#r<3$%r!!0,#5e`"
#QY5;oEbX-$4.%Hr;c*`rW<*#kQ:bcMZE_Xr<*!$quus%q?Q^"!=9&$$2sqh!WN6#!TjIR!1Nuf!rW6"
"T/H"#6+r+#PA?'#mg).rW)3a!!<'!joXE?XT8>%r<*!$quus%q?I$,#PA?,#m^hD#RLe3$2sqc!W3$!
!UTs5!;Z]8!<*'!"8rB""o8H"#6>)8nd#U0#RC_B#mgkD#m^k:!;cf_!W3#u!VZWq!Vc`'!8%;N!r`<"
"T8N#"p"r5q?Q-g!XSi,kQ1V_r;uouq#^Nrp]@/il2^hcr<)s#quus%pBL^)#NuHn!9=1[!rW/r!WW<$
!VZYW!;lis!rW6!"T/H"#5&3%#RBZ$rrD-]rW;uuqZ?ZrpB(9nNr]1]r<)s#rrrB*q?HQs!sf,;#OVlt
!9F7]!rE#r!rE#o!ri;e!20Dm!rW6""Sr<!#5JN!#87@J#R:V?#7(P?#R:V@#7(S?#6<fc!!;utr;ufr
qZ?]sf`8>Y!!<*$qZQg#q$-6l!!rK-pBLZuh#[KVq#UBpqZ4_;`;fl>r<)s#qZZa!hZj,]q>oXXrrVrr
rW;lr[/eeY!!<*$qulj"p]fX]k5k8W!!;lqrrVrrUB'NYqucj"qZZZtkQ_:r#6tG;#7'&c!!;utnc=jQ
qZ-Nrqulj"p'0mh$O-h@"pYA;"pY>:!65->!0.$Z!rW6!"TJZ("ni-$#6sf*"9o)9"paf*`W>E+TE+om
qZQd"o`bF%"p5)7#6t#0"9o)9"pac)`W=cnZ2jh*qulj"o`bC$r<<H2"pY>;"par.p]ga%`W=-\_uT`<
qulj"ncf(!limLp"pY&1q>nhA[K+kYr<)s#q?>^[!X/`3quu9bhZ9MQkQ(SaqZQ]uiW]De#5AAQ!V$2R
!;Z]p"8i;s"lfg^"Tef1"i^T<!0dK_"8`5t"oeeg#5AB#"NCK)!2]bq"8i;s"muTk"p"l3q$$Wu`W=Qh
\,cO2qZQ]u!<r_l#58<$"T/DC!PncY!<*)u"Si5d"p"l3q#pd%"o8?%"7uWE!NlFX!<3/u"S`/g"p"l3
pBC<prr_6]klI4QmK!7hqul]smfrIhqZHp%"T8GL!W2tR!!3-&"8`5s"T\f2n-/ms#5AB!"9AT-qub.D
o)OsSrr`0%pBC$jp]U[$"oAH!!rrDI!T3sS!!!,u"SN#l"p>)6"U5/*"oAH""9&AI!R1VR!<30!"SW)n
"oni+#589%"9n]+r<*'%r;t:G\cBhP!!E*$pBC3o!sJl4#5JH!"T&<"!qZNK!N,qP!!!-!"SN!#"pP8-
"p5#5"U=])q?6]ur;tpYmK&RQm/["do`Y@#"o8Gq"o8B""8r;H!J1:Q!!!-!"SW'#"pOf,rWN9+p]^Ks
qZHg!c2m>5OoY@^pB:U&"pOo/!sJl4#5A?&"9nW)qucp"r;cludK/,'U]C;qo`Y@#"oJQ*"U=c+rWW0%
!<WK&"8r<"!<<,K!Qb>M!;lum"U>58"U5/7"pXc)!<`T("Sr6#!WW<#!WN/K!O)RM!;luo"UbM<"U5/7
"pP58"U=`*qZHp%"TAK(!X&E'r;lltmfDPOSH.UKqul`t!X8i4r!!0*#58;t"T&<"!r`6!!8R\N!K-sL
!<!&n"U5/7"U5/7#5&-#"9n`,quZs$"9&B$!W2rJ!VZSK!<!&n"U>58"U5/7"pXc)qZQg!quZiuquG7J
jT(YJr<2iu#6kA9"pP58"p"l3pBCBrr<!'%"9&B$!W)lJ!R^tJ!<!&p"Tel4"oJQ*"U=])qZQg!quZiu
qZ,1J^];"IrWMlt"pP57"pP58o`b3qqucm!rW2lr!!(RNXoQ`IrWMlt#6kA9"pP58#5/5t"T8H#!r`5s
!:U$Q!Lj)I!<*,q"nr3%"U=c+qZQg!r;uouq>f@Qq>lEQnc8[mpBCO#!!W9)!<i]%"oAH#"8r<#!Vl`I
!VQMI!!39+"nr0%"pP8/"p"l3pB:R#"oST&"8i6"!Vl`I!TX6I!!!/q"o&9)"pP57#5SN#"T8H#!r`5r
!7q8"!3#qu"S`-$"pO`*!<i]&"oAH$!s8T,!Wr?%p]/qI^AtkG!!N'#o`bF##5AB""T/B#!r`5s!<3&O
!Nc@H!!!/s"n`'#"U=])r<3$#r;us!p]0gbkQ..QhZ3BSo`bI$"pXo-!<`T)"T/B#!r`5q!8dhR!JpgH
!;Qd""pP8&"p"l3qum*("oSQ)!sJQ)rW<'"p]/qIp&OphMZESWrs%ut!<i]*"T\`0r<*-'"T8H%!r`5q
!8%>.!1a,d"n)Wr"U=f,r<*-'"T8H%!r`5q!8%=q!3ZD!"n)Wr"U=f,qZQj"!!<0%rW2cofE&M__#XB:
!<r_p#5SN#"T8H%!r`5q!;urR!N,qH!;m#d#5SN#"T8H%!r`5q!:'[R!L3ZH!<!)d#5SK("9n`,r<*$#
rW2cof`D*RKE1`Hr<;EiqZR!'"oST%"9/H%!VcZH!V$/I!<!*"#42Wl"T\`0r<3$#rW<'"q#K"IhZ0/H
rWVQkrW`3&r<3$#rW<'"q#K"IblFmHrWVHhq??d"rW<-&rW<'"q#K"I])]VHrrr$!!!i*"qZZm#r<*$#
rW2fprW1[QWW:HI!<r`""ono!#5\T&"T/B$!r`5s!:0aP!LNlJ!;-O##6kA;"pP>*#5\T&"T/B$!rN)s
!87JP!JUUJ!;6Wm#6Y59"pP>/"p"l3r<<*%r<*$#quQ]qeH,:BM#dAV!sSu7#5JK,"pYA;#PnW*"U=o/
!<`T("TAN&!rN)t!7_,H!!!&b!1Nub#4Mit"ono)#5\T%"TAN&!W`<'rW2rteH,LHrrLdQXT82%n-8su
#PnZ$"o\W)"T8H#!r`6"!:0^d!pTg`!<3)?!;Z]8!;cuf#PeT$"oJN&"8i6!!WN/p!W<$!!r;ot!pTg`
!<*#&!8%;M"p"r5m0<Xr#Q"]+"U=o/quls#quZft!!)WlrrW&u!!<'!mK*7dquNAhl2^bekm."gr!!!$
rW<0&"8r<#!<<,l!WN6!!WN5d!WN3"!;lkV!;lir#3Q6e#5n`&"T/B$!qlWp!rW0!!rN)u!pKab!;cfn
!07-Z#58Ak#Q"]+"U=l.rWN-$r;u]o!!<*"rW;uurW;9arrDlrkl@CW!!`*$"UG><#R:Y.#6>#6qZcs%
r<3$#r;u`p!!<*"r;uour;ufr!!;Zk!!)cpfDr5X!!`-%#m^eA#RCY@#7(V/#PnZ&"o\W)!rrK&"8r;t
!WN6"!W<*!!W3#r!WN5`!QP2Z!;Hd"#RC&/!s]):#l+`&#5\T%"T8H$!rE#u!WiE(!W)ru!W3#r!WE/`
!OVpZ!;Qli#QY/9q$-p)#Q+c,"U=r0qZQj"rW;rtrW<*#qZ?cuqZ6`ur;lm!k5h=XklCPbm0NIlq?Hm%
qZQj"rrW&urW<*#qZ?cuqZ?Zrr;u]onc=jQqZ-HtlNm:k!<rf,#5\T&"T8E(!W`B%!W3!!!V-<k!W3#_
!WE(Z!;m)u#jqs!#7123qZcp$r<3'$J,~>

%%EndBinary
grestore
np
1.90222 55 mo
1.43164 55 1.12072 55 1.00001 55 cv
1.00001 55 li
1.90222 55 li
1.90222 55 li
gsave
[67.0415 17.4779 -17.4779 67.0415 -3.74609 21.7007 ]ct
clp
/1 /Gradient get_res exec grestore
np
1.00001 17.4141 mo
1.00001 8.67288 1.00001 1.68162 1.00001 1.00001 cv
2.80079 1.00001 22.0527 1.00001 22.668 1.00001 cv
22.668 1.00001 li
22.9147 1.18364 27.8343 4.84469 28.0365 4.99522 cv
28.0366 4.99525 28.0366 4.9953 28.0367 4.99533 cv
28.0373 4.99577 28.0378 4.99618 28.0383 4.99656 cv
28.0386 4.99673 28.0388 4.9969 28.039 4.99706 cv
28.0392 4.99722 28.0394 4.99737 28.0396 4.99752 cv
28.0397 4.99755 28.0397 4.99758 28.0398 4.99761 cv
28.0417 4.99906 28.0428 4.99985 28.0429 4.99998 cv
28.043 4.99999 28.043 5 28.043 5 cv
28.043 5 53.334 5 55.1758 5 cv
55.1758 6.00001 li
50.4102 6.00001 29.043 6.00001 29.043 6.00001 cv
29.043 6.00001 24.1484 2.35744 23.668 1.99999 cv
23.0527 1.99999 3.80077 1.99999 1.99999 1.99999 cv
1.99999 2.64022 1.99999 8.92004 1.99999 16.986 cv
1.66141 17.1269 1.32867 17.2694 1.00001 17.4141 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[55.2 0 0 17.76 .479998 45.76 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 115 
/H 37 
/M[115 0 0 -37 0 37 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 115 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 115 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 115 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 115 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
]`@9tnH/Oho`0RDJcP`Lo`=dgqZHTrr!!$'r!33,r!E?0rX8Z5rser;!"[HWnGqeSnH/Cd`;kJiYQ4Cu
pB('kqZQj$qZcs'r<W?.r<iN3rXAf9r=8i<`;o-'o`Fggq#cl^JcOj3oE"^gp]LEsq??^"r!30+r<`E0
rX8]6rseu<rt#,@n,V2CkQ0oLp&j@UJcM5>o)\Re!!<!!q#pNtr!*'(r!<9.r!NE2rXA`7!"Su=!>#jg
!:p6a!UBgZ"9&G1!.k3p!;-Be!ql`m"Sr<##5\Z'#lY//$N:G5%/p\7%K?q;%g!:R&_6p^!WE)W!V-<\
"9/IV!.k4M!:p6d!qufo"T&B"#5\Z(#lG#.$N:G2%/p_9%fHq;&-*="!;lfu!<E2X!U^$V"4I7%!42at
!VHNi"8E#q"oAN$#Q4r,$2k51$iUS6%K?q9%g3FT&J5Z0!8IVP!q??a"8r@t!.k44!:p6c!ql`l"T&B"
#5\Z'#lP).$N:G4%/p_8%fR"<&H<@B')hmf!8@PC!qZTj"S)PE!3#tg!:p6a!r2ro"Sr<"#5JN%#lY/.
$N1A2%/p_9%f[(<&-*=A&c`U<!9X@;!U^$_"8;r_!.k3H!:g0c!qucs"8N)r"oAN%#Q+l*$2b/0$iCG4
%K6k;&-!4@&cNFC'AENQ!V-9Z!qQNj"M"Ma!7_)B!V?Hh!s&N,q#pNtq?Hj&r!<6-r!NH3r!WW8%1W7G
rXT&A&J>!TrY+&egB$^Do)espqZM`UL]I;Qq#U6lpB13oq??[!q$6g'r<`H1r<rN3rseo:rX]#?rt58D
rY#8Gj8euUgB$aEo`Osl!!V!TJcN@^o)\OdpB13oq??a#!!`?+q[!'*r<iN3rXA`7rXSl;rX],C&JG'V
rtO8hgB%9TnH/Cdp&q;oJcP*:o`=afp]L<ppBCEuqZm!(q[*0-rX8]6rXJi:r=Al="q_F[&ebomrtOYs
rW2rtf)b:@p&k!kpAfdFS,i3_p]C?qqZHZtq??[!!=&i,#Q"f($2b//$iUS6%K?q;&,Zt=&cNCG',)&p
($P_u!WN/g!Ta@M!ql`i"NLLo!6kN;!VZZk"8E!""U+Z*q?Ha#r!<6-r<`N3q[<?2rser;rt#&>rXf8G
&ebomrY=YtcN3J9rr`#uo`UT]JcPcMpAt!ipB13opBCEuqZd0.#RC85r<`B/q[<E4r=/`9!"]#>r=K#B
rY#AJ'bqMT!;HQB!UKm\"8W0!"m,fa!/U^P!WE,o!r)ll"T&At#5\Z&#QY5;r<`B/r!WH3rXJi:rXSu?
r"8o@rY,DK()H08!!1XOkQ:G[q#pX"h#N$,\cDF)q#^?o!<`N$"SW)r#6"l+#Pn`'$2k50$i:A4%K-e:
&-!4?&cE=H',)&o'c%SM!8.DJ!pp'_"8W/u"g%cV!9sRZ!Vc`k"8E#q"T\f2qZ['+#5ST$#l=r-$N(;/
%/p_8%f[(=&-*=@&c`RL',)&p'c%VN!8[bL!r`5h!ql`j"TAT&!.k3@!;HTi!r2ou"8W/q"o&;u#6>)8
r<NH2#mgD7rX/N1rs\c6rso&>rXf&@!##5D"V_Xc()@_U!<3)u!:Ks\!VQTk!U^$_"8)cs"j?su!6kN=
!Vc`l"8E#o"o/At#Q+l)$2t;2$N:G2%/^S6%f[(>&H*4@')rXE'E]'c()ZQArrN&uiW8iVp&XXarrVlr
o`P6uS,e-@r;cTnq?$Hpp]LU$"T&?("pP8,#5\W,#R:V4#l4l*$N:G0%0$e8%f[(>&H<@@&dT-a'GM8s
()Ie]!;ccO!W3#n!U9a["8N)t"mZ/?!3Q=t!Vlfo!s&N,q#pHrrW`9)!XAr7qZlp&q$I$-r<rN3r!iW8
rt#)?!"o2CrY#JM'GV>u(DlWBgB%<UrW2lsk5t8XqZQd"])[E_hZ3HQq#^Bpq#pKsp'1<tq$?m)rX&W3
rX/T3r!`K4!"K&?%M/OMrXo/CrtGAG";M[f(Du]Ce,eS2p&k3qrWN*%MZAh=q>pEoq#gBpq$$Qu!XAo6
q$6^$q[*-,rX8Q2rseo:rt#,@rXo)A#SRmd'bqK#(Du]Co`=.Th?*BQq?6WuJcM5>q>pEoq#gX"qZQZt
p]^d)#6su/q$?d&r<iH1r=&W6rXSr=rXf)Art>8D"r%ad()Ic(o`,$o!!)?dnH%DHo`OslqutIJJcNpn
qZ6Koq?-Nrq$$Ksp':?ur!<E3#mpS<q@!92r=/`9rt#,@r=T#A#SRmd'bqK"(DlcF!W`9$gB$jHr;lNl
quZQoo`Y6tT`BZEq>gBnq?$Hpq?6Wu!<r`%#5JK*#RC\2#l+f*$N(;/%/p_9%fR";&-*=A')iOE'`JjH
(An1-!8@PJ!r;rc!ql`f"98Vp!.k3O!;llo!r<#q"9AZ/q??a#rWWE/"pXi-pB^R$r<i?.rXAf9r=/f<
r=Jo>rt>>FrY5>H!#G8.f`D*Sq?$BlmK3(ancZ`.JcOO*r;l`rq?-Nrq$$Ks!XAr7q?R$+rs/?*q$Hm)
r<rQ4rser;r"&c<rt58DrY,8F!YlFcpAihHqZ?Hlm/ln^o)t-TMu`eWqZ6a!q?-Tt!<iW'"ni/o#PA?'
#mgD7rX/E.rs\l9q[WT9rt,/ArY#2D!u)Fa(A@h%!TX:[!r)f\!q?Bd"Q'32!5&=1!W)rp"8W/t"T\f2
p]g?q!sf,:#l4i%$2Fr-$iLM2%K6k;&,d(=&cNCG',2,q(&%^]!WN5t!VQT`!q-6d"KqfW!:0^b!W)rq
"8W-$"U+]+oEP$prWiK/p'CC!rX/T3q$d63rsnu<r=B5H&J>]i',2,qp]/qI!!<*"hu`9Jq?6ctJcM>A
rW2ouq?-TtqZZs&pBC[(#6t#0"UG><#R:V0#lb52#lP)*$Mb)/%/^S5%fHn>&.oNR')rXF'_h[[!S[\B
"8i;p!.k3J!<3)t!r<#q"Sr;t#5nbu#6G/:#P8;t$2=l,$i:A2%K6k;&-!4>&cWLC'DMR]!WN2k!r`5a
!q-6i"N:@m!7h/M!W3#r"8W/r"nr5j#P8<##lk8+$3(A4$Mk/.%0$e:%fR"<&H3:@&c`Sq~>

%%EndBinary
grestore
np
55.1758 6.00001 mo
55.1758 6.00001 li
55.1758 5 li
55.1758 5 li
55.1758 5.194 55.1758 5.55601 55.1758 6.00001 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 2.4 54.24 57.28 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 5 
/M[3 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"pP89"pP89"pYA<#6tJ~>
<~!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!~>
<~*$$(@*ZcCF+!;^M+X&$~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
33.608 55 mo
4.70507 55 li
5.50782 53.6543 7.14649 51.7422 7.14649 49 cv
7.14649 47.9243 7.23263 46.2446 7.37556 44.1868 cv
13.0755 38.9591 18.496 34.2049 26.9824 30.541 cv
37.2179 26.1213 47.4836 23.9876 56.4261 23.9876 cv
58.1299 23.9876 59.7843 24.065 61.3828 24.2187 cv
61.6257 22.2954 61.861 20.4744 62.0735 18.8518 cv
61.3986 24.0094 60.4968 31.149 59.8447 37.2469 cv
56.9171 34.0242 52.6936 32 48 32 cv
39.1602 32 32 39.168 32 48 cv
32 50.5104 32.5778 52.8854 33.608 55 cv
6 48.0117 mo
6.00001 48.0079 6.00001 48.0038 6.00001 48 cv
6.00001 48 li
6.00001 48 li
6.00001 48.0038 6.00001 48.0078 6 48.0117 cv
6.00001 47.9908 mo
6.00236 42.0901 8.40259 17.9751 8.9043 13 cv
62.8535 13 li
62.8535 13 li
60.6875 13 10.709 13 8.93554 13 cv
8.93554 13 li
8.60563 17.898 6.00255 42.0599 6.00001 47.9908 cv
gsave
[37.1284 0 0 37.1284 53.0361 54.3594 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k3XT
%1NaU%1NaV%LrsY%M''\%hB0]%hB3_&.fBa&.oKd&J5Te&J5Wg&eYfi',)#m',)#m',)&o'GM5q'bqGu
'bqGu'bqK"()@Z$(Ddl((Ddl((Dmu+(`4),)&X;0)&X>2)B'M4)B'M5)]K_8)]Kb:*#oq<*#oq=*??.@
*?H7C*Zc@D*Zc@E+!2RH+!;[K+<VdL+<VdM+X&!P+X/*S+sJ3T+sJ6V,9nEX,:"N[,U=W\,U=Z^,pai`
~>
0 0 <~)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X>2)B0V7
*#oq=*??.A+!2UJ+<_mO+sJ3U,9nHZ,palb-7:/g-n$Jm.4Qhu.kE5&/M/P+/hSb00JG490etL>1G^gD
1c.'I2E!KQ2`NcV3B9)\3]]>a4?Yhj4[)%n5<h@t5s[h(6:4+-6psF377BX77n6*@84cBE8kM]K91qrP
9hnGY:/=Y]:f'tc;,U=k;cH^q<E3%!<`W7&=BJ^/=^#!4>?b<:>[1Q??=$uG?XR8L@:<SR@UiqZA7]=`
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /2 /Gradient get_res exec grestore
np
64 12 mo
8 12 li
8 12 5 41.334 5 48 cv
5 54.666 0 56 0 56 cv
56 56 li
56 56 60 55 60 48 cv
60 41 64 12 64 12 cv
62.8535 13 mo
62.1055 18.5039 59 41.7207 59 48 cv
59 53.541 56.373 54.8027 55.8457 55 cv
3.39257 55 li
4.73535 53.6543 6.00001 51.4668 6.00001 48 cv
6.00001 42.1142 8.40234 17.9775 8.9043 13 cv
62.8535 13 li
.47451 .298039 .27451 0 cmyk
f
7.37556 44.1868 mo
8.01868 34.9271 9.81161 18.0094 10.0801 14 cv
11.7227 14 54.3496 14 62.7187 14 cv
62.5533 15.2215 62.3297 16.8941 62.0735 18.8518 cv
61.861 20.4744 61.6257 22.2954 61.3828 24.2187 cv
59.7843 24.065 58.1299 23.9876 56.4261 23.9876 cv
47.4836 23.9876 37.2179 26.1213 26.9824 30.541 cv
18.496 34.2049 13.0755 38.9591 7.37556 44.1868 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[56.64 0 0 31.68 6.72 18.88 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 118 
/H 66 
/M[118 0 0 -66 0 66 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 118 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 118 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 118 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 118 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
rW`'$oa(9uoa:@"pC-^(p($a+pCR<9p],mGSH/X$r"AuBr"T)Er"f;K!#PPMrYbVPr>YYSrZ1nXr?(q[
rZV1`rZh=dr?_@gr[7Ulr@.Xor[[mt!%mmLp'CC!r<i?-oaCL&oaUR(p(-m/q@V3WJcNUer=])Cr"T)E
r"f8Jr##DNq\oGQr#G\Vr#YeYr#kt^r$)+bq]u.er$MCjr$_Lmr$q[rr%.h!s"=-Qoa(9up'UI#pC-d*
rseW2oagd.pCXV0JcOm4rY,/CrY>>HrYPJLr>GMOrYtbTrZ1kWrZD%\rZV1`r?M4cr[%Ihr[7Ulr@.^q
s!n!ur%.dur%@sRoa(9uoa:C#pC-^(oa^X*pCR98q%<W>Mu\_8r"T,Fr"f8Jr##AMr#5PRr#GYUr#YhZ
r#kt^r$)(ar$;7fr$M@ir$_Onr$q[rr%.dur%@t%!&4*Pq[*3-oa:@"pC-a)oa^X*pCR!0q\&&lJcMqR
!#5DIr"f5Ir##DNr#5PRr#GYUr#Ph[ru_.]r?;(_rZh=dr[%Ihr?qLkr[Iapr@@dsr[n%#r\+1'q?Zg%
oa:@"pC.'2pC6g+oagd.ob$p2_Z58gdK'1\r>5AKrYbVPr>YYSrZ1nXrZD%\r?;(_rZh=dr?_@gr[7Xm
!%@gqr$qXqr%.h!r%@q$r%S+)rWr6)oa:@"pC-^(p($a+q@NW;ob$j0rtD")JcPKErtbSMr##DNr#5MQ
r#G\Vr#YeYr#kt^r$)+br$;4er$MCjr$_Lmr$q[rr%.h!r%@q$r%S+)s"aU0pBgO#oaCL&oaUR(p(-j.
p(?s1q\/f+JcM8?!#PPMr>GMOrYtbTruD([r#YeYr#kt^r$)(ar$;7fr$MCjr$_Lmr$q[rr%.dur%@t%
r%S+)r%e7-q[)s'oaC[+r!`6-oa^X*pCR$1ob.!4ec<,YMZEbor>GSQru1kUr#GYUr#YhZr#kt^r$)(a
r$;7fr$M@ir$_Onr$q[rr%.dur%@t%r%S((r%e7-r\XW]oa:X*q@!!*p'p[)oagd.ob$m1pCmK>joBu5
Y5nS?r#5PRr#GYUr#YhZr#kq]r$)+b!$qLgr[%Ihr?qLkr[Iapr[[jsr%7h!r\+1'r\=@,r\OI/s#'NX
oaCL&p'p^*!"SZ4pCR!0!##5BpCd<9q@pdHJcO7"rYkbTq],SUr#YhZr#kq]r$)+br$;7fq^2:ir$_On
r$qXqr%.k"r[e1(/M6rSqChe$r\=C-rA4I1r\a^6q[3!(pC-^(p($a+pCQg+ob.$5q@oM$JcPNFrYtbT
rZ1nXrZD"[rZV1`rZh=dr?_@gr[7Ulr[Iapr@@dsq(2V"/cIC!0DmO'1&Wm,1]K<22?,Q92[Tob$hk)&
%J:5)&,-Y)&bQe0'DiLD(&7i]!1X&f*<$uV*rR2Y+T<Pa,5rec,Q&hc-2]+h-i>Ck.Jt[p/,Usm/c77$
0E3[(0DmO%1&`s,1B9912$,Zp2tm^S%.t)/%epP-&,$S)&cNFC&b?Y2'DN9l!.k3d!<+#:*rR2Y+T<P^
,5iba,lT+f-N5Cj./bUm.fLsr/Gq("0)[@&/hQlOr%In#s"XF,s"jU1s#'g7s#9f_pC-^(oa^X*pCR*3
q%3T>r=SZ7ob76;r=uR;JcOj3r#YhZr#kt^r$)(ar$;7fr$M@ir$_Onr$q[rr%.dur\"1%p+H4q!AH2)
0E<j+1&j$,1B9922?#N62ua9Z%/(/'%eUA,&F^83')`F2')<1@'_`:A'o`3M!!")>+9!D_+T3J],5rhb
,lT+f-N,=i./k[n.fCmq/H.6i0)dL(0)dL(0`Ea)0`3['1B0002#]?82E!KQ3;<pY%K$\/%eUA,&G6V8
')`FB')iL?&c`O;'(Ze7'`8^0!.k3Q!;mu<+oEP`,Q&hc-2]+h-i>Cl.0(jr.fCmq/H.6h/cm[Y0)70u
0`3[(1As$.2#]B42Z>Z5%.t)'%eUA,&G6Y8')iLB')rR@&c`O4')E:7'`SpC!.k3A!<42@+oEP`,Q&hc
-2]+h-i>Ck.Jt[p/,Ust/c74'0.nn1r%A:-0.nn10/"sN0E*X*1&`m)0`X!,1]K<22?#K92`E])oaUR(
p(-m/ob%-8!"n6(o+V$9q\@T\JcNUe!$V7ar?M4cr[%Ihr[7Ulr@.Xor[[mtr[n""q_.q%!&!Xlq_7n%
rA+C/rA=L2r\ag:2`URAoa^X*pCR$1mh5(%oFpm3rY;X;JcOm4s!%Cdr$;7fr$MCjq^DFmr$q[rr%.du
r%@t%r\3Ri!\c8\qCqh%!&FL.s"jR0!&aa6r\jg:r!i</oagd.ob#dgoFq6=rY52DMu\_8s!.Fe!%%Xk
r$M@ir$_Onr$q[rr%.dur%@t%oe?@u!\c8]pb)b(0/#"4r\+=*r%S%'r%e7-r\XX4r\ja7!B:P]%fHq6
&,-Y.&_@Zf'D<.<($>RK!3Q>$,lT+f-N,=i./k[n.fCmq/H.7"/c[O'0DmO'0`j$`1&*I&0E3a*0*!^)
0E3a+0DdI&0`Wp*1&j$,1]K<12?,T62ZPi4%eUA,&G6Y0&cr[Y'BBf*'DrL8'DiLA'`]#e!.k4!!<+;B
-N5Cj./k[n.fCmq/H.7!0)[I$0`!L,0JP781&<R(0E*X00/#"40J>'[0JE,Rr%\+)s"jU1r\X[6r\sj:
q[W<1pCR!0ob.6;rt>>FnIbg8q\&oBq\&K6q%WZ?T)aHCp&P%<r[7Ulr@.Xor[[mtr[n%#r@e(&r\=@,
qCr+,0eb=:pFlS#r@e4)oe?:ur%e7-rA4L3r\jd8s#C#gp(-j.p(?s1pCmQ>rtGAErtG;C!#,8CrtG5A
q\/uBq%NH9r"]&.JcM8?r[7Ulr@.Xor[[mtr@Rq"r\+1'r\=+%qCr(+0eb?S0E<d#0_mI&1Ais.2#fH4
2Z>W83;3sX&G?_8')3++'E/XD'E/XD'DiFA'DrL7'DrR>("NAn!/gjT./kXq.fCjr/,Uss/c77#0DmO&
1&Ng)1\rm'0``s_q(Me%oIp8"r\47)rA+=-s"s^4r\ag:2`U[FpCR?:pC[*3pCdN@mh>^6rY,2BrY,2B
o+Ua1r"\>oJcMtS!%@gqr$qXqr%.h!r%@t%r%S((r%e:.!])Yiq_S+)q(_k&!&<gor%\((r\OR2rA=d;
2E*QS%hJCGob$j0pCmN?rY#;H'CZ\7')iRA')`LB'(ck8'_rID(;^''!7LrG.fCmq/H.7!0)dO$0`Eg)
1B'**2#9$,1''*bqD%[toe?:uq_J1-rA=L2"?&1t3&p^Fob$j0pCmE<!YZ7^mh5[6r"K#ArY,2BrY+u=
p([B=ScF?BpAk4Cr[[mtr[n%#r@e(&r\==+r\OI/r&+C/r%n7+q_8+*1%d4#0DR=%1&is+1&Wm,1]9-3
2)[Al2ZPi9&G6Y.')*(4'EAgG'^l_7')`LB')N@A'(ck6'`JjH(ARr^!1X#h/,Ust/c77"0DmO'1&Ng*
1]0*/2#oQ42>f<01]&p.0f&__"#)G`1&*F&0E*X*0DR<u0`X!,1]K<32?,T62ZYlLp(?s1pCdN@mh>g:
'GU-P!##2Cr=]&Br=\Z7q@r`?eGt1$^]=Bcr@Rq"r\+1'r\==+rA4@.r\aL0r\X^52>oB21]B0/1Aij-
0JWDX"tqYa0/,(5r\+=*q_7q&rA+=-#W+@q2)[?O2`UREp(I*5ob@E@p([N?rtP,>rY,;Er=f,Bp_*W?
q@iK8r=uR;JcOj3s"4.$r\+1'rA"4*r\OI/r\aU3r&=U5$8j[t2)R3I1GgmDq_J((!AH8*0FBHe0J>+6
0/#"50D[C&1&`p*1B'*02#fH42ZG`6&bZk2'D<.<(&o!J(%r@A'E8dA'*&[C'E/XA'E&R7'E8dF'`/UF
(6&<N!<+VM0*!^)0`<a(1B'*-2#T<02Z>W83;b`72Z5N32#T6-1Aim(0F0<c0/#"40/,*Z0E3a+0DdI'
1&Ng,1]K<22$>fq2`D?A')iR@'D<.5'`o'`(%r@4'*&[B'DrL6'DE4<($GXL!3H8#0DmO'1&Ng+1]0*.
2>fB32u5K63;ti=2E!ENr\aX2rA4C-r%\(&"YVP`0/,*V0*!^)0DmO'1&Ng,1]K<32?,T72u"$['D3(/
(%r@A'E8d:'E&RA'DrL8'D`F@(&.c\!1a,g0`Eg)1As$,2#]B32ZG]72uGZ63W1r:2uPZ72>oB11]9*,
1&EX*0/2rMqCqk&r\FL0s"s^4!]Dqqr"A`;ob@09rY5DKpD*?8rY#8GpCmN=r=f&@n.Y^6qA%K[JcNUe
r\==+rA4@.r\aU3r\s^6r]1!>r]0p:s#9m7r\a[3r%n=-!AQA/0``s_r@mpu!&""!s"O@*r\=d91GgpG
2)[?O')*(4'_N4=('53d(AegH'`JjD'`SjH'_rCD',)#V'DrL@'D`@<'DE4>'sI[i!9F4Y1B'*-2#]B1
2Z5T43;tr73rV/=3;kf92Z>T42#T601''*br\=C+!A?/'0*Em[0/"sV0E3[&0*3d\0`3[)1B0012#fH5
2Yn*['_N47('53c(A\aI'GM;X'`JaG'_`:>')`L>'(Q\9'E&XD'`]#.!/^aV1B'*.1]TB32>fB22uGZ7
3W(r:48q;?3W1r;2uY]=2)R3J1c51frA+@,!AH8-0EEg\r@\=,0/"q10DI0s0E*[(1&`p41G^jE2)[Ak
'D<.?(&&I;('#0J(AAR?'EAgG'_`:@')WF>')WF?')N@>'`/X.!.k3R!;n\P2>fB32uGZ73W(r:49%GB
48q;@3<2)=3;tl:2Z5N52#T601Ars+0`*L(/hcfKqChk&rA":,s"j[4s#0Nap(d<;r>55Eq@s&G'G^EX
p_*W?r"Jr?rtG,>pCm?:rY<<NJcO4!!&XX3r&4O5r&FX8r&Xg=qE4a=rAss=r]'p:s#0g5"Z/%l1c$re
1Ars,0`*L'0)[C&/cIC&/cIC%/c77#0E3a)0aBHh1G^jE2)b7Ep(d9:q\K;L()Qi`rY5DKq\Ao@rtGDH
p_3N;!#,5Br=\T5r"T,FT)aHCp&G(Mr&4O5r&FX8r&Xg=r&jj>s#g9Bs#U->s#C!:s#0j6s"s[1rA+C-
r@n1'"thP]/hJ\.oI]tnr\+:*r\=C-!])Vh!Al\4'_N48(A&CE()@_`(AejH'`SpE'_i@?')rX1')iR?
'`AdC!.k3?!<4tU2uGZ73W(r;48qAB4T.GA55m_F4T@MB3r_5>3<(r:2ZGZ52#fB21'B<d0JP9Z0DmHt
/H@?u/c.1#0E3a*0a9Bg1G^jE2>%^Y(A/ID)#G-H('53c(A\dB'`JaG'`A^F')`L1')!"9'`Sp!!4Dlc
!<5"U3<(u=3W(r:48_5?4o@JD5Q3kH4oRSD48q;@3WD)=2uPZ72?#H41]B001&`j.0/,'X/cdOVr%7q"
s"44$r@J(%/M6iPr\"=,0erY_s"j[3q%`W>ob[QDp_WfCq@s&G'G^EXp_332!"no;pCmK>!#=VrJcMtS
r]'m;r&Xd<r&jsAr'('D!'pNJr]U9Dr]:*@"?JP'3&pjq#W=Ru2)I*G1Gf"cs"XL,r\+4&r@J(%/1pED
s"41%r\+7)s"aU1s"sZhpD3E<pDEcD!YuOfrY>PM'c-c`r>#/Cp_3T=!#,2Art4Z3rY,2DrY<9MJcO7"
s#Ks;r]C$?r]U0CrBL0Es$-NIr]LBH4$,Jar]0s;%lZF*2Dm<J1GgmD1,1O=1&`m+0E!L)/M&IR/c7."
/,h*u/,Cds/c@=$0E3a*0`j*d2"qdY(\8IF(Dn"e(]"pE(&AX?'E8^E'DiCB&c34>')`F?')<4<'EAl>
!.k4F!<"tX48_5?4o@MB5Q!eG62s4M5Q3kH4o[YE48q8F3B9&Y2`EYo2?#H41]B-20eb<\0E!O&/c%$m
/,:ar/cRI'0E*[*1&j!/1\qm\(\JXF)>b9J(BP?g(],!I'`o'a(&\gJ',2/U'D)q7&bQe4'E&X@!.k3@
!<,(X4T.G@55meE5QF+M62j4M5mT_?5<_7o4Zkk+3sI`,3B9&Y2uY`82?#E61G^fc1&is,0E*U&/c@6t
/,q*t/,q+!/,Lk+/M/S-0/#"50ekF=1]A0_(\S^C)$1Wm)$Ccn(Dn"d(],!F(&AX?'D<(9&a^50'E8dH
("E;9!5JU54T.G@55meE5lF"F6N9@N5QO)5r]LoW4?GVc3]T2[3&`cS2Dm<K1c.#g1B'$.0`Ng*0)dF(
/1iFN.fq1M/+kCl/,_$u/cRI&0*<pa1,JV?p)*H?r##;Iq\B5J'c-c`rtPJJrY52B!#,)>r=Su@oF_'8
q\/i@YlK@Uj8]0Br]U0Cr]g<GrB^?Jr^-`T6ULc<'0nfI5<_7o4Zkef3]]8]3&iiU2Z5K91c$pC1B'!.
0`Ea)0)dF&/H%(".P(KJ!%Imsr@.^qr$q^ss"+.$#;.V^0/,(71AVg[)"ngN)AsD0)&`;gr"o5GqA&uD
!#,>GrY,;ErY,5CrXo)AoF^m3!##,ArY1=lM#dH;s$-NJr':6Ir'LBMr'V#^6UF+*5sRY!5!D+m4?WU)
%QZU13&iiU2E!EL1c$pCr\=F,r\+:(s"44$r@@grodTbfr@81*/M8Y/0/,(71&`!^(]YHI)?(QO)>k<Q
(Ddqf(]5'F(&J^@'E&RD&cE@1&bm"9'*&a1!.k3Q!!#4]5Q!eG62X(J6i9=_77BU46UO1,5s[b#5!D+m
'0SH?4$#D_3B/uW2`<NN1c.!D1B'!;0JG.40.nh-/M&D'.kCTKq^MLms!dgnr$q[rr[\7*/M8\00erA=
obmNCq\f;Kq\T5I!YlIdrY5JK'G^T]q%NN9q[if>mLf@0rY,8Fp],mGSH&XSr':6Ir'L?Lr'^NQ!(J2&
77BU46UF+*5sR\"5<_4n4?GVc3]T2[3&``R2)R3H1GU`b0`j$^0E*R(/cI=#/,q*t.JbIl-i,7j.1@[U
.k</%/M/S-0/,*V)"ed=)Z:NW)&O2.(`<,dq\K&DrY,>GrY5>Fp_*'.rt+u<r=]#ArY3i^JcNUes$6QL
qa19Lr'^NQr'g`X77I2Ds$QcO(dL;M5!D+m4?GVc3B9&X2`<QO1c.!E1,04n0eb:70.nk//M&G'/,^q$
.4HYo-n+d:r$_Lm$7[MU.kN>*/h\k3rYY;GpDWuLr#5JNq\TGP(D[c&rY>PM'c-c`q@roBrXo2Er=\c8
pCR36q@`]>!#2X;JcOm4s$?QLr^6TOr^H]RrC?iV)am(]6UF+*5sIRt5!;%k4?GSb3B/uW2E!EM2#]97
1,1L;0JEDX">)/U.kCTKr[Ijqq^;=hr$VIks![jqr[J.'.kE8(/hSgN)>>'G)[@9")]BV4)&iJlr##;I
r"f8Hq@rf?r=\f9p^m'0q\&i@Mu\_8r^-TOs$ZiSrC-WRr^ZlW&P#;[77BU36:*t(5X7Ot4Ztq,3tjY8
3B/uW2E!EM1c$mB0ek@80/!5U!%e+""Y(rN.4?VC-i,1g-2f1h-iPM#.4Hbt/1`A*/hd&=pDO#Moc*fI
q\]MR(`+#+rYGVO()Qrcq\B)Eq\/o@rt58Dr"8<-q%<Q<!YZ4]k5^)6XoSJhr'^KPr'pZUr(%Jm8OuBB
7n,p96psC05s[b$5<_7O5!;"i3]]8]3&`cS2Dm<I1GU^?0JG.4/hJY+/1^]Ls!dpqs!Ralo-FA`r[/(%
-n-Sp.P!##/M/UR)>>'C)ugoW)Z^irrYbnW)&aA1q\]5IrtYSMq\B)E!YZ7^rY,)?r=S3(rt52Br=]/F
_Z58gdK'56r^H`Sr^ZlWrCI/b8kDQD8,bt.6psC06:*t'5<h=p4Zkhg4#o8[2`EWP2)I*F1,:R<0/"q0
/hJV).k3"tr[@dor[.LgqBYtbr[.Ul#Uq2P.k</%/M?c9oc*fKr#>PPr#,JN";_jk(Dm&d!YlIdrY>;E
rY,,@r=Sc8r=Jc8rXeu>q\&lAT)aHCp&P(\r'pWTr(-fYqb$iZ.nE0"7R]a66UF+*5sRXu4Ztni4$#D_
3B&iS2)R3H1GU[=0J>%2/M/M)/,h"&.4?Pl-RL2=-2o1i,QB%d,QB%h-2o4s-RU;j.4H_s.fh1Rq\o,H
p)O&N!?)pV)Z1KN)#b<S()Ic&(B,$M'GM;]'`JaG')iRD')`FB&H<@>&GH_2&Gm(<')rXA!.k3?!<#Cc
8,PpW8c23Z9*e0`8kDQE7n,rH6lJEZ5sR\"5<_4n4$,Ja3B/uW2E!EL1GU^?0`E^?/hS_,.k<(u.4?Sl
-RL,d,paf^,:*44r?D1br?Mk!,pjrd-n$Mo.k</&)B/8fnf7QHr#,\U)&O2.rYYPLrYGDHrY52BrY##=
r"/W6oFUp4r=T)Dec<,YMZ<`Hr^ZlWr^m#[rCd)_02"r18P)HC7n,s:6pj:-5s[_"5!;%k4$,G_3&`cS
2Dm<J1GU[>0J>(3/M&G'.fLjt-n#!@"=5?>,:*75oHO8ZrZqjt-7:2i.4Qet/GC+Z*;plU*W-l])]K\7
)]BXl)$Uop(Dmu*(],!I(&emK',2/['E/X@&c<4-&,Qq9&cNF*!.k3S!;oCd8c23[9DhK`:&doe9E%Kl
84Q-<779O26:!k%5<g,O4Zkef3]T2Z2`<NN1c$mB0eb:7/hS_,.k3"tr[7jr-71&<,l]+e,5ED\,5rep
,U=Z^-71)h.Olr"q]#2JqAf\Y*$$"=r#>PPrYbVNrYGVO()QudrY>;ErY,8D!YH%Xr=Su>kR[S&r=],D
_>o/fdf9A=rCQoZr_*/_r_<Aes%WJc0M4o-7n6$<6psC/6:!k$5<_4n4?>M`3B/rV2Dd6H1,1L;0/"q0
/1`;$.4?Vn-RSg=#UCW>+sS9U+X-S&r?2Uo+sS?Z,pjrd-n$Mo/,gL]*;:HR*r[2X*!R?$)B0V6)Z1KP
)#P3L(AnpH'`JdC')`FA&H34?&H!(=&,-S2%fd1=&cNCC':o2U!;?Hn8c23[9DhK^:&IaH:JOVX9M7uL
8OuBA7R]^56UF((5X.Fq4?P\d3]K)X2E!EL1G^a>0J>%1/M&D%.Ocbo-RU5e,UE@6"X5*5+<Vd*+Sd)Z
+T<Ml+sJ6V,UF``-RU>m!%[d`p)X)Qr#PeWr#>VR!>ugT)$Ccn(Ddqf(]P9J(&o!F'E/XC&c*(:&+U50
&,[";&cNF=!.k3@!<5[j9DhK^:&Icc:BOEh:/3T>9M8#N8k;KC7Rfg76UF+*5X.Fr4Zkee3]T/Z2Dm<J
1GU^?0J>%1/1W5#.Ocbo-RL/=,R5P<+sA'P+<^Y*q]>\XrZDUm+X/*T,UFcb-R^DnqAf5MqB#PTr#>\U
ru:kSru(_OrYPJJrY>DH";;F_',1?Xr=K)B&/"jPr=A]6rXJi:q%*E8r=T&BeGt1$^]=C-r(R)ar(d5e
qbSS7:/+GV9M.oK84Z3>779O26:!k%5!D+l4?GP`3&`cS2)@$D0bZ8q0.nh./1W2!.4?Pj,paf],9m+1
"s>$1+!)IDrZ;"Yr>lFj+!;[M+sS<X,pjrd-n5-8pDriH"s"^(*??+>r#>YSr#,JNr"o>JrtYDFrY,8D
q[rf=r=Ac8r=/K2q[`W:rXf,CYlK@Uj8f0Qr_<;crD3>frD<\n:JOYYr_#+@84Z6@7RTX36U<t&5<_7n
4$,J`3B&iR2)I*F0eb75/hJV).k2tr-RU5e,U4KX+sA'O+8m8Z*W6rk*#ot>*ZcCF+<VgO+sS?Z,pjuf
J,~>

%%EndBinary
grestore
np
62.0735 18.8518 mo
62.3297 16.8941 62.5533 15.2215 62.7181 14 cv
62.7187 14 62.7187 14 62.7187 14 cv
62.5547 15.214 62.3308 16.8875 62.0735 18.8518 cv
gsave
[13.167 50.3336 -50.3336 13.167 27.2437 -.822754 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~!!!!"!<N<)!sA`1"U5/9#7(S@#RLeE$4@4M$k3XU%M'']&.oKe&ebom'GV>u()Ic((`=20)B0V8*$$%@
*ZcCF+<VgN+sJ6V,U=Z^,palb-RU;j.4H_r.k</%/M/S-0/#"50ekF=1G^jE2)R9M2`E]U3&ioY3]]>a
4?Yhk5!M7s5X7S#5sdn*6UX=277Ka:7n?0B8P2TJ92&#R9hnGZ:Jakb;,U:j;c?Uo<)lq!<``@)=BSd1
>$>-7>[1Q??=$uG?smDO@U`hWA7T7_AnG[gBP;*oC2.O"Ci!s*DJjB2E,]c8EH-#>F)uGFF`hkNGB\:V
~>
<~z!!**$!<N<)!sA`0"9er4"U5/8"pYA<#7(SA#mq"H$4@4L$OdFP$k3XU%M''\%hK9`&.oKd&J>]h&eYi
k'GM8s'bqK"()@]&(Ddo*(`4,.)B'P6)]Kb:*#ot>*??1B*ZcCF+!2UJ+X&$R+sJ6V,9nHZ,U=Z^,pjr
d-RU8i-n$Jm.4H\q.P!##/1`>(/M/P,/hSb00/"t40JG180etL?1G^gD1c.$H2)R6L2E!HP2`NcW3B9)
[3]];_4$,Mc4?P_g4Zttm5<h@s5X7S"5s[e&6:+%,6psF277BX67Rfj:7n6'>84Z<D8kM]J91qoN~>
<~z!!**$!<N<(!WrN,!sA`0"9er5"pYA<#7(S@#RLeD#mq"H$4@4L$OdFP$k3XU%M''\%hK9`&.oKd&J5W
g&eYik',)&o'GM8s'bqK"()@]&(Ddo*)&X>2)B'P6)]Kb:*#ot>*??1B*ZcCF+!2UJ+<VgN+X&$R+sS<
X,U=W],paia-71&e-RU8i-n$Jm.4H\q.Olnu.k<,$/1iG+/hSb00/"t40JG180ekC<1,:U@1G^gD1c.$
G2)R6K2E!HO2`E]U3B9)[3]];_4$,Mc4?P_g4Ztqk5!D.o5<hCu5s[e&6:+"*6UO4.6psF277BX6~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
np
4.70507 55 mo
3.39257 55 li
4.73388 53.6558 5.99723 51.4719 6 48.0117 cv
6.00001 48.0078 6.00001 48.0038 6.00001 48 cv
6.00001 48 li
6.00001 47.9971 6.00001 47.9937 6.00001 47.9908 cv
6.00255 42.0599 8.60563 17.898 8.93554 13 cv
8.65234 17.1992 7.4336 35.5606 7.0918 44.4473 cv
7.18639 44.3604 7.28113 44.2735 7.37556 44.1868 cv
7.23263 46.2446 7.14649 47.9243 7.14649 49 cv
7.14649 51.7422 5.50782 53.6543 4.70507 55 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[6.72 0 0 43.2 2.88 8.32 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 14 
/H 90 
/M[14 0 0 -90 0 90 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 14 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 14 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 14 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 14 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
f)Xn5jT+lRo)SgkjoG2[qZHEkjT,,\q?6BknGr4^o*4dgjT+lWo)n(SrWr3'r<2isjT,5dpBgEojT,8f
p'Ua$pB9RXoaLj.o*+4Up'q!0o*,$ll2^Dco*4:Vo+1Esm/Zq^o+:^&qZc-^q%EQ:o*=@Wq@`iBq\&K*
jT+ldo*FFXo+h',qZu9`o+pp(jT,2qp_WN.p]0^^r>G>HoEkR)jT+ok!#bA8klCY^oc*oLrsSK,jT+ll
o*aX[!$:kTrZ1S<jT+lno*j^\p`TJVoaLj/jT,*"q]PJ>jT+lro*t<lnc88+q[WE2jT+lto+'j^r$M1b
o+'j^r$V7do+0p_oI'_f&+gCo!;%]?..n/O&*3f_.e=5O!9X@^/G1Of&cE:&!!"VC/FsJC!;6Ee0)[Bn
&`j#f0DmHo''0,l0_[9m''0,b1%Q(?!:quD'DN7&!;eVK1\2=B!;n_L2"MFY!:'XV2Z4Bb']f>e2ZPc-
($kqs!:r2A($,Gq3qYN)(?GPr48V)93qF-K!;AVS47a9M!;AYT4ST`j(ZbYg55?&m(ZbYg5P#`d!:KpZ
5k>iS!;]%Y61YuX!<)uq6hs(?)<Cki7.V>Y!;/e\7IqGZ!:r\Q)ugi<!<,O_8+[`#)s%)"8bGUS*:t33
!;9%a8b3qn!:p3b9DqKS*9@1l9_0:d!!#ac:%KCe!:rtW*p!Cu;#3uf*q^T9!;]Rh;#;@1*p!Cn;Y)"0
!9aFS;tD*m!:s1]+R]=)!<#sm<V%?p!<-'n<qRX9+QWUr=T;Io+TMN)!;9Rp=SF$<+lr^q>4Ws.!;-?`
>Os'#!:sIe,NSq)?Mn.,?1T<&!;^(!?LoH(!:sUs,kiSG!:sXj-05-u@e1oD!9sR_AG9U5-MAbI!<-R'
AFh/8!;QWfB)cH6-KP7!B(IA2!;^=(B(IA2!:sfQ~>

%%EndBinary
grestore
np
4.70507 55 mo
3.88085 55 3.25196 55 2.86523 55 cv
3.96167 53.6675 5.99553 51.5069 6 48.0117 cv
5.99723 51.4719 4.73388 53.6558 3.39257 55 cv
4.70507 55 li
4.70507 55 li
6.00001 48 mo
6.00001 47.9971 6.00001 47.9937 6.00001 47.9908 cv
6.00001 47.9937 6.00001 47.9971 6.00001 48 cv
62.7187 14 mo
62.7187 14 li
62.7696 13.6199 62.8149 13.2847 62.8535 13 cv
62.8535 13 li
62.8164 13.2812 62.7695 13.6231 62.7187 14 cv
gsave
[-1.49999 41.834 -41.834 -1.49999 33.6128 13.019 ]ct
clp
/3 /Gradient get_res exec grestore
np
7.0918 44.4473 mo
7.4336 35.5606 8.65234 17.1992 8.93554 13 cv
8.93554 13 li
10.709 13 60.6875 13 62.8535 13 cv
62.8145 13.2869 62.7691 13.6218 62.7181 14 cv
54.3496 14 11.7227 14 10.0801 14 cv
9.81161 18.0094 8.01868 34.9271 7.37556 44.1868 cv
7.28113 44.2735 7.18639 44.3604 7.0918 44.4473 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[57.12 0 0 32.64 6.24 18.88 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 119 
/H 68 
/M[119 0 0 -68 0 68 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 119 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 119 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 119 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 119 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&g&UL@!!)fqq#LEqciAXtJcLB&q>do(eGt1$JcM8?kQ.U_p]0@Uf)b[I
rrKP.JcNC_n,WLjq#LHsq>pQsqZ6ZtquQ]s!!2os!!8#Yb5o*QJcOO*Vul5crrN$!TE4?ZQiM^<qZ)KT
rrJ&ZpAgEXM?*GRqZ6a"r;rMlnH#'Zkl?;8WW:]S`<-)CmfUr<jT58\quQ`tq>pQsmK(E0JcNpnj9*s9
dKJ_6qZ?ZrecOP,W;qMMl2^ec!!N6&`WZ5Dr<3$%r<2Kknce^fS-&NgM#`G6p]TserWN9)Ws.toRf_dR
JcMhOp]TOZlikH7ciV)dqu[!%!s?UEJcNsoi!%d<gBRHYaTCZ.qZ?g"iWH+ZJcP*:p]UX%rWV3ars/N-
b6RVDj9#)YrW9V4qZDWSMu`SVnHSstrs%BdrWiK/rWrK.rs8B)!!rK-!sf,;#l+_q#kJ+b"8MqK!1Eoc
#5nc,#4i)j#It->$3(;1$/kui"8i;T!.k3^!9sgM#lP&0#k&)u#QtG>#RLh7#lP&0#jDZ@"8rAu!rrH(
"TAN&"TJT$"98Q&"S2`^"M"Ma!87GP#NZ6O#m(G?$L%la$2+_]"3(K/"IT7A!;Z]c#j;T'$N:D5"7-,_
"S_tK!1NuR$3(@s$L%r]$NCM5$M"T%"6K`l"Sr;S!.k3_!;Qrg$KMT;$i1:Z"S2fr"PX(L"h4Pa!8@MH
$NCM6$L8)V%/pV7%.t#.$iUP7$geB$%H.H2"oJN&"mZ>Z!.k4J!::0[%.4Q*$k:brrXAi9p^R6+nH>?c
pAgEXM?*G[n-nUlq@;Ws!"A]5r!`N5!"AK/q@<K-oEF1Wrs$:CrW`B+kl?;8WW;f&rXAi9n.#+%q[WQ8
mLJ+`r=/f:p($$bq$-d$r<D`qrWW9*rWW9*jTPVgr<;s#aT-nmaoLo?n.+Uloa]^dp^citrW`-$f`qH[
rW`9(!!`H-quu$`W;qMMl2^hnn.#L1%M&+Am1Ak"rXJo=k77D#oah$5oEF+V!!g=Eq?DcVMZEVarX\c7
!"f)>n.>:*nIX4]q%3$"k6Ceg!X8l7`!-2Hr!)?bJcMhOq[`Z;rt"c6nIbd6q%EE6nIY."rt,&<rX]&?
q%3E8j9FuVq?P(GqZk1BJcNsopCQg+n.G^7p(Hs/!Y>qT!"ni7!"\E-p^mK=oEN>@!!`?+r<E6+m0<+d
VuVDLlN$SinIjstp_**/!Y>qUo+:^0p_!E:iWoDfq$6p*is5Sgr<N9*p]gd'mg&^pL]EA6rXnu>q\&Q8
l4a:5'GUEXp(@B<'&O;q')rX,#N?$h#QG(P#65&*!.k3>!<!Q''DW@?'_N1@(AS^@'_`:7&dT'^&J5Wf
&J>`U&HEI;&c*+@',(-To*=^ij9X!8qZtjTJcN@^r=ef;obHm1q@ruEq@r]<g_0Jtr=n2rpBg-kq?Ym^
oa&).JcOL)r"Sf=oG6s5qA/rCq%WN9!>6(A'(Zb2'D`CC(%DS+$2b(o$0MTn#Q4r*#Q"f+#l+_u#ak[E
!;Z]o(%W47(]G9N(\npF(]"pC(&8OE',:!N!##&?!##,A!Yc:]r=o/E!!r9(gBdicrX%os!!iE-r!3-*
q?Q?mp],mGRfN=$p)!NAq\]&Fp_`uHqA/f?p_;s+pD!K>i<]JkpBgs.#n$,-rWiK1dg5jXfDpL'])_aF
oGI6=pDWfEr##DLrtkJHq%WoE(&\gM',2,o',:3ToG%-:rYG#1j9kA_!XK)=!"%'Zq['b4JcOO*q\\uD
q&92N!#kVOq\o>Lq\]2HqA/oBp(['3p_E`C!Z)XZp^7!,ljE\!nHo=(#n$/.!XK)=m0NCkp'I)dJcPZJ
q\f2Jo,IBCq]#GOr>GJL!>cUN(]"p@(%;q4(&JdH(]Oj2$L\?'$4HA2lj<Op!"&B*p'LU%q$HcqPQ6R@
qAK>QqA])Ip)WuLrYtbRr#,AKq\T&D!>QCI(%i:8(&JdE(]4X=$i121$K2B^$MXr+#lb4r#keT'$L%PB
!3-%u)tb3H*Ut0N*W@)X*;^]S)Z(EM)#P3E(?uY2(B#'K(]Xp/$hOl#$N^YB$hF`)#lk=[$3(@S!.k3n
!<*u6*V1?J*rmG_+8d2X*W6uU)u^cQ)>tEO(]G6E(B5-L(B,$K(AejA(B,*O(`+"e)"%dq%.jo/$471:
$M=_u#lk7t$2b.0!.k49!<!r6*r$iM+93Sa+T*>\*rR,V*;piS)ZCWP)#>'?(AS^E(B,*H(]>3N)>jm.
%/15.$j$eE%.jqt$N182$K;?l$Mk*d!/gjP+9!AX+S[,W,6&ha+T<J\*r[2Y*<$lZ)B0S5r#,AKr"fDM
(Dli^r>#,DqA9&HrYbD<r=/c8q[E'*!XoMIoaLO%pBpp,rX.fpo*PI*kQ$27WrVr<q'#>RrZh@cr?24c
+<^S(r>ttZr>b_Sr>PVPr##/EmhYj<r##AM!#kYAl4*b'pC7!.r!`<-!X];Co*XXeoa8b?JcNsor?2.b
r?;+`!$hFdq'5_]rZh@crZV4_r?)"[rZ1nVrYtbRrYbPLpD<Q>q%ruHr>GSQnI>=)r=/W6!Y#VLp'p['
q?uj$r<iE.mgB($r<iK2VuVDLlN$i,p`oS[!%%UiqBc%bs!.Ler?;+^ru_1\r>knXr#>VRr>GJLp_WW>
r>5JMr##DNrYbbUoaU!mq[N3,rsSi8p'^U%r<`E0oEk:"q[82[MuWu*,:"KYr$:q]q'H.j-78^<r?VCf
rZ_:aruh7^r#PhYr>bbTrYkYOr"oGN)#>'I(AAXC)#Y?O)?:`D%eC24%M'*I%e^A.%/1/0$N:G*$MFer
$N:G/!.k3>!!";>-2Anb-iYRl./t[n-N5=k,lJte,5rbc+T3D]*rd8Z*;gcU)Z1KK)"/:=)#bEO)ZLcH
%e1)-&,$M2%J1))$el$b$eYN3!4i1--M]%a./GCk./t[o-3,@i,lT%g,5i\b+9EZ-+9!>]*W-oU)Zgoq
)Z1KP)"8@;)#P9N)ZLc@&,6_5&,$M/%JpP6%.FZ%$31Cs$Mt4A!.k4)!;\)B-ib^p./bRp.fCgq.fV%!
.fUss./kUn-N5:k,lJtf,5rbb+TEP^*r[2Z*<$oU)Z1KO)#kEC(]5-K)>tKQ)u1$<&-*75&GH_4%eU;1
$ig\7%.t"u$3CP@$2Fr'$iUR&!.k4I!<+DA.JYIh.f_-u.fUss./kUo-N5=k,lT"g,5iYb+T3D\*rd8Z
*<-uV)Z:QN)"nd@)#Y?P)Z:TU*"W#Zoaq*7q@NT;pCR34q$mH8%1`@HpC.$/!"Af6jU1Yg!"AW&JcM8?
q'u1jpal@qr[e("s!msrr?qUlr[%RirZ_Cer?2.`r?)%\rZ1qWru:kSrYbMKob[NCrYb\Rr>P_VoapI%
!tc(U&cN@8&,Zq3%JpS+$gA#m$ePH2!4r70/,:ak/bq$u/cRC%/,q*t.0(dq-NGLl-3#7i,6/nf,5r_c
+T3A^*r[2Z*;pfX)AsIm)>tEC(]#!K)?1WS)u^iF&bQe7&but=%hS[M!Y,\NrXS]4q[E*)m0`LorX?::
JcOO*r[dgrq(DRus"OI+r\"4&s"+1#s!n!sr[7gq-RSd<!$qLf!$_Cc![&U-rZ;"YruCtVru1hRr###A
r>>JNr>GYTrZ(hJrt>,>p(IB=rXo5D')iIE&.fHL&H!(6%fQn=$k3[>%/gS)$MFi($iLJ6%@@-I!;cco
/cm[Z0)RBu0`*U)0`Ng*0)mO'/H.1!.KV%I./bOm-3#7i,6/qd+TW]-rZ2+]*Zb5"ru:nTru(SKqA9,J
rtkYOrYb\Rru:qW!Z_jclk940q@`T9rX],A%hSXL!Y,_OrXS]4q@*<1kR.4qp^HlsPQ6R@r@e+'r%S%'
pbMe&!&4C*!\Q)Wr@@t".fLms./kUo-N5:j,Q8ke+oWSa+8m8\*W6rX)uU]T)>tEC(]5-M)>tKQ)Z^p!
q@`Q:n.Y^4r"8`9":l%T%hJXL!Y#SKq[EN6rXJi8o*b:"rsS]2q[<90kl?;8WW;fKr%\=01,Ab`r\XR0
!&FO.!AH2*/c[L&/-[UT.Ocep./kRq-71&<,QK(g+oieb+9io0*Zc=B*;piV)Z1HT(`4&+r>5DJr>5>J
rYb_Sru:tXruM(Oob6m1r"Ju@q%<N9rX\f7q@30-q[<0+mgK(&!"I$MJcNpnr%e1+q)%n)r\XX2s"aR.
"u%\`/hS_-r[\!ur[Ijpr[.XkrZhLh,5rbc+TEP`*WR5Z)uprV)ZL]P)"AF?)#tTS)u^fW*VL0>'`AdE
'Ef'_&ebrS&dAp[&.oKc&GQe8%K[(L%fQq3%/^M#$MFl,%&j5Y!9sOa1\`g)2>K012ubf92?#E51G\qa
"u%_a0.nh.r[\(#.fLms./kOt,paf^,9nE3+U0&3+!2OE*W6rZ)]BXn)?1QH(B>6L(]5-M)?(QR*!%'$
mM,L4";DOb'GU9TrY#,@q%3N9q[WK4!XoMIr=&W4kR.7r!"8`6rsaebMZ<f92)bFkr\am;2E*QQr&=F2
r\b9E2)I*F1,:R=0J>(3/hJ[S/-7=N.K1_!-RU5e,p`I7%O*&>+<VaJ*ZZ7@*?6";rYbbSq\]>LpD3WB
!#Y\Qru1kU!ZW4$r=nl=q%WlFr"],D";;I`',19Vq%<T;r"&Z7q[NK4ndG1!r<iZ6$4Hb?!t>\J%HmeD
!36,"2Z,N03;kl:3WhB&3][1!!B2q82?,K31&s$00JEDX!%n1$!\5`Mr[7su-RL/d,pWC5"sG*3+!2OF
rZ)%[*#nkqrYY\Qr>,GLrYP>FrYPMM!Z;mprYknZ*?OnhmM>d:r"T,D!>6(D&c`LE&JG'Trt+u:q[WT7
p'gj,nd>1#r=&Z7a8gelb5hE!r&OO5r]:EK4$#D_3B/uW2uYZ:1c.!Dr\4F-0E*R)/M-lO#:_/O-mp>g
-2o.q,9e<T+<M[H*X*T**?6%<rYkbR";hpl(Dlo`rtYJJrYGeV(Dmu,)B'Ro*!.-%(A\d?(A\jF(AnpG
'`/RA')iL=&H31C%Ls!Z%f-Y4%0$b7$i(//$2t;-$i(52%B'8Y!:'Ud3]T4u3r(l:4Sq8B4?NO'%llU/
2`<QO2)I*F1,1L;0`E[+/M/OQ.L%=N-mp>g-2o/!,9e9S+<VaI*ZZ7@)]Sbp!#bbQr>,MN()?far>#5G
!YuRgr>>SRrYknY*?G(oq\T2Ho+qNF()7T#qA'#Er"K&Bq%<W<q[`Z9p^R32r<r!"q[<E4r!WQ7L]EA6
rB(!@r]U9DrB:-Ds#p<E"?en14?EF$#WF\#2Dm<J1Gf"b!\c8\r[eL/.k<(u-n$Gi-7'r:,827E+<VaJ
*ZZ7@*#fe6)AsD0(`3,dobIKBr>,bW)&X>2)]Kb:*In~>

%%EndBinary
grestore
np
62.7187 14 mo
62.7187 14 li
62.7691 13.6218 62.8145 13.2869 62.8535 13 cv
62.8535 13 li
62.8149 13.2847 62.7696 13.6199 62.7183 14 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 2.4 61.92 49.12 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 5 
/M[3 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48 63 mo
39.7285 63 33 56.2715 33 48 cv
33 48.1699 33.0195 48.332 33.0254 48.5 cv
33.0468 47.8525 33.1093 47.2156 33.2105 46.5911 cv
35.3366 47.1774 37.6115 47.6431 40 47.9676 cv
40 50 li
46 50 li
46 56 li
50 56 li
50 50 li
56 50 li
56 47.9675 li
58.3888 47.6429 60.6636 47.1772 62.7891 46.5907 cv
62.8904 47.2152 62.953 47.8525 62.9746 48.5 cv
62.9805 48.332 63 48.1699 63 48 cv
63 56.2715 56.2715 63 48 63 cv
63 48 mo
63 40.0838 56.833 33.578 49.0517 33.0365 cv
49.0506 33.0364 li
49.0471 33.0362 49.0435 33.0359 49.04 33.0357 cv
49.0399 33.0357 li
49.0364 33.0354 49.0326 33.0352 49.0292 33.0349 cv
49.0281 33.0349 li
49.0241 33.0346 49.0215 33.0344 49.0176 33.0341 cv
49.0175 33.0341 li
49.014 33.0339 49.0102 33.0337 49.0067 33.0334 cv
49.0062 33.0334 49.0057 33.0334 49.0053 33.0333 cv
48.976 33.0314 48.9469 33.0295 48.9175 33.0277 cv
48.9171 33.0277 48.9168 33.0277 48.9163 33.0277 cv
48.9128 33.0275 48.9096 33.0273 48.9062 33.0271 cv
48.9057 33.027 48.9055 33.027 48.9051 33.027 cv
48.9021 33.0268 48.899 33.0266 48.896 33.0265 cv
48.8951 33.0264 48.894 33.0263 48.8931 33.0263 cv
48.8901 33.0261 48.8878 33.026 48.8848 33.0258 cv
48.8839 33.0257 48.8826 33.0257 48.8816 33.0256 cv
48.8792 33.0255 48.8763 33.0253 48.8739 33.0252 cv
48.8724 33.0251 48.871 33.025 48.8696 33.0249 cv
48.8676 33.0248 48.8646 33.0246 48.8626 33.0245 cv
48.8607 33.0244 48.8601 33.0244 48.8582 33.0243 cv
48.8557 33.0241 48.8533 33.024 48.8508 33.0238 cv
48.8494 33.0238 48.8482 33.0237 48.8468 33.0236 cv
48.8443 33.0235 48.8419 33.0233 48.8394 33.0232 cv
48.838 33.0231 48.8366 33.0231 48.8351 33.023 cv
48.8327 33.0228 48.8306 33.0227 48.8281 33.0226 cv
48.8267 33.0225 48.8248 33.0224 48.8234 33.0223 cv
48.8214 33.0222 48.8183 33.0221 48.8163 33.0219 cv
48.8149 33.0219 48.814 33.0218 48.8126 33.0217 cv
48.8101 33.0216 48.8073 33.0215 48.8049 33.0213 cv
48.8039 33.0213 48.8017 33.0212 48.8008 33.0211 cv
48.7983 33.021 48.7958 33.0209 48.7933 33.0207 cv
48.7923 33.0207 48.7909 33.0206 48.79 33.0205 cv
48.787 33.0204 48.7847 33.0203 48.7818 33.0201 cv
48.7808 33.0201 48.78 33.02 48.7791 33.02 cv
48.7691 33.0195 48.7598 33.019 48.7498 33.0185 cv
48.7493 33.0185 48.7482 33.0184 48.7477 33.0184 cv
48.7447 33.0183 48.7428 33.0182 48.7398 33.018 cv
48.7389 33.018 48.737 33.0179 48.7361 33.0178 cv
48.7336 33.0177 48.7307 33.0176 48.7282 33.0175 cv
48.7272 33.0174 48.7256 33.0173 48.7246 33.0173 cv
48.7221 33.0172 48.7198 33.0171 48.7173 33.0169 cv
48.7159 33.0169 48.7143 33.0168 48.7129 33.0167 cv
48.7109 33.0166 48.7079 33.0165 48.7059 33.0164 cv
48.7045 33.0163 48.7027 33.0163 48.7013 33.0162 cv
48.6988 33.0161 48.6969 33.016 48.6944 33.0159 cv
48.693 33.0158 48.6912 33.0157 48.6898 33.0157 cv
48.6873 33.0155 48.6854 33.0155 48.6829 33.0153 cv
48.681 33.0153 48.6796 33.0152 48.6778 33.0151 cv
48.6758 33.015 48.6739 33.0149 48.6719 33.0149 cv
48.6701 33.0148 48.6679 33.0147 48.666 33.0146 cv
48.664 33.0145 48.662 33.0144 48.66 33.0143 cv
48.6581 33.0143 48.6563 33.0142 48.6544 33.0141 cv
48.6524 33.014 48.6505 33.0139 48.6485 33.0138 cv
48.6471 33.0138 48.6445 33.0137 48.6431 33.0136 cv
48.6406 33.0135 48.639 33.0134 48.6365 33.0133 cv
48.6346 33.0132 48.6333 33.0132 48.6315 33.0131 cv
48.6295 33.013 48.6273 33.0129 48.6253 33.0129 cv
48.623 33.0128 48.6211 33.0127 48.6187 33.0126 cv
48.6167 33.0125 48.6158 33.0125 48.6138 33.0124 cv
48.611 33.0123 48.609 33.0122 48.6062 33.0121 cv
48.6052 33.012 48.6032 33.012 48.6022 33.0119 cv
48.5999 33.0118 48.5975 33.0117 48.5952 33.0117 cv
48.5937 33.0116 48.5917 33.0115 48.5902 33.0115 cv
48.5827 33.0112 48.5748 33.0109 48.5673 33.0106 cv
48.5658 33.0105 48.5634 33.0104 48.5619 33.0104 cv
48.56 33.0103 48.5574 33.0102 48.5555 33.0101 cv
48.5535 33.0101 48.5515 33.01 48.5495 33.0099 cv
48.5481 33.0099 48.5455 33.0098 48.5441 33.0097 cv
48.5421 33.0097 48.5401 33.0096 48.5381 33.0095 cv
48.5362 33.0094 48.534 33.0094 48.5322 33.0093 cv
48.5302 33.0092 48.5286 33.0092 48.5266 33.0091 cv
48.5248 33.0091 48.5225 33.009 48.5207 33.0089 cv
48.5187 33.0088 48.5168 33.0088 48.5148 33.0087 cv
48.5129 33.0086 48.5107 33.0086 48.5088 33.0085 cv
48.5073 33.0085 48.5048 33.0084 48.5033 33.0083 cv
48.5009 33.0082 48.4995 33.0082 48.4972 33.0081 cv
48.4951 33.0081 48.4938 33.008 48.4918 33.0079 cv
48.4899 33.0079 48.4868 33.0078 48.485 33.0077 cv
48.484 33.0077 48.4815 33.0076 48.4805 33.0076 cv
48.4781 33.0075 48.4757 33.0074 48.4734 33.0074 cv
48.4714 33.0073 48.4704 33.0073 48.4684 33.0072 cv
48.466 33.0071 48.4644 33.0071 48.462 33.007 cv
48.46 33.007 48.4584 33.0069 48.4564 33.0068 cv
48.4545 33.0068 48.4523 33.0067 48.4504 33.0067 cv
48.4489 33.0066 48.4465 33.0065 48.445 33.0065 cv
48.4427 33.0064 48.4398 33.0064 48.4375 33.0063 cv
48.4359 33.0062 48.4351 33.0062 48.4336 33.0062 cv
48.4312 33.0061 48.4286 33.006 48.4263 33.006 cv
48.4248 33.0059 48.4229 33.0059 48.4214 33.0058 cv
48.4191 33.0058 48.4168 33.0057 48.4145 33.0056 cv
48.413 33.0056 48.4114 33.0056 48.4099 33.0055 cv
48.407 33.0054 48.4045 33.0054 48.4017 33.0053 cv
48.4007 33.0053 48.3992 33.0052 48.3982 33.0052 cv
48.3906 33.005 48.3824 33.0048 48.3748 33.0046 cv
48.3728 33.0046 48.371 33.0045 48.369 33.0045 cv
48.3671 33.0044 48.3652 33.0044 48.3633 33.0043 cv
48.3608 33.0043 48.359 33.0042 48.3565 33.0042 cv
48.3551 33.0041 48.3531 33.0041 48.3517 33.0041 cv
48.3497 33.004 48.3472 33.004 48.3452 33.0039 cv
48.3433 33.0039 48.3417 33.0038 48.3398 33.0038 cv
48.3378 33.0037 48.3361 33.0037 48.3341 33.0037 cv
48.3322 33.0036 48.33 33.0036 48.3281 33.0035 cv
48.3261 33.0035 48.3242 33.0034 48.3222 33.0034 cv
48.3203 33.0034 48.3183 33.0033 48.3164 33.0033 cv
48.3149 33.0033 48.3121 33.0032 48.3106 33.0032 cv
48.3083 33.0031 48.307 33.0031 48.3046 33.003 cv
48.3026 33.003 48.301 33.003 48.299 33.0029 cv
48.2971 33.0029 48.2947 33.0028 48.2928 33.0028 cv
48.2908 33.0028 48.2891 33.0027 48.2871 33.0027 cv
48.2852 33.0027 48.2835 33.0026 48.2816 33.0026 cv
48.2796 33.0026 48.277 33.0025 48.275 33.0025 cv
48.2736 33.0025 48.2714 33.0024 48.27 33.0024 cv
48.2675 33.0023 48.266 33.0023 48.2634 33.0023 cv
48.262 33.0022 48.2596 33.0022 48.2582 33.0022 cv
48.2562 33.0022 48.2538 33.0021 48.2518 33.0021 cv
48.2499 33.002 48.2482 33.002 48.2463 33.002 cv
48.2443 33.002 48.2422 33.0019 48.2402 33.0019 cv
48.2383 33.0019 48.2368 33.0018 48.2349 33.0018 cv
48.2329 33.0018 48.2303 33.0017 48.2283 33.0017 cv
48.2268 33.0017 48.2247 33.0017 48.2233 33.0016 cv
48.2208 33.0016 48.2193 33.0016 48.2168 33.0015 cv
48.2145 33.0015 48.2118 33.0015 48.2094 33.0014 cv
48.2079 33.0014 48.2068 33.0014 48.2053 33.0014 cv
48.1977 33.0013 48.1896 33.0012 48.182 33.0011 cv
48.1805 33.0011 48.1783 33.001 48.1768 33.001 cv
48.1744 33.001 48.1724 33.001 48.17 33.0009 cv
48.1685 33.0009 48.1667 33.0009 48.1652 33.0009 cv
48.1628 33.0009 48.1608 33.0008 48.1584 33.0008 cv
48.1564 33.0008 48.1552 33.0008 48.1532 33.0008 cv
48.1518 33.0008 48.1514 33.0007 48.15 33.0007 cv
56.3528 33.0814 63 39.7785 63 48 cv
63 48 li
33 48 mo
33 48 li
33 39.835 39.5565 33.1735 47.6814 33.0033 cv
47.68 33.0034 47.6786 33.0034 47.6772 33.0034 cv
47.6757 33.0034 47.6735 33.0035 47.672 33.0035 cv
47.6697 33.0036 47.6675 33.0036 47.6651 33.0037 cv
47.6636 33.0037 47.6619 33.0037 47.6603 33.0038 cv
47.6585 33.0038 47.6558 33.0039 47.6539 33.0039 cv
47.6519 33.004 47.6504 33.004 47.6484 33.0041 cv
47.646 33.0041 47.6444 33.0041 47.642 33.0042 cv
47.6405 33.0042 47.6383 33.0043 47.6368 33.0043 cv
47.634 33.0044 47.6308 33.0045 47.628 33.0045 cv
47.6269 33.0046 47.6263 33.0046 47.6253 33.0046 cv
47.6173 33.0048 47.6095 33.005 47.6014 33.0052 cv
47.6008 33.0052 li
47.597 33.0053 47.5935 33.0054 47.5897 33.0055 cv
47.5892 33.0055 47.5877 33.0056 47.5872 33.0056 cv
47.5844 33.0057 47.5809 33.0058 47.5781 33.0058 cv
47.5766 33.0059 47.5763 33.0059 47.5748 33.0059 cv
47.5714 33.006 47.5692 33.0061 47.5659 33.0062 cv
47.5654 33.0062 47.5641 33.0062 47.5636 33.0063 cv
47.5603 33.0063 47.5577 33.0064 47.5544 33.0065 cv
47.5529 33.0066 47.552 33.0066 47.5505 33.0066 cv
47.5481 33.0067 47.5453 33.0068 47.543 33.0069 cv
47.5415 33.0069 47.5401 33.0069 47.5386 33.007 cv
47.5363 33.0071 47.5332 33.0072 47.5309 33.0072 cv
47.5299 33.0073 47.5282 33.0073 47.5272 33.0073 cv
47.5244 33.0074 47.5214 33.0075 47.5186 33.0076 cv
47.5176 33.0076 47.5167 33.0077 47.5157 33.0077 cv
47.5129 33.0078 47.5101 33.0079 47.5072 33.008 cv
47.5062 33.008 47.5044 33.0081 47.5034 33.0081 cv
47.501 33.0082 47.4978 33.0083 47.4955 33.0084 cv
47.494 33.0084 47.4932 33.0084 47.4917 33.0085 cv
47.4889 33.0086 47.4866 33.0087 47.4838 33.0088 cv
47.4823 33.0088 47.4813 33.0088 47.4798 33.0089 cv
47.477 33.009 47.4742 33.0091 47.4714 33.0092 cv
47.4704 33.0092 47.4693 33.0093 47.4683 33.0093 cv
47.4655 33.0094 47.4625 33.0095 47.4597 33.0096 cv
47.4587 33.0096 47.4573 33.0097 47.4563 33.0097 cv
47.453 33.0098 47.4493 33.01 47.4461 33.0101 cv
47.4456 33.0101 47.4454 33.0101 47.4449 33.0101 cv
47.4251 33.0108 47.405 33.0116 47.3853 33.0124 cv
47.3848 33.0124 47.3845 33.0125 47.384 33.0125 cv
47.3802 33.0126 47.3774 33.0127 47.3736 33.0129 cv
47.3731 33.0129 47.3716 33.013 47.3711 33.013 cv
47.3678 33.0131 47.3657 33.0132 47.3624 33.0134 cv
47.3609 33.0134 47.3601 33.0135 47.3586 33.0135 cv
47.3557 33.0136 47.3529 33.0138 47.3501 33.0139 cv
47.3491 33.0139 47.3483 33.014 47.3473 33.014 cv
47.344 33.0141 47.3418 33.0142 47.3385 33.0144 cv
47.3375 33.0144 47.3363 33.0145 47.3353 33.0145 cv
47.3325 33.0147 47.3291 33.0148 47.3263 33.0149 cv
47.3253 33.015 47.3247 33.015 47.3237 33.015 cv
47.3209 33.0152 47.318 33.0153 47.3152 33.0154 cv
47.3142 33.0155 47.3124 33.0156 47.3114 33.0156 cv
47.3086 33.0157 47.306 33.0158 47.3032 33.016 cv
47.3022 33.016 47.3008 33.0161 47.2998 33.0161 cv
47.297 33.0163 47.294 33.0164 47.2912 33.0165 cv
47.2902 33.0166 47.2891 33.0166 47.2881 33.0167 cv
47.2849 33.0168 47.2824 33.0169 47.2792 33.0171 cv
47.2787 33.0171 47.2769 33.0172 47.2764 33.0172 cv
47.2731 33.0174 47.2699 33.0175 47.2666 33.0177 cv
47.2661 33.0177 47.2653 33.0178 47.2648 33.0178 cv
47.2409 33.0189 47.2174 33.0201 47.1935 33.0214 cv
47.1926 33.0215 li
47.1889 33.0217 47.1855 33.0218 47.1817 33.022 cv
47.1812 33.0221 47.181 33.0221 47.1805 33.0221 cv
47.1772 33.0223 47.1732 33.0225 47.1699 33.0227 cv
47.1694 33.0227 47.1689 33.0227 47.1684 33.0228 cv
47.1646 33.023 47.162 33.0231 47.1583 33.0233 cv
47.1573 33.0234 47.1572 33.0234 47.1562 33.0234 cv
47.1529 33.0236 47.1498 33.0238 47.1465 33.024 cv
47.1455 33.024 47.1454 33.0241 47.1444 33.0241 cv
47.1406 33.0243 47.138 33.0245 47.1342 33.0247 cv
47.1329 33.0248 li
47.1296 33.0249 47.1261 33.0252 47.1228 33.0253 cv
47.1218 33.0254 47.1216 33.0254 47.1206 33.0255 cv
47.1173 33.0257 47.1143 33.0258 47.111 33.026 cv
47.11 33.0261 47.1099 33.0261 47.1089 33.0262 cv
47.1061 33.0263 47.1023 33.0265 47.0995 33.0267 cv
47.0985 33.0268 47.0978 33.0268 47.0968 33.0269 cv
47.0936 33.0271 47.09 33.0273 47.0867 33.0275 cv
47.0862 33.0275 47.086 33.0275 47.0855 33.0275 cv
47.0818 33.0278 47.0785 33.028 47.0747 33.0282 cv
47.0742 33.0282 47.0741 33.0282 47.0736 33.0283 cv
47.0498 33.0297 47.0262 33.0312 47.0024 33.0328 cv
47.002 33.0328 li
46.9983 33.0331 46.9942 33.0333 46.9904 33.0336 cv
46.9901 33.0336 li
46.9864 33.0339 46.9829 33.0341 46.9792 33.0344 cv
46.9787 33.0344 46.9776 33.0345 46.9771 33.0345 cv
46.9739 33.0347 46.9706 33.0349 46.9673 33.0352 cv
46.9663 33.0352 46.9663 33.0352 46.9653 33.0353 cv
46.962 33.0355 46.9591 33.0357 46.9558 33.0359 cv
46.9548 33.036 46.9544 33.036 46.9534 33.0361 cv
46.9501 33.0363 46.9469 33.0366 46.9436 33.0368 cv
46.9426 33.0369 46.9428 33.0369 46.9418 33.0369 cv
46.9385 33.0372 46.9355 33.0374 46.9323 33.0376 cv
46.9313 33.0377 46.9308 33.0377 46.9298 33.0378 cv
46.9265 33.038 46.9237 33.0382 46.9204 33.0384 cv
46.9194 33.0385 46.9189 33.0385 46.9179 33.0386 cv
46.9151 33.0388 46.9116 33.0391 46.9088 33.0393 cv
46.9083 33.0393 46.9068 33.0394 46.9063 33.0395 cv
46.9026 33.0397 46.899 33.04 46.8953 33.0403 cv
46.895 33.0403 li
46.8908 33.0406 46.8875 33.0408 46.8833 33.0411 cv
46.8832 33.0411 li
46.8594 33.0429 46.8357 33.0447 46.812 33.0466 cv
46.8116 33.0466 li
46.8078 33.0469 46.8037 33.0472 46.8 33.0475 cv
46.7999 33.0475 li
46.7962 33.0478 46.7924 33.0481 46.7886 33.0484 cv
46.7881 33.0485 46.7876 33.0485 46.7871 33.0486 cv
46.7834 33.0489 46.7805 33.0491 46.7767 33.0494 cv
46.7756 33.0495 li
46.7723 33.0498 46.7685 33.0501 46.7653 33.0503 cv
46.7643 33.0504 46.7642 33.0504 46.7632 33.0505 cv
46.76 33.0508 46.7566 33.051 46.7534 33.0513 cv
46.7524 33.0514 46.7527 33.0514 46.7517 33.0514 cv
46.7485 33.0517 46.7454 33.052 46.7421 33.0522 cv
46.7412 33.0523 46.7403 33.0524 46.7393 33.0525 cv
46.7365 33.0527 46.7333 33.053 46.7305 33.0532 cv
46.7295 33.0533 46.7289 33.0534 46.7279 33.0534 cv
46.7251 33.0537 46.7214 33.054 46.7186 33.0542 cv
46.7177 33.0543 46.7171 33.0544 46.7161 33.0544 cv
46.7124 33.0548 46.7095 33.055 46.7058 33.0553 cv
46.7053 33.0554 46.7053 33.0554 46.7048 33.0554 cv
46.7011 33.0557 46.6981 33.056 46.6944 33.0563 cv
46.6939 33.0563 46.6934 33.0564 46.6929 33.0564 cv
46.6771 33.0578 46.6617 33.0592 46.6459 33.0606 cv
46.6451 33.0606 li
46.6414 33.061 46.6379 33.0613 46.6341 33.0616 cv
46.6337 33.0617 46.6334 33.0617 46.6329 33.0618 cv
46.6297 33.062 46.626 33.0624 46.6228 33.0627 cv
46.6223 33.0627 46.6206 33.0629 46.6201 33.0629 cv
46.6168 33.0632 46.6143 33.0635 46.611 33.0638 cv
46.61 33.0639 46.6092 33.0639 46.6082 33.064 cv
46.6055 33.0643 46.6026 33.0645 46.5998 33.0648 cv
46.5984 33.0649 46.5974 33.065 46.5959 33.0652 cv
46.5936 33.0654 46.5906 33.0657 46.5883 33.0659 cv
46.5868 33.066 46.5855 33.0661 46.5841 33.0663 cv
46.5817 33.0665 46.5792 33.0667 46.5768 33.067 cv
46.5759 33.067 46.5736 33.0673 46.5726 33.0673 cv
46.5699 33.0676 46.5678 33.0678 46.565 33.0681 cv
46.5641 33.0682 46.5618 33.0684 46.5608 33.0685 cv
46.5585 33.0687 46.5565 33.0689 46.5542 33.0691 cv
46.5527 33.0693 46.5506 33.0695 46.5491 33.0696 cv
46.5468 33.0698 46.5447 33.07 46.5424 33.0703 cv
46.5409 33.0704 46.539 33.0706 46.5375 33.0707 cv
46.5352 33.0709 46.5327 33.0712 46.5304 33.0714 cv
46.529 33.0716 46.5279 33.0717 46.5265 33.0718 cv
46.5241 33.072 46.5205 33.0724 46.5182 33.0726 cv
46.5167 33.0728 46.5163 33.0728 46.5148 33.0729 cv
46.512 33.0732 46.5096 33.0735 46.5068 33.0737 cv
46.5059 33.0738 46.5042 33.074 46.5032 33.0741 cv
46.5 33.0744 46.4972 33.0747 46.494 33.075 cv
46.4935 33.0751 46.4923 33.0752 46.4918 33.0752 cv
46.4798 33.0764 46.4689 33.0775 46.4569 33.0788 cv
46.4559 33.0789 46.4553 33.0789 46.4543 33.079 cv
46.451 33.0794 46.4489 33.0796 46.4456 33.0799 cv
46.4441 33.0801 46.4431 33.0802 46.4416 33.0804 cv
46.4393 33.0806 46.4363 33.0809 46.434 33.0811 cv
46.4325 33.0813 46.4311 33.0815 46.4296 33.0816 cv
46.4273 33.0818 46.4251 33.0821 46.4227 33.0823 cv
46.4208 33.0825 46.4194 33.0827 46.4174 33.0829 cv
46.4156 33.0831 46.4135 33.0833 46.4116 33.0835 cv
46.4097 33.0837 46.4071 33.084 46.4051 33.0842 cv
46.4037 33.0843 46.4018 33.0845 46.4005 33.0847 cv
46.398 33.0849 46.3962 33.0851 46.3937 33.0854 cv
46.3924 33.0855 46.3905 33.0857 46.3892 33.0859 cv
46.3867 33.0862 46.3845 33.0864 46.3821 33.0867 cv
46.3807 33.0868 46.3792 33.087 46.3778 33.0871 cv
46.3753 33.0874 46.3735 33.0876 46.3711 33.0878 cv
46.3692 33.088 46.3681 33.0882 46.3663 33.0884 cv
46.3638 33.0886 46.3618 33.0888 46.3593 33.0891 cv
46.358 33.0893 46.3568 33.0894 46.3554 33.0896 cv
46.3529 33.0898 46.3505 33.0901 46.348 33.0904 cv
46.3466 33.0905 46.3453 33.0907 46.3439 33.0908 cv
46.3415 33.0911 46.339 33.0913 46.3366 33.0916 cv
46.3352 33.0918 46.334 33.0919 46.3326 33.0921 cv
46.3302 33.0923 46.3279 33.0926 46.3255 33.0929 cv
46.3236 33.0931 46.3228 33.0932 46.3209 33.0934 cv
46.3185 33.0936 46.3164 33.0939 46.3139 33.0942 cv
46.313 33.0943 46.3117 33.0944 46.3108 33.0945 cv
46.3079 33.0948 46.3054 33.0951 46.3025 33.0954 cv
46.3024 33.0954 li
46.2803 33.0979 46.2583 33.1005 46.2363 33.1031 cv
46.236 33.1031 li
46.2326 33.1035 46.2288 33.104 46.2254 33.1044 cv
46.2249 33.1044 li
46.221 33.1049 46.2184 33.1052 46.2145 33.1057 cv
46.2137 33.1058 li
46.2063 33.1066 46.1997 33.1074 46.1923 33.1083 cv
46.1914 33.1084 li
46.1879 33.1088 46.1846 33.1093 46.1812 33.1097 cv
46.1804 33.1098 li
46.177 33.1102 46.1735 33.1106 46.1701 33.111 cv
46.1693 33.1111 li
38.758 34.0168 33 40.3498 33 48 cv
47.6816 33.0033 mo
47.6851 33.0032 47.6887 33.0032 47.6922 33.0031 cv
47.6908 33.0031 47.6903 33.0031 47.6889 33.0032 cv
47.6874 33.0032 47.6853 33.0032 47.6838 33.0033 cv
47.6828 33.0033 47.6826 33.0033 47.6816 33.0033 cv
47.6933 33.0031 mo
47.6968 33.003 47.6997 33.003 47.7032 33.0029 cv
47.7022 33.0029 47.7016 33.0029 47.7007 33.0029 cv
47.6992 33.003 47.697 33.003 47.6955 33.003 cv
47.6946 33.0031 47.6943 33.0031 47.6933 33.0031 cv
47.7052 33.0028 mo
47.7083 33.0028 47.7114 33.0027 47.7145 33.0027 cv
47.714 33.0027 47.713 33.0027 47.7125 33.0027 cv
47.7105 33.0027 47.7094 33.0028 47.7073 33.0028 cv
47.7069 33.0028 47.7057 33.0028 47.7052 33.0028 cv
47.7168 33.0026 mo
47.7198 33.0026 47.7231 33.0025 47.7261 33.0025 cv
47.7257 33.0025 47.7252 33.0025 47.7247 33.0025 cv
47.7227 33.0025 47.7206 33.0026 47.7186 33.0026 cv
47.7181 33.0026 47.7172 33.0026 47.7168 33.0026 cv
47.7281 33.0024 mo
47.7311 33.0024 47.7346 33.0023 47.7376 33.0023 cv
47.7371 33.0023 47.7368 33.0023 47.7363 33.0023 cv
47.7338 33.0023 47.7327 33.0023 47.7302 33.0024 cv
47.7297 33.0024 47.7285 33.0024 47.7281 33.0024 cv
47.7396 33.0022 mo
47.7426 33.0022 47.7461 33.0021 47.7491 33.0021 cv
47.7487 33.0021 47.7485 33.0021 47.748 33.0021 cv
47.746 33.0021 47.744 33.0021 47.742 33.0022 cv
47.741 33.0022 47.7405 33.0022 47.7396 33.0022 cv
47.7511 33.002 mo
47.7546 33.002 47.757 33.0019 47.7605 33.0019 cv
47.76 33.0019 47.7601 33.0019 47.7596 33.0019 cv
47.7576 33.0019 47.756 33.0019 47.7539 33.002 cv
47.753 33.002 47.7521 33.002 47.7511 33.002 cv
47.7626 33.0018 mo
47.7837 33.0015 47.8051 33.0012 47.8263 33.001 cv
47.8248 33.001 47.8242 33.001 47.8228 33.001 cv
47.8213 33.001 47.8195 33.0011 47.818 33.0011 cv
47.8104 33.0012 47.8022 33.0013 47.7946 33.0014 cv
47.7936 33.0014 47.7922 33.0014 47.7912 33.0014 cv
47.7889 33.0015 47.7854 33.0015 47.783 33.0015 cv
47.781 33.0016 47.7792 33.0016 47.7772 33.0016 cv
47.7753 33.0017 47.7735 33.0017 47.7716 33.0017 cv
47.7696 33.0017 47.7673 33.0018 47.7653 33.0018 cv
47.7644 33.0018 47.7636 33.0018 47.7626 33.0018 cv
47.8296 33.0009 mo
47.8321 33.0009 47.8344 33.0009 47.8369 33.0009 cv
47.8364 33.0009 47.8349 33.0009 47.8345 33.0009 cv
47.8329 33.0009 47.8315 33.0009 47.83 33.0009 cv
47.8295 33.0009 47.8301 33.0009 47.8296 33.0009 cv
47.8411 33.0008 mo
47.8432 33.0008 47.8459 33.0008 47.8479 33.0008 cv
47.8475 33.0008 47.8471 33.0008 47.8466 33.0008 cv
47.8446 33.0008 47.8436 33.0008 47.8415 33.0008 cv
47.8411 33.0008 47.8416 33.0008 47.8411 33.0008 cv
48.1474 33.0007 mo
48.1469 33.0007 48.1468 33.0007 48.1463 33.0007 cv
48.1448 33.0007 48.1432 33.0007 48.1417 33.0007 cv
48.1407 33.0006 48.1397 33.0006 48.1388 33.0006 cv
48.1413 33.0006 48.1449 33.0007 48.1474 33.0007 cv
47.8532 33.0007 mo
47.8552 33.0007 47.8575 33.0007 47.8595 33.0006 cv
47.859 33.0006 47.8586 33.0006 47.8582 33.0007 cv
47.8567 33.0007 47.8551 33.0007 47.8536 33.0007 cv
47.8532 33.0007 li
48.1359 33.0006 mo
48.1349 33.0006 li
48.1334 33.0006 48.131 33.0006 48.1295 33.0005 cv
48.129 33.0005 48.1281 33.0005 48.1276 33.0005 cv
48.1307 33.0006 48.1328 33.0006 48.1359 33.0006 cv
47.8646 33.0006 mo
47.8666 33.0006 47.8693 33.0006 47.8713 33.0005 cv
47.8708 33.0005 47.8709 33.0005 47.8704 33.0005 cv
47.8689 33.0006 47.8666 33.0006 47.8651 33.0006 cv
47.8646 33.0006 li
48.1239 33.0005 mo
48.1234 33.0005 48.1234 33.0005 48.1229 33.0005 cv
48.1214 33.0005 48.1193 33.0005 48.1178 33.0005 cv
48.1173 33.0004 48.1168 33.0004 48.1164 33.0004 cv
48.1189 33.0005 48.1214 33.0005 48.1239 33.0005 cv
47.8766 33.0005 mo
47.8791 33.0005 47.8803 33.0005 47.8829 33.0004 cv
47.8824 33.0004 47.8826 33.0004 47.8821 33.0005 cv
47.8806 33.0005 47.8786 33.0005 47.8771 33.0005 cv
47.8766 33.0005 47.877 33.0005 47.8766 33.0005 cv
48.1122 33.0004 mo
48.1117 33.0004 48.1119 33.0004 48.1114 33.0004 cv
48.1094 33.0004 48.1079 33.0004 48.1059 33.0004 cv
48.1051 33.0004 li
48.1076 33.0004 48.1097 33.0004 48.1122 33.0004 cv
47.8883 33.0004 mo
47.8903 33.0004 47.8923 33.0004 47.8943 33.0004 cv
47.894 33.0004 li
47.892 33.0004 47.8906 33.0004 47.8886 33.0004 cv
47.8883 33.0004 li
48.1 33.0003 mo
48.0993 33.0003 li
48.0973 33.0003 48.0962 33.0003 48.0942 33.0003 cv
48.0936 33.0003 li
48.0956 33.0003 48.098 33.0003 48.1 33.0003 cv
47.9004 33.0003 mo
47.9024 33.0003 47.904 33.0003 47.906 33.0003 cv
47.9057 33.0003 li
47.9037 33.0003 47.9027 33.0003 47.9007 33.0003 cv
47.9004 33.0003 li
48.0885 33.0003 mo
48.088 33.0002 li
48.086 33.0002 48.0842 33.0002 48.0822 33.0002 cv
48.082 33.0002 li
48.084 33.0002 48.0864 33.0002 48.0885 33.0003 cv
47.9119 33.0002 mo
47.9139 33.0002 47.9157 33.0002 47.9178 33.0002 cv
47.9178 33.0002 li
47.9157 33.0002 47.914 33.0002 47.912 33.0002 cv
47.9119 33.0002 li
48.0762 33.0002 mo
48.0758 33.0002 48.0764 33.0002 48.0759 33.0002 cv
48.0744 33.0002 48.072 33.0002 48.0705 33.0002 cv
48.07 33.0002 48.0708 33.0002 48.0703 33.0002 cv
48.0724 33.0002 48.0742 33.0002 48.0762 33.0002 cv
48.0646 33.0001 mo
48.0643 33.0001 li
48.0623 33.0001 48.0608 33.0001 48.0588 33.0001 cv
48.0587 33.0001 li
48.0607 33.0001 48.0626 33.0001 48.0646 33.0001 cv
48.0524 33.0001 mo
48.0522 33.0001 li
48.0502 33.0001 48.049 33.0001 48.047 33.0001 cv
48.0469 33.0001 li
48.0489 33.0001 48.0504 33.0001 48.0524 33.0001 cv
48.041 33 mo
48.0408 33 li
48.0388 33 48.0372 33 48.0352 33 cv
48.0351 33 li
48.0372 33 48.039 33 48.041 33 cv
48.0282 33 mo
48.0281 33 li
48.0266 33 48.0251 33 48.0236 33 cv
48.0236 33 li
48.0251 33 48.0267 33 48.0282 33 cv
48.016 33 mo
48.0159 33 li
48.0144 33 48.0132 33 48.0117 33 cv
48.0117 33 li
48.0132 33 48.0145 33 48.016 33 cv
gsave
[12.6892 0 0 12.6892 47.9058 63.5 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~zzzzzzzz!<E6(!sAc2"pP;<#RLhF$OdFQ%Ls![&.oKe',)&p'c%T%(`4,/)B0Y9*?H7D+<VgO+sS<X,p
alc-R^Dm.P*,&/M8\00JP:;1G^jF2)[?O3&ioZ3]fGd4[)%o5<h@t5X7S#5sdn*6UO4/6q'O67Ros=7n
?0B8P2TJ92&#R9hnGZ:Jakb;,U:j;cH^r<E<.%='/R-=^#!5>?b?;?!UcC?XI2K@:<VTA7T7_AnG[gBP
;*oC2.O#D/F0.Df9T6EH-#?FEDYJG'8(RG^+L[H[C-fI=6Qn~>
<~Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR?['[6L[^WfX]"5Md]Y;.q^qmk(_o0O5`lH-Ab0%oO
bg"GZd*U1gdaQ^rf%8O+g"P39gtgfChr*JQioB+\jlbgjkiqBum-X3.n*fc:o(2JFp%A(Sq"ad_qu-Km
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /4 /Gradient get_res exec grestore
np
48 32 mo
39.1602 32 32 39.168 32 48 cv
32 56.8359 39.1602 64 48 64 cv
56.832 64 64 56.8359 64 48 cv
64 39.168 56.832 32 48 32 cv
48 33 mo
56.2715 33 63 39.7285 63 48 cv
63 56.2715 56.2715 63 48 63 cv
39.7285 63 33 56.2715 33 48 cv
33 39.7285 39.7285 33 48 33 cv
0 .5 1 0 cmyk
f
56 46 mo
50 46 li
50 40 li
46 40 li
46 46 li
40 46 li
40 50 li
46 50 li
46 56 li
50 56 li
50 50 li
56 50 li
56 46 li
0 0 0 1 cmyk
f
40 47.9676 mo
37.6115 47.6431 35.3366 47.1774 33.2105 46.5911 cv
34.365 39.4639 40.5494 34 48 34 cv
55.4489 34 61.633 39.4635 62.7891 46.5907 cv
60.6636 47.1772 58.3888 47.6429 56 47.9675 cv
56 46 li
50 46 li
50 40 li
46 40 li
46 46 li
40 46 li
40 47.9676 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[30.72 0 0 15.36 32.64 15.52 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 64 
/H 32 
/M[64 0 0 -32 0 32 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 64 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 64 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 64 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 64 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
_#V=j!#i[2_Z7FO`#Sar_)]I7]`?%nr#W[;`rN^Oa<CC'_*Z6D\H'bsp`mUEb5f!ObU)s/_+MrP[/eK"
oI%IMcN(9OcmeN7_,J_]YlN3&n12=Vdf?QOe1L)?_->FiXT6p*ln?1^f)ViOfJ;_I_.;4!W;tX/kVU+h
gAn,Ogc":Q_/.p-V#]@3j>atphZ0DOi&]jY_0+]:i;g[o_E7f\_0Nou^Au29r]\/H`;mRO`^'Ge_1BW,
])]o>qEr)RaT/jOb!l(o_2?D9[fFWBp.)rZblG-Oc:RY"_3<1FZN/?Fnk6fcd/^EOdS94*_4/mRY5m'J
mSCZkeGu]Oel(j4_5,Z_WrUdOl;YTuf`7uOg/dE<_5uAkVZ>LSk#fI(h#O8OhHJuD_6r/#UB'4Wi`s=1
i;hg:J,~>

%%EndBinary
grestore
np
48 48.5 mo
45.2318 48.5 42.5512 48.3143 40 47.9676 cv
40 46 li
46 46 li
46 40 li
50 40 li
50 46 li
56 46 li
56 47.9675 li
53.4485 48.3143 50.7675 48.5 48 48.5 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~!!!$$!sAc3#7(VC$OdIS%hK<c',2/s(Dn#.)]Tk>+!;^N,:"Q^-R^Dn/1iJ-0JP==1c70M3&s#]4?Ykm
5<qM$6UX@47n?3D92&&T:Jand;cHat='/U/>?kH??XR;O@q9._B4u!oCM[j*DfB]:F*)PJGBeCZH[L6j
It3*%K7nr5LPUeEMi<XUO-#KePE_>uQ^F20S"-%@T:hmPUSO``Vl6SpX/rG+YHY:;Za@-K\%&u[]=bhk
^;%J"_Sa=2`lH0Bb0/#RcHjkbdaZguf@\d1gYCWAhr*JQj5f=akNM0qlg4$,n*ol<oCV_Lp\=R\qu$El
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
np
46.1693 33.1111 mo
46.1701 33.111 li
46.1693 33.1111 li
46.1804 33.1098 mo
46.1812 33.1097 li
46.1807 33.1097 46.1809 33.1097 46.1804 33.1098 cv
46.1914 33.1084 mo
46.1923 33.1083 li
46.1914 33.1084 li
46.2137 33.1058 mo
46.2145 33.1057 li
46.2137 33.1058 li
46.2249 33.1044 mo
46.2254 33.1044 li
46.2249 33.1044 li
46.236 33.1031 mo
46.2363 33.1031 li
46.236 33.1031 li
46.3024 33.0954 mo
46.3025 33.0954 li
46.3024 33.0954 li
46.3108 33.0945 mo
46.3117 33.0944 46.313 33.0943 46.3139 33.0942 cv
46.3129 33.0943 46.3118 33.0944 46.3108 33.0945 cv
46.3209 33.0934 mo
46.3228 33.0932 46.3236 33.0931 46.3255 33.0929 cv
46.324 33.093 46.3224 33.0932 46.3209 33.0934 cv
46.3326 33.0921 mo
46.334 33.0919 46.3352 33.0918 46.3366 33.0916 cv
46.3351 33.0918 46.3341 33.0919 46.3326 33.0921 cv
46.3439 33.0908 mo
46.3453 33.0907 46.3466 33.0905 46.348 33.0904 cv
46.347 33.0905 46.3449 33.0907 46.3439 33.0908 cv
46.3554 33.0896 mo
46.3568 33.0894 46.358 33.0893 46.3593 33.0891 cv
46.3579 33.0893 46.3568 33.0894 46.3554 33.0896 cv
46.3663 33.0884 mo
46.3681 33.0882 46.3692 33.088 46.3711 33.0878 cv
46.3696 33.088 46.3677 33.0882 46.3663 33.0884 cv
46.3778 33.0871 mo
46.3792 33.087 46.3807 33.0868 46.3821 33.0867 cv
46.3811 33.0868 46.3788 33.087 46.3778 33.0871 cv
46.3892 33.0859 mo
46.3905 33.0857 46.3924 33.0855 46.3937 33.0854 cv
46.3923 33.0856 46.3906 33.0857 46.3892 33.0859 cv
46.4005 33.0847 mo
46.4018 33.0845 46.4037 33.0843 46.4051 33.0842 cv
46.4036 33.0843 46.4019 33.0845 46.4005 33.0847 cv
46.4116 33.0835 mo
46.4135 33.0833 46.4156 33.0831 46.4174 33.0829 cv
46.4155 33.0831 46.4136 33.0833 46.4116 33.0835 cv
46.4227 33.0823 mo
46.4251 33.0821 46.4273 33.0818 46.4296 33.0816 cv
46.4271 33.0819 46.4252 33.0821 46.4227 33.0823 cv
46.434 33.0811 mo
46.4363 33.0809 46.4393 33.0806 46.4416 33.0804 cv
46.4391 33.0806 46.4365 33.0809 46.434 33.0811 cv
46.4456 33.0799 mo
46.4489 33.0796 46.451 33.0794 46.4543 33.079 cv
46.4518 33.0793 46.4481 33.0797 46.4456 33.0799 cv
46.4569 33.0788 mo
46.4689 33.0775 46.4798 33.0764 46.4918 33.0752 cv
46.48 33.0764 46.4687 33.0776 46.4569 33.0788 cv
46.494 33.075 mo
46.4972 33.0747 46.5 33.0744 46.5032 33.0741 cv
46.4998 33.0744 46.4974 33.0747 46.494 33.075 cv
46.5068 33.0737 mo
46.5096 33.0735 46.512 33.0732 46.5148 33.0729 cv
46.5124 33.0732 46.5093 33.0735 46.5068 33.0737 cv
46.5182 33.0726 mo
46.5205 33.0724 46.5241 33.072 46.5265 33.0718 cv
46.524 33.072 46.5206 33.0724 46.5182 33.0726 cv
46.5304 33.0714 mo
46.5327 33.0712 46.5352 33.0709 46.5375 33.0707 cv
46.5351 33.071 46.5329 33.0712 46.5304 33.0714 cv
46.5424 33.0703 mo
46.5447 33.07 46.5468 33.0698 46.5491 33.0696 cv
46.5467 33.0698 46.5448 33.07 46.5424 33.0703 cv
46.5542 33.0691 mo
46.5565 33.0689 46.5585 33.0687 46.5608 33.0685 cv
46.5583 33.0687 46.5566 33.0689 46.5542 33.0691 cv
46.565 33.0681 mo
46.5678 33.0678 46.5699 33.0676 46.5726 33.0673 cv
46.5697 33.0676 46.568 33.0678 46.565 33.0681 cv
46.5768 33.067 mo
46.5792 33.0667 46.5817 33.0665 46.5841 33.0663 cv
46.5816 33.0665 46.5793 33.0667 46.5768 33.067 cv
46.5883 33.0659 mo
46.5906 33.0657 46.5936 33.0654 46.5959 33.0652 cv
46.5935 33.0654 46.5907 33.0656 46.5883 33.0659 cv
46.5998 33.0648 mo
46.6026 33.0645 46.6055 33.0643 46.6082 33.064 cv
46.6053 33.0643 46.6028 33.0645 46.5998 33.0648 cv
46.611 33.0638 mo
46.6143 33.0635 46.6168 33.0632 46.6201 33.0629 cv
46.6171 33.0632 46.614 33.0635 46.611 33.0638 cv
46.6228 33.0627 mo
46.626 33.0624 46.6297 33.062 46.6329 33.0618 cv
46.6295 33.0621 46.6262 33.0624 46.6228 33.0627 cv
46.6341 33.0616 mo
46.6379 33.0613 46.6414 33.061 46.6451 33.0606 cv
46.6412 33.061 46.6381 33.0613 46.6341 33.0616 cv
46.6459 33.0606 mo
46.6617 33.0592 46.6771 33.0578 46.6929 33.0564 cv
46.6771 33.0578 46.6617 33.0592 46.6459 33.0606 cv
46.6944 33.0563 mo
46.6981 33.056 46.7011 33.0557 46.7048 33.0554 cv
46.7014 33.0557 46.6978 33.056 46.6944 33.0563 cv
46.7058 33.0553 mo
46.7095 33.055 46.7124 33.0548 46.7161 33.0544 cv
46.7131 33.0547 46.7088 33.0551 46.7058 33.0553 cv
46.7186 33.0542 mo
46.7214 33.054 46.7251 33.0537 46.7279 33.0534 cv
46.7249 33.0537 46.7216 33.054 46.7186 33.0542 cv
46.7305 33.0532 mo
46.7333 33.053 46.7365 33.0527 46.7393 33.0525 cv
46.7364 33.0527 46.7335 33.053 46.7305 33.0532 cv
46.7421 33.0522 mo
46.7454 33.052 46.7485 33.0517 46.7517 33.0514 cv
46.7488 33.0517 46.7451 33.052 46.7421 33.0522 cv
46.7534 33.0513 mo
46.7566 33.051 46.76 33.0508 46.7632 33.0505 cv
46.7603 33.0507 46.7564 33.0511 46.7534 33.0513 cv
46.7653 33.0503 mo
46.7685 33.0501 46.7723 33.0498 46.7756 33.0495 cv
46.7721 33.0498 46.7687 33.05 46.7653 33.0503 cv
46.7767 33.0494 mo
46.7805 33.0491 46.7834 33.0489 46.7871 33.0486 cv
46.7836 33.0488 46.7802 33.0491 46.7767 33.0494 cv
46.7886 33.0484 mo
46.7924 33.0481 46.7962 33.0478 46.7999 33.0475 cv
46.7959 33.0478 46.7926 33.0481 46.7886 33.0484 cv
46.8 33.0475 mo
46.8037 33.0472 46.8078 33.0469 46.8116 33.0466 cv
46.8076 33.0469 46.804 33.0472 46.8 33.0475 cv
46.812 33.0466 mo
46.8357 33.0447 46.8594 33.0429 46.8832 33.0411 cv
46.8594 33.0429 46.8357 33.0447 46.812 33.0466 cv
46.8833 33.0411 mo
46.8875 33.0408 46.8908 33.0406 46.895 33.0403 cv
46.8911 33.0406 46.8873 33.0408 46.8833 33.0411 cv
46.8953 33.0403 mo
46.899 33.04 46.9026 33.0397 46.9063 33.0395 cv
46.9023 33.0397 46.8993 33.04 46.8953 33.0403 cv
46.9088 33.0393 mo
46.9116 33.0391 46.9151 33.0388 46.9179 33.0386 cv
46.9149 33.0388 46.9117 33.0391 46.9088 33.0393 cv
46.9204 33.0384 mo
46.9237 33.0382 46.9265 33.038 46.9298 33.0378 cv
46.9268 33.038 46.9234 33.0382 46.9204 33.0384 cv
46.9323 33.0376 mo
46.9355 33.0374 46.9385 33.0372 46.9418 33.0369 cv
46.9388 33.0371 46.9352 33.0374 46.9323 33.0376 cv
46.9436 33.0368 mo
46.9469 33.0366 46.9501 33.0363 46.9534 33.0361 cv
46.9504 33.0363 46.9466 33.0366 46.9436 33.0368 cv
49.0517 33.0365 mo
49.0506 33.0364 li
49.0517 33.0365 li
46.9558 33.0359 mo
46.9591 33.0357 46.962 33.0355 46.9653 33.0353 cv
46.9623 33.0355 46.9588 33.0357 46.9558 33.0359 cv
49.04 33.0357 mo
49.0395 33.0356 49.0404 33.0357 49.0399 33.0357 cv
49.04 33.0357 li
46.9673 33.0352 mo
46.9706 33.0349 46.9739 33.0347 46.9771 33.0345 cv
46.9742 33.0347 46.9703 33.035 46.9673 33.0352 cv
49.0292 33.0349 mo
49.0281 33.0349 li
49.0292 33.0349 li
46.9792 33.0344 mo
46.9829 33.0341 46.9864 33.0339 46.9901 33.0336 cv
46.9861 33.0339 46.9831 33.0341 46.9792 33.0344 cv
49.0176 33.0341 mo
49.0175 33.0341 li
49.0176 33.0341 li
46.9904 33.0336 mo
46.9942 33.0333 46.9983 33.0331 47.002 33.0328 cv
46.998 33.0331 46.9944 33.0333 46.9904 33.0336 cv
49.0067 33.0334 mo
49.0062 33.0334 49.0058 33.0334 49.0053 33.0333 cv
49.0057 33.0334 49.0062 33.0334 49.0067 33.0334 cv
47.0024 33.0328 mo
47.0262 33.0312 47.0498 33.0297 47.0736 33.0283 cv
47.0497 33.0297 47.0262 33.0312 47.0024 33.0328 cv
47.0747 33.0282 mo
47.0785 33.028 47.0818 33.0278 47.0855 33.0275 cv
47.082 33.0278 47.0782 33.028 47.0747 33.0282 cv
48.9175 33.0277 mo
48.9163 33.0277 li
48.9168 33.0277 48.9171 33.0277 48.9175 33.0277 cv
47.0867 33.0275 mo
47.09 33.0273 47.0936 33.0271 47.0968 33.0269 cv
47.0939 33.027 47.0897 33.0273 47.0867 33.0275 cv
48.9062 33.0271 mo
48.9057 33.027 48.9056 33.027 48.9051 33.027 cv
48.9055 33.027 48.9057 33.027 48.9062 33.0271 cv
47.0995 33.0267 mo
47.1023 33.0265 47.1061 33.0263 47.1089 33.0262 cv
47.1059 33.0263 47.1025 33.0265 47.0995 33.0267 cv
48.896 33.0265 mo
48.895 33.0264 48.8941 33.0263 48.8931 33.0263 cv
48.894 33.0263 48.8951 33.0264 48.896 33.0265 cv
47.111 33.026 mo
47.1143 33.0258 47.1173 33.0257 47.1206 33.0255 cv
47.1176 33.0256 47.114 33.0259 47.111 33.026 cv
48.8848 33.0258 mo
48.8838 33.0257 48.8826 33.0257 48.8816 33.0256 cv
48.8826 33.0257 48.8839 33.0257 48.8848 33.0258 cv
47.1228 33.0253 mo
47.1261 33.0252 47.1296 33.0249 47.1329 33.0248 cv
47.1294 33.025 47.1263 33.0251 47.1228 33.0253 cv
48.8739 33.0252 mo
48.8724 33.0251 48.8711 33.025 48.8696 33.0249 cv
48.871 33.025 48.8724 33.0251 48.8739 33.0252 cv
47.1342 33.0247 mo
47.138 33.0245 47.1406 33.0243 47.1444 33.0241 cv
47.1409 33.0243 47.1377 33.0245 47.1342 33.0247 cv
48.8626 33.0245 mo
48.8611 33.0244 48.8597 33.0243 48.8582 33.0243 cv
48.8601 33.0244 48.8607 33.0244 48.8626 33.0245 cv
47.1465 33.024 mo
47.1498 33.0238 47.1529 33.0236 47.1562 33.0234 cv
47.1532 33.0236 47.1495 33.0238 47.1465 33.024 cv
48.8508 33.0238 mo
48.8494 33.0238 48.8483 33.0237 48.8468 33.0236 cv
48.8482 33.0237 48.8494 33.0238 48.8508 33.0238 cv
47.1583 33.0233 mo
47.162 33.0231 47.1646 33.023 47.1684 33.0228 cv
47.1654 33.0229 47.1613 33.0232 47.1583 33.0233 cv
48.8394 33.0232 mo
48.8379 33.0231 48.8366 33.0231 48.8351 33.023 cv
48.8366 33.0231 48.838 33.0231 48.8394 33.0232 cv
47.1699 33.0227 mo
47.1732 33.0225 47.1772 33.0223 47.1805 33.0221 cv
47.177 33.0223 47.1734 33.0225 47.1699 33.0227 cv
48.8281 33.0226 mo
48.8266 33.0225 48.8249 33.0224 48.8234 33.0223 cv
48.8248 33.0224 48.8267 33.0225 48.8281 33.0226 cv
47.1817 33.022 mo
47.1855 33.0218 47.1889 33.0217 47.1926 33.0215 cv
47.1887 33.0217 47.1857 33.0218 47.1817 33.022 cv
48.8163 33.0219 mo
48.8148 33.0219 48.8141 33.0218 48.8126 33.0217 cv
48.814 33.0218 48.8149 33.0219 48.8163 33.0219 cv
47.1935 33.0214 mo
47.2174 33.0201 47.2409 33.0189 47.2648 33.0178 cv
47.2409 33.0189 47.2174 33.0201 47.1935 33.0214 cv
48.8049 33.0213 mo
48.8034 33.0213 48.8022 33.0212 48.8008 33.0211 cv
48.8017 33.0212 48.8039 33.0213 48.8049 33.0213 cv
48.7933 33.0207 mo
48.7923 33.0207 48.791 33.0206 48.79 33.0205 cv
48.7909 33.0206 48.7923 33.0207 48.7933 33.0207 cv
48.7818 33.0201 mo
48.7813 33.0201 48.7796 33.02 48.7791 33.02 cv
48.78 33.02 48.7808 33.0201 48.7818 33.0201 cv
48.7498 33.0185 mo
48.7493 33.0185 48.7482 33.0184 48.7477 33.0184 cv
48.7482 33.0184 48.7493 33.0185 48.7498 33.0185 cv
48.7398 33.018 mo
48.7388 33.018 48.7371 33.0179 48.7361 33.0178 cv
48.737 33.0179 48.7389 33.018 48.7398 33.018 cv
47.2666 33.0177 mo
47.2699 33.0175 47.2731 33.0174 47.2764 33.0172 cv
47.2729 33.0174 47.2701 33.0175 47.2666 33.0177 cv
48.7282 33.0175 mo
48.7267 33.0174 48.7261 33.0174 48.7246 33.0173 cv
48.7256 33.0173 48.7272 33.0174 48.7282 33.0175 cv
47.2792 33.0171 mo
47.2824 33.0169 47.2849 33.0168 47.2881 33.0167 cv
47.2851 33.0168 47.2822 33.017 47.2792 33.0171 cv
48.7173 33.0169 mo
48.7158 33.0169 48.7144 33.0168 48.7129 33.0167 cv
48.7143 33.0168 48.7159 33.0169 48.7173 33.0169 cv
47.2912 33.0165 mo
47.294 33.0164 47.297 33.0163 47.2998 33.0161 cv
47.2968 33.0163 47.2942 33.0164 47.2912 33.0165 cv
48.7059 33.0164 mo
48.7044 33.0163 48.7028 33.0163 48.7013 33.0162 cv
48.7027 33.0163 48.7045 33.0163 48.7059 33.0164 cv
47.3032 33.016 mo
47.306 33.0158 47.3086 33.0157 47.3114 33.0156 cv
47.3084 33.0157 47.3062 33.0158 47.3032 33.016 cv
48.6944 33.0159 mo
48.6929 33.0158 48.6913 33.0157 48.6898 33.0157 cv
48.6912 33.0157 48.693 33.0158 48.6944 33.0159 cv
47.3152 33.0154 mo
47.318 33.0153 47.3209 33.0152 47.3237 33.015 cv
47.3207 33.0152 47.3182 33.0153 47.3152 33.0154 cv
48.6829 33.0153 mo
48.6814 33.0153 48.6793 33.0152 48.6778 33.0151 cv
48.6796 33.0152 48.681 33.0153 48.6829 33.0153 cv
47.3263 33.0149 mo
47.3291 33.0148 47.3325 33.0147 47.3353 33.0145 cv
47.3323 33.0147 47.3293 33.0148 47.3263 33.0149 cv
48.6719 33.0149 mo
48.6699 33.0148 48.668 33.0147 48.666 33.0146 cv
48.6679 33.0147 48.6701 33.0148 48.6719 33.0149 cv
47.3385 33.0144 mo
47.3418 33.0142 47.344 33.0141 47.3473 33.014 cv
47.3443 33.0141 47.3415 33.0143 47.3385 33.0144 cv
48.66 33.0143 mo
48.658 33.0142 48.6564 33.0142 48.6544 33.0141 cv
48.6563 33.0142 48.6581 33.0143 48.66 33.0143 cv
47.3501 33.0139 mo
47.3529 33.0138 47.3557 33.0136 47.3586 33.0135 cv
47.3561 33.0136 47.3526 33.0138 47.3501 33.0139 cv
48.6485 33.0138 mo
48.647 33.0138 48.6446 33.0137 48.6431 33.0136 cv
48.6445 33.0137 48.6471 33.0138 48.6485 33.0138 cv
47.3624 33.0134 mo
47.3657 33.0132 47.3678 33.0131 47.3711 33.013 cv
47.3681 33.0131 47.3654 33.0132 47.3624 33.0134 cv
48.6365 33.0133 mo
48.635 33.0133 48.633 33.0132 48.6315 33.0131 cv
48.6333 33.0132 48.6346 33.0132 48.6365 33.0133 cv
47.3736 33.0129 mo
47.3774 33.0127 47.3802 33.0126 47.384 33.0125 cv
47.3805 33.0126 47.3771 33.0128 47.3736 33.0129 cv
48.6253 33.0129 mo
48.6233 33.0128 48.6207 33.0127 48.6187 33.0126 cv
48.6211 33.0127 48.623 33.0128 48.6253 33.0129 cv
47.3853 33.0124 mo
47.405 33.0116 47.4251 33.0108 47.4449 33.0101 cv
47.4249 33.0109 47.4053 33.0116 47.3853 33.0124 cv
48.6138 33.0124 mo
48.6113 33.0123 48.6087 33.0122 48.6062 33.0121 cv
48.609 33.0122 48.611 33.0123 48.6138 33.0124 cv
48.6022 33.0119 mo
48.5997 33.0118 48.5977 33.0117 48.5952 33.0117 cv
48.5975 33.0117 48.5999 33.0118 48.6022 33.0119 cv
48.5902 33.0115 mo
48.5822 33.0111 48.5753 33.0109 48.5673 33.0106 cv
48.5748 33.0109 48.5827 33.0112 48.5902 33.0115 cv
48.5619 33.0104 mo
48.5594 33.0103 48.558 33.0102 48.5555 33.0101 cv
48.5574 33.0102 48.56 33.0103 48.5619 33.0104 cv
47.4461 33.0101 mo
47.4493 33.01 47.453 33.0098 47.4563 33.0097 cv
47.4528 33.0098 47.4496 33.01 47.4461 33.0101 cv
48.5495 33.0099 mo
48.548 33.0099 48.5456 33.0098 48.5441 33.0097 cv
48.5455 33.0098 48.5481 33.0099 48.5495 33.0099 cv
47.4597 33.0096 mo
47.4625 33.0095 47.4655 33.0094 47.4683 33.0093 cv
47.4653 33.0094 47.4627 33.0095 47.4597 33.0096 cv
48.5381 33.0095 mo
48.5361 33.0094 48.5342 33.0094 48.5322 33.0093 cv
48.534 33.0094 48.5362 33.0094 48.5381 33.0095 cv
47.4714 33.0092 mo
47.4742 33.0091 47.477 33.009 47.4798 33.0089 cv
47.4773 33.009 47.4739 33.0091 47.4714 33.0092 cv
48.5266 33.0091 mo
48.5246 33.009 48.5227 33.009 48.5207 33.0089 cv
48.5225 33.009 48.5248 33.0091 48.5266 33.0091 cv
47.4838 33.0088 mo
47.4866 33.0087 47.4889 33.0086 47.4917 33.0085 cv
47.4892 33.0086 47.4863 33.0087 47.4838 33.0088 cv
48.5148 33.0087 mo
48.5128 33.0086 48.5108 33.0086 48.5088 33.0085 cv
48.5107 33.0086 48.5129 33.0086 48.5148 33.0087 cv
47.4955 33.0084 mo
47.4978 33.0083 47.501 33.0082 47.5034 33.0081 cv
47.5009 33.0082 47.498 33.0083 47.4955 33.0084 cv
48.5033 33.0083 mo
48.5013 33.0083 48.4992 33.0082 48.4972 33.0081 cv
48.4995 33.0082 48.5009 33.0082 48.5033 33.0083 cv
47.5072 33.008 mo
47.5101 33.0079 47.5129 33.0078 47.5157 33.0077 cv
47.5127 33.0078 47.5102 33.0079 47.5072 33.008 cv
48.4918 33.0079 mo
48.4893 33.0079 48.4875 33.0078 48.485 33.0077 cv
48.4868 33.0078 48.4899 33.0079 48.4918 33.0079 cv
47.5186 33.0076 mo
47.5214 33.0075 47.5244 33.0074 47.5272 33.0073 cv
47.5242 33.0074 47.5216 33.0075 47.5186 33.0076 cv
48.4805 33.0076 mo
48.478 33.0075 48.4759 33.0074 48.4734 33.0074 cv
48.4757 33.0074 48.4781 33.0075 48.4805 33.0076 cv
47.5309 33.0072 mo
47.5332 33.0072 47.5363 33.0071 47.5386 33.007 cv
47.5361 33.0071 47.5334 33.0071 47.5309 33.0072 cv
48.4684 33.0072 mo
48.4664 33.0071 48.464 33.0071 48.462 33.007 cv
48.4644 33.0071 48.466 33.0071 48.4684 33.0072 cv
47.543 33.0069 mo
47.5453 33.0068 47.5481 33.0067 47.5505 33.0066 cv
47.548 33.0067 47.5455 33.0068 47.543 33.0069 cv
48.4564 33.0068 mo
48.4544 33.0068 48.4524 33.0067 48.4504 33.0067 cv
48.4523 33.0067 48.4545 33.0068 48.4564 33.0068 cv
47.5544 33.0065 mo
47.5577 33.0064 47.5603 33.0063 47.5636 33.0063 cv
47.5606 33.0063 47.5574 33.0064 47.5544 33.0065 cv
48.445 33.0065 mo
48.4425 33.0064 48.44 33.0064 48.4375 33.0063 cv
48.4398 33.0064 48.4427 33.0064 48.445 33.0065 cv
47.5659 33.0062 mo
47.5692 33.0061 47.5714 33.006 47.5748 33.0059 cv
47.5717 33.006 47.5689 33.0061 47.5659 33.0062 cv
48.4336 33.0062 mo
48.4311 33.0061 48.4288 33.006 48.4263 33.006 cv
48.4286 33.006 48.4312 33.0061 48.4336 33.0062 cv
47.5781 33.0058 mo
47.5809 33.0058 47.5844 33.0057 47.5872 33.0056 cv
47.5842 33.0057 47.5811 33.0058 47.5781 33.0058 cv
48.4214 33.0058 mo
48.4194 33.0058 48.4165 33.0057 48.4145 33.0056 cv
48.4168 33.0057 48.4191 33.0058 48.4214 33.0058 cv
47.5897 33.0055 mo
47.5935 33.0054 47.597 33.0053 47.6008 33.0052 cv
47.5968 33.0053 47.5937 33.0054 47.5897 33.0055 cv
48.4099 33.0055 mo
48.4069 33.0054 48.4047 33.0054 48.4017 33.0053 cv
48.4045 33.0054 48.407 33.0054 48.4099 33.0055 cv
47.6014 33.0052 mo
47.6095 33.005 47.6173 33.0048 47.6253 33.0046 cv
47.6173 33.0048 47.6095 33.005 47.6014 33.0052 cv
48.3982 33.0052 mo
48.3902 33.005 48.3828 33.0048 48.3748 33.0046 cv
48.3824 33.0048 48.3906 33.005 48.3982 33.0052 cv
47.628 33.0045 mo
47.6308 33.0045 47.634 33.0044 47.6368 33.0043 cv
47.6338 33.0044 47.631 33.0045 47.628 33.0045 cv
48.369 33.0045 mo
48.3675 33.0044 48.3648 33.0044 48.3633 33.0043 cv
48.3652 33.0044 48.3671 33.0044 48.369 33.0045 cv
47.642 33.0042 mo
47.6444 33.0041 47.646 33.0041 47.6484 33.0041 cv
47.6464 33.0041 47.644 33.0042 47.642 33.0042 cv
48.3565 33.0042 mo
48.355 33.0041 48.3532 33.0041 48.3517 33.0041 cv
48.3531 33.0041 48.3551 33.0041 48.3565 33.0042 cv
47.6539 33.0039 mo
47.6558 33.0039 47.6585 33.0038 47.6603 33.0038 cv
47.6583 33.0038 47.6559 33.0039 47.6539 33.0039 cv
48.3452 33.0039 mo
48.3432 33.0039 48.3418 33.0038 48.3398 33.0038 cv
48.3417 33.0038 48.3433 33.0039 48.3452 33.0039 cv
47.6651 33.0037 mo
47.6675 33.0036 47.6697 33.0036 47.672 33.0035 cv
47.6695 33.0036 47.6677 33.0036 47.6651 33.0037 cv
48.3341 33.0037 mo
48.3321 33.0036 48.3301 33.0036 48.3281 33.0035 cv
48.33 33.0036 48.3322 33.0036 48.3341 33.0037 cv
47.6772 33.0034 mo
47.6786 33.0034 47.68 33.0034 47.6814 33.0033 cv
47.6816 33.0033 li
47.6826 33.0033 47.6828 33.0033 47.6838 33.0033 cv
47.6812 33.0033 47.6797 33.0034 47.6772 33.0034 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[4.32 0 0 1.44 45.6 30.4 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 3 
/M[9 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~()@Z$()@Z$()Rl*(`4),(`4/0)B'M4)B'L~>
<~/1`>'/1`>'/2/b30JG170JG@A2)R6K2)R5~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.3222 33.0034 mo
48.3202 33.0034 48.3184 33.0033 48.3164 33.0033 cv
48.3183 33.0033 48.3203 33.0034 48.3222 33.0034 cv
47.6889 33.0032 mo
47.6903 33.0031 47.6908 33.0031 47.6922 33.0031 cv
47.6927 33.0031 47.6928 33.0031 47.6933 33.0031 cv
47.6943 33.0031 47.6946 33.0031 47.6955 33.003 cv
47.693 33.0031 47.6914 33.0031 47.6889 33.0032 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~()@Z$(`4),)B'M4~>
<~/1`>'0JG172)R6K~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.6922 33.0031 mo
47.6933 33.0031 li
47.6928 33.0031 47.6927 33.0031 47.6922 33.0031 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~!!!!"!<N<)!sA`1"U5/9#7(SA#mq"I$OdFQ%1WjY%hK9a&J>]i',2/r()Ic((`=20)B0V8*$$%@*ZlIH
+<VgN+sJ6V,U=Z^-71)f-n$Mn.Olr!/1`A)/hSe10JG491,:XA1c.'I2E!KQ3&ioY3]]>a4?Pbi5!D1q
5<qJ"5sdn*6UX=277Ka:7n?0B8P2TJ92&#R9hnGZ:Jakb;,U:j;cH^r<E<.%='/R-=^#!5>?kE=?!^iE
?XI2K@:<VS@q0%[AS#IcB4kmkBkhBuCi!s*DJjB2E,]f:EcQ5BFEDYJG'8(RG^+LZH?spbI!g?jIXZcr
~>
<~!!!$$!sAc3#7(VC$OdIS%hK<c',2/s(Dn#.)]Tk>+!;^N,:"Q^-R^Dn/1iJ-0JP==1c70M3&s#]4?Ykm
5<qM$6UX@47n?3D92&&T:Jand;cHat='/U/>?kH??XR;O@q9._B4u!oCM[j*DfB]:F*)PJGBeCZH[L6j
It3*%K7nr5LPUeEMi<XUO-#KePE_>uQ^F20S"-%@T:hmPUSO``Vl6SpX/rG+YHY:;Za@-K\%&u[]=bhk
^;%J"_Sa=2`lH0Bb0/#RcHjkbdaZguf@\d1gYCWAhr*JQj5f=akNM0qlg4$,n*ol<oCV_Lp\=R\qu$El
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
np
48.3106 33.0032 mo
48.3086 33.0031 48.3066 33.0031 48.3046 33.003 cv
48.307 33.0031 48.3083 33.0031 48.3106 33.0032 cv
47.7007 33.0029 mo
47.7016 33.0029 47.7022 33.0029 47.7032 33.0029 cv
47.7037 33.0029 47.7047 33.0029 47.7052 33.0028 cv
47.7057 33.0028 47.7069 33.0028 47.7073 33.0028 cv
47.7053 33.0028 47.7027 33.0029 47.7007 33.0029 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~()@Z$(`4),)B'M4~>
<~/1`>'0JG172)R6K~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.7032 33.0029 mo
47.7041 33.0029 47.7043 33.0029 47.7052 33.0028 cv
47.7047 33.0029 47.7037 33.0029 47.7032 33.0029 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.299 33.0029 mo
48.297 33.0029 48.2948 33.0028 48.2928 33.0028 cv
48.2947 33.0028 48.2971 33.0029 48.299 33.0029 cv
47.7125 33.0027 mo
47.713 33.0027 47.714 33.0027 47.7145 33.0027 cv
47.7155 33.0027 47.7158 33.0026 47.7168 33.0026 cv
47.7172 33.0026 47.7181 33.0026 47.7186 33.0026 cv
47.7166 33.0026 47.7146 33.0027 47.7125 33.0027 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~()@Z$(`4),)B'M4~>
<~/1`>'0JG172)R6K~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.7145 33.0027 mo
47.7154 33.0027 47.7158 33.0026 47.7168 33.0026 cv
47.7158 33.0026 47.7155 33.0027 47.7145 33.0027 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.2871 33.0027 mo
48.2851 33.0027 48.2836 33.0026 48.2816 33.0026 cv
48.2835 33.0026 48.2852 33.0027 48.2871 33.0027 cv
47.7247 33.0025 mo
47.7252 33.0025 47.7257 33.0025 47.7261 33.0025 cv
47.7266 33.0024 47.7276 33.0024 47.7281 33.0024 cv
47.7285 33.0024 47.7297 33.0024 47.7302 33.0024 cv
47.7286 33.0024 47.7262 33.0025 47.7247 33.0025 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~()@Z$(`4),)B'M4~>
<~/1`>'0JG172)R6K~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.7261 33.0025 mo
47.7271 33.0024 47.7271 33.0024 47.7281 33.0024 cv
47.7276 33.0024 47.7266 33.0024 47.7261 33.0025 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.275 33.0025 mo
48.2735 33.0024 48.2715 33.0024 48.27 33.0024 cv
48.2714 33.0024 48.2736 33.0025 48.275 33.0025 cv
47.7363 33.0023 mo
47.7368 33.0023 47.7371 33.0023 47.7376 33.0023 cv
47.7386 33.0022 47.7386 33.0022 47.7396 33.0022 cv
47.7405 33.0022 47.741 33.0022 47.742 33.0022 cv
47.7404 33.0022 47.7378 33.0023 47.7363 33.0023 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~()@Z$(`4),)B'M4~>
<~/1`>'0JG172)R6K~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.7376 33.0023 mo
47.7381 33.0022 47.7391 33.0022 47.7396 33.0022 cv
47.7386 33.0022 47.7386 33.0022 47.7376 33.0023 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.2634 33.0023 mo
48.2619 33.0022 48.2597 33.0022 48.2582 33.0022 cv
48.2596 33.0022 48.262 33.0022 48.2634 33.0023 cv
47.748 33.0021 mo
47.7485 33.0021 47.7487 33.0021 47.7491 33.0021 cv
47.7496 33.002 47.7506 33.002 47.7511 33.002 cv
47.7521 33.002 47.753 33.002 47.7539 33.002 cv
47.7519 33.002 47.75 33.002 47.748 33.0021 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~()@Z$(`4),)B'M4~>
<~/1`>'0JG172)R6K~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.7491 33.0021 mo
47.7496 33.0021 47.7506 33.002 47.7511 33.002 cv
47.7506 33.002 47.7496 33.002 47.7491 33.0021 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.2518 33.0021 mo
48.2498 33.002 48.2483 33.002 48.2463 33.002 cv
48.2482 33.002 48.2499 33.002 48.2518 33.0021 cv
47.7596 33.0019 mo
47.7601 33.0019 47.76 33.0019 47.7605 33.0019 cv
47.761 33.0019 47.7621 33.0019 47.7626 33.0018 cv
47.7636 33.0018 47.7644 33.0018 47.7653 33.0018 cv
47.7633 33.0018 47.7616 33.0019 47.7596 33.0019 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~()@Z$(`4),)B'M4~>
<~/1`>'0JG172)R6K~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.7605 33.0019 mo
47.7609 33.0019 47.7621 33.0019 47.7626 33.0018 cv
47.7621 33.0019 47.761 33.0019 47.7605 33.0019 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.2402 33.0019 mo
48.2382 33.0019 48.2369 33.0018 48.2349 33.0018 cv
48.2368 33.0018 48.2383 33.0019 48.2402 33.0019 cv
47.7716 33.0017 mo
47.7735 33.0017 47.7753 33.0017 47.7772 33.0016 cv
47.7752 33.0017 47.7736 33.0017 47.7716 33.0017 cv
48.2283 33.0017 mo
48.2267 33.0017 48.2248 33.0017 48.2233 33.0016 cv
48.2247 33.0017 48.2268 33.0017 48.2283 33.0017 cv
47.783 33.0015 mo
47.7854 33.0015 47.7889 33.0015 47.7912 33.0014 cv
47.7887 33.0015 47.7855 33.0015 47.783 33.0015 cv
48.2168 33.0015 mo
48.2148 33.0015 48.2114 33.0015 48.2094 33.0014 cv
48.2118 33.0015 48.2145 33.0015 48.2168 33.0015 cv
47.7946 33.0014 mo
47.8022 33.0013 47.8104 33.0012 47.818 33.0011 cv
47.8099 33.0012 47.8027 33.0013 47.7946 33.0014 cv
48.2053 33.0014 mo
48.1972 33.0013 48.19 33.0012 48.182 33.0011 cv
48.1896 33.0012 48.1977 33.0013 48.2053 33.0014 cv
47.8228 33.001 mo
47.8242 33.001 47.8248 33.001 47.8263 33.001 cv
47.8273 33.001 47.8286 33.001 47.8296 33.0009 cv
47.8301 33.0009 47.8295 33.0009 47.83 33.0009 cv
47.8275 33.001 47.8253 33.001 47.8228 33.001 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~()@Z$(`4),)B'M4~>
<~/1`>'0JG172)R6K~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.8263 33.001 mo
47.8272 33.001 47.8287 33.001 47.8296 33.0009 cv
47.8286 33.001 47.8273 33.001 47.8263 33.001 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.1768 33.001 mo
48.1743 33.001 48.1725 33.001 48.17 33.0009 cv
48.1724 33.001 48.1744 33.001 48.1768 33.001 cv
47.8345 33.0009 mo
47.8349 33.0009 47.8364 33.0009 47.8369 33.0009 cv
47.8384 33.0009 47.8396 33.0008 47.8411 33.0008 cv
47.8416 33.0008 47.8411 33.0008 47.8415 33.0008 cv
47.8395 33.0008 47.8365 33.0009 47.8345 33.0009 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~()@Z$(`4),)B'M4~>
<~/1`>'0JG172)R6K~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.8369 33.0009 mo
47.8383 33.0009 47.8397 33.0008 47.8411 33.0008 cv
47.8396 33.0008 47.8384 33.0009 47.8369 33.0009 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.1652 33.0009 mo
48.1632 33.0009 48.1605 33.0008 48.1584 33.0008 cv
48.1608 33.0008 48.1628 33.0009 48.1652 33.0009 cv
47.8466 33.0008 mo
47.8471 33.0008 47.8475 33.0008 47.8479 33.0008 cv
47.85 33.0007 47.8512 33.0007 47.8532 33.0007 cv
47.8536 33.0007 li
47.8516 33.0007 47.8486 33.0007 47.8466 33.0008 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~()@Z$(`4),)B'M4~>
<~/1`>'0JG172)R6K~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.8479 33.0008 mo
47.8498 33.0007 47.8513 33.0007 47.8532 33.0007 cv
47.8512 33.0007 47.85 33.0007 47.8479 33.0008 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.1532 33.0008 mo
48.1512 33.0007 48.1484 33.0007 48.1463 33.0007 cv
48.1468 33.0007 48.1469 33.0007 48.1474 33.0007 cv
48.1484 33.0007 48.1489 33.0007 48.15 33.0007 cv
48.1514 33.0007 48.1518 33.0008 48.1532 33.0008 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.15 33.0007 mo
48.1489 33.0007 48.1484 33.0007 48.1474 33.0007 cv
48.1478 33.0007 48.1495 33.0007 48.15 33.0007 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.8582 33.0007 mo
47.8586 33.0006 47.859 33.0006 47.8595 33.0006 cv
47.8615 33.0006 47.8626 33.0006 47.8646 33.0006 cv
47.8651 33.0006 li
47.8626 33.0006 47.8607 33.0006 47.8582 33.0007 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.8595 33.0006 mo
47.8614 33.0006 47.8627 33.0006 47.8646 33.0006 cv
47.8626 33.0006 47.8615 33.0006 47.8595 33.0006 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.1417 33.0007 mo
48.1391 33.0006 48.1374 33.0006 48.1349 33.0006 cv
48.1359 33.0006 li
48.1369 33.0006 48.1378 33.0006 48.1388 33.0006 cv
48.1397 33.0006 48.1407 33.0006 48.1417 33.0007 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.1388 33.0006 mo
48.1378 33.0006 48.1369 33.0006 48.1359 33.0006 cv
48.1373 33.0006 48.1374 33.0006 48.1388 33.0006 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.8704 33.0005 mo
47.8709 33.0005 47.8708 33.0005 47.8713 33.0005 cv
47.8728 33.0005 47.875 33.0005 47.8766 33.0005 cv
47.877 33.0005 47.8766 33.0005 47.8771 33.0005 cv
47.8745 33.0005 47.8729 33.0005 47.8704 33.0005 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.8713 33.0005 mo
47.8727 33.0005 47.8751 33.0005 47.8766 33.0005 cv
47.875 33.0005 47.8728 33.0005 47.8713 33.0005 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.1295 33.0005 mo
48.127 33.0005 48.1254 33.0005 48.1229 33.0005 cv
48.1234 33.0005 48.1234 33.0005 48.1239 33.0005 cv
48.1249 33.0005 48.1266 33.0005 48.1276 33.0005 cv
48.1281 33.0005 48.129 33.0005 48.1295 33.0005 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.1276 33.0005 mo
48.1266 33.0005 48.1249 33.0005 48.1239 33.0005 cv
48.1253 33.0005 48.1262 33.0005 48.1276 33.0005 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.8821 33.0005 mo
47.8826 33.0004 47.8824 33.0004 47.8829 33.0004 cv
47.8844 33.0004 47.8867 33.0004 47.8883 33.0004 cv
47.8886 33.0004 li
47.8866 33.0004 47.8841 33.0004 47.8821 33.0005 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.8829 33.0004 mo
47.8847 33.0004 47.8864 33.0004 47.8883 33.0004 cv
47.8867 33.0004 47.8844 33.0004 47.8829 33.0004 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.1178 33.0005 mo
48.1158 33.0004 48.1134 33.0004 48.1114 33.0004 cv
48.1119 33.0004 48.1117 33.0004 48.1122 33.0004 cv
48.1137 33.0004 48.1148 33.0004 48.1164 33.0004 cv
48.1168 33.0004 48.1173 33.0004 48.1178 33.0005 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.1164 33.0004 mo
48.1148 33.0004 48.1137 33.0004 48.1122 33.0004 cv
48.1136 33.0004 48.1149 33.0004 48.1164 33.0004 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.894 33.0004 mo
47.8943 33.0004 li
47.8964 33.0003 47.8984 33.0003 47.9004 33.0003 cv
47.9007 33.0003 li
47.8987 33.0003 47.896 33.0003 47.894 33.0004 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.8943 33.0004 mo
47.8962 33.0003 47.8985 33.0003 47.9004 33.0003 cv
47.8984 33.0003 47.8964 33.0003 47.8943 33.0004 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.1059 33.0004 mo
48.1039 33.0003 48.1013 33.0003 48.0993 33.0003 cv
48.1 33.0003 li
48.1015 33.0003 48.1036 33.0003 48.1051 33.0004 cv
48.1059 33.0004 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.1051 33.0004 mo
48.1036 33.0003 48.1015 33.0003 48.1 33.0003 cv
48.1019 33.0003 48.1032 33.0003 48.1051 33.0004 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.9057 33.0003 mo
47.906 33.0003 li
47.908 33.0003 47.9099 33.0003 47.9119 33.0002 cv
47.912 33.0002 li
47.91 33.0003 47.9077 33.0003 47.9057 33.0003 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.906 33.0003 mo
47.9079 33.0003 47.91 33.0003 47.9119 33.0002 cv
47.9099 33.0003 47.908 33.0003 47.906 33.0003 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.0942 33.0003 mo
48.0922 33.0003 48.09 33.0003 48.088 33.0002 cv
48.0885 33.0003 li
48.0905 33.0003 48.0916 33.0003 48.0936 33.0003 cv
48.0942 33.0003 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.0936 33.0003 mo
48.0916 33.0003 48.0905 33.0003 48.0885 33.0003 cv
48.0904 33.0003 48.0917 33.0003 48.0936 33.0003 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.9178 33.0002 mo
47.9201 33.0002 47.9217 33.0002 47.924 33.0002 cv
47.922 33.0002 47.9198 33.0002 47.9178 33.0002 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.0822 33.0002 mo
48.0802 33.0002 48.078 33.0002 48.0759 33.0002 cv
48.0764 33.0002 48.0758 33.0002 48.0762 33.0002 cv
48.0783 33.0002 48.08 33.0002 48.082 33.0002 cv
48.0822 33.0002 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.082 33.0002 mo
48.08 33.0002 48.0783 33.0002 48.0762 33.0002 cv
48.0781 33.0002 48.0801 33.0002 48.082 33.0002 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.9294 33.0002 mo
47.9318 33.0001 47.9333 33.0001 47.9357 33.0001 cv
47.9331 33.0001 47.932 33.0001 47.9294 33.0002 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.0705 33.0002 mo
48.0685 33.0001 48.0663 33.0001 48.0643 33.0001 cv
48.0646 33.0001 li
48.0661 33.0001 48.0688 33.0001 48.0703 33.0002 cv
48.0708 33.0002 48.07 33.0002 48.0705 33.0002 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.0703 33.0002 mo
48.0688 33.0001 48.0661 33.0001 48.0646 33.0001 cv
48.0665 33.0001 48.0684 33.0001 48.0703 33.0002 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.9412 33.0001 mo
47.9431 33.0001 47.9458 33.0001 47.9477 33.0001 cv
47.9457 33.0001 47.9432 33.0001 47.9412 33.0001 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.0588 33.0001 mo
48.0568 33.0001 48.0542 33.0001 48.0522 33.0001 cv
48.0524 33.0001 li
48.0545 33.0001 48.0567 33.0001 48.0587 33.0001 cv
48.0588 33.0001 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.0587 33.0001 mo
48.0567 33.0001 48.0545 33.0001 48.0524 33.0001 cv
48.0543 33.0001 48.0568 33.0001 48.0587 33.0001 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.953 33.0001 mo
47.9549 33.0001 47.9572 33.0001 47.9591 33 cv
47.9571 33.0001 47.955 33.0001 47.953 33.0001 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.047 33.0001 mo
48.0449 33.0001 48.0429 33.0001 48.0408 33 cv
48.041 33 li
48.043 33.0001 48.0449 33.0001 48.0469 33.0001 cv
48.047 33.0001 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.0469 33.0001 mo
48.0449 33.0001 48.043 33.0001 48.041 33 cv
48.0429 33.0001 48.045 33.0001 48.0469 33.0001 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.9648 33 mo
47.9672 33 47.9695 33 47.9719 33 cv
47.9698 33 47.9668 33 47.9648 33 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.0352 33 mo
48.0331 33 48.0301 33 48.0281 33 cv
48.0282 33 li
48.0303 33 48.0331 33 48.0351 33 cv
48.0352 33 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.0351 33 mo
48.0331 33 48.0303 33 48.0282 33 cv
48.0306 33 48.0328 33 48.0351 33 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.9764 33 mo
47.9792 33 47.9812 33 47.984 33 cv
47.9815 33 47.9789 33 47.9764 33 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
48.0236 33 mo
48.0211 33 48.0184 33 48.0159 33 cv
48.016 33 li
48.0185 33 48.0211 33 48.0236 33 cv
48.0236 33 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~()@Z&(`4/0)?~>
<~/1`>+0JG@A2#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.0236 33 mo
48.0211 33 48.0185 33 48.016 33 cv
48.0188 33 48.0207 33 48.0236 33 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
47.9883 33 mo
47.9883 33 li
47.9923 33 47.9959 33 48 33 cv
48 33 li
48 33 li
48.004 33 48.0077 33 48.0117 33 cv
48.0117 33 li
48.0077 33 48.004 33 48 33 cv
47.9959 33 47.9923 33 47.9883 33 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~()@Z$(`4),)B'M4~>
<~/1`>'0JG172)R6K~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.9883 33 mo
47.9921 33 47.9962 33 48 33 cv
47.9959 33 47.9923 33 47.9883 33 cv
48.0117 33 mo
48.0077 33 48.004 33 48 33 cv
48.0038 33 48.0079 33 48.0117 33 cv
gsave
[-1.25447e-06 28.6988 -28.6988 -1.25447e-06 47.999 27.1875 ]ct
clp
/6 /Gradient get_res exec grestore
np
62.9746 48.5 mo
62.953 47.8525 62.8904 47.2152 62.7891 46.5907 cv
62.8346 46.5781 62.8804 46.5654 62.9258 46.5527 cv
62.2285 39.3038 56.3526 33.5446 49.0517 33.0365 cv
56.833 33.578 63 40.0838 63 48 cv
63 48 li
63 48.1699 62.9805 48.332 62.9746 48.5 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[15.36 0 0 17.28 48.48 14.56 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 32 
/H 36 
/M[32 0 0 -36 0 36 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
i;hgNi@3adhuM^Pi@j3khZ2URiABTqh>lLTiB$'#h#QCViBZN*g]6:XiC;u1gAp1YiCiA7g&U([iDJh>
f`9t]iE,:EfDsk_iEbaLf)XbaiFD3Sec=YciFqTYeH"PeiGS&`e,\GgiH4MgdfA>iiHjtndK&5jiIC@t
d/`,liJ$h&ciE#niJ[:-cN)opiK<a4c2cfriKj-:blH]tiLKTAbQ-U!iM-&Hb5gL#iMcMOaoLC$iN;nU
aT1:&iNr@\a8k1(iOSgc`rP(*iP59j`W4t,iPbZp`;nk.iQD-"_uSb0iR%T)_Z8Y2iRRu/_>rP3iS3;k
i;hhUiSibrhuM_WiTK5$hZ2VYiU,\+h>lM[iUc.2r;_?~>

%%EndBinary
grestore
np
33.0254 48.5 mo
33.0195 48.332 33 48.1699 33 48 cv
33 48 li
33 40.3498 38.758 34.0168 46.1693 33.1111 cv
39.2314 33.959 33.7446 39.5634 33.0723 46.5527 cv
33.1182 46.5656 33.1643 46.5784 33.2105 46.5911 cv
33.1093 47.2156 33.0468 47.8525 33.0254 48.5 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[14.88 0 0 17.28 32.16 14.56 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 31 
/H 36 
/M[31 0 0 -36 0 36 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 31 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 31 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 31 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 31 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
iW.sPi[NabjT+9Vi\0'ekQ'T\i\]<glN#obi]>WjmJu5hi]trmnGqPni^V8poDmksi_.MrpAj2$i_dhu
q>fM*i`F/#r;bh0ia'J&!!)"5ia]k+s"rdnib640r&<dtiblX6q)[e%icN'<p-%e+id/KBo0;_/id\iG
n3Z_5ie>8Mm7$_;iet\Sl:C_AifV+Yk=b_Gig.I^jA,_Migdmdi_]]Mj.aEki`,lTk,?/ti`>oXl)hi'
i`Z#^m'FS0i`u,dn%$=9ia;5jo"W'BiaV>oou+`JiaqGupr^JSib7Q&qp<4\ibRZ,rmnseibd]0_Z8\8
io0k:jT+9?icF,BhZ2a<ica>Kg]6O<id'PTiW+K~>

%%EndBinary
grestore
np
46.1701 33.111 mo
46.1735 33.1106 46.177 33.1102 46.1804 33.1098 cv
46.1767 33.1102 46.1737 33.1106 46.1701 33.111 cv
46.1812 33.1097 mo
46.1846 33.1093 46.1879 33.1088 46.1914 33.1084 cv
46.1877 33.1089 46.1848 33.1092 46.1812 33.1097 cv
46.1923 33.1083 mo
46.1997 33.1074 46.2063 33.1066 46.2137 33.1058 cv
46.2063 33.1066 46.1997 33.1074 46.1923 33.1083 cv
46.2145 33.1057 mo
46.2184 33.1052 46.221 33.1049 46.2249 33.1044 cv
46.2212 33.1049 46.2182 33.1052 46.2145 33.1057 cv
46.2254 33.1044 mo
46.2288 33.104 46.2326 33.1035 46.236 33.1031 cv
46.2323 33.1035 46.2291 33.1039 46.2254 33.1044 cv
46.2363 33.1031 mo
46.2583 33.1005 46.2803 33.0979 46.3024 33.0954 cv
46.2803 33.098 46.2584 33.1005 46.2363 33.1031 cv
46.3025 33.0954 mo
46.3054 33.0951 46.3079 33.0948 46.3108 33.0945 cv
46.308 33.0948 46.3052 33.0951 46.3025 33.0954 cv
46.3139 33.0942 mo
46.3164 33.0939 46.3185 33.0936 46.3209 33.0934 cv
46.3186 33.0936 46.3162 33.0939 46.3139 33.0942 cv
46.3255 33.0929 mo
46.3279 33.0926 46.3302 33.0923 46.3326 33.0921 cv
46.3303 33.0923 46.3278 33.0926 46.3255 33.0929 cv
46.3366 33.0916 mo
46.339 33.0913 46.3415 33.0911 46.3439 33.0908 cv
46.3416 33.0911 46.3389 33.0914 46.3366 33.0916 cv
46.348 33.0904 mo
46.3505 33.0901 46.3529 33.0898 46.3554 33.0896 cv
46.3531 33.0898 46.3503 33.0901 46.348 33.0904 cv
46.3593 33.0891 mo
46.3618 33.0888 46.3638 33.0886 46.3663 33.0884 cv
46.364 33.0886 46.3617 33.0889 46.3593 33.0891 cv
46.3711 33.0878 mo
46.3735 33.0876 46.3753 33.0874 46.3778 33.0871 cv
46.3759 33.0873 46.3729 33.0876 46.3711 33.0878 cv
46.3821 33.0867 mo
46.3845 33.0864 46.3867 33.0862 46.3892 33.0859 cv
46.3864 33.0862 46.3848 33.0864 46.3821 33.0867 cv
46.3937 33.0854 mo
46.3962 33.0851 46.398 33.0849 46.4005 33.0847 cv
46.3981 33.0849 46.396 33.0852 46.3937 33.0854 cv
46.4051 33.0842 mo
46.4071 33.084 46.4097 33.0837 46.4116 33.0835 cv
46.4093 33.0837 46.4074 33.0839 46.4051 33.0842 cv
46.4174 33.0829 mo
46.4194 33.0827 46.4208 33.0825 46.4227 33.0823 cv
46.4209 33.0825 46.4193 33.0827 46.4174 33.0829 cv
46.4296 33.0816 mo
46.4311 33.0815 46.4325 33.0813 46.434 33.0811 cv
46.4326 33.0813 46.431 33.0815 46.4296 33.0816 cv
46.4416 33.0804 mo
46.4431 33.0802 46.4441 33.0801 46.4456 33.0799 cv
46.4442 33.0801 46.443 33.0802 46.4416 33.0804 cv
46.4543 33.079 mo
46.4553 33.0789 46.4559 33.0789 46.4569 33.0788 cv
46.4564 33.0788 46.4547 33.079 46.4543 33.079 cv
46.4918 33.0752 mo
46.4923 33.0752 46.4935 33.0751 46.494 33.075 cv
46.4935 33.0751 46.4923 33.0752 46.4918 33.0752 cv
46.5032 33.0741 mo
46.5042 33.074 46.5059 33.0738 46.5068 33.0737 cv
46.5059 33.0738 46.5042 33.074 46.5032 33.0741 cv
46.5148 33.0729 mo
46.5163 33.0728 46.5167 33.0728 46.5182 33.0726 cv
46.5168 33.0728 46.5162 33.0728 46.5148 33.0729 cv
46.5265 33.0718 mo
46.5279 33.0717 46.529 33.0716 46.5304 33.0714 cv
46.529 33.0715 46.5278 33.0717 46.5265 33.0718 cv
46.5375 33.0707 mo
46.539 33.0706 46.5409 33.0704 46.5424 33.0703 cv
46.5405 33.0704 46.5394 33.0705 46.5375 33.0707 cv
46.5491 33.0696 mo
46.5506 33.0695 46.5527 33.0693 46.5542 33.0691 cv
46.5528 33.0692 46.5505 33.0695 46.5491 33.0696 cv
46.5608 33.0685 mo
46.5618 33.0684 46.5641 33.0682 46.565 33.0681 cv
46.5637 33.0682 46.5622 33.0683 46.5608 33.0685 cv
46.5726 33.0673 mo
46.5736 33.0673 46.5759 33.067 46.5768 33.067 cv
46.5754 33.0671 46.574 33.0672 46.5726 33.0673 cv
46.5841 33.0663 mo
46.5855 33.0661 46.5868 33.066 46.5883 33.0659 cv
46.5869 33.066 46.5854 33.0661 46.5841 33.0663 cv
46.5959 33.0652 mo
46.5974 33.065 46.5984 33.0649 46.5998 33.0648 cv
46.5984 33.0649 46.5973 33.065 46.5959 33.0652 cv
46.6082 33.064 mo
46.6092 33.0639 46.61 33.0639 46.611 33.0638 cv
46.6101 33.0638 46.6092 33.0639 46.6082 33.064 cv
46.6201 33.0629 mo
46.6206 33.0629 46.6223 33.0627 46.6228 33.0627 cv
46.6219 33.0628 46.621 33.0628 46.6201 33.0629 cv
46.6329 33.0618 mo
46.6334 33.0617 46.6337 33.0617 46.6341 33.0616 cv
46.6337 33.0617 46.6334 33.0617 46.6329 33.0618 cv
46.6451 33.0606 mo
46.6459 33.0606 li
46.6451 33.0606 li
46.6929 33.0564 mo
46.6934 33.0564 46.6939 33.0563 46.6944 33.0563 cv
46.6939 33.0563 46.6933 33.0564 46.6929 33.0564 cv
46.7048 33.0554 mo
46.7053 33.0554 46.7053 33.0554 46.7058 33.0553 cv
46.7048 33.0554 li
46.7161 33.0544 mo
46.7171 33.0544 46.7177 33.0543 46.7186 33.0542 cv
46.7177 33.0543 46.717 33.0544 46.7161 33.0544 cv
46.7279 33.0534 mo
46.7289 33.0534 46.7295 33.0533 46.7305 33.0532 cv
46.7296 33.0533 46.7288 33.0534 46.7279 33.0534 cv
46.7393 33.0525 mo
46.7403 33.0524 46.7412 33.0523 46.7421 33.0522 cv
46.7412 33.0523 46.7403 33.0524 46.7393 33.0525 cv
46.7517 33.0514 mo
46.7527 33.0514 46.7524 33.0514 46.7534 33.0513 cv
46.7529 33.0513 46.7522 33.0514 46.7517 33.0514 cv
46.7632 33.0505 mo
46.7642 33.0504 46.7643 33.0504 46.7653 33.0503 cv
46.7643 33.0504 46.7642 33.0504 46.7632 33.0505 cv
46.7756 33.0495 mo
46.7767 33.0494 li
46.7763 33.0494 46.776 33.0495 46.7756 33.0495 cv
46.7871 33.0486 mo
46.7876 33.0485 46.7881 33.0485 46.7886 33.0484 cv
46.7882 33.0485 46.7876 33.0485 46.7871 33.0486 cv
46.7999 33.0475 mo
46.8 33.0475 li
46.7999 33.0475 li
46.8116 33.0466 mo
46.812 33.0466 li
46.8116 33.0466 li
46.8832 33.0411 mo
46.8833 33.0411 li
46.8832 33.0411 li
46.895 33.0403 mo
46.8953 33.0403 li
46.895 33.0403 li
46.9063 33.0395 mo
46.9068 33.0394 46.9083 33.0393 46.9088 33.0393 cv
46.9078 33.0393 46.9072 33.0394 46.9063 33.0395 cv
46.9179 33.0386 mo
46.9189 33.0385 46.9194 33.0385 46.9204 33.0384 cv
46.9195 33.0385 46.9188 33.0386 46.9179 33.0386 cv
46.9298 33.0378 mo
46.9308 33.0377 46.9313 33.0377 46.9323 33.0376 cv
46.9318 33.0376 46.9302 33.0377 46.9298 33.0378 cv
46.9418 33.0369 mo
46.9428 33.0369 46.9426 33.0369 46.9436 33.0368 cv
46.9431 33.0368 46.9423 33.0369 46.9418 33.0369 cv
49.0506 33.0364 mo
49.0469 33.0362 49.0437 33.0359 49.04 33.0357 cv
49.0435 33.0359 49.0471 33.0362 49.0506 33.0364 cv
46.9534 33.0361 mo
46.9544 33.036 46.9548 33.036 46.9558 33.0359 cv
46.9549 33.036 46.9543 33.0361 46.9534 33.0361 cv
49.0399 33.0357 mo
49.0362 33.0354 49.0329 33.0352 49.0292 33.0349 cv
49.0326 33.0352 49.0364 33.0354 49.0399 33.0357 cv
46.9653 33.0353 mo
46.9663 33.0352 46.9663 33.0352 46.9673 33.0352 cv
46.9668 33.0352 46.9657 33.0353 46.9653 33.0353 cv
49.0281 33.0349 mo
49.0243 33.0346 49.0213 33.0344 49.0176 33.0341 cv
49.0215 33.0344 49.0241 33.0346 49.0281 33.0349 cv
46.9771 33.0345 mo
46.9776 33.0345 46.9787 33.0344 46.9792 33.0344 cv
46.9782 33.0344 46.9781 33.0344 46.9771 33.0345 cv
49.0175 33.0341 mo
49.0138 33.0339 49.0104 33.0337 49.0067 33.0334 cv
49.0102 33.0337 49.014 33.0339 49.0175 33.0341 cv
46.9901 33.0336 mo
46.9904 33.0336 li
46.9901 33.0336 li
49.0053 33.0333 mo
48.9763 33.0314 48.9465 33.0295 48.9175 33.0277 cv
48.9469 33.0295 48.976 33.0314 49.0053 33.0333 cv
47.002 33.0328 mo
47.0024 33.0328 li
47.002 33.0328 li
47.0736 33.0283 mo
47.0741 33.0282 47.0742 33.0282 47.0747 33.0282 cv
47.0743 33.0282 47.0741 33.0282 47.0736 33.0283 cv
48.9163 33.0277 mo
48.913 33.0275 48.9094 33.0273 48.9062 33.0271 cv
48.9096 33.0273 48.9128 33.0275 48.9163 33.0277 cv
47.0855 33.0275 mo
47.086 33.0275 47.0862 33.0275 47.0867 33.0275 cv
47.0863 33.0275 47.086 33.0275 47.0855 33.0275 cv
48.9051 33.027 mo
48.9018 33.0268 48.8993 33.0267 48.896 33.0265 cv
48.899 33.0266 48.9021 33.0268 48.9051 33.027 cv
47.0968 33.0269 mo
47.0978 33.0268 47.0985 33.0268 47.0995 33.0267 cv
47.0985 33.0268 47.0978 33.0268 47.0968 33.0269 cv
48.8931 33.0263 mo
48.8903 33.0261 48.8876 33.026 48.8848 33.0258 cv
48.8878 33.026 48.8901 33.0261 48.8931 33.0263 cv
47.1089 33.0262 mo
47.1099 33.0261 47.11 33.0261 47.111 33.026 cv
47.1101 33.0261 47.1098 33.0261 47.1089 33.0262 cv
48.8816 33.0256 mo
48.8793 33.0255 48.8762 33.0253 48.8739 33.0252 cv
48.8763 33.0253 48.8792 33.0255 48.8816 33.0256 cv
47.1206 33.0255 mo
47.1216 33.0254 47.1218 33.0254 47.1228 33.0253 cv
47.1224 33.0254 47.1211 33.0254 47.1206 33.0255 cv
48.8696 33.0249 mo
48.8673 33.0248 48.865 33.0247 48.8626 33.0245 cv
48.8646 33.0246 48.8676 33.0248 48.8696 33.0249 cv
47.1329 33.0248 mo
47.1342 33.0247 li
47.1338 33.0247 47.1334 33.0247 47.1329 33.0248 cv
48.8582 33.0243 mo
48.8559 33.0241 48.8532 33.024 48.8508 33.0238 cv
48.8533 33.024 48.8557 33.0241 48.8582 33.0243 cv
47.1444 33.0241 mo
47.1454 33.0241 47.1455 33.024 47.1465 33.024 cv
47.146 33.024 47.1448 33.0241 47.1444 33.0241 cv
48.8468 33.0236 mo
48.8445 33.0235 48.8417 33.0233 48.8394 33.0232 cv
48.8419 33.0233 48.8443 33.0235 48.8468 33.0236 cv
47.1562 33.0234 mo
47.1572 33.0234 47.1573 33.0234 47.1583 33.0233 cv
47.1578 33.0234 47.1567 33.0234 47.1562 33.0234 cv
48.8351 33.023 mo
48.8328 33.0228 48.8304 33.0227 48.8281 33.0226 cv
48.8306 33.0227 48.8327 33.0228 48.8351 33.023 cv
47.1684 33.0228 mo
47.1689 33.0227 47.1694 33.0227 47.1699 33.0227 cv
47.1694 33.0227 47.1689 33.0227 47.1684 33.0228 cv
48.8234 33.0223 mo
48.821 33.0222 48.8186 33.0221 48.8163 33.0219 cv
48.8183 33.0221 48.8214 33.0222 48.8234 33.0223 cv
47.1805 33.0221 mo
47.181 33.0221 47.1812 33.0221 47.1817 33.022 cv
47.1813 33.0221 47.181 33.0221 47.1805 33.0221 cv
48.8126 33.0217 mo
48.8098 33.0216 48.8077 33.0215 48.8049 33.0213 cv
48.8073 33.0215 48.8101 33.0216 48.8126 33.0217 cv
47.1926 33.0215 mo
47.1935 33.0214 li
47.1926 33.0215 li
48.8008 33.0211 mo
48.7979 33.021 48.7961 33.0209 48.7933 33.0207 cv
48.7958 33.0209 48.7983 33.021 48.8008 33.0211 cv
48.79 33.0205 mo
48.7871 33.0204 48.7846 33.0203 48.7818 33.0201 cv
48.7847 33.0203 48.787 33.0204 48.79 33.0205 cv
48.7791 33.02 mo
48.7692 33.0195 48.7597 33.019 48.7498 33.0185 cv
48.7598 33.019 48.7691 33.0195 48.7791 33.02 cv
48.7477 33.0184 mo
48.7449 33.0183 48.7426 33.0182 48.7398 33.018 cv
48.7428 33.0182 48.7447 33.0183 48.7477 33.0184 cv
48.7361 33.0178 mo
48.7333 33.0177 48.731 33.0176 48.7282 33.0175 cv
48.7307 33.0176 48.7336 33.0177 48.7361 33.0178 cv
47.2648 33.0178 mo
47.2653 33.0178 47.2661 33.0177 47.2666 33.0177 cv
47.2662 33.0177 47.2653 33.0178 47.2648 33.0178 cv
48.7246 33.0173 mo
48.7218 33.0172 48.7201 33.0171 48.7173 33.0169 cv
48.7198 33.0171 48.7221 33.0172 48.7246 33.0173 cv
47.2764 33.0172 mo
47.2769 33.0172 47.2787 33.0171 47.2792 33.0171 cv
47.2782 33.0171 47.2773 33.0172 47.2764 33.0172 cv
48.7129 33.0167 mo
48.7105 33.0166 48.7082 33.0165 48.7059 33.0164 cv
48.7079 33.0165 48.7109 33.0166 48.7129 33.0167 cv
47.2881 33.0167 mo
47.2891 33.0166 47.2902 33.0166 47.2912 33.0165 cv
47.2903 33.0166 47.2891 33.0166 47.2881 33.0167 cv
48.7013 33.0162 mo
48.6989 33.0161 48.6967 33.016 48.6944 33.0159 cv
48.6969 33.016 48.6988 33.0161 48.7013 33.0162 cv
47.2998 33.0161 mo
47.3008 33.0161 47.3022 33.016 47.3032 33.016 cv
47.3022 33.016 47.3008 33.0161 47.2998 33.0161 cv
48.6898 33.0157 mo
48.6874 33.0156 48.6852 33.0154 48.6829 33.0153 cv
48.6854 33.0155 48.6873 33.0155 48.6898 33.0157 cv
47.3114 33.0156 mo
47.3124 33.0156 47.3142 33.0155 47.3152 33.0154 cv
47.3138 33.0155 47.3128 33.0155 47.3114 33.0156 cv
48.6778 33.0151 mo
48.6759 33.015 48.6738 33.0149 48.6719 33.0149 cv
48.6739 33.0149 48.6758 33.015 48.6778 33.0151 cv
47.3237 33.015 mo
47.3247 33.015 47.3253 33.015 47.3263 33.0149 cv
47.3254 33.015 47.3246 33.015 47.3237 33.015 cv
48.666 33.0146 mo
48.6641 33.0145 48.6619 33.0144 48.66 33.0143 cv
48.662 33.0144 48.664 33.0145 48.666 33.0146 cv
47.3353 33.0145 mo
47.3363 33.0145 47.3375 33.0144 47.3385 33.0144 cv
47.3376 33.0144 47.3363 33.0145 47.3353 33.0145 cv
48.6544 33.0141 mo
48.652 33.014 48.6509 33.0139 48.6485 33.0138 cv
48.6505 33.0139 48.6524 33.014 48.6544 33.0141 cv
47.3473 33.014 mo
47.3483 33.014 47.3491 33.0139 47.3501 33.0139 cv
47.3492 33.0139 47.3483 33.014 47.3473 33.014 cv
48.6431 33.0136 mo
48.6407 33.0135 48.6388 33.0134 48.6365 33.0133 cv
48.639 33.0134 48.6406 33.0135 48.6431 33.0136 cv
47.3586 33.0135 mo
47.3601 33.0135 47.3609 33.0134 47.3624 33.0134 cv
47.3614 33.0134 47.3595 33.0135 47.3586 33.0135 cv
48.6315 33.0131 mo
48.6296 33.013 48.6272 33.0129 48.6253 33.0129 cv
48.6273 33.0129 48.6295 33.013 48.6315 33.0131 cv
47.3711 33.013 mo
47.3716 33.013 47.3731 33.0129 47.3736 33.0129 cv
47.3731 33.0129 47.3715 33.013 47.3711 33.013 cv
48.6187 33.0126 mo
48.6173 33.0125 48.6152 33.0124 48.6138 33.0124 cv
48.6158 33.0125 48.6167 33.0125 48.6187 33.0126 cv
47.384 33.0125 mo
47.3845 33.0125 47.3848 33.0124 47.3853 33.0124 cv
47.3848 33.0124 47.3845 33.0125 47.384 33.0125 cv
48.6062 33.0121 mo
48.6053 33.0121 48.6032 33.012 48.6022 33.0119 cv
48.6032 33.012 48.6052 33.012 48.6062 33.0121 cv
48.5952 33.0117 mo
48.5933 33.0116 48.5921 33.0115 48.5902 33.0115 cv
48.5917 33.0115 48.5937 33.0116 48.5952 33.0117 cv
48.5673 33.0106 mo
48.5654 33.0105 48.5638 33.0105 48.5619 33.0104 cv
48.5634 33.0104 48.5658 33.0105 48.5673 33.0106 cv
48.5555 33.0101 mo
48.5532 33.0101 48.5519 33.01 48.5495 33.0099 cv
48.5515 33.01 48.5535 33.0101 48.5555 33.0101 cv
47.4449 33.0101 mo
47.4454 33.0101 47.4456 33.0101 47.4461 33.0101 cv
47.4456 33.0101 47.4454 33.0101 47.4449 33.0101 cv
48.5441 33.0097 mo
48.5418 33.0096 48.5404 33.0096 48.5381 33.0095 cv
48.5401 33.0096 48.5421 33.0097 48.5441 33.0097 cv
47.4563 33.0097 mo
47.4573 33.0097 47.4587 33.0096 47.4597 33.0096 cv
47.4588 33.0096 47.4572 33.0097 47.4563 33.0097 cv
48.5322 33.0093 mo
48.5303 33.0092 48.5285 33.0092 48.5266 33.0091 cv
48.5286 33.0092 48.5302 33.0092 48.5322 33.0093 cv
47.4683 33.0093 mo
47.4693 33.0093 47.4704 33.0092 47.4714 33.0092 cv
47.4699 33.0092 47.4697 33.0092 47.4683 33.0093 cv
48.5207 33.0089 mo
48.5188 33.0088 48.5167 33.0088 48.5148 33.0087 cv
48.5168 33.0088 48.5187 33.0088 48.5207 33.0089 cv
47.4798 33.0089 mo
47.4813 33.0088 47.4823 33.0088 47.4838 33.0088 cv
47.4828 33.0088 47.4807 33.0089 47.4798 33.0089 cv
48.5088 33.0085 mo
48.5069 33.0084 48.5052 33.0084 48.5033 33.0083 cv
48.5048 33.0084 48.5073 33.0085 48.5088 33.0085 cv
47.4917 33.0085 mo
47.4932 33.0084 47.494 33.0084 47.4955 33.0084 cv
47.4941 33.0084 47.4931 33.0084 47.4917 33.0085 cv
48.4972 33.0081 mo
48.4953 33.0081 48.4937 33.008 48.4918 33.0079 cv
48.4938 33.008 48.4951 33.0081 48.4972 33.0081 cv
47.5034 33.0081 mo
47.5044 33.0081 47.5062 33.008 47.5072 33.008 cv
47.5058 33.008 47.5048 33.0081 47.5034 33.0081 cv
48.485 33.0077 mo
48.4831 33.0077 48.4824 33.0076 48.4805 33.0076 cv
48.4815 33.0076 48.484 33.0077 48.485 33.0077 cv
47.5157 33.0077 mo
47.5167 33.0077 47.5176 33.0076 47.5186 33.0076 cv
47.5177 33.0076 47.5166 33.0077 47.5157 33.0077 cv
48.4734 33.0074 mo
48.4719 33.0073 48.4698 33.0073 48.4684 33.0072 cv
48.4704 33.0073 48.4714 33.0073 48.4734 33.0074 cv
47.5272 33.0073 mo
47.5282 33.0073 47.5299 33.0073 47.5309 33.0072 cv
47.5294 33.0073 47.5286 33.0073 47.5272 33.0073 cv
48.462 33.007 mo
48.4601 33.007 48.4582 33.0069 48.4564 33.0068 cv
48.4584 33.0069 48.46 33.007 48.462 33.007 cv
47.5386 33.007 mo
47.5401 33.0069 47.5415 33.0069 47.543 33.0069 cv
47.5416 33.0069 47.54 33.0069 47.5386 33.007 cv
48.4504 33.0067 mo
48.4485 33.0066 48.4469 33.0066 48.445 33.0065 cv
48.4465 33.0065 48.4489 33.0066 48.4504 33.0067 cv
47.5505 33.0066 mo
47.552 33.0066 47.5529 33.0066 47.5544 33.0065 cv
47.553 33.0066 47.5519 33.0066 47.5505 33.0066 cv
48.4375 33.0063 mo
48.436 33.0062 48.435 33.0062 48.4336 33.0062 cv
48.4351 33.0062 48.4359 33.0062 48.4375 33.0063 cv
47.5636 33.0063 mo
47.5641 33.0062 47.5654 33.0062 47.5659 33.0062 cv
47.5654 33.0062 47.564 33.0062 47.5636 33.0063 cv
48.4263 33.006 mo
48.4249 33.0059 48.4229 33.0059 48.4214 33.0058 cv
48.4229 33.0059 48.4248 33.0059 48.4263 33.006 cv
47.5748 33.0059 mo
47.5763 33.0059 47.5766 33.0059 47.5781 33.0058 cv
47.5771 33.0059 47.5757 33.0059 47.5748 33.0059 cv
48.4145 33.0056 mo
48.4131 33.0056 48.4113 33.0056 48.4099 33.0055 cv
48.4114 33.0056 48.413 33.0056 48.4145 33.0056 cv
47.5872 33.0056 mo
47.5877 33.0056 47.5892 33.0055 47.5897 33.0055 cv
47.5888 33.0056 47.5882 33.0056 47.5872 33.0056 cv
48.4017 33.0053 mo
48.4003 33.0053 48.3996 33.0052 48.3982 33.0052 cv
48.3992 33.0052 48.4007 33.0053 48.4017 33.0053 cv
47.6008 33.0052 mo
47.6014 33.0052 li
47.6008 33.0052 li
48.3748 33.0046 mo
48.3729 33.0046 48.3709 33.0045 48.369 33.0045 cv
48.371 33.0045 48.3728 33.0046 48.3748 33.0046 cv
47.6253 33.0046 mo
47.6263 33.0046 47.6269 33.0046 47.628 33.0045 cv
47.627 33.0046 47.6262 33.0046 47.6253 33.0046 cv
48.3633 33.0043 mo
48.3609 33.0043 48.3589 33.0042 48.3565 33.0042 cv
48.359 33.0042 48.3608 33.0043 48.3633 33.0043 cv
47.6368 33.0043 mo
47.6383 33.0043 47.6405 33.0042 47.642 33.0042 cv
47.6401 33.0042 47.6387 33.0043 47.6368 33.0043 cv
48.3517 33.0041 mo
48.3494 33.004 48.3475 33.004 48.3452 33.0039 cv
48.3472 33.004 48.3497 33.004 48.3517 33.0041 cv
47.6484 33.0041 mo
47.6504 33.004 47.6519 33.004 47.6539 33.0039 cv
47.652 33.004 47.6503 33.004 47.6484 33.0041 cv
48.3398 33.0038 mo
48.3379 33.0037 48.336 33.0037 48.3341 33.0037 cv
48.3361 33.0037 48.3378 33.0037 48.3398 33.0038 cv
47.6603 33.0038 mo
47.6619 33.0037 47.6636 33.0037 47.6651 33.0037 cv
47.6637 33.0037 47.6618 33.0037 47.6603 33.0038 cv
48.3281 33.0035 mo
48.3262 33.0035 48.3241 33.0034 48.3222 33.0034 cv
48.3242 33.0034 48.3261 33.0035 48.3281 33.0035 cv
47.672 33.0035 mo
47.6735 33.0035 47.6757 33.0034 47.6772 33.0034 cv
47.6753 33.0035 47.6739 33.0035 47.672 33.0035 cv
48.3164 33.0033 mo
48.3145 33.0032 48.3125 33.0032 48.3106 33.0032 cv
48.3121 33.0032 48.3149 33.0033 48.3164 33.0033 cv
47.6838 33.0033 mo
47.6853 33.0032 47.6874 33.0032 47.6889 33.0032 cv
47.6875 33.0032 47.6852 33.0032 47.6838 33.0033 cv
48.3046 33.003 mo
48.3027 33.003 48.3009 33.003 48.299 33.0029 cv
48.301 33.003 48.3026 33.003 48.3046 33.003 cv
47.6955 33.003 mo
47.697 33.003 47.6992 33.003 47.7007 33.0029 cv
47.6992 33.003 47.697 33.003 47.6955 33.003 cv
48.2928 33.0028 mo
48.2909 33.0028 48.289 33.0027 48.2871 33.0027 cv
48.2891 33.0027 48.2908 33.0028 48.2928 33.0028 cv
47.7073 33.0028 mo
47.7094 33.0028 47.7105 33.0027 47.7125 33.0027 cv
47.7107 33.0027 47.7092 33.0028 47.7073 33.0028 cv
48.2816 33.0026 mo
48.2792 33.0026 48.2774 33.0025 48.275 33.0025 cv
48.277 33.0025 48.2796 33.0026 48.2816 33.0026 cv
47.7186 33.0026 mo
47.7206 33.0026 47.7227 33.0025 47.7247 33.0025 cv
47.7228 33.0025 47.7205 33.0026 47.7186 33.0026 cv
48.27 33.0024 mo
48.2676 33.0023 48.2658 33.0023 48.2634 33.0023 cv
48.266 33.0023 48.2675 33.0023 48.27 33.0024 cv
47.7302 33.0024 mo
47.7327 33.0023 47.7338 33.0023 47.7363 33.0023 cv
47.7339 33.0023 47.7325 33.0023 47.7302 33.0024 cv
48.2582 33.0022 mo
48.2559 33.0021 48.2541 33.0021 48.2518 33.0021 cv
48.2538 33.0021 48.2562 33.0022 48.2582 33.0022 cv
47.742 33.0022 mo
47.744 33.0021 47.746 33.0021 47.748 33.0021 cv
47.7461 33.0021 47.7439 33.0021 47.742 33.0022 cv
48.2463 33.002 mo
48.2444 33.002 48.2421 33.0019 48.2402 33.0019 cv
48.2422 33.0019 48.2443 33.002 48.2463 33.002 cv
47.7539 33.002 mo
47.756 33.0019 47.7576 33.0019 47.7596 33.0019 cv
47.7577 33.0019 47.7558 33.0019 47.7539 33.002 cv
48.2349 33.0018 mo
48.2325 33.0018 48.2306 33.0017 48.2283 33.0017 cv
48.2303 33.0017 48.2329 33.0018 48.2349 33.0018 cv
47.7653 33.0018 mo
47.7673 33.0018 47.7696 33.0017 47.7716 33.0017 cv
47.7697 33.0017 47.7672 33.0018 47.7653 33.0018 cv
48.2233 33.0016 mo
48.2209 33.0016 48.2192 33.0016 48.2168 33.0015 cv
48.2193 33.0016 48.2208 33.0016 48.2233 33.0016 cv
47.7772 33.0016 mo
47.7792 33.0016 47.781 33.0016 47.783 33.0015 cv
47.7806 33.0016 47.7795 33.0016 47.7772 33.0016 cv
48.2094 33.0014 mo
48.208 33.0014 48.2067 33.0014 48.2053 33.0014 cv
48.2068 33.0014 48.2079 33.0014 48.2094 33.0014 cv
47.7912 33.0014 mo
47.7922 33.0014 47.7936 33.0014 47.7946 33.0014 cv
47.7932 33.0014 47.7927 33.0014 47.7912 33.0014 cv
48.182 33.0011 mo
48.1801 33.0011 48.1787 33.001 48.1768 33.001 cv
48.1783 33.001 48.1805 33.0011 48.182 33.0011 cv
47.818 33.0011 mo
47.8195 33.0011 47.8213 33.001 47.8228 33.001 cv
47.8214 33.001 47.8194 33.0011 47.818 33.0011 cv
48.17 33.0009 mo
48.1686 33.0009 48.1666 33.0009 48.1652 33.0009 cv
48.1667 33.0009 48.1685 33.0009 48.17 33.0009 cv
47.83 33.0009 mo
47.8315 33.0009 47.8329 33.0009 47.8345 33.0009 cv
47.833 33.0009 47.8314 33.0009 47.83 33.0009 cv
48.1584 33.0008 mo
48.157 33.0008 48.1546 33.0008 48.1532 33.0008 cv
48.1552 33.0008 48.1564 33.0008 48.1584 33.0008 cv
47.8415 33.0008 mo
47.8436 33.0008 47.8446 33.0008 47.8466 33.0008 cv
47.8452 33.0008 47.843 33.0008 47.8415 33.0008 cv
48.1463 33.0007 mo
48.1449 33.0007 48.1431 33.0007 48.1417 33.0007 cv
48.1432 33.0007 48.1448 33.0007 48.1463 33.0007 cv
47.8536 33.0007 mo
47.8551 33.0007 47.8567 33.0007 47.8582 33.0007 cv
47.8567 33.0007 47.8551 33.0007 47.8536 33.0007 cv
48.1349 33.0006 mo
48.133 33.0006 48.1314 33.0006 48.1295 33.0005 cv
48.131 33.0006 48.1334 33.0006 48.1349 33.0006 cv
47.8651 33.0006 mo
47.8666 33.0006 47.8689 33.0006 47.8704 33.0005 cv
47.8685 33.0006 47.867 33.0006 47.8651 33.0006 cv
48.1229 33.0005 mo
48.1215 33.0005 48.1192 33.0005 48.1178 33.0005 cv
48.1193 33.0005 48.1214 33.0005 48.1229 33.0005 cv
47.8771 33.0005 mo
47.8786 33.0005 47.8806 33.0005 47.8821 33.0005 cv
47.8807 33.0005 47.8785 33.0005 47.8771 33.0005 cv
48.1114 33.0004 mo
48.1095 33.0004 48.1078 33.0004 48.1059 33.0004 cv
48.1079 33.0004 48.1094 33.0004 48.1114 33.0004 cv
47.8886 33.0004 mo
47.8906 33.0004 47.892 33.0004 47.894 33.0004 cv
47.8921 33.0004 47.8905 33.0004 47.8886 33.0004 cv
48.0993 33.0003 mo
48.0974 33.0003 48.0961 33.0003 48.0942 33.0003 cv
48.0962 33.0003 48.0973 33.0003 48.0993 33.0003 cv
47.9007 33.0003 mo
47.9027 33.0003 47.9037 33.0003 47.9057 33.0003 cv
47.9038 33.0003 47.9026 33.0003 47.9007 33.0003 cv
48.088 33.0002 mo
48.0861 33.0002 48.0841 33.0002 48.0822 33.0002 cv
48.0842 33.0002 48.086 33.0002 48.088 33.0002 cv
47.912 33.0002 mo
47.914 33.0002 47.9157 33.0002 47.9178 33.0002 cv
47.9159 33.0002 47.9139 33.0002 47.912 33.0002 cv
48.0759 33.0002 mo
48.0745 33.0002 48.0719 33.0002 48.0705 33.0002 cv
48.072 33.0002 48.0744 33.0002 48.0759 33.0002 cv
47.924 33.0002 mo
47.9255 33.0002 47.9279 33.0002 47.9294 33.0002 cv
47.928 33.0002 47.9255 33.0002 47.924 33.0002 cv
48.0643 33.0001 mo
48.0624 33.0001 48.0607 33.0001 48.0588 33.0001 cv
48.0608 33.0001 48.0623 33.0001 48.0643 33.0001 cv
47.9357 33.0001 mo
47.9372 33.0001 47.9396 33.0001 47.9412 33.0001 cv
47.9393 33.0001 47.9376 33.0001 47.9357 33.0001 cv
48.0522 33.0001 mo
48.0503 33.0001 48.0489 33.0001 48.047 33.0001 cv
48.049 33.0001 48.0502 33.0001 48.0522 33.0001 cv
47.9477 33.0001 mo
47.9498 33.0001 47.951 33.0001 47.953 33.0001 cv
47.9511 33.0001 47.9496 33.0001 47.9477 33.0001 cv
48.0408 33 mo
48.039 33 48.0371 33 48.0352 33 cv
48.0372 33 48.0388 33 48.0408 33 cv
47.9591 33 mo
47.9611 33 47.9628 33 47.9648 33 cv
47.9629 33 47.961 33 47.9591 33 cv
48.0281 33 mo
48.0267 33 48.025 33 48.0236 33 cv
48.0251 33 48.0266 33 48.0281 33 cv
47.9719 33 mo
47.9734 33 47.9749 33 47.9764 33 cv
47.975 33 47.9733 33 47.9719 33 cv
48.0159 33 mo
48.0145 33 48.0131 33 48.0117 33 cv
48.0132 33 48.0144 33 48.0159 33 cv
47.984 33 mo
47.9856 33 47.9868 33 47.9883 33 cv
47.9869 33 47.9855 33 47.984 33 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[4.32 0 0 1.44 45.6 30.4 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 3 
/M[9 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~'GM5q'GM5q'GhQ%(Ddl((Ddu.)B'M4)B'L~>
<~.4H\p.4H\p.5*>-0/"t30/#.=1c.$G1c.#~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
33.2105 46.5911 mo
33.1643 46.5784 33.1182 46.5656 33.0723 46.5527 cv
33.7446 39.5634 39.2314 33.959 46.1693 33.1111 cv
46.1701 33.111 li
46.1737 33.1106 46.1767 33.1102 46.1804 33.1098 cv
46.1809 33.1097 46.1807 33.1097 46.1812 33.1097 cv
46.1848 33.1092 46.1877 33.1089 46.1914 33.1084 cv
46.1923 33.1083 li
46.1997 33.1074 46.2063 33.1066 46.2137 33.1058 cv
46.2145 33.1057 li
46.2182 33.1052 46.2212 33.1049 46.2249 33.1044 cv
46.2254 33.1044 li
46.2291 33.1039 46.2323 33.1035 46.236 33.1031 cv
46.2363 33.1031 li
46.2584 33.1005 46.2803 33.098 46.3024 33.0954 cv
46.3025 33.0954 li
46.3052 33.0951 46.308 33.0948 46.3108 33.0945 cv
46.3118 33.0944 46.3129 33.0943 46.3139 33.0942 cv
46.3162 33.0939 46.3186 33.0936 46.3209 33.0934 cv
46.3224 33.0932 46.324 33.093 46.3255 33.0929 cv
46.3278 33.0926 46.3303 33.0923 46.3326 33.0921 cv
46.3341 33.0919 46.3351 33.0918 46.3366 33.0916 cv
46.3389 33.0914 46.3416 33.0911 46.3439 33.0908 cv
46.3449 33.0907 46.347 33.0905 46.348 33.0904 cv
46.3503 33.0901 46.3531 33.0898 46.3554 33.0896 cv
46.3568 33.0894 46.3579 33.0893 46.3593 33.0891 cv
46.3617 33.0889 46.364 33.0886 46.3663 33.0884 cv
46.3677 33.0882 46.3696 33.088 46.3711 33.0878 cv
46.3729 33.0876 46.3759 33.0873 46.3778 33.0871 cv
46.3788 33.087 46.3811 33.0868 46.3821 33.0867 cv
46.3848 33.0864 46.3864 33.0862 46.3892 33.0859 cv
46.3906 33.0857 46.3923 33.0856 46.3937 33.0854 cv
46.396 33.0852 46.3981 33.0849 46.4005 33.0847 cv
46.4019 33.0845 46.4036 33.0843 46.4051 33.0842 cv
46.4074 33.0839 46.4093 33.0837 46.4116 33.0835 cv
46.4136 33.0833 46.4155 33.0831 46.4174 33.0829 cv
46.4193 33.0827 46.4209 33.0825 46.4227 33.0823 cv
46.4252 33.0821 46.4271 33.0819 46.4296 33.0816 cv
46.431 33.0815 46.4326 33.0813 46.434 33.0811 cv
46.4365 33.0809 46.4391 33.0806 46.4416 33.0804 cv
46.443 33.0802 46.4442 33.0801 46.4456 33.0799 cv
46.4481 33.0797 46.4518 33.0793 46.4543 33.079 cv
46.4547 33.079 46.4564 33.0788 46.4569 33.0788 cv
46.4687 33.0776 46.48 33.0764 46.4918 33.0752 cv
46.4923 33.0752 46.4935 33.0751 46.494 33.075 cv
46.4974 33.0747 46.4998 33.0744 46.5032 33.0741 cv
46.5042 33.074 46.5059 33.0738 46.5068 33.0737 cv
46.5093 33.0735 46.5124 33.0732 46.5148 33.0729 cv
46.5162 33.0728 46.5168 33.0728 46.5182 33.0726 cv
46.5206 33.0724 46.524 33.072 46.5265 33.0718 cv
46.5278 33.0717 46.529 33.0715 46.5304 33.0714 cv
46.5329 33.0712 46.5351 33.071 46.5375 33.0707 cv
46.5394 33.0705 46.5405 33.0704 46.5424 33.0703 cv
46.5448 33.07 46.5467 33.0698 46.5491 33.0696 cv
46.5505 33.0695 46.5528 33.0692 46.5542 33.0691 cv
46.5566 33.0689 46.5583 33.0687 46.5608 33.0685 cv
46.5622 33.0683 46.5637 33.0682 46.565 33.0681 cv
46.568 33.0678 46.5697 33.0676 46.5726 33.0673 cv
46.574 33.0672 46.5754 33.0671 46.5768 33.067 cv
46.5793 33.0667 46.5816 33.0665 46.5841 33.0663 cv
46.5854 33.0661 46.5869 33.066 46.5883 33.0659 cv
46.5907 33.0656 46.5935 33.0654 46.5959 33.0652 cv
46.5973 33.065 46.5984 33.0649 46.5998 33.0648 cv
46.6028 33.0645 46.6053 33.0643 46.6082 33.064 cv
46.6092 33.0639 46.6101 33.0638 46.611 33.0638 cv
46.614 33.0635 46.6171 33.0632 46.6201 33.0629 cv
46.621 33.0628 46.6219 33.0628 46.6228 33.0627 cv
46.6262 33.0624 46.6295 33.0621 46.6329 33.0618 cv
46.6334 33.0617 46.6337 33.0617 46.6341 33.0616 cv
46.6381 33.0613 46.6412 33.061 46.6451 33.0606 cv
46.6459 33.0606 li
46.6617 33.0592 46.6771 33.0578 46.6929 33.0564 cv
46.6933 33.0564 46.6939 33.0563 46.6944 33.0563 cv
46.6978 33.056 46.7014 33.0557 46.7048 33.0554 cv
46.7058 33.0553 li
46.7088 33.0551 46.7131 33.0547 46.7161 33.0544 cv
46.717 33.0544 46.7177 33.0543 46.7186 33.0542 cv
46.7216 33.054 46.7249 33.0537 46.7279 33.0534 cv
46.7288 33.0534 46.7296 33.0533 46.7305 33.0532 cv
46.7335 33.053 46.7364 33.0527 46.7393 33.0525 cv
46.7403 33.0524 46.7412 33.0523 46.7421 33.0522 cv
46.7451 33.052 46.7488 33.0517 46.7517 33.0514 cv
46.7522 33.0514 46.7529 33.0513 46.7534 33.0513 cv
46.7564 33.0511 46.7603 33.0507 46.7632 33.0505 cv
46.7642 33.0504 46.7643 33.0504 46.7653 33.0503 cv
46.7687 33.05 46.7721 33.0498 46.7756 33.0495 cv
46.776 33.0495 46.7763 33.0494 46.7767 33.0494 cv
46.7802 33.0491 46.7836 33.0488 46.7871 33.0486 cv
46.7876 33.0485 46.7882 33.0485 46.7886 33.0484 cv
46.7926 33.0481 46.7959 33.0478 46.7999 33.0475 cv
46.8 33.0475 li
46.804 33.0472 46.8076 33.0469 46.8116 33.0466 cv
46.812 33.0466 li
46.8357 33.0447 46.8594 33.0429 46.8832 33.0411 cv
46.8833 33.0411 li
46.8873 33.0408 46.8911 33.0406 46.895 33.0403 cv
46.8953 33.0403 li
46.8993 33.04 46.9023 33.0397 46.9063 33.0395 cv
46.9072 33.0394 46.9078 33.0393 46.9088 33.0393 cv
46.9117 33.0391 46.9149 33.0388 46.9179 33.0386 cv
46.9188 33.0386 46.9195 33.0385 46.9204 33.0384 cv
46.9234 33.0382 46.9268 33.038 46.9298 33.0378 cv
46.9302 33.0377 46.9318 33.0376 46.9323 33.0376 cv
46.9352 33.0374 46.9388 33.0371 46.9418 33.0369 cv
46.9423 33.0369 46.9431 33.0368 46.9436 33.0368 cv
46.9466 33.0366 46.9504 33.0363 46.9534 33.0361 cv
46.9543 33.0361 46.9549 33.036 46.9558 33.0359 cv
46.9588 33.0357 46.9623 33.0355 46.9653 33.0353 cv
46.9657 33.0353 46.9668 33.0352 46.9673 33.0352 cv
46.9703 33.035 46.9742 33.0347 46.9771 33.0345 cv
46.9781 33.0344 46.9782 33.0344 46.9792 33.0344 cv
46.9831 33.0341 46.9861 33.0339 46.9901 33.0336 cv
46.9904 33.0336 li
46.9944 33.0333 46.998 33.0331 47.002 33.0328 cv
47.0024 33.0328 li
47.0262 33.0312 47.0497 33.0297 47.0736 33.0283 cv
47.0741 33.0282 47.0743 33.0282 47.0747 33.0282 cv
47.0782 33.028 47.082 33.0278 47.0855 33.0275 cv
47.086 33.0275 47.0863 33.0275 47.0867 33.0275 cv
47.0897 33.0273 47.0939 33.027 47.0968 33.0269 cv
47.0978 33.0268 47.0985 33.0268 47.0995 33.0267 cv
47.1025 33.0265 47.1059 33.0263 47.1089 33.0262 cv
47.1098 33.0261 47.1101 33.0261 47.111 33.026 cv
47.114 33.0259 47.1176 33.0256 47.1206 33.0255 cv
47.1211 33.0254 47.1224 33.0254 47.1228 33.0253 cv
47.1263 33.0251 47.1294 33.025 47.1329 33.0248 cv
47.1334 33.0247 47.1338 33.0247 47.1342 33.0247 cv
47.1377 33.0245 47.1409 33.0243 47.1444 33.0241 cv
47.1448 33.0241 47.146 33.024 47.1465 33.024 cv
47.1495 33.0238 47.1532 33.0236 47.1562 33.0234 cv
47.1567 33.0234 47.1578 33.0234 47.1583 33.0233 cv
47.1613 33.0232 47.1654 33.0229 47.1684 33.0228 cv
47.1689 33.0227 47.1694 33.0227 47.1699 33.0227 cv
47.1734 33.0225 47.177 33.0223 47.1805 33.0221 cv
47.181 33.0221 47.1813 33.0221 47.1817 33.022 cv
47.1857 33.0218 47.1887 33.0217 47.1926 33.0215 cv
47.1935 33.0214 li
47.2174 33.0201 47.2409 33.0189 47.2648 33.0178 cv
47.2653 33.0178 47.2662 33.0177 47.2666 33.0177 cv
47.2701 33.0175 47.2729 33.0174 47.2764 33.0172 cv
47.2773 33.0172 47.2782 33.0171 47.2792 33.0171 cv
47.2822 33.017 47.2851 33.0168 47.2881 33.0167 cv
47.2891 33.0166 47.2903 33.0166 47.2912 33.0165 cv
47.2942 33.0164 47.2968 33.0163 47.2998 33.0161 cv
47.3008 33.0161 47.3022 33.016 47.3032 33.016 cv
47.3062 33.0158 47.3084 33.0157 47.3114 33.0156 cv
47.3128 33.0155 47.3138 33.0155 47.3152 33.0154 cv
47.3182 33.0153 47.3207 33.0152 47.3237 33.015 cv
47.3246 33.015 47.3254 33.015 47.3263 33.0149 cv
47.3293 33.0148 47.3323 33.0147 47.3353 33.0145 cv
47.3363 33.0145 47.3376 33.0144 47.3385 33.0144 cv
47.3415 33.0143 47.3443 33.0141 47.3473 33.014 cv
47.3483 33.014 47.3492 33.0139 47.3501 33.0139 cv
47.3526 33.0138 47.3561 33.0136 47.3586 33.0135 cv
47.3595 33.0135 47.3614 33.0134 47.3624 33.0134 cv
47.3654 33.0132 47.3681 33.0131 47.3711 33.013 cv
47.3715 33.013 47.3731 33.0129 47.3736 33.0129 cv
47.3771 33.0128 47.3805 33.0126 47.384 33.0125 cv
47.3845 33.0125 47.3848 33.0124 47.3853 33.0124 cv
47.4053 33.0116 47.4249 33.0109 47.4449 33.0101 cv
47.4454 33.0101 47.4456 33.0101 47.4461 33.0101 cv
47.4496 33.01 47.4528 33.0098 47.4563 33.0097 cv
47.4572 33.0097 47.4588 33.0096 47.4597 33.0096 cv
47.4627 33.0095 47.4653 33.0094 47.4683 33.0093 cv
47.4697 33.0092 47.4699 33.0092 47.4714 33.0092 cv
47.4739 33.0091 47.4773 33.009 47.4798 33.0089 cv
47.4807 33.0089 47.4828 33.0088 47.4838 33.0088 cv
47.4863 33.0087 47.4892 33.0086 47.4917 33.0085 cv
47.4931 33.0084 47.4941 33.0084 47.4955 33.0084 cv
47.498 33.0083 47.5009 33.0082 47.5034 33.0081 cv
47.5048 33.0081 47.5058 33.008 47.5072 33.008 cv
47.5102 33.0079 47.5127 33.0078 47.5157 33.0077 cv
47.5166 33.0077 47.5177 33.0076 47.5186 33.0076 cv
47.5216 33.0075 47.5242 33.0074 47.5272 33.0073 cv
47.5286 33.0073 47.5294 33.0073 47.5309 33.0072 cv
47.5334 33.0071 47.5361 33.0071 47.5386 33.007 cv
47.54 33.0069 47.5416 33.0069 47.543 33.0069 cv
47.5455 33.0068 47.548 33.0067 47.5505 33.0066 cv
47.5519 33.0066 47.553 33.0066 47.5544 33.0065 cv
47.5574 33.0064 47.5606 33.0063 47.5636 33.0063 cv
47.564 33.0062 47.5654 33.0062 47.5659 33.0062 cv
47.5689 33.0061 47.5717 33.006 47.5748 33.0059 cv
47.5757 33.0059 47.5771 33.0059 47.5781 33.0058 cv
47.5811 33.0058 47.5842 33.0057 47.5872 33.0056 cv
47.5882 33.0056 47.5888 33.0056 47.5897 33.0055 cv
47.5937 33.0054 47.5968 33.0053 47.6008 33.0052 cv
47.6014 33.0052 li
47.6095 33.005 47.6173 33.0048 47.6253 33.0046 cv
47.6262 33.0046 47.627 33.0046 47.628 33.0045 cv
47.631 33.0045 47.6338 33.0044 47.6368 33.0043 cv
47.6387 33.0043 47.6401 33.0042 47.642 33.0042 cv
47.644 33.0042 47.6464 33.0041 47.6484 33.0041 cv
47.6503 33.004 47.652 33.004 47.6539 33.0039 cv
47.6559 33.0039 47.6583 33.0038 47.6603 33.0038 cv
47.6618 33.0037 47.6637 33.0037 47.6651 33.0037 cv
47.6677 33.0036 47.6695 33.0036 47.672 33.0035 cv
47.6739 33.0035 47.6753 33.0035 47.6772 33.0034 cv
47.6797 33.0034 47.6812 33.0033 47.6838 33.0033 cv
47.6852 33.0032 47.6875 33.0032 47.6889 33.0032 cv
47.6914 33.0031 47.693 33.0031 47.6955 33.003 cv
47.697 33.003 47.6992 33.003 47.7007 33.0029 cv
47.7027 33.0029 47.7053 33.0028 47.7073 33.0028 cv
47.7092 33.0028 47.7107 33.0027 47.7125 33.0027 cv
47.7146 33.0027 47.7166 33.0026 47.7186 33.0026 cv
47.7205 33.0026 47.7228 33.0025 47.7247 33.0025 cv
47.7262 33.0025 47.7286 33.0024 47.7302 33.0024 cv
47.7325 33.0023 47.7339 33.0023 47.7363 33.0023 cv
47.7378 33.0023 47.7404 33.0022 47.742 33.0022 cv
47.7439 33.0021 47.7461 33.0021 47.748 33.0021 cv
47.75 33.002 47.7519 33.002 47.7539 33.002 cv
47.7558 33.0019 47.7577 33.0019 47.7596 33.0019 cv
47.7616 33.0019 47.7633 33.0018 47.7653 33.0018 cv
47.7672 33.0018 47.7697 33.0017 47.7716 33.0017 cv
47.7736 33.0017 47.7752 33.0017 47.7772 33.0016 cv
47.7795 33.0016 47.7806 33.0016 47.783 33.0015 cv
47.7855 33.0015 47.7887 33.0015 47.7912 33.0014 cv
47.7927 33.0014 47.7932 33.0014 47.7946 33.0014 cv
47.8027 33.0013 47.8099 33.0012 47.818 33.0011 cv
47.8194 33.0011 47.8214 33.001 47.8228 33.001 cv
47.8253 33.001 47.8275 33.001 47.83 33.0009 cv
47.8314 33.0009 47.833 33.0009 47.8345 33.0009 cv
47.8365 33.0009 47.8395 33.0008 47.8415 33.0008 cv
47.843 33.0008 47.8452 33.0008 47.8466 33.0008 cv
47.8486 33.0007 47.8516 33.0007 47.8536 33.0007 cv
47.8551 33.0007 47.8567 33.0007 47.8582 33.0007 cv
47.8607 33.0006 47.8626 33.0006 47.8651 33.0006 cv
47.867 33.0006 47.8685 33.0006 47.8704 33.0005 cv
47.8729 33.0005 47.8745 33.0005 47.8771 33.0005 cv
47.8785 33.0005 47.8807 33.0005 47.8821 33.0005 cv
47.8841 33.0004 47.8866 33.0004 47.8886 33.0004 cv
47.8905 33.0004 47.8921 33.0004 47.894 33.0004 cv
47.896 33.0003 47.8987 33.0003 47.9007 33.0003 cv
47.9026 33.0003 47.9038 33.0003 47.9057 33.0003 cv
47.9077 33.0003 47.91 33.0003 47.912 33.0002 cv
47.9139 33.0002 47.9159 33.0002 47.9178 33.0002 cv
47.9198 33.0002 47.922 33.0002 47.924 33.0002 cv
47.9255 33.0002 47.928 33.0002 47.9294 33.0002 cv
47.932 33.0001 47.9331 33.0001 47.9357 33.0001 cv
47.9376 33.0001 47.9393 33.0001 47.9412 33.0001 cv
47.9432 33.0001 47.9457 33.0001 47.9477 33.0001 cv
47.9496 33.0001 47.9511 33.0001 47.953 33.0001 cv
47.955 33.0001 47.9571 33.0001 47.9591 33 cv
47.961 33 47.9629 33 47.9648 33 cv
47.9668 33 47.9698 33 47.9719 33 cv
47.9733 33 47.975 33 47.9764 33 cv
47.9789 33 47.9815 33 47.984 33 cv
47.9855 33 47.9869 33 47.9883 33 cv
47.9923 33 47.9959 33 48 33 cv
48.004 33 48.0077 33 48.0117 33 cv
48.0131 33 48.0145 33 48.0159 33 cv
48.0184 33 48.0211 33 48.0236 33 cv
48.025 33 48.0267 33 48.0281 33 cv
48.0301 33 48.0331 33 48.0352 33 cv
48.0371 33 48.039 33 48.0408 33 cv
48.0429 33.0001 48.0449 33.0001 48.047 33.0001 cv
48.0489 33.0001 48.0503 33.0001 48.0522 33.0001 cv
48.0542 33.0001 48.0568 33.0001 48.0588 33.0001 cv
48.0607 33.0001 48.0624 33.0001 48.0643 33.0001 cv
48.0663 33.0001 48.0685 33.0001 48.0705 33.0002 cv
48.0719 33.0002 48.0745 33.0002 48.0759 33.0002 cv
48.078 33.0002 48.0802 33.0002 48.0822 33.0002 cv
48.0841 33.0002 48.0861 33.0002 48.088 33.0002 cv
48.09 33.0003 48.0922 33.0003 48.0942 33.0003 cv
48.0961 33.0003 48.0974 33.0003 48.0993 33.0003 cv
48.1013 33.0003 48.1039 33.0003 48.1059 33.0004 cv
48.1078 33.0004 48.1095 33.0004 48.1114 33.0004 cv
48.1134 33.0004 48.1158 33.0004 48.1178 33.0005 cv
48.1192 33.0005 48.1215 33.0005 48.1229 33.0005 cv
48.1254 33.0005 48.127 33.0005 48.1295 33.0005 cv
48.1314 33.0006 48.133 33.0006 48.1349 33.0006 cv
48.1374 33.0006 48.1391 33.0006 48.1417 33.0007 cv
48.1431 33.0007 48.1449 33.0007 48.1463 33.0007 cv
48.1484 33.0007 48.1512 33.0007 48.1532 33.0008 cv
48.1546 33.0008 48.157 33.0008 48.1584 33.0008 cv
48.1605 33.0008 48.1632 33.0009 48.1652 33.0009 cv
48.1666 33.0009 48.1686 33.0009 48.17 33.0009 cv
48.1725 33.001 48.1743 33.001 48.1768 33.001 cv
48.1787 33.001 48.1801 33.0011 48.182 33.0011 cv
48.19 33.0012 48.1972 33.0013 48.2053 33.0014 cv
48.2067 33.0014 48.208 33.0014 48.2094 33.0014 cv
48.2114 33.0015 48.2148 33.0015 48.2168 33.0015 cv
48.2192 33.0016 48.2209 33.0016 48.2233 33.0016 cv
48.2248 33.0017 48.2267 33.0017 48.2283 33.0017 cv
48.2306 33.0017 48.2325 33.0018 48.2349 33.0018 cv
48.2369 33.0018 48.2382 33.0019 48.2402 33.0019 cv
48.2421 33.0019 48.2444 33.002 48.2463 33.002 cv
48.2483 33.002 48.2498 33.002 48.2518 33.0021 cv
48.2541 33.0021 48.2559 33.0021 48.2582 33.0022 cv
48.2597 33.0022 48.2619 33.0022 48.2634 33.0023 cv
48.2658 33.0023 48.2676 33.0023 48.27 33.0024 cv
48.2715 33.0024 48.2735 33.0024 48.275 33.0025 cv
48.2774 33.0025 48.2792 33.0026 48.2816 33.0026 cv
48.2836 33.0026 48.2851 33.0027 48.2871 33.0027 cv
48.289 33.0027 48.2909 33.0028 48.2928 33.0028 cv
48.2948 33.0028 48.297 33.0029 48.299 33.0029 cv
48.3009 33.003 48.3027 33.003 48.3046 33.003 cv
48.3066 33.0031 48.3086 33.0031 48.3106 33.0032 cv
48.3125 33.0032 48.3145 33.0032 48.3164 33.0033 cv
48.3184 33.0033 48.3202 33.0034 48.3222 33.0034 cv
48.3241 33.0034 48.3262 33.0035 48.3281 33.0035 cv
48.3301 33.0036 48.3321 33.0036 48.3341 33.0037 cv
48.336 33.0037 48.3379 33.0037 48.3398 33.0038 cv
48.3418 33.0038 48.3432 33.0039 48.3452 33.0039 cv
48.3475 33.004 48.3494 33.004 48.3517 33.0041 cv
48.3532 33.0041 48.355 33.0041 48.3565 33.0042 cv
48.3589 33.0042 48.3609 33.0043 48.3633 33.0043 cv
48.3648 33.0044 48.3675 33.0044 48.369 33.0045 cv
48.3709 33.0045 48.3729 33.0046 48.3748 33.0046 cv
48.3828 33.0048 48.3902 33.005 48.3982 33.0052 cv
48.3996 33.0052 48.4003 33.0053 48.4017 33.0053 cv
48.4047 33.0054 48.4069 33.0054 48.4099 33.0055 cv
48.4113 33.0056 48.4131 33.0056 48.4145 33.0056 cv
48.4165 33.0057 48.4194 33.0058 48.4214 33.0058 cv
48.4229 33.0059 48.4249 33.0059 48.4263 33.006 cv
48.4288 33.006 48.4311 33.0061 48.4336 33.0062 cv
48.435 33.0062 48.436 33.0062 48.4375 33.0063 cv
48.44 33.0064 48.4425 33.0064 48.445 33.0065 cv
48.4469 33.0066 48.4485 33.0066 48.4504 33.0067 cv
48.4524 33.0067 48.4544 33.0068 48.4564 33.0068 cv
48.4582 33.0069 48.4601 33.007 48.462 33.007 cv
48.464 33.0071 48.4664 33.0071 48.4684 33.0072 cv
48.4698 33.0073 48.4719 33.0073 48.4734 33.0074 cv
48.4759 33.0074 48.478 33.0075 48.4805 33.0076 cv
48.4824 33.0076 48.4831 33.0077 48.485 33.0077 cv
48.4875 33.0078 48.4893 33.0079 48.4918 33.0079 cv
48.4937 33.008 48.4953 33.0081 48.4972 33.0081 cv
48.4992 33.0082 48.5013 33.0083 48.5033 33.0083 cv
48.5052 33.0084 48.5069 33.0084 48.5088 33.0085 cv
48.5108 33.0086 48.5128 33.0086 48.5148 33.0087 cv
48.5167 33.0088 48.5188 33.0088 48.5207 33.0089 cv
48.5227 33.009 48.5246 33.009 48.5266 33.0091 cv
48.5285 33.0092 48.5303 33.0092 48.5322 33.0093 cv
48.5342 33.0094 48.5361 33.0094 48.5381 33.0095 cv
48.5404 33.0096 48.5418 33.0096 48.5441 33.0097 cv
48.5456 33.0098 48.548 33.0099 48.5495 33.0099 cv
48.5519 33.01 48.5532 33.0101 48.5555 33.0101 cv
48.558 33.0102 48.5594 33.0103 48.5619 33.0104 cv
48.5638 33.0105 48.5654 33.0105 48.5673 33.0106 cv
48.5753 33.0109 48.5822 33.0111 48.5902 33.0115 cv
48.5921 33.0115 48.5933 33.0116 48.5952 33.0117 cv
48.5977 33.0117 48.5997 33.0118 48.6022 33.0119 cv
48.6032 33.012 48.6053 33.0121 48.6062 33.0121 cv
48.6087 33.0122 48.6113 33.0123 48.6138 33.0124 cv
48.6152 33.0124 48.6173 33.0125 48.6187 33.0126 cv
48.6207 33.0127 48.6233 33.0128 48.6253 33.0129 cv
48.6272 33.0129 48.6296 33.013 48.6315 33.0131 cv
48.633 33.0132 48.635 33.0133 48.6365 33.0133 cv
48.6388 33.0134 48.6407 33.0135 48.6431 33.0136 cv
48.6446 33.0137 48.647 33.0138 48.6485 33.0138 cv
48.6509 33.0139 48.652 33.014 48.6544 33.0141 cv
48.6564 33.0142 48.658 33.0142 48.66 33.0143 cv
48.6619 33.0144 48.6641 33.0145 48.666 33.0146 cv
48.668 33.0147 48.6699 33.0148 48.6719 33.0149 cv
48.6738 33.0149 48.6759 33.015 48.6778 33.0151 cv
48.6793 33.0152 48.6814 33.0153 48.6829 33.0153 cv
48.6852 33.0154 48.6874 33.0156 48.6898 33.0157 cv
48.6913 33.0157 48.6929 33.0158 48.6944 33.0159 cv
48.6967 33.016 48.6989 33.0161 48.7013 33.0162 cv
48.7028 33.0163 48.7044 33.0163 48.7059 33.0164 cv
48.7082 33.0165 48.7105 33.0166 48.7129 33.0167 cv
48.7144 33.0168 48.7158 33.0169 48.7173 33.0169 cv
48.7201 33.0171 48.7218 33.0172 48.7246 33.0173 cv
48.7261 33.0174 48.7267 33.0174 48.7282 33.0175 cv
48.731 33.0176 48.7333 33.0177 48.7361 33.0178 cv
48.7371 33.0179 48.7388 33.018 48.7398 33.018 cv
48.7426 33.0182 48.7449 33.0183 48.7477 33.0184 cv
48.7482 33.0184 48.7493 33.0185 48.7498 33.0185 cv
48.7597 33.019 48.7692 33.0195 48.7791 33.02 cv
48.7796 33.02 48.7813 33.0201 48.7818 33.0201 cv
48.7846 33.0203 48.7871 33.0204 48.79 33.0205 cv
48.791 33.0206 48.7923 33.0207 48.7933 33.0207 cv
48.7961 33.0209 48.7979 33.021 48.8008 33.0211 cv
48.8022 33.0212 48.8034 33.0213 48.8049 33.0213 cv
48.8077 33.0215 48.8098 33.0216 48.8126 33.0217 cv
48.8141 33.0218 48.8148 33.0219 48.8163 33.0219 cv
48.8186 33.0221 48.821 33.0222 48.8234 33.0223 cv
48.8249 33.0224 48.8266 33.0225 48.8281 33.0226 cv
48.8304 33.0227 48.8328 33.0228 48.8351 33.023 cv
48.8366 33.0231 48.8379 33.0231 48.8394 33.0232 cv
48.8417 33.0233 48.8445 33.0235 48.8468 33.0236 cv
48.8483 33.0237 48.8494 33.0238 48.8508 33.0238 cv
48.8532 33.024 48.8559 33.0241 48.8582 33.0243 cv
48.8597 33.0243 48.8611 33.0244 48.8626 33.0245 cv
48.865 33.0247 48.8673 33.0248 48.8696 33.0249 cv
48.8711 33.025 48.8724 33.0251 48.8739 33.0252 cv
48.8762 33.0253 48.8793 33.0255 48.8816 33.0256 cv
48.8826 33.0257 48.8838 33.0257 48.8848 33.0258 cv
48.8876 33.026 48.8903 33.0261 48.8931 33.0263 cv
48.8941 33.0263 48.895 33.0264 48.896 33.0265 cv
48.8993 33.0267 48.9018 33.0268 48.9051 33.027 cv
48.9056 33.027 48.9057 33.027 48.9062 33.0271 cv
48.9094 33.0273 48.913 33.0275 48.9163 33.0277 cv
48.9175 33.0277 li
48.9465 33.0295 48.9763 33.0314 49.0053 33.0333 cv
49.0058 33.0334 49.0062 33.0334 49.0067 33.0334 cv
49.0104 33.0337 49.0138 33.0339 49.0175 33.0341 cv
49.0176 33.0341 li
49.0213 33.0344 49.0243 33.0346 49.0281 33.0349 cv
49.0292 33.0349 li
49.0329 33.0352 49.0362 33.0354 49.0399 33.0357 cv
49.0404 33.0357 49.0395 33.0356 49.04 33.0357 cv
49.0437 33.0359 49.0469 33.0362 49.0506 33.0364 cv
49.0517 33.0365 li
56.3526 33.5446 62.2285 39.3038 62.9258 46.5527 cv
62.8804 46.5654 62.8346 46.5781 62.7891 46.5907 cv
61.633 39.4635 55.4489 34 48 34 cv
40.5494 34 34.365 39.4639 33.2105 46.5911 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[31.68 0 0 15.36 32.16 16.48 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 66 
/H 32 
/M[66 0 0 -32 0 32 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 66 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 66 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 66 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 66 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
^Au1Tqujb>aT/^Kc33\@^Br?hWrUcUkQS^/h#O,KiWe6D^CB?+QN6@Xe-Nf"nGnOKp'JkJ^CpDDK)blY
^^@sor=t%ep]/&;bo$$hO9"\K^CAd6ko6&kj8cq*i?$ktU]B*K^CfcUeKV-rciCfnod.d-\,aMK^D-\s
_(!5$]E#tgq%pdtbQ+pKd2DBj^G=@?VuYQkjVtrm_uR@KaW:*r^H0X?YQ3,pm3'//fDqcKh'1l'^I@,^
S,h^tfd+=)li<1KnL)X1^JFP'L]I<&`@J]'!!%TNr;aSaaBSFDMZE>K^G+)DmU2:[klAISgh5\\T)daK
^Gb4lg2<kieH!?Fn9!$!ZN//K^HMF>`d5;u_#V><r^";N`rNRKbXM.m^PU><XT6pCl:A[OgAp=8^Au2G
r(OklaT2&8J,~>

%%EndBinary
grestore
np
97 59 mo
97 59 li
97 33 li
107.169 33 li
109.591 34.8027 li
109.856 35 li
110.188 35 li
123.088 35 li
121.365 35 109.855 35 109.855 35 cv
109.855 35 107.6 33.3203 107.168 33 cv
106.6 33 98.6152 33 97 33 cv
97 33.6172 97 36.6777 97 40.5 cv
97 40.5 li
97 47.7813 97 57.8255 97 59 cv
98 58.787 mo
98 55.4111 98 46.3154 98 40.1042 cv
98.6093 39.8751 99.2449 39.6569 99.9028 39.45 cv
99.6515 43.2356 99 53.3091 99 56 cv
99 57.2894 98.5508 58.1798 98 58.787 cv
123.088 38 mo
105.762 38 li
110.042 37.1822 114.697 36.75 119 36.75 cv
120.365 36.75 121.734 36.8027 123.088 36.8906 cv
123.088 38 li
gsave
[28.3062 0 0 28.3062 115.021 52.9023 ]ct
clp
/0 /Gradient get_res exec grestore
np
107.5 32 mo
96 32 li
96 60 li
124.088 60 li
124.088 34 li
110.188 34 li
107.5 32 li
107.169 33 mo
109.591 34.8027 li
109.856 35 li
110.188 35 li
123.088 35 li
123.088 59 li
97 59 li
97 33 li
107.169 33 li
.05 0 0 .25 cmyk
f
98 40.1042 mo
98 36.9502 98 34.5395 98 34 cv
99.6152 34 107.6 34 108.168 34 cv
108.6 34.3203 110.855 36 110.855 36 cv
110.855 36 119.781 36 123.088 36 cv
123.088 36.8906 li
121.734 36.8027 120.365 36.75 119 36.75 cv
114.697 36.75 110.042 37.1822 105.762 38 cv
100 38 li
100 38 99.9628 38.5454 99.9028 39.45 cv
99.2449 39.6569 98.6093 39.8751 98 40.1042 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[26.4 0 0 7.68 97.44 23.2 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 55 
/H 16 
/M[55 0 0 -16 0 16 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 55 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 55 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 55 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 55 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
mJu8JqZ=;.dfB:HqZ?Trq?6^"qZd!(r<WB/q#KRYqZ66hQN6sarrMuuquc`tq$$U!qZm$)r<`H1!"7Q_
mfN+]TE+uoqulcupBLR$qZm$)r!E?0r<rW6liI%drrMBdqub@I_>s96p':9sq$I!,r<rT5rXAo1!Wi0"
f)kmQYQ3_and+[jq[33.r=&Z7!Y,\Nf)bpSo`LBXr!MKlq$[-0rXJi:!Y5eQdfT:HlN!mar=&]6r=%lt
r=&Z6r!iZ9rt#&>pB1Esr<)lt!!DlqmK:Q2b5h&Al4!S"r=8i<rt,/AmfWLjquZ'arWK,!m/Znlq@<6/
"q1qL%1N^Sq$m63rX]#?rt58Dirf/[nH/gp!sFefr=Sl;rX\u=r=/o=%Lip>%K$_8&-!4@&cNCC'D_k"
!rrDh"8W/[!3uV('E&RA&cN@=&,ZnA%1WjW%1WmI%JpY7&,m.>&cWLD'D;R_"8i;;!7UuK(&\jF'E/XD
&cE:=%fm.Nr!i]9pC@-4#S7OZ&J>]i',:!?o`P$mrW;WmrWJemp&P(-rY>DHrY,;Er=Su>rXT#>&+^;1
&,m.?&cWLD'E8dF"nr0!"9&Ge"8;rq!1<id(]G3L(&o!I'E8^D&cN@?%fm.NoFCj2rX]8G&eYik'G^EI
pB9LYq?5IO])_jKrttbPrYGMKrtPJHrt>8BrXf#=q%!E6rXSo<rXf&@"qhO^'GUcTquufthuil[[fG4a
ru1nTrYQ(\(D[c$'bh>q'+tli&cN@@&,Qk7%K6k9%g`dY&J5Wh',2,qJ,~>

%%EndBinary
grestore
np
123.088 36.8906 mo
123.088 36.8906 li
123.088 36 li
123.088 36 li
123.088 36.2592 123.088 36.558 123.088 36.8906 cv
gsave
[1.20955 11.5773 -11.5773 1.20955 109.457 32.1318 ]ct
clp
/1 /Gradient get_res exec grestore
np
97.7912 59 mo
97 59 li
97 57.8255 97 47.7813 97 40.5 cv
97.3247 40.3646 97.6581 40.2327 98 40.1042 cv
98 46.3154 98 55.4111 98 58.787 cv
97.9317 58.8623 97.8619 58.9332 97.7912 59 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[2.4 0 0 20.16 96.48 4.48 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 42 
/M[5 0 0 -42 0 42 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s/N*!s/Q,!s8W-!s8T,!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!sA`/!s8Z/!s8W.!s8W-"9S`.!sA]/"9Sc0"9\f0"9\i0"9\i1!sA`0!s8Z/"9S`/"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"U,&4"9er4"9\l3"U"r3"U,#3"U,&4"9er4"9\l3"U"r3"U,&5"U,&5"U,&5"U,&6
"pP58"pP88"pP89"pY>:"pP~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!~>
<~$k*OQ$k3XT%1E[T%1NaV%LrpW%LrsY%1WjX%Ls!Z%LrsZ%hB-[%hB0]%M00^%hB3_&.]9_&.fB`&J5Qc
&.oKd&.]Bc&J,Kd&J5Qc&eYcg&/,Zh&J,Tg&eP]h'+toi'GD,m&JPll&eYlm'+tom'GD,m'bh>q&f)2r
',),r'bh;s()7Mt(D[c#'GhQ$'bhK$(DRZ%(Ddi%)&O/*()e#,(D[o-(`4#-)AsA/)]K\5(`XJ5)AjJ7
)]BV8*?6":+!)FB)]p.C*?5~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
97.7912 59 mo
97.4126 59 97.1412 59 97 59 cv
97 59 li
97.7912 59 li
97.7912 59 li
gsave
[10.125 31.625 -31.625 10.125 103.933 27.9102 ]ct
clp
/1 /Gradient get_res exec grestore
np
97 40.5 mo
97 36.6777 97 33.6165 97 33 cv
98.6152 33 106.6 33 107.168 33 cv
107.6 33.3203 109.855 35 109.855 35 cv
109.855 35 121.365 35 123.088 35 cv
123.088 36 li
119.781 36 110.855 36 110.855 36 cv
110.855 36 108.6 34.3203 108.168 34 cv
107.6 34 99.6152 34 98 34 cv
98 34.5395 98 36.9502 98 40.1042 cv
97.6581 40.2327 97.3247 40.3646 97 40.5 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[27.36 0 0 9.12 96.48 22.72 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 57 
/H 19 
/M[57 0 0 -19 0 19 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 57 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 57 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 57 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 57 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcMkPo)\jmk5aNB!!/bncN*J9q#UNuc2[hFquMQQoDn:[oE+snf)Y@Bli<:NmK!:go)eaj!!M!UmfCi:
\cCsqncJUhqZQluk5aTE\,b.]liH\Zo`P$nrWVHbrW2*]ScJ<]o`=F]pB10nqum')l2]cDrrJ/\!!2fq
o`FXcp]UHtrW_`ig]?X>VZ?Dl!!E3%liR4jq?6Wur<E9,o`>'mecF(s_#XE8l3$V\p]^[%r!3*"d/j4J
[/eq]pB(BurWDHhp'(C!r<N?.i;r0D!!8Vio`3nQpBCEur<N<-!"$sPq>pWsO9#+[rrrE*rWNE-"U,#3
p]UX#p'(9sr<N9,rs?pNquZ!\WW:fXrW`6(r<N9,!XT/?b5qSDbQ,Q]!!VotrrrE,rrrE,r<30*quuj"
qZm*+rX&T3p]9+MpB%W#h>lU@!!Vrur<N<-r<WK3$i9u'!pB[U!Vukb!;HQb#6>#6k6CnjqZm<2#mq"I
rW2ltf`CmMr;`#]p]ps,#R:Y3#6G)7#O_lo#QG)/$3(A3$hON!!Vul`!VQTe!1X&g$1nK(#71/2!!`$!
qZm*+rWr]7$4@4MJ,~>

%%EndBinary
grestore
np
123.088 36 mo
123.088 36 li
123.088 35 li
123.088 35 li
123.088 35.1704 123.088 35.5163 123.088 36 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 2.4 122.4 27.52 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 5 
/M[3 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E6'!WiE)!WiE~>
<~!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!~>
<~"pP;<#RC_C#mq"H$k*O~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
112.581 59 mo
100.723 59 li
100.889 58.4395 101 57.791 101 57 cv
101 56.1791 101.062 54.6477 101.156 52.812 cv
103.575 50.7057 105.954 48.797 109.49 47.2695 cv
114.601 45.0629 119.722 44.0059 124.187 44.0059 cv
124.871 44.0059 125.54 44.0307 126.191 44.0801 cv
126.388 42.5199 126.575 41.0916 126.72 40 cv
126.72 40 126.72 40 126.721 40 cv
126.393 42.461 125.857 46.6065 125.47 50.1636 cv
124.039 48.822 122.115 48 120 48 cv
115.58 48 112 51.584 112 56 cv
112 57.0608 112.206 58.0736 112.581 59 cv
99.334 59 mo
99.1035 59 li
99.6309 58.248 100 57.2627 100 56 cv
100 56 li
100 56 li
100 57.3164 99.7109 58.2734 99.334 59 cv
100 55.9765 mo
100 55.9751 100 55.9735 100 55.9721 cv
100 55.9735 100 55.9751 100 55.9765 cv
100.059 53.8947 mo
100.234 49.6496 100.754 41.7084 100.936 39 cv
126.854 39 li
126.817 39.275 126.775 39.5927 126.728 39.9463 cv
126.774 39.5956 126.818 39.2695 126.854 39 cv
126.854 39 li
126.854 39 li
124.813 39 102.615 39 100.936 39 cv
100.833 40.528 100.62 43.7692 100.423 47.0615 cv
100.274 49.5484 100.134 52.0645 100.059 53.8947 cv
gsave
[17.8142 0 0 17.8142 122.442 58.9434 ]ct
clp
/2 /Gradient get_res exec grestore
np
128 38 mo
100 38 li
100 38 99 52.666 99 56 cv
99 59.332 96 60 96 60 cv
124 60 li
124 60 126 59.5 126 56 cv
126 52.5 128 38 128 38 cv
126.854 39 mo
126.381 42.5147 125 53.0137 125 56 cv
125 58.2471 124.082 58.8691 123.824 59 cv
99.1035 59 li
99.6309 58.248 100 57.2627 100 56 cv
100 53.2227 100.716 42.2783 100.936 39 cv
126.854 39 li
.47451 .298039 .27451 0 cmyk
f
101.156 52.812 mo
101.38 48.4196 101.783 42.288 101.936 40 cv
103.455 40 121.563 40 126.72 40 cv
126.575 41.0916 126.388 42.5199 126.191 44.0801 cv
125.54 44.0307 124.871 44.0059 124.187 44.0059 cv
119.722 44.0059 114.601 45.0629 109.49 47.2695 cv
105.954 48.797 103.575 50.7057 101.156 52.812 cv
100.423 47.0615 mo
100.62 43.7692 100.833 40.528 100.936 39 cv
102.615 39 124.813 39 126.854 39 cv
126.854 39 li
124.813 39 102.615 39 100.936 39 cv
100.833 40.5276 100.62 43.7688 100.423 47.0615 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[27.84 0 0 15.36 99.84 10.24 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 58 
/H 32 
/M[58 0 0 -32 0 32 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
rWW3(qZm$)r!E9.q[<<1r!iN5r"&f=]E$@[rXJo=rX^Rl&eYik'GM8s()@]&(`4,.)B'P6*#ot>*ZcCF
+<VgN+sJ6V,U=Z^-71,>-ib^q.fBSK#Q+l*$3(A2$N(;0%/^S3%f?k8&-*<>!9aF^&-*=A&c`UE'EAmI
(+L+;(`=20)B0V8*$$%@*ZlIH+<_mP+sS<X,UF``-7:/h-n-Sp.P!##/Gf\M#lG#+$N(;0%/UM3%KI%;
&,d(;&Wd"l!<*T2'E/[G(&esK(]G6O)?(NS)u^g&*?H7D+!;[L+X/*T,:"N\,pjrd-R^Al.4Qet.kE5'
/M8X\#Q"f*$2Y)-$iCG1%K$_5&,d(:&cNF=!0mNh',2,q'c%Q$rYPVQrYbbUrYtnYrZ2%]rZD1arZW7*
,U=Z^-71)f-n$Mn.Olr!/1`A)/hSe10JNG2r!E9.q[<?2q[NH5q[`T9r"8f=!#+AmWrNYF()@]&(`4,.
)B'P6*#p!u*WR;]+93Sa+oike,QK.i-3,Fm-ikbH&1T1\/1`A)/hSe10JG491,Ab6r!N</r!`K4q[WN7
r"/c<q\&f?blGQ[(Ddo*)&X>2)]Kb:*??1B+!2UJ+X&$R,Q8qg-2o4k-iPLo.K1ds/,h("/cI@10/,(7
0etL?1Ggopr<`N3q[<<1r!iN5r"&]:q[r`=r"K#C[fG"[*uPt8)]Kb:*??1B+!2UJ+X&$R,9nHZ,palb
-RU;j.K1ds/,h("/cI@.0/#"50ekF=1]B342)[Al$N(;0%/^S3%fR"=&,["9&c!(;'E8dG'qkWp!$iL'
*$$%@*ZlIH+<_mP+sS<X,UF``-7:/h-n-Sp.P!##/1iIQ0)[F'0`Ed51,:XA1c7-L2`UaDr!`H3r!rT7
r=Ji<!>6">')rXE'E/^F'o`1o*?H7C*ZlLI+X&$R,9nHZ,palb-RU;j.4H_r.k</%/M6oRr@e+'$o'Il
1,C^C2)R9N3&pgEq[NH5q[`T9r"8W8!>?+C'E/^F'`]$A!1Elf+9!A_+oWYc,Q8qr,pjrd-R^Al.4Qet
"tM5U/M/S-q(M\#r\=C-#r=Cp2)[?O3&qEE%K$_5&,[":&b?Y2'E/^E'`]$+!3cG'+oWYc,Q8qg-2o4k
-iPLo.K1e&.kE5'/M8Y/0D7(#0eiS]!&=O0r\Fd91c70L2`Nhs%JpY5&,[":&c!%F'+tok&eYij')N@>
'`JjI(<?Kq!!FMk,U=]8-3,Fm-ib^q.KD!u/-%:$/c[R(0`*R-0JP:90`<^.1,1O>r\Fd91c70M2`Nhq
%f?k8&Gm(;')WCH&eblk',($Qq\9&FrYDd>g].a/,pjrd-R^Al.4Qetr[\%$r[n1(r\+=,r%\=.0f&JX
rA+@.#W+Cr2E*TU3=bosr=Ji<r"A`;ne:m7rtYMKS,i*['IP7V-n-Sp.P!##/1iG+/h\k30JWP^"#Dbi
1]9'00f&JXr\=g:1GgpG2E!KR3BI-Mr=Ji<r"Ao@r=f;H',9pLq\0#FrtYPLN;s/3.4Qet.kD/]/M/S-
0/#"50ekF=1Genbr\OO/qCr"+1&Wm,1C#`o2)[BQ3'$pKr"8f=r=er?!>?1:'DiLC(&o'<!1s8k/,q1#
/cRI'0E3a+1&j$/1]K<32?,T52#oH71c$rd1A`d,1,8\^#W":o2)[?O3BI'Mq\&f?r"K5J'bhDY'_2q8
'`AaH(>/\q!#$n8/hSe10JG491,:XA1c.'I2E(Lms#0m7s"s^2r\=O00f&S[s"aR0#;e:q2E*TU&c34=
'DrR?(&8OF',))P'E/^E(&o&i!65'?/hd2X!&=I.!&OU2#rOV!2`E]U3B9(u2[2/t2)I-G1]9*.0`Wp)
1&`p51GgpG2E*TUrY#,BrY5AHq\92K()7V_(&J^8'E8dF(&o&S!8RVU0JWP^!&OU2!&aa6!&sm:!'1$>
$TU4,2`EWP2Dm<I1]9*-1&`j90eb:90etO@1c.*L2`UaLq\8rCq%ilCr"K5I',))Q'DrOE(&eu<!:p0k
1,Jnd!&aa6!&sm:!'1$>&N`*:4$#A^3&iiT2)R3I1G^fc1&N^*0E*[)0aBHh1GgpH2`U[Kr"],FrYGSN
(]G3J'`f!`r=nl;q@roDN;s2?2)R9M2`E]"3&ru[3]m='"$Jh148q8J3B/rU2)R3I1G^fc1&`m(0E*X3
0etL?1c70M'GUH[r"f/G";hpk()QrcrY>;Eq\&rBq%N]@rY5DKmJrm[*B#i83&ioY3]]>a4?Pbi5!D1p
4Ztnh3]T/Z2`<Ms2)@$D1,8b^r@\X5/h\h10/,(71,:XB2E1RLr>,8Hr##DL!>ZLN(B,'I'EJj]q\/rA
q%ElF'GV>ufDr>[%QHI/3]]>a4?Pbi5!D1qr]h2_5!;"i4$#A]2`<NN1c$mB0eb:70E!L'/cIC%0*![0
0JYF?2)b@Jr"o5I!#bbQr>5GKr>#;Gr"B,E&ek-Tr"K&DrtWBNbQ'"O4$,Pe4Zttm5<hCu5s[h(5sRXu
4Zkee3B/rU2Dd6G1,1I:0.nmT/H@@#/I4!_0JG7<1c6'H(],'J)?1TQ(]kKh(]G3L(&\jE'D<(='E/^G
's%Dp!'<;*4[)%o5<qJ"5sdn*6UX:.5X.Is4Zkbc3&iiT1c$mB0JG.4/hJY+/1W8&.kE5'/M8\10etOA
(Dlrcr#,JPr>GSO!uD^h(B,$M'GV>\'*&[B')rRA')`LC'UAao!!5>J5Q3nJ62j1P6UX?A72SE[6:!k#
4Zkee3B/rT1c$mA0JG.4/M&IP/,q*t.gIUW/M8\21,SqHq\f>N!#tnUrYb_QrYPSMrY>DHr=f/C!"o2C
q[rc?";DOb!!&&[!^K":r^$TPr^6fV7ReIh7n,m66U<t%5!1nf3B/oS1c$j@0J4t0/1W5#.OckH.1%IR
.k</&/hf"8q\f;Mr#>VRru(eQ!uD^h(B,$O'GM2p'DrL<&cE@A'*&a2!2TYs6:+'=6i][T7K>sW8/"K_
770C-5<_4m3]T,W2)I'C0eW_`/M&D%.4P3D%4<PP.4H_s/1iJ.0c:l,)Z1QS*<$oV)?gur(`+#*rY>JK
rY,ML'+trk')<+>&H*4@')rXF'[m&o!")+^77B[87n6*@8cD=$8Ou??6pj7*5<_1j3B/rT1GU[=0.e_*
.k)nqr[7^mr?has.P!&%/c[U))Z1QN*!@3#)]BXo)#tNQ(BbKg()7P^'*T!]&J>Zfr"/`;rY#5E]`?F[
-q6Zr7n?0B8P2TJ92&#P8Ou<>6pa1(5!1ne3&WWN1,1F7/Lr;"-n,'A!@9#i,mPbD-n-Vs/MI#@r#GVT
!$(tWru(kTrYPVOrY>YP'GV;q'E/XE&bHV;&J>`j'W1ro!%UT28P)NH91qrP9heAW9M.lH7RTU05<_1k
3B/oS1GUX;/M&A$-n$Dg,p`C5#p^cB-7C;m/1hh=*;giW*r[/]*#fjr)?:ZS(^1]k()7PurY,;Er=T&@
q@ET;rXf2E&egB-r;\B@8kVfN9MJ5V:/=Y^:/+AR84Q*95sRXt4$#>Z2)?s@/hJS&.46Gg,U+HWrZMRl
+sS<X,q(2m/:[~>

%%EndBinary
grestore
np
100.723 59 mo
99.334 59 li
99.7109 58.2734 100 57.3164 100 56 cv
100 56 li
100 55.9922 100 55.9844 100 55.9765 cv
100 55.9751 100 55.9735 100 55.9721 cv
100.001 55.4893 100.022 54.7709 100.059 53.8947 cv
100.134 52.0645 100.274 49.5484 100.423 47.0615 cv
100.277 49.4924 100.141 51.9511 100.064 53.7695 cv
100.432 53.4464 100.794 53.1269 101.156 52.812 cv
101.062 54.6477 101 56.1791 101 57 cv
101 57.791 100.889 58.4395 100.723 59 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[3.36 0 0 12.96 98.4 4.48 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 27 
/M[7 0 0 -27 0 27 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~%hB0]%hB0^&.fBa&.fEc&J5Te&J>]h&eYfi',)#m',)#n'GM5q'GM5q'GM5q'GV>t'bqGu()@Z$()@Z%
(Ddl((Ddo*(`4),(`=2/)&X;0)B'M4)B'M5)]K_8)]Kb:*#oq<*$$%?*??.@*Zc@D*Zc@E+!2RH+!2RH
+!2RH+!;[K+<VdL+X&!P+X&!Q+sJ3T+sJ6V,9nEX,:"N[,U=W\,pai`,paia-71&d-71&d-71&d-3~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~-n$Jl-n$Jo.k<,#.k<2'/M/P+/MJk40JG171,:U?1,:UA1c.$G1c.-M2`EZS2`WlY3B9)[4?P_g4?P_i
5!D.o5!D7u5s[e&5sn",6UO4.7Rfj:7Rfj<84Z9B84Z?F8kM]J8ki#S9he>V:f'tb:f'td;GpCj;GpIn
<)cgr<**.&='&I)=]nm1=]nm4>[1N=>[1TA?=$rE?=7/K?smAM@q0"Y@q0"\AnGXeAnGXeAnGXeAc~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
100.723 59 mo
100.148 59 99.6719 59 99.334 59 cv
99.334 59 li
100.723 59 li
100.723 59 li
100 56 mo
100 55.9922 100 55.9844 100 55.9765 cv
100 55.9844 100 55.9922 100 56 cv
100 55.9721 mo
100.001 55.489 100.022 54.7704 100.059 53.8947 cv
100.022 54.7709 100.001 55.4893 100 55.9721 cv
gsave
[-8.74228e-07 20 -20 -8.74228e-07 113.094 38.667 ]ct
clp
/3 /Gradient get_res exec grestore
np
126.721 40 mo
126.72 40 126.72 40 126.72 40 cv
126.77 39.6239 126.815 39.2878 126.854 39 cv
126.854 39 li
126.818 39.2695 126.774 39.5956 126.728 39.9463 cv
126.725 39.964 126.723 39.9822 126.721 40 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 2.4 126.24 23.2 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 5 
/M[3 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!$#!<N<(!s8W~>
<~!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!~>
<~!!!!"!<E<+"9o&7#RC\~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
126.721 40 mo
126.721 40 li
126.723 39.9822 126.725 39.964 126.728 39.9463 cv
126.725 39.9641 126.723 39.982 126.721 40 cv
gsave
[-8.74228e-07 20 -20 -8.74228e-07 113.094 38.667 ]ct
clp
/3 /Gradient get_res exec grestore
np
100.064 53.7695 mo
100.141 51.9511 100.277 49.4924 100.423 47.0615 cv
100.62 43.7688 100.833 40.5276 100.936 39 cv
102.615 39 124.813 39 126.854 39 cv
126.815 39.2878 126.77 39.6239 126.72 40 cv
121.563 40 103.455 40 101.936 40 cv
101.783 42.288 101.38 48.4196 101.156 52.812 cv
100.794 53.1269 100.432 53.4464 100.064 53.7695 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[28.32 0 0 16.32 99.36 9.28 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 59 
/H 34 
/M[59 0 0 -34 0 34 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 59 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 59 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 59 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 59 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcMeNr;k^Sq#KsdR/lgYc2m_Bp]/eEquM]Ur;lZohZEHQ`rQ/AoDk6Ym/m:iliZb\huW!BiW,tY
rrVQimf`+`rs&)rf)kmQciC]YqZHEmnHJFeqZd*+h?)pD^&ZFYqZQQqo*4[hp]pj+nH&[mh#mNWX8q/Y
quucupBU3op'LU'qZ>m^rrhQhRK2mYrs&0%p^$U#mL&du!"A8ti<9/aqZVlX!XAu:q?Zm'pBp9qq$d63
r<)Bhi<B5co`1<Yq[*'*q?m92lO3e'%/CA1%e0\V"oJSb!3#tr$Mt5-%/CA1%K[(K%f?e6%J^M3&-!4:
"S)`S#6"kT!4r42$i:A.%JpXp&,d%>&cWI7"ka+X#JU8`!<*H'%f6e6&Gm(*&H*4>'(H1Y#QG(3!8dbV
%fHq8&Gm(:')rX@'(?M3')iRE'`/+)#6P5;#71,1m0EOpRfMsYrt,/Aq\&c>ob@38!YQ+Zq@`Z=r=o8H
q$5FUr!<</MZEbir"K)ErtP>Fr>,DLr>,;Gq\8c<r=o2F!YuOfo*Fmnkm7.mmf8mYrtPAGr>,5Gq\];K
";_gi()HWZrY,DK'GUH[rtbPLr!<!&q$Qg%!XK&<oa(F$rX.H]Y5nS<r"o;Kr>GPP!#tnUr>GVPq\T2H
q\B)Fr"f8J!Z2alq?cm'rX/`6$i(,1#n#o'rX-gK_#XKPr>GPPr>YYS!Z`7#r>YbTrYbYOr>5,BrYG\S
(`=20r<iK1p'Uj/q@!'*nd5."!"6=;dfBCdr>Y\Tr>khX!$D1]ruM+ZrYthTr>GPNpD<fGr>>VS)u'g5
$j$hF%/UG*$N:A+$N:F2!9F4Z*W7&X+8m>]+o`\b+9!>]*WI,Y)u^cT)>b6N(],'L)?(NU)]T7[%/15-
%/LA0$M+W&$^C_d!<4/>+T3J^,5`\c,6&hd+TEP`*rd8\*<-uW)ZCWK)#kKR)ZLcV*<-H@%JpY5%06kH
q[E6-p'U^*!"8i9MZE]"r?M7ds!@Uj!@9#j,6K,6+X$b+"s+d**#on:rYk_Q!uMmn)#Y<V)B'P6*$$'p
%eUA2%K[(L%JpS-$i^S/$iUS(!1X&g,QK.h-N,=l./kY$-mpAh-6si],7#J;+WqjK*ZZ:#)uprW)Yb3L
)?_!!*??6q&,d%>&cN@>&,m(:%JgM4$NLP5$i:;.$igan!3Q>$-iGFn.K(ao.hX<\.4?Pk-7'o^,9e9R
+<MXG*W@#Y)uUZU)&iJlr>GkZ*#ot?*tS5[oF_*7r=8r>%hALH!XoMHmgK+'!"I-P^]4Eb.OtBIr@@q#
r@T!?/1`;$.4?Pk-7'o^+sJ0Q+!2OE*?6";)B/Gi#T=U#)]Tk=*Zt@mr"8Z9rXo,@!Y5hQr=8`7!t5VI
%.jr-%/gXH!7CiI/H%1#0)[F'0`EdF0J>(2/M&D%.Ocbm-7'o^+sA'O+!)FB*#fjq)ZL]Q)?h*#*?H7E
p_*E:!>6(F')iLA&-NLR%h9*J%JpS3$ht/1%B'9f!!"\N0`Nm+1*/5-1c.!D0eb75/M&D%.4?Pj,pX]Z
+WqjK*??+=)u^cQ)$_&u)]Tk>+!CFop([K>rY#2Br=B&A%M''I%K?k/$NLV7%0-m(!;6Bo1,C`b2#fH3
2BFe82Dd6G0eb75/1`8#-n$Dg,U4KV+<MXG*#on9)Yk6T)B0Y:*ZlO$'`8^G(B,'J'`JdE&crXV&H34>
%f["8%/LA0$ig_;%1\9r!];korAXa9s#L'>+#u;>2Dm<H0eY14/1W2!-RU2c,9e9Q*Zc:@)]BS4)?(KQ
)?(NW)]]tA+T<,R(A\jH('#*K'E]!_',(6U!tYtS&,d"<%K?k2$iUS7%K?q.!1Nrk3&ru[3rM/?4T7JN
4$,G^2`3EJ1,1Ep/hJS'.46Gg,U+BS+!)FA)]BUn)#Y6U)&aD4*$$+DpD<cFr>,bU()7Pu'GD/o')iLC
&H31A%LimE%/LA1$j$kI%c78g!!#.\4oIPg5<qJ"5sRXu4ZbY`2`<KK0eb74/1N(s,pac[+WhaG)]K[r
)&W2d"rJ3s)]]tAJ,~>

%%EndBinary
grestore
np
120 63 mo
116.141 63 113 59.8594 113 56 cv
113 56.1699 113.014 56.334 113.025 56.5 cv
113.051 56.1361 113.105 55.78 113.184 55.4334 cv
114.079 55.6574 115.02 55.8409 116 55.9769 cv
116 57 li
119 57 li
119 60 li
121 60 li
121 57 li
124 57 li
124 55.9769 li
124.98 55.8409 125.921 55.6574 126.816 55.4334 cv
126.895 55.78 126.949 56.1361 126.975 56.5 cv
126.986 56.334 127 56.1699 127 56 cv
127 59.8594 123.859 63 120 63 cv
gsave
[13.4214 0 0 13.4214 119.563 69.415 ]ct
clp
/4 /Gradient get_res exec grestore
np
120 48 mo
115.58 48 112 51.584 112 56 cv
112 60.4179 115.58 64 120 64 cv
124.416 64 128 60.4179 128 56 cv
128 51.584 124.416 48 120 48 cv
120 49 mo
123.859 49 127 52.1406 127 56 cv
127 59.8594 123.859 63 120 63 cv
116.141 63 113 59.8594 113 56 cv
113 52.1406 116.141 49 120 49 cv
0 .5 1 0 cmyk
f
124 55 mo
121 55 li
121 52 li
119 52 li
119 55 li
116 55 li
116 57 li
119 57 li
119 60 li
121 60 li
121 57 li
124 57 li
124 55 li
0 0 0 1 cmyk
f
116 55.9769 mo
115.02 55.8409 114.079 55.6574 113.184 55.4334 cv
113.897 52.3257 116.679 50 120 50 cv
123.321 50 126.103 52.3257 126.816 55.4334 cv
125.921 55.6574 124.98 55.8409 124 55.9769 cv
124 55 li
121 55 li
121 52 li
119 52 li
119 55 li
116 55 li
116 55.9769 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[15.36 0 0 7.2 112.32 7.36 ]ct
snap_to_device
<<
/T 1
/W 32 
/H 15 
/M[32 0 0 -15 0 15 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T
-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#
0JG170JG170JG170JG170JG170JG170JG170JG172)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K
3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o
6:+"*6:+"*6:+"*6:+"*6:+"*6:+"*6:+"*6:+"*7n6'>7n6'>7n6'>7n6'>7n6'>7n6'>7n6'>7n6'>
91qoN91qoN91qoN91qoN91qoN91qoN91qoN91qoN:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb
<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1
?=$rE?=$rE?=$rE?<piB?!U`B?=$rE?=$rE?=$rE~>
<~4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g77BX677BX677BX677BX677BX677BX677BX677BX6
:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ='&I)='&I)='&I)='&I)='&I)='&I)='&I)='&I)
?smAM?smAM?smAM?smAM?smAM?smAM?smAM?smAMC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.Ku
F)uDDF)uDDF)uDDF)uDDF)uDDF)uDDF)uDDF)uDDI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<h
KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[
Q^=&*Q^=&*Q^=&*Q^=&*Q^=&*Q^=&*Q^=&*Q^=&*TV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sN
WMukrWMukrWMukrWMukrWMukrWMukrWMukrWMukrZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!E
]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
120 56.25 mo
118.613 56.25 117.274 56.1537 116 55.9769 cv
116 55 li
119 55 li
119 52 li
121 52 li
121 55 li
124 55 li
124 55.9769 li
122.726 56.1537 121.387 56.25 120 56.25 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/5 /Gradient get_res exec grestore
np
119.281 49.0367 mo
119.281 49.0367 li
119.281 49.0367 119.281 49.0367 119.281 49.0367 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.291 49.0357 mo
119.291 49.0356 119.291 49.0356 119.292 49.0356 cv
119.291 49.0356 119.291 49.0356 119.291 49.0357 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.301 49.0346 mo
119.302 49.0346 119.302 49.0346 119.302 49.0345 cv
119.302 49.0346 119.302 49.0346 119.301 49.0346 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.312 49.0336 mo
119.312 49.0335 119.312 49.0335 119.313 49.0335 cv
119.312 49.0335 119.312 49.0335 119.312 49.0336 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.333 49.0315 mo
119.333 49.0315 119.333 49.0315 119.334 49.0315 cv
119.333 49.0315 119.333 49.0315 119.333 49.0315 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.343 49.0306 mo
119.344 49.0305 119.344 49.0305 119.344 49.0305 cv
119.344 49.0305 119.344 49.0305 119.343 49.0306 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.354 49.0296 mo
119.354 49.0296 119.355 49.0295 119.355 49.0295 cv
119.355 49.0295 119.354 49.0295 119.354 49.0296 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.364 49.0286 mo
119.365 49.0286 119.365 49.0286 119.365 49.0286 cv
119.364 49.0286 li
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.375 49.0277 mo
119.375 49.0277 119.375 49.0276 119.375 49.0276 cv
119.375 49.0276 119.375 49.0277 119.375 49.0277 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.415 49.0242 mo
119.416 49.0242 119.416 49.0241 119.417 49.0241 cv
119.416 49.0241 119.416 49.0242 119.415 49.0242 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.424 49.0235 mo
119.425 49.0234 119.426 49.0233 119.428 49.0232 cv
119.427 49.0233 119.425 49.0234 119.424 49.0235 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.434 49.0227 mo
119.436 49.0225 119.437 49.0224 119.439 49.0223 cv
119.437 49.0224 119.436 49.0225 119.434 49.0227 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.563 49.0224 mo
120.563 49.0224 120.562 49.0224 120.562 49.0223 cv
120.562 49.0224 120.563 49.0224 120.563 49.0224 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.445 49.0218 mo
119.446 49.0217 119.448 49.0216 119.449 49.0214 cv
119.448 49.0216 119.446 49.0217 119.445 49.0218 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.553 49.0216 mo
120.552 49.0216 120.552 49.0216 120.551 49.0215 cv
120.552 49.0215 120.552 49.0216 120.553 49.0216 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.455 49.021 mo
119.457 49.0209 119.459 49.0207 119.461 49.0206 cv
119.459 49.0207 119.457 49.0209 119.455 49.021 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.543 49.0209 mo
120.542 49.0208 120.541 49.0207 120.54 49.0206 cv
120.541 49.0207 120.542 49.0208 120.543 49.0209 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.465 49.0202 mo
119.467 49.0201 119.469 49.0199 119.471 49.0198 cv
119.469 49.0199 119.467 49.0201 119.465 49.0202 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.533 49.0201 mo
120.532 49.02 120.531 49.0199 120.529 49.0198 cv
120.531 49.0199 120.532 49.02 120.533 49.0201 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.476 49.0194 mo
119.478 49.0192 119.48 49.0191 119.482 49.019 cv
119.48 49.0191 119.478 49.0192 119.476 49.0194 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.522 49.0193 mo
120.521 49.0192 120.52 49.0191 120.519 49.019 cv
120.52 49.0191 120.521 49.0192 120.522 49.0193 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.487 49.0186 mo
119.489 49.0184 119.491 49.0183 119.493 49.0182 cv
119.491 49.0183 119.489 49.0184 119.487 49.0186 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.512 49.0185 mo
120.511 49.0184 120.509 49.0183 120.508 49.0182 cv
120.509 49.0183 120.51 49.0184 120.512 49.0185 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.498 49.0178 mo
119.5 49.0177 119.502 49.0175 119.504 49.0174 cv
119.502 49.0175 119.5 49.0177 119.498 49.0178 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.501 49.0178 mo
120.5 49.0177 120.498 49.0175 120.497 49.0174 cv
120.498 49.0175 120.5 49.0177 120.501 49.0178 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.509 49.0171 mo
119.511 49.0169 119.513 49.0168 119.515 49.0166 cv
119.513 49.0168 119.511 49.0169 119.509 49.0171 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.491 49.017 mo
120.489 49.0169 120.487 49.0168 120.486 49.0167 cv
120.487 49.0168 120.489 49.0169 120.491 49.017 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.52 49.0163 mo
119.522 49.0162 119.524 49.016 119.526 49.0159 cv
119.524 49.016 119.522 49.0162 119.52 49.0163 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.48 49.0163 mo
120.478 49.0162 120.477 49.0161 120.475 49.0159 cv
120.477 49.0161 120.478 49.0162 120.48 49.0163 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.53 49.0156 mo
119.533 49.0154 119.535 49.0153 119.537 49.0151 cv
119.535 49.0153 119.533 49.0154 119.53 49.0156 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.469 49.0155 mo
120.467 49.0154 120.466 49.0153 120.464 49.0152 cv
120.465 49.0153 120.468 49.0154 120.469 49.0155 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.541 49.0149 mo
119.544 49.0147 119.546 49.0146 119.549 49.0144 cv
119.546 49.0145 119.543 49.0147 119.541 49.0149 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.458 49.0149 mo
120.456 49.0147 120.455 49.0146 120.452 49.0145 cv
120.454 49.0146 120.456 49.0147 120.458 49.0149 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.552 49.0142 mo
119.554 49.014 119.557 49.0138 119.56 49.0137 cv
119.557 49.0139 119.555 49.014 119.552 49.0142 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.448 49.0142 mo
120.446 49.014 120.444 49.0139 120.441 49.0138 cv
120.444 49.0139 120.445 49.014 120.448 49.0142 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.563 49.0135 mo
119.566 49.0133 119.568 49.0132 119.571 49.013 cv
119.568 49.0132 119.565 49.0133 119.563 49.0135 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.437 49.0135 mo
120.435 49.0133 120.433 49.0132 120.431 49.0131 cv
120.432 49.0132 120.435 49.0134 120.437 49.0135 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.574 49.0128 mo
119.577 49.0126 119.581 49.0124 119.584 49.0122 cv
119.581 49.0124 119.577 49.0126 119.574 49.0128 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.426 49.0128 mo
120.423 49.0127 120.421 49.0125 120.418 49.0124 cv
120.421 49.0125 120.423 49.0127 120.426 49.0128 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.585 49.0122 mo
119.592 49.0117 119.599 49.0113 119.607 49.0109 cv
119.599 49.0113 119.592 49.0117 119.585 49.0122 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.415 49.0122 mo
120.408 49.0117 120.401 49.0113 120.393 49.0109 cv
120.401 49.0113 120.408 49.0117 120.415 49.0122 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.607 49.0109 mo
119.611 49.0107 119.614 49.0105 119.618 49.0103 cv
119.614 49.0105 119.611 49.0107 119.607 49.0109 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.391 49.0108 mo
120.388 49.0106 120.385 49.0105 120.382 49.0103 cv
120.385 49.0105 120.388 49.0106 120.391 49.0108 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.62 49.0102 mo
119.623 49.01 119.626 49.0099 119.629 49.0097 cv
119.626 49.0099 119.623 49.01 119.62 49.0102 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.379 49.0101 mo
120.376 49.01 120.374 49.0099 120.371 49.0097 cv
120.374 49.0099 120.376 49.01 120.379 49.0101 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.631 49.0096 mo
119.634 49.0094 119.637 49.0093 119.64 49.0092 cv
119.637 49.0093 119.634 49.0094 119.631 49.0096 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.368 49.0096 mo
120.365 49.0094 120.363 49.0093 120.36 49.0092 cv
120.363 49.0093 120.366 49.0094 120.368 49.0096 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.643 49.009 mo
119.645 49.0089 119.648 49.0088 119.65 49.0086 cv
119.648 49.0088 119.645 49.0089 119.643 49.009 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.357 49.009 mo
120.355 49.0089 120.352 49.0087 120.35 49.0086 cv
120.352 49.0087 120.354 49.0089 120.357 49.009 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.655 49.0084 mo
119.657 49.0083 119.659 49.0082 119.661 49.0081 cv
119.659 49.0082 119.657 49.0083 119.655 49.0084 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.345 49.0084 mo
120.343 49.0083 120.341 49.0082 120.339 49.0081 cv
120.341 49.0082 120.343 49.0083 120.345 49.0084 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.666 49.0079 mo
119.668 49.0078 119.67 49.0077 119.672 49.0076 cv
119.67 49.0077 119.668 49.0078 119.666 49.0079 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.334 49.0079 mo
120.332 49.0078 120.33 49.0077 120.328 49.0076 cv
120.33 49.0077 120.332 49.0078 120.334 49.0079 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.677 49.0074 mo
119.679 49.0073 119.681 49.0072 119.683 49.0071 cv
119.681 49.0072 119.679 49.0073 119.677 49.0074 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.323 49.0074 mo
120.321 49.0073 120.319 49.0072 120.317 49.0071 cv
120.319 49.0072 120.321 49.0073 120.323 49.0074 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.687 49.0069 mo
119.69 49.0068 119.692 49.0067 119.694 49.0066 cv
119.692 49.0067 119.69 49.0068 119.687 49.0069 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.313 49.0069 mo
120.31 49.0068 120.308 49.0067 120.306 49.0066 cv
120.308 49.0067 120.31 49.0068 120.313 49.0069 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.698 49.0064 mo
119.701 49.0063 119.703 49.0062 119.705 49.0061 cv
119.703 49.0062 119.701 49.0063 119.698 49.0064 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.301 49.0064 mo
120.299 49.0063 120.297 49.0062 120.295 49.0061 cv
120.297 49.0062 120.299 49.0063 120.301 49.0064 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.709 49.006 mo
119.712 49.0059 119.714 49.0058 119.716 49.0057 cv
119.714 49.0058 119.711 49.0059 119.709 49.006 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.291 49.006 mo
120.288 49.0059 120.286 49.0058 120.284 49.0057 cv
120.286 49.0058 120.288 49.0059 120.291 49.006 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.72 49.0055 mo
119.723 49.0054 119.725 49.0053 119.727 49.0052 cv
119.725 49.0053 119.723 49.0054 119.72 49.0055 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.28 49.0055 mo
120.277 49.0054 120.275 49.0053 120.273 49.0053 cv
120.275 49.0053 120.277 49.0054 120.28 49.0055 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.731 49.0051 mo
119.733 49.005 119.735 49.0049 119.738 49.0048 cv
119.736 49.0049 119.733 49.005 119.731 49.0051 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.269 49.0051 mo
120.267 49.005 120.264 49.0049 120.262 49.0049 cv
120.264 49.0049 120.267 49.005 120.269 49.0051 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.743 49.0047 mo
119.745 49.0046 119.747 49.0045 119.749 49.0045 cv
119.747 49.0045 119.745 49.0046 119.743 49.0047 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.257 49.0047 mo
120.255 49.0046 120.253 49.0045 120.251 49.0045 cv
120.253 49.0045 120.255 49.0046 120.257 49.0047 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.753 49.0043 mo
119.756 49.0042 119.758 49.0041 119.76 49.0041 cv
119.758 49.0041 119.755 49.0042 119.753 49.0043 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.247 49.0043 mo
120.245 49.0042 120.242 49.0041 120.24 49.0041 cv
120.242 49.0041 120.244 49.0042 120.247 49.0043 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.764 49.0039 mo
119.767 49.0038 119.769 49.0038 119.772 49.0037 cv
119.769 49.0038 119.767 49.0038 119.764 49.0039 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.236 49.0039 mo
120.233 49.0038 120.231 49.0038 120.228 49.0037 cv
120.231 49.0038 120.233 49.0038 120.236 49.0039 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.775 49.0036 mo
119.778 49.0035 119.78 49.0034 119.783 49.0033 cv
119.78 49.0034 119.778 49.0035 119.775 49.0036 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.225 49.0036 mo
120.222 49.0035 120.22 49.0034 120.217 49.0033 cv
120.22 49.0034 120.222 49.0035 120.225 49.0036 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.786 49.0032 mo
119.794 49.003 119.801 49.0028 119.808 49.0026 cv
119.801 49.0028 119.794 49.003 119.786 49.0032 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.214 49.0032 mo
120.206 49.003 120.199 49.0028 120.192 49.0026 cv
120.199 49.0028 120.206 49.003 120.214 49.0032 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.81 49.0025 mo
119.813 49.0025 119.816 49.0024 119.819 49.0023 cv
119.816 49.0024 119.813 49.0025 119.81 49.0025 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.19 49.0025 mo
120.187 49.0025 120.184 49.0024 120.181 49.0023 cv
120.184 49.0024 120.187 49.0025 120.19 49.0025 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.177 49.0022 mo
120.175 49.0022 120.172 49.0021 120.17 49.002 cv
120.172 49.0021 120.175 49.0022 120.177 49.0022 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.823 49.0022 mo
119.825 49.0022 119.828 49.0021 119.83 49.002 cv
119.828 49.0021 119.825 49.0022 119.823 49.0022 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.165 49.0019 mo
120.163 49.0019 120.161 49.0018 120.159 49.0018 cv
120.161 49.0018 120.163 49.0019 120.165 49.0019 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.835 49.0019 mo
119.837 49.0019 119.839 49.0018 119.841 49.0018 cv
119.839 49.0018 119.837 49.0019 119.835 49.0019 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.154 49.0017 mo
120.152 49.0016 120.15 49.0016 120.148 49.0015 cv
120.15 49.0016 120.152 49.0016 120.154 49.0017 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.846 49.0017 mo
119.848 49.0016 119.85 49.0016 119.852 49.0015 cv
119.85 49.0016 119.848 49.0016 119.846 49.0017 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.143 49.0014 mo
120.141 49.0014 120.139 49.0014 120.137 49.0013 cv
120.139 49.0014 120.141 49.0014 120.143 49.0014 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.857 49.0014 mo
119.859 49.0014 119.861 49.0014 119.863 49.0013 cv
119.861 49.0014 119.859 49.0014 119.857 49.0014 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.132 49.0012 mo
120.13 49.0012 120.128 49.0012 120.126 49.0011 cv
120.128 49.0012 120.13 49.0012 120.132 49.0012 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.868 49.0012 mo
119.87 49.0012 119.872 49.0012 119.874 49.0011 cv
119.872 49.0012 119.87 49.0012 119.868 49.0012 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.121 49.001 mo
120.119 49.001 120.117 49.001 120.115 49.0009 cv
120.117 49.001 120.119 49.001 120.121 49.001 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.879 49.001 mo
119.881 49.001 119.883 49.001 119.885 49.0009 cv
119.883 49.001 119.881 49.001 119.879 49.001 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.11 49.0009 mo
120.108 49.0008 120.106 49.0008 120.104 49.0008 cv
120.106 49.0008 120.108 49.0008 120.11 49.0009 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.89 49.0009 mo
119.892 49.0008 119.894 49.0008 119.896 49.0008 cv
119.894 49.0008 119.892 49.0008 119.89 49.0009 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.099 49.0007 mo
120.097 49.0007 120.095 49.0006 120.093 49.0006 cv
120.095 49.0006 120.097 49.0007 120.099 49.0007 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.901 49.0007 mo
119.903 49.0007 119.905 49.0006 119.907 49.0006 cv
119.905 49.0006 119.903 49.0007 119.901 49.0007 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.088 49.0005 mo
120.086 49.0005 120.084 49.0005 120.082 49.0005 cv
120.084 49.0005 120.086 49.0005 120.088 49.0005 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.912 49.0005 mo
119.914 49.0005 119.916 49.0005 119.918 49.0005 cv
119.916 49.0005 119.914 49.0005 119.912 49.0005 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.077 49.0004 mo
120.075 49.0004 120.073 49.0004 120.071 49.0004 cv
120.073 49.0004 120.075 49.0004 120.077 49.0004 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.923 49.0004 mo
119.925 49.0004 119.927 49.0004 119.929 49.0004 cv
119.927 49.0004 119.925 49.0004 119.923 49.0004 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.066 49.0003 mo
120.064 49.0003 120.062 49.0003 120.06 49.0003 cv
120.062 49.0003 120.064 49.0003 120.066 49.0003 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.934 49.0003 mo
119.936 49.0003 119.938 49.0003 119.94 49.0003 cv
119.938 49.0003 119.936 49.0003 119.934 49.0003 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.055 49.0002 mo
120.053 49.0002 120.051 49.0002 120.049 49.0002 cv
120.051 49.0002 120.053 49.0002 120.055 49.0002 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.945 49.0002 mo
119.947 49.0002 119.949 49.0002 119.951 49.0002 cv
119.949 49.0002 119.947 49.0002 119.945 49.0002 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.044 49.0001 mo
120.042 49.0001 120.04 49.0001 120.038 49.0001 cv
120.04 49.0001 120.042 49.0001 120.044 49.0001 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.956 49.0001 mo
119.958 49.0001 119.96 49.0001 119.962 49.0001 cv
119.96 49.0001 119.958 49.0001 119.956 49.0001 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.033 49.0001 mo
120.031 49.0001 120.029 49.0001 120.026 49 cv
120.029 49.0001 120.031 49.0001 120.033 49.0001 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.967 49.0001 mo
119.969 49.0001 119.971 49.0001 119.974 49 cv
119.971 49.0001 119.969 49.0001 119.967 49.0001 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.978 49 mo
119.98 49 119.983 49 119.985 49 cv
119.983 49 119.98 49 119.978 49 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
120.022 49 mo
120.02 49 120.017 49 120.015 49 cv
120.017 49 120.02 49 120.022 49 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
119.989 49 mo
119.993 49 119.996 49 120 49 cv
119.996 49 119.993 49 119.989 49 cv
120.011 49 mo
120.007 49 120.004 49 120 49 cv
120.004 49 120.007 49 120.011 49 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/6 /Gradient get_res exec grestore
np
126.975 56.5 mo
126.949 56.1361 126.895 55.78 126.816 55.4334 cv
126.867 55.4205 126.918 55.4076 126.969 55.3945 cv
126.676 52.0039 123.96 49.2944 120.563 49.0224 cv
124.16 49.3103 127 52.3302 127 56 cv
127 56 li
127 56.1699 126.986 56.334 126.975 56.5 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[7.68 0 0 8.64 120 6.88 ]ct
snap_to_device
<<
/T 1
/W 16 
/H 18 
/M[16 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~1c.$G1c.$G1c.$G1c.$G3B9)[3B9)[3B9)[3B9)[4Ztqk4Ztqk4Ztqk4Ztqk6:+"*6:+"*6:+"*6:+"*
7n6'>7n6'>7n6'>7n6'>91qoN91qoN91qoN91qoN:f'tb:f'tb:f'tb:f'tb<E3%!<E3%!<E3%!<E3%!
=]nm1=]nm1=]nm1=]nm1?=$rE?=$rE?=$rE?=$rE@U`eU@U`eU@U`eU@U`eUB4kjiB4kjiB4kjiB4kji
Ci!p(Ci!p(Ci!p(Ci!p(E,]c8E,]c8E,]c8E,]c8F`hhLF`hhLF`hhLF`hhLH?sm`H?sm`H?sm`H?sm`
I=6NmIXZ`pIXZ`pIXZ`pG^4R\H[L6jIt)rtIt)rt~>
<~BP;'mBP;'mBP;'mBP;'mEcQ2@EcQ2@EcQ2@EcQ2@H[C*dH[C*dH[C*dH[C*dKS5#3KS5#3KS5#3KS5#3
NfK-[NfK-[NfK-[NfK-[Q^=&*Q^=&*Q^=&*Q^=&*TV.sNTV.sNTV.sNTV.sNWiE)!WiE)!WiE)!WiE)!
Za7!EZa7!EZa7!EZa7!E]Y(ni]Y(ni]Y(ni]Y(ni`Pog8`Pog8`Pog8`Pog8cd0q`cd0q`cd0q`cd0q`
f\"j/f\"j/f\"j/f\"j/iSibSiSibSiSibSiSibSlg*m&lg*m&lg*m&lg*m&o^qeJo^qeJo^qeJo^qeJ
rVc]nrVc]nrVc]nrVc]ns8W-!s8W-!s8W-!s8W-!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
113.025 56.5 mo
113.014 56.334 113 56.1699 113 56 cv
113 56 li
113 52.3835 115.758 49.3981 119.281 49.0367 cv
115.956 49.3777 113.318 52.0558 113.031 55.3945 cv
113.082 55.4076 113.133 55.4205 113.184 55.4334 cv
113.105 55.78 113.051 56.1361 113.025 56.5 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[7.68 0 0 8.64 112.32 6.88 ]ct
snap_to_device
<<
/T 1
/W 16 
/H 18 
/M[16 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~1c.$G1c.$G1c.$G1c.$G3B9)[3B9)[3B9)[3B9)[4Ztqk4Ztqk4Ztqk4Ztqk6:+"*6:+"*6:+"*6:+"*
7n6'>7n6'>7n6'>7n6'>91qoN91qoN91qoN91qoN:f'tb:f'tb:f'tb:f'tb<E3%!<E3%!<E3%!<E3%!
=]nm1=]nm1=]nm1=]nm1?=$rE?=$rE?=$rE?=$rE@U`eU@U`eU@U`eU@U`eUB4kjiB4kjiB4kjiB4kji
Ci!p(Ci!p(Ci!p(Ci!p(E,]c8E,]c8E,]c8E,]c8F`hhLF`hhLF`hhLF`hhLH?sm`H?sm`H?sm`H?sm`
IXZ`pIXZ`pIXZ`pIXQWmIt)rtIt)rtI=-BfH$OXZ~>
<~BP;'mBP;'mBP;'mBP;'mEcQ2@EcQ2@EcQ2@EcQ2@H[C*dH[C*dH[C*dH[C*dKS5#3KS5#3KS5#3KS5#3
NfK-[NfK-[NfK-[NfK-[Q^=&*Q^=&*Q^=&*Q^=&*TV.sNTV.sNTV.sNTV.sNWiE)!WiE)!WiE)!WiE)!
Za7!EZa7!EZa7!EZa7!E]Y(ni]Y(ni]Y(ni]Y(ni`Pog8`Pog8`Pog8`Pog8cd0q`cd0q`cd0q`cd0q`
f\"j/f\"j/f\"j/f\"j/iSibSiSibSiSibSiSibSlg*m&lg*m&lg*m&lg*m&o^qeJo^qeJo^qeJo^qeJ
rVc]nrVc]nrVc]nrVc]ns8W-!s8W-!s8W-!s8W-!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
119.281 49.0367 mo
119.284 49.0363 119.288 49.036 119.291 49.0357 cv
119.287 49.036 119.284 49.0363 119.281 49.0367 cv
119.292 49.0356 mo
119.295 49.0353 119.298 49.0349 119.301 49.0346 cv
119.298 49.0349 119.295 49.0352 119.292 49.0356 cv
119.302 49.0345 mo
119.305 49.0342 119.308 49.0339 119.312 49.0336 cv
119.309 49.0339 119.305 49.0342 119.302 49.0345 cv
119.313 49.0335 mo
119.316 49.0332 119.319 49.0328 119.322 49.0325 cv
119.319 49.0328 119.316 49.0332 119.313 49.0335 cv
119.323 49.0325 mo
119.326 49.0322 119.329 49.0319 119.333 49.0315 cv
119.329 49.0319 119.326 49.0322 119.323 49.0325 cv
119.334 49.0315 mo
119.337 49.0312 119.34 49.0309 119.343 49.0306 cv
119.34 49.0309 119.337 49.0312 119.334 49.0315 cv
119.344 49.0305 mo
119.347 49.0302 119.35 49.0299 119.354 49.0296 cv
119.35 49.0299 119.347 49.0302 119.344 49.0305 cv
119.355 49.0295 mo
119.358 49.0292 119.361 49.0289 119.364 49.0286 cv
119.361 49.0289 119.358 49.0292 119.355 49.0295 cv
119.365 49.0286 mo
119.368 49.0283 119.371 49.028 119.375 49.0277 cv
119.372 49.028 119.368 49.0283 119.365 49.0286 cv
119.375 49.0276 mo
119.389 49.0265 119.402 49.0253 119.415 49.0242 cv
119.402 49.0253 119.389 49.0265 119.375 49.0276 cv
119.417 49.0241 mo
119.419 49.0239 119.422 49.0237 119.424 49.0235 cv
119.422 49.0237 119.419 49.0239 119.417 49.0241 cv
119.428 49.0232 mo
119.43 49.023 119.432 49.0228 119.434 49.0227 cv
119.432 49.0228 119.43 49.023 119.428 49.0232 cv
120.562 49.0223 mo
120.559 49.0221 120.556 49.0219 120.553 49.0216 cv
120.556 49.0219 120.559 49.0221 120.562 49.0223 cv
119.439 49.0223 mo
119.441 49.0221 119.443 49.022 119.445 49.0218 cv
119.443 49.022 119.441 49.0221 119.439 49.0223 cv
120.551 49.0215 mo
120.549 49.0213 120.546 49.0211 120.543 49.0209 cv
120.546 49.0211 120.549 49.0213 120.551 49.0215 cv
119.449 49.0214 mo
119.451 49.0213 119.453 49.0212 119.455 49.021 cv
119.453 49.0211 119.451 49.0213 119.449 49.0214 cv
120.54 49.0206 mo
120.538 49.0205 120.535 49.0203 120.533 49.0201 cv
120.535 49.0203 120.538 49.0205 120.54 49.0206 cv
119.461 49.0206 mo
119.462 49.0205 119.464 49.0203 119.465 49.0202 cv
119.464 49.0203 119.462 49.0205 119.461 49.0206 cv
120.529 49.0198 mo
120.527 49.0197 120.525 49.0195 120.522 49.0193 cv
120.525 49.0195 120.527 49.0196 120.529 49.0198 cv
119.471 49.0198 mo
119.473 49.0196 119.475 49.0195 119.476 49.0194 cv
119.475 49.0195 119.473 49.0196 119.471 49.0198 cv
120.519 49.019 mo
120.516 49.0189 120.514 49.0187 120.512 49.0185 cv
120.514 49.0187 120.516 49.0188 120.519 49.019 cv
119.482 49.019 mo
119.484 49.0188 119.486 49.0187 119.487 49.0186 cv
119.486 49.0187 119.484 49.0188 119.482 49.019 cv
120.508 49.0182 mo
120.506 49.0181 120.503 49.0179 120.501 49.0178 cv
120.504 49.0179 120.505 49.0181 120.508 49.0182 cv
119.493 49.0182 mo
119.495 49.018 119.496 49.0179 119.498 49.0178 cv
119.496 49.0179 119.495 49.0181 119.493 49.0182 cv
120.497 49.0174 mo
120.495 49.0173 120.493 49.0172 120.491 49.017 cv
120.493 49.0172 120.495 49.0173 120.497 49.0174 cv
119.504 49.0174 mo
119.506 49.0173 119.507 49.0172 119.509 49.0171 cv
119.507 49.0172 119.506 49.0173 119.504 49.0174 cv
120.486 49.0167 mo
120.484 49.0165 120.482 49.0164 120.48 49.0163 cv
120.482 49.0164 120.484 49.0166 120.486 49.0167 cv
119.515 49.0166 mo
119.517 49.0165 119.518 49.0164 119.52 49.0163 cv
119.518 49.0164 119.517 49.0165 119.515 49.0166 cv
120.475 49.0159 mo
120.473 49.0158 120.471 49.0157 120.469 49.0155 cv
120.471 49.0157 120.473 49.0158 120.475 49.0159 cv
119.526 49.0159 mo
119.527 49.0158 119.529 49.0157 119.53 49.0156 cv
119.529 49.0157 119.528 49.0158 119.526 49.0159 cv
120.464 49.0152 mo
120.462 49.0151 120.46 49.015 120.458 49.0149 cv
120.46 49.015 120.462 49.0151 120.464 49.0152 cv
119.537 49.0151 mo
119.538 49.0151 119.54 49.015 119.541 49.0149 cv
119.54 49.015 119.538 49.0151 119.537 49.0151 cv
120.452 49.0145 mo
120.451 49.0144 120.449 49.0143 120.448 49.0142 cv
120.449 49.0143 120.451 49.0144 120.452 49.0145 cv
119.549 49.0144 mo
119.55 49.0143 119.551 49.0143 119.552 49.0142 cv
119.551 49.0143 119.55 49.0143 119.549 49.0144 cv
120.441 49.0138 mo
120.44 49.0137 120.438 49.0136 120.437 49.0135 cv
120.438 49.0136 120.44 49.0137 120.441 49.0138 cv
119.56 49.0137 mo
119.561 49.0136 119.562 49.0136 119.563 49.0135 cv
119.562 49.0136 119.561 49.0136 119.56 49.0137 cv
120.431 49.0131 mo
120.429 49.013 120.427 49.0129 120.426 49.0128 cv
120.428 49.0129 120.429 49.013 120.431 49.0131 cv
119.571 49.013 mo
119.572 49.0129 119.573 49.0129 119.574 49.0128 cv
119.573 49.0129 119.572 49.0129 119.571 49.013 cv
120.418 49.0124 mo
120.417 49.0123 120.416 49.0122 120.415 49.0122 cv
120.416 49.0122 120.417 49.0123 120.418 49.0124 cv
119.584 49.0122 mo
119.585 49.0122 li
119.584 49.0122 li
120.393 49.0109 mo
120.393 49.0109 120.391 49.0108 120.391 49.0108 cv
120.391 49.0108 120.393 49.0109 120.393 49.0109 cv
119.607 49.0109 mo
119.607 49.0109 119.607 49.0109 119.607 49.0109 cv
119.607 49.0109 119.607 49.0109 119.607 49.0109 cv
120.382 49.0103 mo
120.381 49.0103 120.38 49.0102 120.379 49.0101 cv
120.38 49.0102 120.381 49.0103 120.382 49.0103 cv
119.618 49.0103 mo
119.618 49.0103 119.619 49.0102 119.62 49.0102 cv
119.619 49.0102 119.619 49.0103 119.618 49.0103 cv
120.371 49.0097 mo
120.37 49.0097 120.369 49.0096 120.368 49.0096 cv
120.369 49.0096 120.37 49.0097 120.371 49.0097 cv
119.629 49.0097 mo
119.63 49.0097 119.63 49.0096 119.631 49.0096 cv
119.631 49.0096 119.63 49.0097 119.629 49.0097 cv
120.36 49.0092 mo
120.359 49.0091 120.358 49.0091 120.357 49.009 cv
120.358 49.009 120.359 49.0091 120.36 49.0092 cv
119.64 49.0092 mo
119.641 49.0091 119.642 49.0091 119.643 49.009 cv
119.642 49.0091 119.641 49.0091 119.64 49.0092 cv
120.35 49.0086 mo
120.348 49.0086 120.347 49.0085 120.345 49.0084 cv
120.347 49.0085 120.348 49.0085 120.35 49.0086 cv
119.65 49.0086 mo
119.652 49.0086 119.653 49.0085 119.655 49.0084 cv
119.653 49.0085 119.652 49.0086 119.65 49.0086 cv
120.339 49.0081 mo
120.337 49.008 120.336 49.0079 120.334 49.0079 cv
120.336 49.0079 120.338 49.008 120.339 49.0081 cv
119.661 49.0081 mo
119.663 49.008 119.664 49.008 119.666 49.0079 cv
119.664 49.008 119.663 49.008 119.661 49.0081 cv
120.328 49.0076 mo
120.326 49.0075 120.325 49.0074 120.323 49.0074 cv
120.325 49.0074 120.326 49.0075 120.328 49.0076 cv
119.672 49.0076 mo
119.674 49.0075 119.675 49.0075 119.677 49.0074 cv
119.675 49.0074 119.673 49.0075 119.672 49.0076 cv
120.317 49.0071 mo
120.315 49.007 120.314 49.007 120.313 49.0069 cv
120.314 49.007 120.315 49.007 120.317 49.0071 cv
119.683 49.0071 mo
119.685 49.007 119.686 49.007 119.687 49.0069 cv
119.686 49.007 119.685 49.007 119.683 49.0071 cv
120.306 49.0066 mo
120.305 49.0065 120.303 49.0065 120.301 49.0064 cv
120.303 49.0065 120.304 49.0065 120.306 49.0066 cv
119.694 49.0066 mo
119.696 49.0065 119.697 49.0065 119.698 49.0064 cv
119.697 49.0065 119.695 49.0065 119.694 49.0066 cv
120.295 49.0061 mo
120.294 49.0061 120.292 49.006 120.291 49.006 cv
120.292 49.006 120.293 49.0061 120.295 49.0061 cv
119.705 49.0061 mo
119.707 49.0061 119.708 49.006 119.709 49.006 cv
119.708 49.006 119.707 49.0061 119.705 49.0061 cv
120.284 49.0057 mo
120.283 49.0056 120.281 49.0056 120.28 49.0055 cv
120.281 49.0056 120.282 49.0056 120.284 49.0057 cv
119.716 49.0057 mo
119.717 49.0056 119.719 49.0056 119.72 49.0055 cv
119.719 49.0056 119.717 49.0056 119.716 49.0057 cv
120.273 49.0053 mo
120.271 49.0052 120.27 49.0051 120.269 49.0051 cv
120.27 49.0051 120.272 49.0052 120.273 49.0053 cv
119.727 49.0052 mo
119.729 49.0052 119.73 49.0051 119.731 49.0051 cv
119.73 49.0051 119.728 49.0052 119.727 49.0052 cv
120.262 49.0049 mo
120.261 49.0048 120.259 49.0047 120.257 49.0047 cv
120.259 49.0047 120.261 49.0048 120.262 49.0049 cv
119.738 49.0048 mo
119.739 49.0048 119.741 49.0047 119.743 49.0047 cv
119.741 49.0047 119.739 49.0048 119.738 49.0048 cv
120.251 49.0045 mo
120.25 49.0044 120.248 49.0043 120.247 49.0043 cv
120.248 49.0043 120.25 49.0044 120.251 49.0045 cv
119.749 49.0045 mo
119.75 49.0044 119.752 49.0043 119.753 49.0043 cv
119.752 49.0043 119.75 49.0044 119.749 49.0045 cv
120.24 49.0041 mo
120.239 49.004 120.237 49.004 120.236 49.0039 cv
120.237 49.004 120.239 49.004 120.24 49.0041 cv
119.76 49.0041 mo
119.761 49.004 119.763 49.004 119.764 49.0039 cv
119.763 49.004 119.761 49.004 119.76 49.0041 cv
120.228 49.0037 mo
120.227 49.0036 120.226 49.0036 120.225 49.0036 cv
120.226 49.0036 120.227 49.0036 120.228 49.0037 cv
119.772 49.0037 mo
119.773 49.0036 119.774 49.0036 119.775 49.0036 cv
119.774 49.0036 119.773 49.0036 119.772 49.0037 cv
120.217 49.0033 mo
120.216 49.0033 120.215 49.0033 120.214 49.0032 cv
120.215 49.0032 120.216 49.0033 120.217 49.0033 cv
119.783 49.0033 mo
119.784 49.0033 119.785 49.0032 119.786 49.0032 cv
119.785 49.0033 119.784 49.0033 119.783 49.0033 cv
120.192 49.0026 mo
120.191 49.0026 120.19 49.0026 120.19 49.0025 cv
120.19 49.0026 120.191 49.0026 120.192 49.0026 cv
119.808 49.0026 mo
119.809 49.0026 119.81 49.0026 119.81 49.0025 cv
119.81 49.0026 119.809 49.0026 119.808 49.0026 cv
120.181 49.0023 mo
120.179 49.0023 120.178 49.0022 120.177 49.0022 cv
120.178 49.0022 120.179 49.0023 120.181 49.0023 cv
119.819 49.0023 mo
119.821 49.0023 119.821 49.0022 119.823 49.0022 cv
119.822 49.0022 119.821 49.0023 119.819 49.0023 cv
119.83 49.002 mo
119.832 49.002 119.833 49.002 119.835 49.0019 cv
119.833 49.002 119.832 49.002 119.83 49.002 cv
120.17 49.002 mo
120.168 49.002 120.167 49.002 120.165 49.0019 cv
120.167 49.002 120.168 49.002 120.17 49.002 cv
119.841 49.0018 mo
119.843 49.0017 119.844 49.0017 119.846 49.0017 cv
119.844 49.0017 119.843 49.0017 119.841 49.0018 cv
120.159 49.0018 mo
120.157 49.0017 120.156 49.0017 120.154 49.0017 cv
120.156 49.0017 120.157 49.0017 120.159 49.0018 cv
119.852 49.0015 mo
119.854 49.0015 119.855 49.0015 119.857 49.0014 cv
119.855 49.0015 119.854 49.0015 119.852 49.0015 cv
120.148 49.0015 mo
120.146 49.0015 120.145 49.0015 120.143 49.0014 cv
120.145 49.0015 120.146 49.0015 120.148 49.0015 cv
119.863 49.0013 mo
119.865 49.0013 119.866 49.0013 119.868 49.0012 cv
119.866 49.0013 119.865 49.0013 119.863 49.0013 cv
120.137 49.0013 mo
120.135 49.0013 120.134 49.0013 120.132 49.0012 cv
120.134 49.0013 120.135 49.0013 120.137 49.0013 cv
119.874 49.0011 mo
119.876 49.0011 119.877 49.0011 119.879 49.001 cv
119.877 49.0011 119.876 49.0011 119.874 49.0011 cv
120.126 49.0011 mo
120.124 49.0011 120.123 49.0011 120.121 49.001 cv
120.123 49.0011 120.124 49.0011 120.126 49.0011 cv
119.885 49.0009 mo
119.887 49.0009 119.888 49.0009 119.89 49.0009 cv
119.888 49.0009 119.886 49.0009 119.885 49.0009 cv
120.115 49.0009 mo
120.114 49.0009 120.112 49.0009 120.11 49.0009 cv
120.112 49.0009 120.113 49.0009 120.115 49.0009 cv
119.896 49.0008 mo
119.898 49.0007 119.899 49.0007 119.901 49.0007 cv
119.899 49.0007 119.898 49.0007 119.896 49.0008 cv
120.104 49.0008 mo
120.102 49.0007 120.101 49.0007 120.099 49.0007 cv
120.101 49.0007 120.102 49.0007 120.104 49.0008 cv
119.907 49.0006 mo
119.909 49.0006 119.91 49.0006 119.912 49.0005 cv
119.91 49.0006 119.909 49.0006 119.907 49.0006 cv
120.093 49.0006 mo
120.091 49.0006 120.09 49.0006 120.088 49.0005 cv
120.09 49.0006 120.091 49.0006 120.093 49.0006 cv
119.918 49.0005 mo
119.919 49.0005 119.921 49.0004 119.923 49.0004 cv
119.921 49.0004 119.92 49.0005 119.918 49.0005 cv
120.082 49.0005 mo
120.08 49.0005 120.079 49.0004 120.077 49.0004 cv
120.079 49.0004 120.081 49.0005 120.082 49.0005 cv
119.929 49.0004 mo
119.931 49.0003 119.932 49.0003 119.934 49.0003 cv
119.932 49.0003 119.931 49.0003 119.929 49.0004 cv
120.071 49.0004 mo
120.069 49.0003 120.068 49.0003 120.066 49.0003 cv
120.068 49.0003 120.069 49.0003 120.071 49.0004 cv
119.94 49.0003 mo
119.942 49.0002 119.943 49.0002 119.945 49.0002 cv
119.943 49.0002 119.942 49.0002 119.94 49.0003 cv
120.06 49.0003 mo
120.058 49.0002 120.057 49.0002 120.055 49.0002 cv
120.057 49.0002 120.058 49.0002 120.06 49.0003 cv
119.951 49.0002 mo
119.953 49.0002 119.954 49.0001 119.956 49.0001 cv
119.954 49.0001 119.953 49.0002 119.951 49.0002 cv
120.049 49.0002 mo
120.047 49.0002 120.046 49.0001 120.044 49.0001 cv
120.046 49.0001 120.047 49.0002 120.049 49.0002 cv
119.962 49.0001 mo
119.963 49.0001 119.965 49.0001 119.967 49.0001 cv
119.965 49.0001 119.964 49.0001 119.962 49.0001 cv
120.038 49.0001 mo
120.036 49.0001 120.035 49.0001 120.033 49.0001 cv
120.035 49.0001 120.037 49.0001 120.038 49.0001 cv
119.974 49 mo
119.975 49 119.976 49 119.978 49 cv
119.977 49 119.975 49 119.974 49 cv
120.026 49 mo
120.025 49 120.023 49 120.022 49 cv
120.023 49 120.025 49 120.026 49 cv
120.015 49 mo
120.013 49 120.012 49 120.011 49 cv
120.012 49 120.014 49 120.015 49 cv
119.985 49 mo
119.986 49 119.988 49 119.989 49 cv
119.988 49 119.987 49 119.985 49 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[2.88 0 0 1.44 118.56 14.08 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 3 
/M[6 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~1c.$G1c.3Q3B9)[4Ztqk4Zr~>
<~BP;'mBP;F,EcQ2@H[C*dH[>~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
113.184 55.4334 mo
113.133 55.4205 113.082 55.4076 113.031 55.3945 cv
113.318 52.0558 115.956 49.3777 119.281 49.0367 cv
119.281 49.0367 119.281 49.0367 119.281 49.0367 cv
119.284 49.0363 119.287 49.036 119.291 49.0357 cv
119.291 49.0356 119.291 49.0356 119.292 49.0356 cv
119.295 49.0352 119.298 49.0349 119.301 49.0346 cv
119.302 49.0346 119.302 49.0346 119.302 49.0345 cv
119.305 49.0342 119.309 49.0339 119.312 49.0336 cv
119.312 49.0335 119.312 49.0335 119.313 49.0335 cv
119.316 49.0332 119.319 49.0328 119.322 49.0325 cv
119.323 49.0325 li
119.326 49.0322 119.329 49.0319 119.333 49.0315 cv
119.333 49.0315 119.333 49.0315 119.334 49.0315 cv
119.337 49.0312 119.34 49.0309 119.343 49.0306 cv
119.344 49.0305 119.344 49.0305 119.344 49.0305 cv
119.347 49.0302 119.35 49.0299 119.354 49.0296 cv
119.354 49.0295 119.355 49.0295 119.355 49.0295 cv
119.358 49.0292 119.361 49.0289 119.364 49.0286 cv
119.365 49.0286 li
119.368 49.0283 119.372 49.028 119.375 49.0277 cv
119.375 49.0277 119.375 49.0276 119.375 49.0276 cv
119.389 49.0265 119.402 49.0253 119.415 49.0242 cv
119.416 49.0242 119.416 49.0241 119.417 49.0241 cv
119.419 49.0239 119.422 49.0237 119.424 49.0235 cv
119.425 49.0234 119.427 49.0233 119.428 49.0232 cv
119.43 49.023 119.432 49.0228 119.434 49.0227 cv
119.436 49.0225 119.437 49.0224 119.439 49.0223 cv
119.441 49.0221 119.443 49.022 119.445 49.0218 cv
119.446 49.0217 119.448 49.0216 119.449 49.0214 cv
119.451 49.0213 119.453 49.0211 119.455 49.021 cv
119.457 49.0209 119.459 49.0207 119.461 49.0206 cv
119.462 49.0205 119.464 49.0203 119.465 49.0202 cv
119.467 49.0201 119.469 49.0199 119.471 49.0198 cv
119.473 49.0196 119.475 49.0195 119.476 49.0194 cv
119.478 49.0192 119.48 49.0191 119.482 49.019 cv
119.484 49.0188 119.486 49.0187 119.487 49.0186 cv
119.489 49.0184 119.491 49.0183 119.493 49.0182 cv
119.495 49.0181 119.496 49.0179 119.498 49.0178 cv
119.5 49.0177 119.502 49.0175 119.504 49.0174 cv
119.506 49.0173 119.507 49.0172 119.509 49.0171 cv
119.511 49.0169 119.513 49.0168 119.515 49.0166 cv
119.517 49.0165 119.518 49.0164 119.52 49.0163 cv
119.522 49.0162 119.524 49.016 119.526 49.0159 cv
119.528 49.0158 119.529 49.0157 119.53 49.0156 cv
119.533 49.0154 119.535 49.0153 119.537 49.0151 cv
119.538 49.0151 119.54 49.015 119.541 49.0149 cv
119.543 49.0147 119.546 49.0145 119.549 49.0144 cv
119.55 49.0143 119.551 49.0143 119.552 49.0142 cv
119.555 49.014 119.557 49.0139 119.56 49.0137 cv
119.561 49.0136 119.562 49.0136 119.563 49.0135 cv
119.565 49.0133 119.568 49.0132 119.571 49.013 cv
119.572 49.0129 119.573 49.0129 119.574 49.0128 cv
119.577 49.0126 119.581 49.0124 119.584 49.0122 cv
119.585 49.0122 li
119.592 49.0117 119.599 49.0113 119.607 49.0109 cv
119.607 49.0109 119.607 49.0109 119.607 49.0109 cv
119.611 49.0107 119.614 49.0105 119.618 49.0103 cv
119.619 49.0103 119.619 49.0102 119.62 49.0102 cv
119.623 49.01 119.626 49.0099 119.629 49.0097 cv
119.63 49.0097 119.631 49.0096 119.631 49.0096 cv
119.634 49.0094 119.637 49.0093 119.64 49.0092 cv
119.641 49.0091 119.642 49.0091 119.643 49.009 cv
119.645 49.0089 119.648 49.0088 119.65 49.0086 cv
119.652 49.0086 119.653 49.0085 119.655 49.0084 cv
119.657 49.0083 119.659 49.0082 119.661 49.0081 cv
119.663 49.008 119.664 49.008 119.666 49.0079 cv
119.668 49.0078 119.67 49.0077 119.672 49.0076 cv
119.673 49.0075 119.675 49.0074 119.677 49.0074 cv
119.679 49.0073 119.681 49.0072 119.683 49.0071 cv
119.685 49.007 119.686 49.007 119.687 49.0069 cv
119.69 49.0068 119.692 49.0067 119.694 49.0066 cv
119.695 49.0065 119.697 49.0065 119.698 49.0064 cv
119.701 49.0063 119.703 49.0062 119.705 49.0061 cv
119.707 49.0061 119.708 49.006 119.709 49.006 cv
119.711 49.0059 119.714 49.0058 119.716 49.0057 cv
119.717 49.0056 119.719 49.0056 119.72 49.0055 cv
119.723 49.0054 119.725 49.0053 119.727 49.0052 cv
119.728 49.0052 119.73 49.0051 119.731 49.0051 cv
119.733 49.005 119.736 49.0049 119.738 49.0048 cv
119.739 49.0048 119.741 49.0047 119.743 49.0047 cv
119.745 49.0046 119.747 49.0045 119.749 49.0045 cv
119.75 49.0044 119.752 49.0043 119.753 49.0043 cv
119.755 49.0042 119.758 49.0041 119.76 49.0041 cv
119.761 49.004 119.763 49.004 119.764 49.0039 cv
119.767 49.0038 119.769 49.0038 119.772 49.0037 cv
119.773 49.0036 119.774 49.0036 119.775 49.0036 cv
119.778 49.0035 119.78 49.0034 119.783 49.0033 cv
119.784 49.0033 119.785 49.0033 119.786 49.0032 cv
119.794 49.003 119.801 49.0028 119.808 49.0026 cv
119.809 49.0026 119.81 49.0026 119.81 49.0025 cv
119.813 49.0025 119.816 49.0024 119.819 49.0023 cv
119.821 49.0023 119.822 49.0022 119.823 49.0022 cv
119.825 49.0022 119.828 49.0021 119.83 49.002 cv
119.832 49.002 119.833 49.002 119.835 49.0019 cv
119.837 49.0019 119.839 49.0018 119.841 49.0018 cv
119.843 49.0017 119.844 49.0017 119.846 49.0017 cv
119.848 49.0016 119.85 49.0016 119.852 49.0015 cv
119.854 49.0015 119.855 49.0015 119.857 49.0014 cv
119.859 49.0014 119.861 49.0014 119.863 49.0013 cv
119.865 49.0013 119.866 49.0013 119.868 49.0012 cv
119.87 49.0012 119.872 49.0012 119.874 49.0011 cv
119.876 49.0011 119.877 49.0011 119.879 49.001 cv
119.881 49.001 119.883 49.001 119.885 49.0009 cv
119.886 49.0009 119.888 49.0009 119.89 49.0009 cv
119.892 49.0008 119.894 49.0008 119.896 49.0008 cv
119.898 49.0007 119.899 49.0007 119.901 49.0007 cv
119.903 49.0007 119.905 49.0006 119.907 49.0006 cv
119.909 49.0006 119.91 49.0006 119.912 49.0005 cv
119.914 49.0005 119.916 49.0005 119.918 49.0005 cv
119.92 49.0005 119.921 49.0004 119.923 49.0004 cv
119.925 49.0004 119.927 49.0004 119.929 49.0004 cv
119.931 49.0003 119.932 49.0003 119.934 49.0003 cv
119.936 49.0003 119.938 49.0003 119.94 49.0003 cv
119.942 49.0002 119.943 49.0002 119.945 49.0002 cv
119.947 49.0002 119.949 49.0002 119.951 49.0002 cv
119.953 49.0002 119.954 49.0001 119.956 49.0001 cv
119.958 49.0001 119.96 49.0001 119.962 49.0001 cv
119.964 49.0001 119.965 49.0001 119.967 49.0001 cv
119.969 49.0001 119.971 49.0001 119.974 49 cv
119.975 49 119.977 49 119.978 49 cv
119.98 49 119.983 49 119.985 49 cv
119.987 49 119.988 49 119.989 49 cv
119.993 49 119.996 49 120 49 cv
120.004 49 120.007 49 120.011 49 cv
120.012 49 120.013 49 120.015 49 cv
120.017 49 120.02 49 120.022 49 cv
120.023 49 120.025 49 120.026 49 cv
120.029 49.0001 120.031 49.0001 120.033 49.0001 cv
120.035 49.0001 120.036 49.0001 120.038 49.0001 cv
120.04 49.0001 120.042 49.0001 120.044 49.0001 cv
120.046 49.0001 120.047 49.0002 120.049 49.0002 cv
120.051 49.0002 120.053 49.0002 120.055 49.0002 cv
120.057 49.0002 120.058 49.0002 120.06 49.0003 cv
120.062 49.0003 120.064 49.0003 120.066 49.0003 cv
120.068 49.0003 120.069 49.0003 120.071 49.0004 cv
120.073 49.0004 120.075 49.0004 120.077 49.0004 cv
120.079 49.0004 120.08 49.0005 120.082 49.0005 cv
120.084 49.0005 120.086 49.0005 120.088 49.0005 cv
120.09 49.0006 120.091 49.0006 120.093 49.0006 cv
120.095 49.0006 120.097 49.0007 120.099 49.0007 cv
120.101 49.0007 120.102 49.0007 120.104 49.0008 cv
120.106 49.0008 120.108 49.0008 120.11 49.0009 cv
120.112 49.0009 120.114 49.0009 120.115 49.0009 cv
120.117 49.001 120.119 49.001 120.121 49.001 cv
120.123 49.0011 120.124 49.0011 120.126 49.0011 cv
120.128 49.0012 120.13 49.0012 120.132 49.0012 cv
120.134 49.0013 120.135 49.0013 120.137 49.0013 cv
120.139 49.0014 120.141 49.0014 120.143 49.0014 cv
120.145 49.0015 120.146 49.0015 120.148 49.0015 cv
120.15 49.0016 120.152 49.0016 120.154 49.0017 cv
120.156 49.0017 120.157 49.0017 120.159 49.0018 cv
120.161 49.0018 120.163 49.0019 120.165 49.0019 cv
120.167 49.002 120.168 49.002 120.17 49.002 cv
120.172 49.0021 120.175 49.0022 120.177 49.0022 cv
120.178 49.0022 120.179 49.0023 120.181 49.0023 cv
120.184 49.0024 120.187 49.0025 120.19 49.0025 cv
120.19 49.0026 120.191 49.0026 120.192 49.0026 cv
120.199 49.0028 120.206 49.003 120.214 49.0032 cv
120.215 49.0033 120.216 49.0033 120.217 49.0033 cv
120.22 49.0034 120.222 49.0035 120.225 49.0036 cv
120.226 49.0036 120.227 49.0036 120.228 49.0037 cv
120.231 49.0038 120.233 49.0038 120.236 49.0039 cv
120.237 49.004 120.239 49.004 120.24 49.0041 cv
120.242 49.0041 120.245 49.0042 120.247 49.0043 cv
120.248 49.0043 120.25 49.0044 120.251 49.0045 cv
120.253 49.0045 120.255 49.0046 120.257 49.0047 cv
120.259 49.0047 120.261 49.0048 120.262 49.0049 cv
120.264 49.0049 120.267 49.005 120.269 49.0051 cv
120.27 49.0051 120.271 49.0052 120.273 49.0053 cv
120.275 49.0053 120.277 49.0054 120.28 49.0055 cv
120.281 49.0056 120.283 49.0056 120.284 49.0057 cv
120.286 49.0058 120.288 49.0059 120.291 49.006 cv
120.292 49.006 120.294 49.0061 120.295 49.0061 cv
120.297 49.0062 120.299 49.0063 120.301 49.0064 cv
120.303 49.0065 120.305 49.0065 120.306 49.0066 cv
120.308 49.0067 120.31 49.0068 120.313 49.0069 cv
120.314 49.007 120.315 49.007 120.317 49.0071 cv
120.319 49.0072 120.321 49.0073 120.323 49.0074 cv
120.325 49.0074 120.326 49.0075 120.328 49.0076 cv
120.33 49.0077 120.332 49.0078 120.334 49.0079 cv
120.336 49.0079 120.337 49.008 120.339 49.0081 cv
120.341 49.0082 120.343 49.0083 120.345 49.0084 cv
120.347 49.0085 120.348 49.0086 120.35 49.0086 cv
120.352 49.0087 120.355 49.0089 120.357 49.009 cv
120.358 49.0091 120.359 49.0091 120.36 49.0092 cv
120.363 49.0093 120.365 49.0094 120.368 49.0096 cv
120.369 49.0096 120.37 49.0097 120.371 49.0097 cv
120.374 49.0099 120.376 49.01 120.379 49.0101 cv
120.38 49.0102 120.381 49.0103 120.382 49.0103 cv
120.385 49.0105 120.388 49.0106 120.391 49.0108 cv
120.391 49.0108 120.393 49.0109 120.393 49.0109 cv
120.401 49.0113 120.408 49.0117 120.415 49.0122 cv
120.416 49.0122 120.417 49.0123 120.418 49.0124 cv
120.421 49.0125 120.423 49.0127 120.426 49.0128 cv
120.427 49.0129 120.429 49.013 120.431 49.0131 cv
120.433 49.0132 120.435 49.0133 120.437 49.0135 cv
120.438 49.0136 120.44 49.0137 120.441 49.0138 cv
120.444 49.0139 120.446 49.014 120.448 49.0142 cv
120.449 49.0143 120.451 49.0144 120.452 49.0145 cv
120.455 49.0146 120.456 49.0147 120.458 49.0149 cv
120.46 49.015 120.462 49.0151 120.464 49.0152 cv
120.466 49.0153 120.467 49.0154 120.469 49.0155 cv
120.471 49.0157 120.473 49.0158 120.475 49.0159 cv
120.477 49.0161 120.478 49.0162 120.48 49.0163 cv
120.482 49.0164 120.484 49.0165 120.486 49.0167 cv
120.487 49.0168 120.489 49.0169 120.491 49.017 cv
120.493 49.0172 120.495 49.0173 120.497 49.0174 cv
120.498 49.0175 120.5 49.0177 120.501 49.0178 cv
120.503 49.0179 120.506 49.0181 120.508 49.0182 cv
120.509 49.0183 120.511 49.0184 120.512 49.0185 cv
120.514 49.0187 120.516 49.0189 120.519 49.019 cv
120.52 49.0191 120.521 49.0192 120.522 49.0193 cv
120.525 49.0195 120.527 49.0197 120.529 49.0198 cv
120.531 49.0199 120.532 49.02 120.533 49.0201 cv
120.535 49.0203 120.538 49.0205 120.54 49.0206 cv
120.541 49.0207 120.542 49.0208 120.543 49.0209 cv
120.546 49.0211 120.549 49.0213 120.551 49.0215 cv
120.552 49.0216 120.552 49.0216 120.553 49.0216 cv
120.556 49.0219 120.559 49.0221 120.562 49.0223 cv
120.562 49.0224 120.563 49.0224 120.563 49.0224 cv
123.96 49.2944 126.676 52.0039 126.969 55.3945 cv
126.918 55.4076 126.867 55.4205 126.816 55.4334 cv
126.103 52.3257 123.321 50 120 50 cv
116.679 50 113.897 52.3257 113.184 55.4334 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[15.36 0 0 7.68 112.32 7.84 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 32 
/H 16 
/M[32 0 0 -16 0 16 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
i;hgCi=Y&LhuM^Di>:MShZ2UFi>ptZh>lLIi?[Lbh#QCLi@F$jg]6:NiAB]tgAp1RiB6<(g&U(ViCE,4
f`9tZiDJk?fDsk_iEPUJf)XbciFhKWec=YiiH+AdeH"PniIL=re,\GtiJm:+dfA?$iLKB;dK&6+iN)JK
nGn(~>

%%EndBinary
grestore
np
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 9.0%%AI8_CreatorVersion: 14.0.0%%For: (Nick La) ()%%Title: (folder-add.eps)%%CreationDate: 2/26/10 7:08 AM%%Canvassize: 16383%AI9_DataStream%Gb"/LBiEbWfBDs5jo;!,R'>7W?[r\\QGjor5_&hh[VQAl2I:!e4<O!0^ZV+fCU:Z-1N1fJ[jI-;V,)<-I;(:oo1jMZWOFo_Vu*(q%TqKJY-s4'RX1<V,[rpgDVR3tkg?@)U$r?`URQhXR]BsKcYT]6\=$+8r[0\EbiS&4Z]71/_]39Q<FZCQ:HL7#*LC(Pe54m\CH8*LW%*t!2)qrg8OrBL4gr*\u-JlICpU$l_!Z?,ZBe$%>,0G64#l"1ibd+NaL4CAjD^m%Ns]ln`Z)"t#JDEjL?)m2)D!]jkZbfj`@4B7M8%0S7CYK#&M@<nmA[rR^=2d#)p?@<d2B!+*Gjgh3PZ3jn[[m[jKSr&UN7^]rhMp<W]r&B4r58MGMekkZFIF>t4eQ>Y%HArGkeFZXfj%!"?fP3R@Y1Q(<]X=I1>pN9`F&U\9cm,=GA44'WPWf]+$E(f2S#1k8:I#+o:D1H`K<"UY3!@,lUD0+3Z1dPN=!/l!RrG$Pe]%9hin%?CESI&gE/`]^T9TmHW%G<E8+S-7BN+n@\f/AAXR62H8%:>nn'm'NEarm?(HHJ$f,<2aEXDXj4.4G[bJOC"8SimJcUfoj<fT,b&<U%Gk,\#pA<`/XW]Ak``!Z=Fk!PjmGJ\$p"EC[B:L.?.kuR4C;9!Dd5ou+AGq6jMLeNN)nd:nJ,=Yk$TPtBcgP+\0+$<`D?;DY8s7W]%7g-@*U&f-UWfbAS&[=Rok//)[N"]%!j*n&^l>2R01L8f#\*B)*)R<bV+2Yd+`kE5g1),;niR%#r-qj+uq'[.O'T5KECk@SCdHb;?%g1k]3P-m<CdiGnYXMS,fOAoZ?s,Z+9*hnLIn4upN=4cuoZLG>.k%>D4[u,d>MLqsf_HK)5Ha@%iN_m<I8%O^W\rKUumWj1Rb<d&h%65U+0@;j=U.*Fq*gr!KP.[LaI>fNAs1:EFj#ig3_l?Tt$]fcn\4cf8E(c-OW5&<^>MEQ6sU?(n?MblqXrZW')`$o878.khF$rVbn%82o]7l\dUY0-29*pkp@O5-^64,5am@EJnIl-Cg9>PKf.b8/M7LN9B.[/g&$%nX+<YE=%+t:I[@^T&It6A$[EB>Xf]brBi!/%tARE%-:(*YCL\!p/OCV/>f)FMX=r"W^NbF]1&9i__]7"\01$h1prfJS["Rt7c&XZ$*C.iZrc"8[r#"#tMXc\tKi-."8'DiWCgK"TQPY;4%rt#C6j-khS@;eUmCIS*h(SR4F,CPLuX=sPs$rWG8F3WjU_`5\K@+rkJR-P+22T2,"$I]/r(L3hrmgM:tFZ(o5)e.)=_J*Mi,8?c@%NR%C,G4pu*c7G/n1QsiZ%3*-YInY>:CM/'9H#BaHAT9n&]$IaQl[>RYfK7M)DX!:J3L:sN+@_lbfK8'sa-G].k@N\ZSrtAI5MS#t%-jBW]RC,Fep.n]AEO9<WEd:AhB;.!TB,Ktpg9Q4*ac9)ZcYWmdCn%h#>P?B_fQ"90s)ND:AS7_hqcBc$j(QX8M;^\]cV\l\bN-g+%q%;?_IBm$W2;9rfgGCDOD/IaCFVB*@Y3/EmHYA$ph7u05")S&(_&3^UTLH5dL&U&^VVZ]][hp`WSUd6;7BK+NEE+NVh8V%aFOE+7%TA0buR/tlB$L;YK4%@8;^Ic!;;o4hK#l#e$CbD0CD_3THH+4OIB4]>)<'hN'(?Vs;2W%]JO1j_S1YeF%FPAV8`,A>4n&Ba``7":'%JJ?/#8Xc*fGGb;T0D0c!\)UGcHS[[X\"5+nTj>^ZFE;_-icmm32I+K^.Y^$#Mr%l+aK-ucNh$3>`3d7AccO`B0;NrX^81EKEBYO#%/&(,4"?[!06,+-U>OtK=9:o>TCe4dKAd,Q^GXCREm#=.!14.ppD2ue#\P7Ch/C.+!(Vf#q@U*=4i7po<9X#9cM`1,9R5i6r8^'IV%!_b!TH0DL>5<!G=j.cXVcH!c3e%A5$ZT+[^JX)$rp3bGI'A:l)gV>>b6#@Bt*-:0Dq4'\p,00`t=3MLoEYP%0!H:1e$fr:8WgX!q%9AGCaI=WY!p]-[WeEmZ.Up`CON8mVN+YbSLeS5j1=RSfoT9]@/]#V?j<&?,FK2DG%bDT5aQ?QREB5a3V-Kuu%+\b+G:Ridol^93b%fJ2\T#3j,i6Nqa0p6X,00@9<X?-\USMY]m#5aB0*_qE&EbUVXX?ur[@o"Ec&k"bEbV8refB$k>0en%rOObcpRf??g0S[NGH_<2?g%A;/DnBoAEP3[lF5_SoA!q"C(#R6P=hjt4Y[7U;JJ=S*s,=<ul;>U"0k#ietFSgr$<38M\0ViT;oogMU"er2F=1b7R$Uutn9@,"5`%.G@/7,MePpJisq\ESI.BlHNh4Co".XEQdOjpf?D/+JVPK,)R\:g0gBe$YP3TP0ee/?fRU>Ep+bb_GMeOK!m5R;3%0fJ6g8fAm(64%)s7XI4JA6C1rM:gYq0Cf:mT80Kpd]5Zu?OVM/\q`,>'Gh/0[fWbWVbG)V7;.Q-1pl"WspaLL1G78X<p\8KX;Bb?Tc>FTc7Yg%>OD%d&<[J<<MiQ=oP%(Xs?#s`gl_24MWb?-&0*g9/Z3s<61"W6*A;jmttZl)(']=j>,?=>b3pXAAnPokq$^.c-5:;mFm_7!hUX`#L%!h%UVJH%K+*\oES4h]7[;$kZ?t>"EhCt@iuU1^^KGm,mG!pHVecN!-1%tI7%)!aF]f#)VpuYkiGkHpfYmDsbhe2C5rG"UKHuS.Q-D9;%aT3Hu7@]e:o1HS8M"<%;s5NiNK',FrKil<rCJ;_]4gM%j<e-f7pmIe9?K?aUg,9PhU,Y&@)s0&S>@nS+(tSh;S?/(L"UpN;oP9Aq%4PuX>"f@tXMtE7qS:>+p,H=t0kCcj&BoQUcak,7.oopcP0#5dYH@d`?1YhcY!6P[[+bfKqZE)*KW\R^G`+i[\,DJCGo0+LR0l:O5%"83olCh8#Pn7)0HI5BO\FIP[h`+WS(i.t7m)ejOXRKXS;)s1g"Y/DQ/L8N!JLjA&lU][c3;G[iOd,LE?+j`9c<b.>$c<!$3/%/to%'$k,dK.,X8nc3K9ZA<nO%*JWVQf*f"2Nq@\*2C'Eak?'+\HFccVV2mWB)%<tRT!9N.a0tD)(a2JHA<qi8P,aF&KZ46,3E\pqP$Z6%(LuXga,Cd7'Cf)oM(8g3=>qL7AWY`'^7X.Ig-u]Q#q_b4Xoppg%PX(KSoZp1U_5m2=G]_!O92sl\6Ni'9,]oG_teTUNd4tX<b$FF%)Jo<jjf.LW'X<MDK!@u@["K,i@ZHY\MTf''QUcesr#@_h[#2X<AOQqP^cWXl>f^:uqH=;Sg!HI3-.nZr`@F)rA9j.&]I1ZcO5n*W%jA\%]k>(/iZ-498`G.Ib/HM$e%'*bKJ@m6,>3ID0L,ikI+HT"gQlJFe&*fs0m`6JR<:(g+Cb]$F$)N.`&[rYPZ1g)i']^"E8'$*(%^@_JAO"faDl#4/RQkWXCatqb9'nY4(MoAJX?d$Nm0^<q2]k+c$9_;,2&]SbKZ&MtXNINqtnT,[&TEWq0;AKnHOH%d&A9GQ9TtHYn%<!,RTAXefu8=FRRFc8bK[$=`7i,;*]DOJml>T2rkd[c'RhDV<ngb93gj"ea</XDUl/<4:T2HH4`3TdhaRSp[/%umCaZS,H;bfsfe%/&>".UbsKcR$I0o=bVG&(sgshMB:9jk[c<JUJVFI/'7EdBl=UZg;j=df)f/)Mb0o+ES=H$l\/3RjD0*6]B(i4[gQ[njZ?>Z-D<Z%%r2PogiL,uEq3(M6'@sjZ"^ld\QFJd(3^_[d@#I&\X:4Yn@XPU,-H2^//E^QS"6aPlH(+2#[g@Pe`8ZRjahau"'nInuG0K"Z[h@+<%M>Q1P((nZ\@"B4j6@Y";N(3U$&W'LA8/(U^aMkHIrmH+N*pBrSX1,1/'?M_]-b2?/PZ[jFWJZ`6YS_hKnLr=MXc<k)_IAc^dS1d/%g`,e]LhSHt\)[S3OmhAYK#T7oJaTHK[A5n#50RlJ<l!O$I:AU3Q:H^(PPJ_Rbq4j7_76DK2$,COU6EoA"C%\Vi1'g=S+TFU$Y=,`%SU"Bs[oEH7''!.`R\L%N4%o_V2l#`Z^'=*in7b9LhJIjAh"(T\#r1T>3#\qOd2EgIha"J<O%JB#iV8@Pi.Su85Di)t^mrGXRB<ti%F='0eT2S4:'SftLA.f9C&K@&b[4Eu:*UI:rd[."68.K\(#I/Jl#6[qeYB9&SdjNm#G@0mCg]>/1oVCA]GFPZcgo$HZIlQ_u4'UtE%iEI+k>91B22"uu5b_MDU#b#r5h,/*oe*,q[kWWnCU5q812ML23B>6?0(7'OcdGF\t2=ugW<c<9K5[M(VpBB+RS`u5SBD6TJ7^rC9%F_>>;SNm$q[hfuA4B(XsKr\t'2gabPG-t99$ZnQPq69MsZrDTHdFcjW3<lSqT*2(ZGNsg"9QldCO.Db'hK]QK([_Z+Il)B_0"Tk^%3,GlL*'H8UB+b,m`uHJVTl]!t$lY`e!(bFHpP8e7Ac_,;1I1"#k0_B&G.Z;k=*m`F>1NfomGUa?m6-@"qt75KD@KnsI>XRUWV2+L%>2):A4W+%!dmc]B1g6G2-mC[B#i"c_&"guVcC_+"T>hj7Gm&C6%]DO@@uS%666W66:+,0@q'.^8_UA0RVu#]1KkC*Zc#PH&U`]u$%i7)hW3AJ"._ja=g=]F=SMOLK%L1nHE&oH#.bG#B:MWdWV-`RRs78bF+dNnuZVIW9,jFG^'iDYk$=bQ.'mRpPj'f%$TdkKI>/_QF1%>+9KmMX8/a0TI>-MP;ShU+6Fq9Z9nG`DOeIJZtknWgMNFr#E[Q*R2tP__E/>1Dm%V\5($5.'h"rYElT%:2p_Y(8kDlkZ5Mg&3rm3%'j#N8=3!_c[9PfV3c5i(7<Q;$=HP(R7B*4#XeJmi6E4-&]Acf4't7(la9Ha5J?GerR\tLo!-o?uE1#=2c4Jj@JV0,IIrP8&8ej=a%!e4/l?3SbV<Rp$&Ws3qoUJbt(3,2S"N781C.Vcal=uK=DhHX>B1amf1>6BbjE_^\`$Ht'dOtQ'X%O:5,Y3Ug[lBZ>RNaC:B]`ORX%+:]:!W#D+uj3>5kA_?Kl+P^JgLTH^aA3oeYY_PM?O_F5/'qpD>Xlm7m_h;''JGkA2`h%2_1qb:<`<[*!b\Rc8L+Q:8<)+/R1!qeX%)1">]BFA)"k;3/bb5dc<H<uF:JCL4ZZOT3?peenh)Lf'_UPBp9r.*be!peee48_(sV]:.N77i=KL)?=eA;$'O7Ks\g^VKX(QBri6%EtUqY2n@#f,'-EB#FE1V(KEi.'&&Ic6O=PtNAWF2aHH*.OM<1-9OF\g8QiZV42[,7T0VVV4naGZ;i&IDnQ@)Cl[cr@St!ZBr7F#=%^I'1n#@7s1JKGCeJL7XajhNT#,U/MlUlhV6'5G??M8h[BS0Ct0*4[7NE'qhU0c.bK&9g?Yk>NGn4Q(Drq@O$3b#X[^!2M%VDcA)5%b!_'#V'g#DR]+C`;;<Do&(oi&`AUG*\bCqtG.>TsnKNc)&EcI.EnODce^R:K1ecB*TO`8jZK[emLk6i7^MG?bC2&uO)4"u>Q>JW_%flF3PjlO;88[`Fc&F_M\LId)bC2=ih7,,+"&4/gi)L;>/SsqCAcQCk^F2[d%<T.:bpfA40<J>p&iEoU+</!"Fibr^jC7\NWPMO;0%U*u'<1UHC-ZCUX1W&/LBi1'bE&AE/Er6OZ4p*@_@%qVC52^S<%j8X7Ns/NrNWpm2Ar2U2)Wkr+=M8T_ROSFk_6K;-=VHu93G6a&6%i6.jL^YA`1[sl]grn3tI@3`7')n^XcDHU*A<djXp[G:V(la>@<3J]('LLe-7hH>jPGE@a>MY6!g*:1Sg1S";?:k^.Qp.c=eE;%<i%Z1LOL\'D/HDWZUpQkm,`+A`cG2j;7FC>0g?I6urS0bd[bc!uRX+?0!XZBJJ;H-FBo1<S5g`M3*93DGmbE@,7d39H&2,0o_*O&QSi%`OI>9pd+tE=VD4a?QI/S>'O04`umc4C=SCPec'JJ(=pfeID"0>aki4,+bZ]H(PL_#=aj^;l217I3Rj%":lbI+Y(8)9f(T.[\lqG.%5CDfuqfST%06!,.a7^n]'npe.gMI0oeG0e3SSmhk3uSH#Fr.q.d+4kJY>g-/I<l?1#^kc9gMHj6J++_R<<kn+htf!QF'S@s1'Xq5%F#GD@/-@*15;-j1Y@h6_4<!pDU?QpDZ#N&W4+gkImrrN]@K';5(ps;.c\Y$-igJ5NOZ!k2,Y^m%K2eNDLG)p-rtu0/H>?W2CpdKb%h]X(n+ij9>YhEfOW_Hh[l1VWce!e?T!\F2Ikm+oiOI]9;5#&`B.].<bg27?tVd?EVQ_:8%jj^?^"8Xnf>JV?i]:m0_<Rqe/eK.i.%T_1?\=!K.d'3Q0ZlO`&C(s\4`[IZn2E#qc=k/+^cmoS0p@!D%JGH4*p$`!Lq4a0/n6-jAg_euU17Pg%A`W7]l?q!%jTOaQE472HG%[=.337dWK4U`(I5E!GMW:.J:u]Pr\q`uMQn;.tWC!t;iulM/4-P\**MnC-20Ik[a"ES*I3X71mO)hQ36hUPBG+'70@QQB5cmN6nm%LQ40m/?',eG,kiL`?=ptY_a^@H]n&(P164.'UL'-q-rf<UNW,"q9n^V&##9[+.-=!p?R0U>j;l?]>I%C'\C&o2o8[1FU4c1JF:>u%>],W#H>E-ko.kO5$*PrhT]B$6H(8:G>=QKQ!T@[2_MuWT0Ml@>l^(9T:-oFobVM$<0P]U,@a&8Y>U.pGZI9u^"Q"KXS]LK"43_Ag%,ZIOakN)^HT$2k-f],5<cf:H5k7n)gRop0t^"d)1B!X#U\5Ide=7'sRStVn60%YZNrRU"BkRZ6k]md4E)@X6]abeG"FdCqgd0QNf%d#a"ZZW/)2"jF>#69Y.Hk#3td'')eQIpI<s/\(`pQq^6bdN(ECoYmo:CFKr13HE]<i;;7mnLUA8@k8H*gRJFXe:-=$Z:@@I!%^H]%$>?XBMD'8Bb`+rm5&3h=dh"3s>KEl]^*C/?p)Co[!/KCe9GLrsrCFe('S4(aG))am:6B>$d2;Z-n0G69'\F6IT=^0"a?cl[WK-.c%Bg<<k,Mk48Qn4[;YhNj!rTQ*O>]oPg)ST7!dm4jF5NN6XTPJDKibf!;B8Cib?ohg8RND"Tg/DDVojYCkm]8HZH2qc3msXKpru5Pu%R8=S$j'uX+&SD7UgXTX#Bhl0&-KEZm^:k<[%OP"NNJ?AYeO2`o!X\uI[YCK_n]mj[*Cir1=q!8C^GHPM*gf<qe*,'Wlc2WX)5*5M%5$%Q5C%dO:^`^B%[PQAM,_/7;0F)F<--QB1G7+17nCMFTAWXiV%cGEfc%_3d4U6'Klc`J"TQ)gX+dtK;35oJKSRJe[me%OTc8=#<%%>pNcK"i-r=,T?Vr$1@J*<8gcBQ;,noSWUSqk:)=$aMdRUB7s@:IVZ[(7QL-<`r*;Z!Zr1P4gJ=8Vt6-SM6GjbA4:M??Ob(Io#Zr%&R]hX`"R_OEQM"Ts7ggE6q[p:Hk45N6kYaKiA$mjjZ<:`g$TS_!nSoY';5V,]_[#WR;c)02$<-OCVQd'LL=kf_)+mgbcoWXY;p1K%i;a\XB#'M1cLS5gmSC,bB',Qo8LDYhoZ4"0ZH]hK.,D3P*a>$0:Bg"X9o'a<9VWOI#p_<tkqHr\h+]c@b*1d)_:^qNl[I_59X2ka%Zd$QHNN<6aS3hPP+Ob<q-8O*RFaLMF!L<]i;b/9dqIm#m2Uu`WjY@o8lI;[k!!90D3dc'e$Il/g%QmjhPtU"mk=+@PItRm73eVP?%kL01Vn]B*gi=C33nUqr;QL\YLciA]@&:A!2GI0&\9-Z>"'V`RKpT@([EHnMM;engV@7=sX:q#_7+8MNT&Y__-Yn`PJ"TiZVe3t5"%Aea3fh)a\Ii;T3EZo]`[g?n-$K9oULdeh=S!/=m0n0n6dO6H9"S!G^scAYX@0LjJ9/?fJbo#7l0L4HMtRAQ@#X?/#Z>Pl(G[qBG.%n@+FE^[g[Aj2Kd'XfF+I2lf0op6EVWJlCt']KU0h4!410%r4h1bH5N!n4EYo>L=6F9&Fj$O4:?PLHe!FQ278EiDnq`1G>`mJg_,a%B=GDuIO]3k(KX45CV<#JE$2@IntjUK%t+qp5BN@+Vh_*#eNY^r^22EV@e"M\CoYDL29]^C?@Kf%fbqBIGE-uJ=L2AHLBDnlI/(([%XY5Vq=8d7&4L[O^jmm:VgjdNfm#tj8N6B])TCt^aGWC&t38DMZC$WaM.r>]PYH.(pIcN*Je/Pq\1!BIeE'/.[G?9OJ0"$1F1n:IP%q8p./'(#D$kglQI\'ijZcW=p&5^?2?Dr,\HDt2*.X7(IU$Kgq-qn0/[@6"1`ejm9`ot7Y8X44N*V=KiHYdn?.Q,QbdgY/j];Yfp.%YO%<N[P.@kSi1All3m$f<\'0I-T8:VY#gU3ldN%sf):'RC$36[0(`4pNpO[T`Ab_b\[8pIKR[NBoCB%pGA<aW=2,_lXrFQ/^U+DZ%IF(gWIVhkaIG'_!&Sph6i"F[SI.iOM7BCF7b3N&hYB9DJWNbMHD<']B;/grN09u:?(9T-&Q8S`Rm+pq7gIA`#^UePj^YOtn([bth%m7n].g=B=@:aEOHQ%%FQ5&EA7bBb=.c-,sW.,?Hp\a.eJ7IS.Z9cn#qZ/M9D+cor8I/LLPdf/O?[h\7H>u_@OG^6F^M[_"?bBonn%5K)+>mE1maIVjN?`jtrO[98"YG#+80&Vfh9*A*W^J=QQLJ\)0gC$EeY!r4=:dlobZ"0pSQ#@CL07XqSo([gmpgK6[bX&Q-l5<8T#%pJ^B's5U_>>]rlt`d-mPoQI^kbiKl<qVm&\o1#q@<$%jc91Sqh++*GIeO-n?XKQP#?LpmpgfT\hJ_RpJj/h*sjtk?@?4ZD__j(>M%?*58'hJbq?h$<0THc=IaYF!cu7aSS]<_Jnu_iON1rbs\h>)KX@5&`gck^VMXSV-#DQ\W,!jeeVfb.kC!\t\r*UlYq"rS$gId#OC!%<MsWgVe).SCg=2L&57/Z4q1!"-(lR0Vu=LRqdEhUNS.M&D>s*l)@&]8gq("XQTs;E0gq2kcpq`7mk$-bQHN)#fh5oLYinNE$3kJ*%71XHGWM>36^o1QUJ[C-mEq?7c0K*_(cYVW2^.QT,A@HuT)#N>gV6KZ,AVn?OnINdQ]R=d!?NgtHD7RsNoh-(/";ujH\Mb@61_j/X%GLWC-bo**tb9u[Ocdcpoea8o7Kj6g9$`L'_]S`a-Na=]Z,_o<_Ft_H\;Kr(@DoHuCemFtkkH\l14T5$X6QE1^"8"'Yh/BU.=>4X[%Zc:I,k]XH!kc9J7bZc^3NR,3t@,$*=?EeJGA!afHR,Hoj6Ld[m00dh"s)K43V^qXk^,AO!/_XhR[r(`I?.^?^('Oc,-#2o:Md+KM%;Qo2!m79l)hgTXT;N:8N@S+dH9B,!1ZLm8G.Z-'^<m]p(U!X#8r:@1:o@N9ihOjlj]=+@md\qS0TE!Uu#Ha<jX0f9=/cs+t9CN"<%MiMm8HEb^c(M_Gl^u38k`+u>ZgK8"7MVI=jp"%aTElU.T1mb#YqsUu!pu,-TFh0-kPRgEs[k7%:87+dbET=+,[T*5ET%f9OjRNm.%S]*r$?"'-^d\2,=.%au7(Y5'O:r[Pd)pI.gG_T7<cfBkN?3NX'#T+*.>WtR%6(i/D3,BA#00)EL7".5aYt6'obmC'XP%t^T\NH"r%#Y(VKPMMuA4L[n77C1>PBbk]Qe!&3g38Sp79A#a1CgoJgnMOc%JJ3?gMk0"mBukmIib(6o<_@HVrM6)A7/Ic'OV1#8$gWGhMT-tu%LegTcHm,Ma6Q.MGGp`]L;C4!MZUM`-VS-q:2JM`DW<IPG8W#6"/J.\2Uaf9-9P.-(B_"-h^+`a4E]?.p6o6.XE>DJOQ5VOJ$fb?H%9]F/`EepnjCs(_\9W(gQ&o_B(TZN>'&lRPG[$JLi'6],0Ck`duK[,3!.5_7::W'o=e^O2F=AE+sOTQWIEe$P]BU\Bg6RIuCL7#Fq%*7&_*>!AfH`dT1cON3u_AEpX5?X+Xo][CHm!]'_/*"NmPh18\]4S4(C?#Os0<f.I-O=l_eqna`%>hk[oe\_&m\TRpKWmkA3(0N&D%V%_SPA9'[D:HMU\W18EB/6U=2U2I<Ar0=+--[X$$UDT>r[`!mJjl[qjr%pIHE=WQ9S2`g[K5[B)guHiYIK'm7fQQLZ9$X_7[DU!C%Z2Ln,puQYIXm7'qDkRHMlr@e9([I*q-5U-6UZ=Nq?%8]V)s(+f.IE1tLbV12p<u-aQ#?+;!_QCmD6:7uD6WYKCk*TWF=VIbO3W4.%L_jSoOKE:WJ#>8oUGTe\l#.=bF-J";ee`(7!D-cIF/&BAIu,WhZX)qd"u>tFIgP\@+8ZPEYn<V&U&P(l/?"Zmp!iD*pV>0@_Z\/D%c=uNd`Au3#%4N;e=(,Y/.:.pog2H9^7<e4RW((TUaoWFsYi"m8)OKj/$iB_r!N8(^-WA:rO\%tFj6*kRYCm+aj0\LA/S4tWC-/$e%O!Ep3]/qZk+3a%m$Pt[8YdZOGl$[rdXOU&<>B8B6#t<"fBBEWGm.5C7'm_grUtXMRA%D71K,%@c(Fq['lU@@AoZK0H$g":Y+#X,X%LBfI1]-<>@"P\-,N`Mhb3GGFcJS\_&E::H\?TpjeTsBRqp"-X.@bOW-aL^DK<IP_$;%2pmDIpYbF@KZ'Eo)+"R:`RL>/)qSg>Tbe%H;]?.EW,_c5]h+=[njc0?Xg.^)m5ctJB-J7d<HNlSqr08@XDa,m.XF7#?I7]qk'H?QOd*E/+rd8hpm^]X04@rVYG<*(KP`kZ!ipl%@UgMSS6\W*3MNnSIIJC'KA1b-g,pd:%2\;6Z"6ic<`psG5ORud/'D]X\>q-YDq=1oLe_TSpTXSS#q8kH>EANLdadUIil9I4Gmf4r%oh9ZQo?LhR(qTrq^VB>tl.EMcI&Lj;aO#ALK?\&BZ>M<n"N5GM=n\maMiQ8g2hhTA09h(E7_(Bil+!`i\31N".rXP!LiZPkZ!gEm%5ih(YX$HN%cmFh`anu-!^UJT=1:.RpV)f:MQ\04!\,L-EETLF$#^,uFd4Of>Y[CGoIb69YK`JQ-G4e;Yn:*%d!M=O2et%!S9S,RV%4-XpLnnc<ahp&dU_gVM"ODfRr]fGg[@DmI!oa\X;r[AAJYkBd51b4XQ2m$U#6QZ,jCA/iW+#Y9@19QX`kK2B$+H7tLi`GQ/+!2Ua%fgLVE=K^.S`LjTMA=\>L]/!MA&598YPd\;T?Zc$K>ITW9q4hVqY+.?9Z\qh^/9^SGGD>]5ebel9Ka!\olgEWsi<gnNB*8:mH0[R#%H1PM8e%,4WY^#OnJ6u(+r3YVS0.ehSEYI.jAJ38c$g<9:EO53"r$c,R'nYZ&TX)/'2r`d*A^u-HmRrn=L;Rum6P+8/K0DEic9RT$%MddjWo_F-LGIt0r$k^K\>+n**DDX7TT21LjV-C8hpNh$0MmNVW[[PBXhK<ad:'8(40tu0rO&I0jrr)BqXeT`\CMpR1CY]p94JO7V%kF-V(o/^.PN,[+u_i/<W_>n&ed1]/`^?Rq+b2:@.?W4NJ>eT?N\:q<cm0nYQHAc?i_,+SQfR)/ljllh;L(&rIT*Mt,`I$@qEnc@Q%PQV4X]O1Hl2U6epbH6ht1f/#]f^<SEFgH/qjap*Kgo^7NUW0lU+)b*g8t/R/Sp:R.D(V%L"`&cT\RZY'ol"`cqR'Y?nV<#OITk(r%cPI/en#u-He+!ca/?(1/\jV<<,NJm)YBquUg&@]r=UJWOfTcj!Yg+Y6HuL%&",P%B<<UtB/pLt)Y3D3Ec*Q5%?_fj>>(<f`60sm"%dcJGSe_>,"0l4W=075<f>kuX-g$:lL]&`W;:sc>+X?_\=T&ul6V0U0[[W^@pYH-Etc7[&%\!tY.:f%KYb/s^NktaT,Sek%dNJgYM%ltq0#j;-),L!muMkEf:k%R1d+8$>i$0"lr#qIX71lF]IU9<eG;Hi;($s2A..X)W=L*fo+4qn^'RHh8dlbFe@_5o6`^SCce<D-UFC%5=5-k\\UsR;d'5eVrf.&]3'7r(O[_*`5ZT:!qunC^NT2)LP&KSiI9uK])?)m_HIL.S'-%nkD*,VHrVB^$0i=#%LcTuALWr>l,Rj<%PdQi*G@s#+6],=:C^mgrGr#_]h=R$,l;q(mr^7ju_tCM,YuDRB7KjpLb+l$h/Xopno*VdtSS.h%EYKq.^V5r@[X/C%>NBK0m+']t%>SIEY2u<5l[:3p*K2Zk+deG?r7#9]HnjR.aqWJrC.Q+=11Dbql)9hqn)s9^4aPcp5mb3Yslrel1#Nhg*Q6:MeRi=ku$:N=#`=I#m%C-q<U>UCnK\G.Zd_2'a*[O?Xu:-kk.M3Ze;?ZSlP]f-G6f#<;;B8X';?#%iB_]ZQnrN^pZ+6*i!SNE`dPWhqn&R<E,n`#/*1.$J1%[S^^Sog;@39+XV*bG*I'pO8qGpdiG7@Jd>#-uOHnBCN`n3bttS<?JD:/E"Jcd6?k;%c+PQ[lVj"?:H*hnb>GW/66L-ofK*_54lOG%H+'2;2VrW'%]N:]CqMAQ6J;@>8%DGc#&j\d]2Bn__^n`,MTr3ElLF%;@,QHA)Vk#uR,Pk/R+X!%c()t4F'k3@g>6j4#>YkR52#AN%K\sr0.b66[.')*T)_5rhi%:(e02&4df3"_o>Al*0C]t+s#P&qilT4f3]j3CB1b6#F1Do,Jmt/$U?aqX[hd6VXrl3qJd!W8AT6^>$%Q*NsQa^8h4dT_`Jo<Ho+K`lG+2lG23aS!.(An0ore#p0lii^=JKGTA7Bl\Lt9sW%fh`geI;A5;mHur5XXhQn3]u1/W"-,WpY%5UD%[Z9_G[1^QW\^H>\6HWH1NBTPYAteu3'1+jY?4`,X^8&Ellh]`;]1^WJ>2Chqh:=f"L%V^XFfO6/#7"HT_i)LuDNKp)e\t-poBn]9%S]9oo.'L>7^rtWJ5g4*;m'F-DQ#OUj+/QgEO,r_F^&i&ai:N10Kc*E`%-Yb^Hj)Pl.=M)1A`'VTX"Wm5CV;XgZU/jNHE,=`rCkuT%E,oGnr*&;o_6m1p]GH(^DrRDnZTOS3Ao'b05$;.h@TVi&k83iWgJmWJ5YT'nCf-@H*.P]''Qg)RDJeJ[>63^.Wj5L*f.Jtqh*6q4%?[&7m]N:f@pDJD1:Iqan(Ru<9o5j#jp3;cU@Md\3>O_!c&,geATjW:QpLRSMopq)5iEQ9.5.GWnipH^@.>psD:q>7_]0:1MF)CB(%gJl=Xs'^.jXc;+^AbFgBU*q&7ol)@FjRNCqN#8>S+0CmXo3oc9pj2Vbj`:206@s^!=hX)a]BbaF4LmkI,snWbEGG4;_(K&,D-hkV%I$]gCA]o2]UXCI.5WoR(ZCkRqRoE#<X?Le!B^?"lZLLO-YN7uq&)6e00'2G1Xa.flCJF]C*NT5N4a%W?@L;fDdY/q71K_J+NU1D\%g1^7\9."<Ya"bfem^]t0Tck`u_kV2Y2\:q<Ogj-'gW:?6%/1.>U\8./S8mLKl1oUp6<DOfn@pNeL@fE&Q2U@<K"#j[R.eYhrm+4(%l_4SQg1U[lmFUFDB]dQ/H`%2C^3s2!#5,R^#gSH*T'_I)jkKFU]f[3")W4RY<UO4i-]B@D?*Ekh_nBjBM'6o3Bp>a*FoCUneWuL\%/`>fXh";a*/B+@U$jHLoqOY!WV">S]d8>!aPIJ&CfNYa"5!6sTSoQ*gT5HSUs22qpm6c.fJuij65YFZ/@=G<+,#W!^\G$/B^H6S2%G(4c)nE(Aep!T?$Z?5j,POa44_].TupFYBO!lf,-A2bd2mXF4MEd,4T#tfScV9=Tb5B@a8iEQ4\eHsPsc@+/OekLki4@u(AYQ<_a%oK8B.d2'4gB4k&[7m8:`1RZedW8$RfT).8E5O*aFlI;`gb<5OB!]$A]iDUiIj(TRYD>/g8G5Er<N(6A"I`+8D?;-S7btFGa6g:0#%$+k%5p<;Pr7douM^F/VUS_=l?*VJ7+kPabfmN;$`$(Wq]oLM'mkLf)PhSo3+n:@9Ypf?g+lLa/k?6/gmC:*d7ZMH*U/P".J6lIsL%c>p!&55g)(::fg.Ij3m#'V7`(SA_"!:2BJA0B&:18c0#2G-0YMX:>cA^O?*_R6$Z8^7.?<o'UX8m89<<ZCLUG5dh`3FYWKUK6P#H%?uAC=hSh1<ed4f-5KP>rRAN"A\Z]^RniaR8r16=Lqc*BC5@Cg>]@R7lj0OdhJA:YspJd$r7uoWL[kg-6;[>@a9f$f8ncIkb4\@Em%@8Ph@U>L8[WqKf&@S_YO;Z\B8LFr5(E^K7od3?E)n<sE-ju3mKG=7V@,L.A."I*dWI&_=dTk&l<knqB!oPMSMpUj/gG,aBVVEU0,%^rm%VU7J.Q=VOPK^oS24!ZFi;Q7ecEY6t'&TS?7V&3T_@J9'Y]UB\T-:OYeN<<#5[WZ;,"@Mudtb<SiH<!V%k-%PpL9L[q;JB!<#%!Hh$Dqn"p&HJmHZ#R*E7)!4(/fU0ouX!=u4e4k`:j-ftsLAa2!O"fq[3&P&Vd9BGI6G#kGIcDBCWkBJ;1(-'o;=+[ph<VTC@"'pJ%S!VA(bSpT&h+!&lCESQs0DJ_XioIItX%9AMlHQ62*k;"rs7*DVs#D$cS+F!7X:oV<N'C]5DdGR)H!*o(q68SP=8Po;=QGP[I1QC.%Z>l1[bDaiT#sFdJ^iokT@bNW&@:8$Dbri.^i=$</%\lI!=,6doe*-J0;f/r<F3ucj!;4T_T2p-06n\[/9tC&TS*k>g6=?S<k@2H+%XJs/5,5-2cfn;/8D"6],k/m7)2IBnLTj6uif8?t\i<D.iFC>K%3K1gbp#LDk&,uq5=pmHhSU@[.0>,I4W+Z]r7G,]V+E_T>BCiY,%7Gq(Kg)ei!I:Y0tj'r<iV?`,"d]sdiR;`9pY(K`"VAkCg(-Mi$cU=k^pYSH&.-DjDSVIcUfG_[LEA&5u.9RW38tSDJla,io=-5n3%Z\h1c`WU=&Jm$_R7@^3b$0XntML+DPa:YeH6mV*/eheSU-RbnQ/WQmoFQb_6']4g<6AoIWa*d:`'iY5LPhuYHVMrW*Dl/qr@`gc+%8UREb.7p.n<QbT^[I,H%7n$q=W:.#8-#H$@i@N4u<$c8X1ONL9G.JQh^$.Z+d^u/`^@X7G+e<4l^*"Q4a*3F0@>O\2P7ZWj54Lc[%QVquh'f=kkAm(I`[][u?bJ1*KR>*9<HEl57#,m_!ZoD7\3a1W.r_SICEAhZ*)\+lLmC1j+5A0OV0$\cu>T>X^f.?e1j7Y4H`A(E-%-b_".0K0@Q3KD34D3P!/=sVFh1NJr2l/?!@>K,ZI6r>CIf!Dk6`OX#rTWm$n&b,2:RIA]<,aH%q'<gRaS^--D^kWb"\>)!3-f7p`%ImlHtGI(uq3./J"IiZ",$'K*3ZA*j=O5@$gpm>80=T&'#LRfEu+Es3!]5@``]3#5EdD??cp5fpk4#`lEHgCKTD`9<t;Ge*$pq?t0%\cP*O\Uk"LW\2HQYu3D0$'$m$Nb,&c)k*0Y1]q,Ll63mJSA0[3GljRJrb53MND7A'(&A<'R]aJe!#(6QAYn9sXr0[D9;fZ/5L>=o%XQYNa91;LY1r4I^2;"DE=%91(OSOL(.>fApWCXE(I3kF4OXrk.Zs&n.!1LleF?.tY1*oD4m!o+.iDs"ss2%>;Eukn\_Dsn`M:"*H%*7Bk(,H5LTpceJ'E,N+&"eC6^,Id5,pRR]KURoqgV.JW+'caf\!-2<F!j#_]Na*8M_[pco22[]q8o.ifih'ipb.3+7'ieeX-5CZ%%d=hXX;c@fuU#M]&<S=gHPDl67lbT8'6<&(:%hqsLKTK8#O:H>rF0RNeAjcW2;-'A9M(ofSje=<*F?nhNjad;FA?9I%U5<uZ&ho)#%/OM<jG_s\V-7TcP'bh@qCp8=s5oK>M9*nTr6:FmNoa6F[Zuf:[UnT:&>$;*[U*6!U+9j*l1@usp$)4HB^aQ%X.].cHG#OPT>qff>%!9O(IRZgEF7+?dYL8CX(,3-^i(*jRGC?`N";hPHF$YXZtIq;MjmR_!'BW@pTBV6<=U>gQOr;[@Ze#5=5$2.fLGZ6AT0GlR2p&k$3%W&dDqe0GJS&l]*t!-Gd@9G!e+JmtDe0k8W:WPqh&PJDWWa/6#].FjMf7Q!Oh9Kop*bam=D!,:A^C^%bq1kTrs@%kG48n-1)F_3%4%(8+F"+lNIiC9j_B?/@&%3p<'9dlAG]NCp&o1=f,t4Ah8\@*h#-L$DnEY?-r?d+u(ol!SM2"A01cU)FS?$8AB\bGnA=7r:g)1s+)I%+GPcfe3_\A9O06-MIN7PBV=MmfPj;U_mH56WhMgNi.k:bOAQbl_PGK4P:BtE+=g/>ia:&mC#16U`)(!;gHhd$;3;7fqMGW!W;m:,%iEsee_:A$"*BY%j-,UiZQrF9n!gWhm.<ImT%J"TZa9^c@=UlGnk"stSN!&"D"]PMb1mi$O]/'.,ZtGN,J?"4udj5//"W_-"DTUgS%9q!1o`E]*66L@S`d/\k*]8)AsIiquHMR"FoC$e`U,%MN?MiIW7bXDYnOB8FfMB9aV&W;[LTkY2E8'=<@#s7JVKM#\R#RLuJnGiWZ%-E%hq!:iIr[u8'TDur_^5c[bE<PSfH0Z@"ZI(cM2cR2?diT[)1Z@E8*PBBmGIL8Dl`#qc(C1+Sg?`,M;dUARI!&DFl"p%B8MnaL'%`.4RjOGT[Tj"?:d0c-_H%S_hZlY*:,oh.?$r^*k`J]6_dLrCnj@uQ0bK#8!l&_N2s_9eBtnXRuEUe0E;;2B@&3Y4"Tb7G@$SA#77%!b)r+^u3BF<<aIr@hTCSgG)An@8s!4&QB#L3c*2.R6ZT9d1R-uLiETo"T11f3[i)5BI("oCt-u8#*2=.JBJXEJU'ZnK0>YEk#cj0%@Zuc'Bc(DaiZNe<U@_/J&-Ilo_O,j.kUr67MUpJq[obn\"CR-3Z3KMXjH*ah*>C$#q(Rk_Y$+2._2JQQ$hRDc_h$#HbuFh])$hW`%kS7Z+a!:bW%QHXN.E[>%=@_je$=F=J"#>+?;i1_r!P#+Q:[-(dV2CM4L&qm^GVDV$U)53="G7r?#V69^)9,//L=fZjak!1C:*bCb%@0>]F*sG`]KQ.eB_iRQU_;KkSU.(4RVDRL4[/f?m.1n#3c;>cIB%ZCBMai>#dI(C=;)'Kk@Ygp9Xf,jq2@S<;<(+#?&>T-,+>%%6%3Xc,a&c!'b0Aqe$QpR<odo6jZ8QI..1s^cD#eL)#+Yo'l*ot>@"oj7-$4[E*"qdmQ\m\>;[9(14'q#%F63hr6JYIco2,$2-$0i"#%!OnNF:I?j%*[lp^:^MKA$LaV5R<Lj9X0<\e5W0?;VK^p=<oCb_l*(R?'Ib:pr7;WSTd0KTO%IX,K0BG(#i8*p,.,e,QK-5383_qe%1^rdArk(7Y7&1Y=m*$,M-1Wf8rWt`Q@1Ec:dR6GEF"e.X9Lp!L[.4;j!tP[_%""kh.`7+;-kQ_9!c2F86H\eIm"f*jC^nVY2*#KI%(,R;nJBJ8(II%^Y`#I?Z$MJ!"&!,coXGH4.,Ss0:1l<\h,NK(2#GMEE$6^PiE$3eE36Q]>@)ElsR>F6*$_`^_)7(-<^6%>^%>3D&%gr`ao65mtTFP[Ebr+rSH3X$H`/$%(K,in$N2M4\#S\[su=;fR2q%\kgi4G[8"$^I-C5;%-Uh%\h6J2G:W*uQ^fac!_:_L/Ue@<$0%J7g!rb!lXEfpO!n&eYZY1Q#9;n`_<XjXS0$,<-oc.L+g(Q)oZX%8!W^Q7S3Yj.DDYJ#Z^"juj&mO'r^s&gC?'=g<t#M]*=PY>D2b%Ao6gs3eG6MhZ^un7>^tMRaHE4N3i]k'q?8I,Z"[hZTh#l#8l\n8kV%#2^hNj%<tP*KNo@h"QYA4BH!hY-j:5P019E-_3/_H_N%i0%fH0[D`WF8GdKHnlTr^QZ*T01+<KoibTs1tI'n`a+8=5Z')6.5HTaE3&#RTT,'nH+qmf?eG(e[/K[:5HS6,?RF!E7>^WR?s$3q/MY%-O^F*(<4"gOH^/KWUQ_Db*5L69tL`_lnFo^)>Fe54Gf5#4G4VT1EkDJ%TPOs#Q3ad2Sg^Sa:DF0i<PGiMR#d\/Zm`$?.f@d^r]\0%g)*YOinBM7Y%nrc3.i*]`JBg6J"m+=;.Lrm%Z"ALD\S&uNDI?J.g+=e_@);r%Ni.C@PMdF^;]d\0fCgL#eJ(NhQaB.&./[IZ!``O%b;bSS9?[ARl=D/*A7ZG@6JABZO;mGkeqEa/J4ICC'&57>VhW0j*6^&Z,r1&mE9&,Y>*<>(6!],B4u,-/,TK1n!98fH5fmss2g1.0%:KN@W^79i7f\hi8Ts-A:cSb6I8/$n\(e/%C:=!B,__=r_$7;ppB].j,\?\75%)>E-KZ5;Z!2,ShA<s*cLW5Su6l_@270tG&W-?$)%J2T]LP/qYqY\+Vin*uDA"0Wk55QpgH<9#/jmB94JbWDYTb7/Clf*idgMqj%.KEBs8'LWWZh?o"_fSXARm*fZ&+3&=WO9[BHQj*rf%\2"W<'4_[gY%g:`&N_>+s0m\F;o\oEoYIc0#8_3tKWtt>keJh;BZNHkdohS]J/0(@HXIX1O$RX$L8cms_Sp5Kb&]*sZ#BfO;DZI:%J4304LTAm)/^i?$H8QS;!`f:MM?"r^/lIB+0uIH)$'hdt6n,E!h@Jm3-u3P%([>]_:DJk@`&m.'k+0i(=:K+5\psg1ibBbnfeUAs%"JJ>`S57M9p'2tJj+<s72(Gnh%SVG>=Z&nHTO<M\-EHp7<!U14j0>U'GkI02'rX;J<79_K*n#`PJ>Nr^@B6)b!ieQl3'Q^P$KS-6%NM96]@J0_jBusa;C,&PN&H2W[F\9_tTgIk[<,c5258@8`BFS6qf/fa^AN_Y%+h'%P!=D_L'A)F_ii3<&#Bii&ScZ58RVWQXE"*26%6P1KD"?(edb02IH[[9Ja&H%4`@q%C@c%0A4?b!tPRkuB;E$ALc##RZH7aB$SH/l/`"h.0WM_O6)'V12C>%6J,k<dj1IKFl[<FDRg%MMSus@d>ni;\iE%KIiD(@"YU]@,kMtj8Qa"8O-@_Yb\SW;A*tNeU[%[C8(jF'ojHNTpj")R9P&5MMM]odD:<"ADRZsB#aXtbefV_%>*8sc6bQ!RP>p\@FH`gS!HVg@$j*hN69p8Lgq^3";FXi'LE;\tK.g4V>U`&AM%m7\,6!.<,XOCS+\[f[X(5C@'[e8Pn9K(.8a;]=%WGK7O8!dD0$:WDp\n%[(VQ8Y),-K?\/rZKd/P8@*Q;*o&fV(g>$ot(q!AMK]'=A@6B6Lg$0@d^b;J5Dh,nXu(oMS$=TkX&,$8Drh%fYUHOf1^:E/K+\W%D3kfa%Ycc'H'fA6mN0M"cUi,A]rm4Jd4SeV9hXiPq>JBZ%:m'Y:(=J,6dirK1.Fg-="`V:$WK[J-UhIb[&fi%MP@p>3ARe2)\Qc'0I#_Qb4_cg&*>&.e0r^r2@JtK+H@,!As@./TB\mJ[S8:)6jdknNP`#fcC'9"d]p(e,`@*\=A#FBUjf2"p1>a`%jn]s\3U`Mt\r"kRFiIBO29fO*&^8qHMt;1(iX[&^X.oc],jh7f@TCOdWNLtAK(Td-BVn-iMfkZp$CG"5E"4P,;:ncVYk*mO7WKTt%ag>#PfZ)>ZcDY4hHL].j/-VC2p]71])W`an?>L@s@q9E'OXNYJNQXO')N[S&7#FL#`W@;1!"rQQ%,m"48/l?\'2f*i8NaFQiCG+o%^t`nZdA..^,VI=UC%]@XBr.Hhd5Y5:CF3A_k?oKRQeA`<99>P/#!dFt'Us2.:&oqlRVYQYD'qiem!Gf8jc'4bCr`er[F+;C2u_Dn%K3PJWq(]".bFmdE1%(JG>q\)*-8O?piKd6>Ht0CE_+&!AJrN'm38[iVV1/Jh3G#)G4A#-0)(!70LZkGZNLP%1&@lif?FX1:dfi?a%piOCk"W*"n0c_oMKSibsQ)#Z+:LSuGGLS?\'<cG_bO32kTMUd[7.V9j0H/.9#p#&f5J)qJG)FnRnI?VZ8GYFm=#*klMKrfj]VPZ!%=&Ppf"P9`O]^l!L3U`P7ATp7)^A/kt'9a3jaX-0e>Gnr^BTC&h9\CZ6iJKq(Cb^e2U_sqSj+'0o1n"A1%ior&aNqiT-$2j9LF'2B%+bbQBmP%(@o9cm!Ws2\A&R>kS:dc>B8cda&d5+.Dn2dbQLFNG;LHI/idoBs/3R*pf%!IVs?+3Qs=d:QeUqsCFAa7A$pcW%r""R&B%qe%c2CGkk5@<^4%3d&"9[X`kh#+q^*kZ:u*^Ro9OWdjdFr@,PId)WmB-fEli*Hq=o0R2m^M.`Ih#H,Um+(>cL4i$9uqU"]GihOuL%fcLS#J,J%#@?C7s)Zaf+18dCbK@0<l!<CWU!I'Rn+]>0OP=MVrc;WH]O'g$COj<,?a'S36!>e%%M?~>%AI9_PrivateDataEnd