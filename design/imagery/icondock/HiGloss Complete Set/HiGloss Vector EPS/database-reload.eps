%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: database-reload.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Nick La
%%CreationDate: 2/26/10
%%BoundingBox: 0 0 128 64
%%HiResBoundingBox: 0 0 128 64
%%CropBox: 0 0 128 64
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 64 8%%BeginData: 11584 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FFFFFF7D7E597D597E597D597E597D597E597D597E597D597E597D%597E597D597E597D597E597D597E597D597E597D597E597D59A8FD4DFF59%7DA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8597DA9FD4AFF59A8FD04FF%A8FFA8FFA8AFA8FFA8A9A8A97D7E7D847D847D847D847D847D847D847D84%7D847D847D847D847D847D7E7D847D7E597EFD49FF7D7DA8FFA8A884A8A8%A884A884A87EA88484535953595259535952595359525953595259535953%7D5359537D5359525953595259525952A8FD48FF7EA8FFFFAFA8AFA8A9A8%A9A8A8A8A9A8A8597D597D597D597D597D597D597D597D597D597D597E7D%7E597E7D7E597E597D597D597D597D7DFD48FF59FFA8FFA8A884A8A8A884%A884A884A85959537D5959537D5959537D5959537D597D597D597D597E59%7D597E597D597D597D537D5959537DFD48FF7EFFFFA8A9FD06A884A8A8A8%597D597D597D597D597D597D597D597D597D597D597E7D7E7D847D7E7D84%7D7E7D7E7D7D597D597D59FD48FF53FFA8A884A884A87EA884A87DA85959%537D5359537D5359537D5359537D537D597D597D597E7D7E7D7E7D7E597E%7D7D597D597D537D537DA8FD47FF7EAFFFA8A9A8A884A8A8A884A87E7D59%7D597D597D597D597D597D597D597D59847D847D847D847DA87E847DA87E%847D847D7E7D7E597D59FD48FF53FFA8A884A884A87EA87EA87D7D535953%7D5959537D5959537D5959537D597D597E7D7E7D847D847D847D847D847D%7E7D847D7D597D597DA8FD47FF7DA8FFA8A884A884A884A88484537D597D%597D597D597D597D597D597D597E7D7E7D847E847DA884A87EA884A87EA8%7E847D847D7E597E59FD48FF59A9A8A87EA87DA87D847D845959537D5359%537D5359537D5359537D597D597E7D7E7D847D847DA87EA87DA87E847D84%7D7E7D7E597D597DA8FD47FF7DA8FFA8A884A884A87EA87E7D597D597D59%7D597D597D597D597D597E7D847D847DA884A884A8A8A884A9A8A884A884%A87EA87E847D847DFD48FF59A8A8A87E847DA87D847D7E5359537D595953%7D5959537D5959537D597D59847D847DA884A884A884A884A884A87EA87E%847D847D7D597DFD48FF7DA8A97EA884A87DA87E84597D597D597D597D59%7D597D597D597D597E7D847DA87EA884FD04A8AFA8A9A8A9A8A884A884A8%7D847D7E59FD48FF53A8A8847D847D847D847D7D537D5359537D5359537D%5359537D597D597E7D7E7D847EA87EFD04A8A9FD04A884A87EA87D847D7E%597DA8FD47FF7EA8A87EA87EA87DA87E84597D597D597D597D597D597D59%7D597D7D847D847DA884A884A9A8AFA8FFA8AFA8FFA8A9A8A984A87EA87D%7E59FD48FF7D7EA8847D847D7E7D847D7D537D5959537D5959537D595953%7D597D597E7D847DA884A884A9A8A9A8AFA8A9A8AFA8A884A87E847D8459%7EFD49FF59A8A8847D847D847D84597D597D597D597D597D597D597D597E%7D7E7D847EA884FD04A8FFA8AFA8FFA8AFA8AFA8A884A884A87D7DAFFD49%FFA8527E7D7E7D7E7D7D597D5359527D5359527D5359527D537D537D597D%7D847D847EFD04A8A9A8A8A8A9FD04A884A87D84595984FD4CFF7D7E7D84%7D7E597E597D597E597D597E597D597E597D597E7D7E597E7D7E7D847D7E%7D847D847D847D847D847D7E7D847D7EA8FD4DFFAF5959537D5359537D53%59537D5359537D5359537D5359537D5359537D5359537D5359537D535953%7D5359537D5359537DA8FD4DFF8459A8A8A9A8AFA8A8A8AFA8A8A8AFA8A8%A8AFA8A8A8A9A8A8A8A9A8A8A8A9FD12A87D7D7EFD4BFF8459FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8A87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7EA87DA87EA87DA87DA87DA87DA87D597DFD49FFAF7DFFFFFFA8AFA8AFA8%A8A8A9A8A884A9A87E537D597D537D597D537D597D537D597D597D597D59%7E597D597D597D597D597D537D597DA8FD48FF7DA8FFFFFD08A884A884A8%847E5359537D5959537D5959537D597D597D597D597D597D597E597D597D%597D597D5959537D537DFD48FF7DA9FFA9A8A8A9A8A8A8A9A8A884A8A87E%537D597D597D597D597D597D597D597D597E7D7E7D847D7E7D847D7E7D7E%7D7D597D597D537D59FD48FF59FFA8A984A884A884A87EA884A87E7E5359%537D5359537D5359537D597D537D597D597E7D7D597E7D7E597E7D7D597D%597D597D5959537DA8FD47FF7DA9FFA8A8A8A9FD06A88484597D597D597D%597D597D597D597D597E7D7E7D847D847D847E847D847D847D847D847D84%7D7D597D59FD48FF59FFA8A884A884A884A87EA88484537D5959537D5959%537D5959537D597D597E7D7E7D847D847D847D847D847D7E7D847D7D597E%597D537DAFFD47FF7DA9FFFD04A884A884A884A87D7D597D597D597D597D%597D597D597E7D7E7D847D847DA87E847EA87E847DA87E847D847D7E7D7E%7D7D59FD48FF53FFA8A87EA87EA87DA87E847D7D5359537D5359537D5359%537D597D597E7D7E7D847D847D847D847DA87D847D84FD067D597D597DA8%FD29FFA8A9A8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8A9A8FD07FF7E%A8FF84A8A8A884A884A8847E597D597D597D597D597D597E7D7E7D847D84%7DA87EA87EA884A884A884A8A0C2FD05C1C29FA07D7E59FD29FF7D7D597E%7D7D597E7D7D597E7D7D597E7D7D597E7D7D597E5984FD05FF53AFA8A87E%A87E847DA87E84537D5959537D5959537D597D597D597D59847D847D847E%847EA884A8A0C2C1C2C9CFCFFFCAFFCAC9C2C1997CAFFD27FF7D7EAFFFA8%FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FF7D7EFD04FF7DA8FF84%A87EA884A87EA87D7D597D597D597D597D597D597D597E7D847D847EA87E%A884A884A89FC1C9FD0CFFC9C1C2CFFD26FF7DA9FFFFFFA8FFA8847D847D%847D847EA87EA884A87EA87E847D8459FD04FF59A8A8A87D847D847D847D%7D5359537D5359537D5359537D597D597E7D7E7D847D847EA884A798C8CF%FFCACFCACFCACFCACFCACFCACFFFFFC2C1C9FD25FF59FFA8A884A87E7E53%595259537D597D597D597E7D7E597D597D537DA8FFFFFF7DA8AF84A87EA8%7EA87EA87D7D597D597D597D597D597D597E7D847D847DA884A884A9A8A7%BBC9FFFFCACFCACFCACFCACFCACFCACFCACFCFFFC9C1C9FD24FF7DA8FFA8%A884A8597D597D597E7D847E847EA884A87EA87E847D7E59FD04FF59A8A8%A87D847D847D847D7D5959537D5959537D5959537D597D59847D847DA884%A884A7BBC9CACFC9CAC9CFC9CAC9CFC9CAC9CFC9CAC9CFC9FFC9C1C9FD23%FF59A8A8A87EA8597D5959537D597E7D847EA87EA884A87D847D7D597DFD%04FF847DA87EA87E847D847E84597D597D597D597D597D597D597E7D847D%847EA87EA8A8A8BBC9CFCAC9CFC9CAC9CFC9CAC9CFC9CAC9CFC9CAC9CFC9%FFC8C1CFFD22FF7EA8A97EA87E7D597D597D59847D847EFD04A8A9A8A87E%A87D7E59FD04FFA87D84A87D847D7E7D7E7D7D537D5359537D5359537D59%7D597E7D7E7D847D847EA89FC2CAC9C9C9A1C9C9C9A7C9C9C9A7FD0AC9CF%9FC2FD22FF53A884847D7E5359537D597D59847DA87EFD05A884A87D847D%59A8FD04FF7E7D7EA87D847D847D84597D597D597D597D597D597D597E7D%847DA87EA884A8A1C1FD05C9A87D7D7DA87D7D7DFD0CC9CFC1CFFD21FF7E%7EA87DA87D7D597D597D7D847EA8A8AFA8FFA8FFA8A9A8A87D7E59FD06FF%7D7D597E7D7D597E597D537D597D537D597D537D597D597D597D597E7D7E%7DC2C2C9C2C9C2C9C2A7537D527D537DA0C9C2A17DC9C2C9C2C9C2C9C9C8%C1FD21FF7E7D7D7D597D597D537D597D597E7D7E7DA87D847DA87D847D7E%53A8FD07FFA87D537D597D537D597D537D597D537D597D537D597D537D59%7D537D597DBBC9C8C9C2C9C8C9C27D527D527D59C9C2C97D7D7CC9C2C9C2%C9C8C9C8C1CAFD21FF847D597D537D597D537D597D537D5959537D595953%7D595953A8FD07FFA87D7D847DA87D847DA87D847DA87D847DA87D847D84%7D847D847D847D84A0C1A0C8C2C8A0C8C27D52595252527DA0C2A0595252%76C8C2C8A0C8C2C999C9FD20FFA87D7DA87DA87DA87DA87DA87D847DA87D%847DA87D847DA87D7E59FD06FFA87DA8FD11FFA8FFA8FFA8FFA8FFA8FFA8%C2C1C9C2C8C2C8C2A1527D5252527D52C9C2A152595253A0C8C2C8C2C8C2%C8C2FD20FF7EA8FD07FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87DFD%04FFA87DA8FFFFFFA8A9FD06A884A884A87D7D597D537D597D537D597D59%7D99C2C1C2C2C2C1C276FD04527C2752A0C2A0525252277CC1C2C1C2C2C2%C1C1FD20FF59FFFFFFA8A884A85959537D5959537D597D597E597D597D59%59537DAFFFFFFFA87EFFFFFFA8A9A8AFA8A8A8A9A8A884A87D7D537D597D%597D597D597D597D7DC1C1C2C1C8C2C2C152525227A0C17C27C2C1C27CFD%0452C8C2C2C1C8C1C2BBFD20FF7EAFFFFD04A8597D597D597D597D59847D%847D847D7D597D597D59FD04FF59FFFFFF84A8A8A884A884A87EA884A87D%595359537D5359537D537D537D597D98C198C199C1C1C22752275299C1C1%7699C2C1A02752275299C1BBC198C198C1CAFD1FFF53AFA8A87DA87D5953%7D5359537D597E7D847D847D7E7D7D527D5359A8FFFFFF7EFFFFA8AFA8A9%A8A9A8A8A8A9A8A87D7D597D597D597D597D597D597E7D7E7DC1BBC1BBC1%BBC199FD0427C2FD06C199FD0427C1BBC1BBC1BBC1BBFD20FF7EA8FF84A8%847D597D597D597E7D847EA884A884A79FFD04C1A07CFD04FF59FFA9A884%A8A8A884A884A87EA87D59537D5959537D5959537D597D597E7D7D98C1BA%C198C1BAC12027F82775C1BAC198C1BA75F827F82798C1BAC198C1BAC1CA%FD1FFF59A8A8847D845359537D597D59847D847EA8A8C199C9C9CFCACFC2%C19FFFFFFF7DA8FFFD06A884A884A8847E597D597D597D597D597D597E7D%7E7D847DC1BAC1BBC1BAC1BB51F827F82799C1BBC1BAC12727F8274BC1BA%C1BBC1BAC1C1FD20FF7D84A87E847D7D597D597D7D7E7DA884A8A8C1C2CF%CACFC9CFC9FFCFC2C1FFFF59FFA8A884A87EA87EA87DA87E7D527D535953%7D5359537D597D597D7D7E7D849FBB98C198C198C17527F827F827759F99%75F827F827F87598C198C198C198C2FD20FF597D7D847D7D527D5359537D%7D7E7DA8A8C19FCFA1C9A0C9C9C9A0C9CAC29FFF7DA8FFA8A884A8A8A884%A884A8597D597D597D597D597D597E7D847D847DA87EA7BBC1BBC1BBC1BB%C14B27F827F8272027F827F827F852BBC1BBC1BBC1BBC1C9FD21FF7D7E7D%7E597E597D597E7D7E7D847DA1C1CFC97CF82727C9A0A1C8C9C9C1C959AF%A8A884A87EA87EA87DA87D59537D5959537D5959537D597D597E7D847D84%7DC198C1BAC198C1BAC12727F827F827F827F827F82798C1BAC198C1BAC1%98CFFD21FFA8537D5359537D5359537D5359535999C2C2C87C27F827A052%F8A0C2C9C1C27DA8FF84A884A87EA884A87E7D597D597D597D597D597D59%7E7D7E7D847E847EA89FC1BAC1BBC1BAC1C1C14B27F827F827F827F852C1%C1BBC1BBC1BAC1BBC2FD21FFA87DA8A8AFA8A9A8FFA8A8A8A9A8A9A8C1C2%C8C252F827F8C8522727C8C2C8BB53A9A8A87DA87D847D847D7E537D5359%537D5359537D597D597E7D7E7D847D847DA798C198C198C198C1C0C17551%2627F8274B7B9EC1C0C198C198C198C1C9FD21FF59AFFFFFA8FFA8FF84A8%7EA87EA8A8A898C1C1A0F827997699A0F8279FC2C1C17EA8AF84A884A87E%A884A87D7D597D597D597D597D597D59847D847DA884A884A8A8C2BBC1BB%FD06C1C7C1C7C1C7C1C7C1C7FD06C1BBC1C2FD22FF7EFFFFA8A9A8A87D7D%597D597E7D847DC1BBC19927F8A0BBC19927F8C1BBC1BB53A9A8847DA87D%847D847D7D537D5959537D5959537D597D597E7D7E7DA87EA884A8A8C198%C1BAC1C0C1C0C1C0C7C0C7C0C7C0C7C0C7C0C1C0C1BABB99FD23FF59FFA8%A87EA87E7D537D597D7D847D8499C1BAC12727279F9951F82798C1BAC17D%A8A984A87DA87E847D84597D597D597D597D597D597E7D7E7D847E847EA8%84A8A8A9A7C1BAFD04C1C7C1C7C1FD05C7C1C7C1C7FD04C1BBCFFD23FF7D%A8FFA8A88484597D597E7D847DA884C2BAC1C19FF827F827F82799C1BBC1%C2598484847D847D847D7E7D7D5359537D5359537D537D597D597D7D847D%847DA884A884A9A1C198C1C0C1C0C7C1C7C1C7C7C7C1C7C0C7C0C1C0C198%CAFD24FF59A8A8A87D84537D597D597E7D847DA8A1BB98C1C09F2727F827%75C1C0C198C9A859AF84847DA87E847D84597D597D597D597D597D597E7D%847D847EA884FD04A8AFA8AFA7C1BBC1C1FD04C7CDC7CDC7CDC7C7C1C7C1%C1C1CFFD25FF7DA8AF84A87D7D597D7D847E8484A8A8A9C1C1C1C7C1C7C1%C1C1C7C1C1BBC8FFFF7D59A87D7E7D847D7E7D7D5359537D5359537D597D%597D7D7E7D847D847EA884A8A8AFA8A8A8C2BAC1C0C7C7C8C7CDC8CDC7CD%C7C198C1C2FD27FF59847D847D7D537D597D59847D847EA8A8A899C1C0C7%C0C7C0C1C0C1BAC1CAFFFFFF7D59847D847D847D84597D597D597D597D59%7D597D59847D847DA884A884A8A8A9A8AFA8AFA8CA9FC1C0C7C7C8C7CDC8%C7C1C1BBC2C9FD28FFA859847D847D7D597E7D847DA884A884AFA8A89FFD%04C1C7C1C1BAC8FD06FF84537D5359537D5359537D5359537D5359537D53%59537D5359537D597D537D597D537D597D597D52A099C198C198C1999FA0%CFFD2AFFA87E5359537D5359537D5359537D597D537D595976A098C198C1%9FC9FFFFFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">database-reload</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2010-02-26T07:04:35-05:00</xmp:CreateDate>
         <xmp:ModifyDate>2010-02-26T07:04:35-05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2010-02-26T07:04:35-05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>128</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAgAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A71e3epeZNUudNsLl7HR7&#xA;F/SvryHaWab9qKNv2Qv7RyYFNZNmkJdeUPIdueEli9xMPtuZpqk/5RDgV+jCJFBjFCt5d8hj/pUN&#xA;/wAj5v8AqphsoqPcptoXkMf9Khv+R83/ADXjZWo9yXaov5c6dGDLpDtI32IluJuR9/7zYYRxd7E8&#xA;I6JMdZ8g/wDUvyD/AKOZf+a8NHvRce536Y8hf9WCT/pIl/5rxo962O5r9MeQ/wDqwSf9JEv/ADXj&#xA;R70WO536Y8h/9WCT/pIl/wCa8aPetjucNV8jHpoEv/SRL/zXho962O5v9KeR/wDqwyf9JEv/ADXj&#xA;R71sdzR1XyOP+lDL/wBJEv8AzXjR71sdyxtW8kkfu9Gnhf8AZkS4fkD7cmYY0VsdzJPIvn+VdTTS&#xA;b2aWexuGCWc9wQZY3Oyo7D7Sk7V/hkJw6s4T3p6llTe7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FWDeTLkw+SILgH99IZnkc9S7TMvI5ZIbtUT6UNJP74WKHebCqWatq0djbGU/E52jTxb+&#xA;mEBiSwW5uZrmZppmLyOakn9QyTBTwq7FXAEmgxVExWpOKoyOz9sVVPqW3TFVOSz9sVQctqRiqgrP&#xA;FIHUlXUgqw7EGoOKvpnMVzHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq828sy8fIlsv&#xA;+v8A9RDZaebRH6UO82FFoeSfChhes37Xl6zA1ij+CMew6n6ckGBQOFXYq4CuKoy2griqa21r02wK&#xA;mMVlXtjaaV/qO3TBaaUJbKg6YbRSXXFr12xQlN3DxBPhhV9IZiuY7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXlGgTcfJtuv+v/AMn2y483HHJDST++SYoHULox2srg7hTQ+52GKCxLJIdi&#xA;rsVXwrVsVTizh6Yqnlnb1ptkUhOLe0qBtgZUivqJp0wJpC3FpQHbCiknvLcCu2FiWP6pHxhY/L9e&#xA;FD6EBqK5jOY7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXk2oWsmg391o1x8FpO7y6ZO&#xA;fsMjmvCv8ynY/wC1lwN7uPIVslUkpBIOxHXJsEBqUnK0kHsP1jFUhwodirsVV7Ub4qntko2wKyCx&#xA;QbZEswn1qgC174GQRGBKHukBSuFBSG+QUOEMSlmi6O/mDXoLOEcrOB1lv5h9kIprxr4t0H+3jI0F&#xA;jGy9qyhyXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqxbzfqVlcuugRacusajMvqfVmP&#xA;FIV6epJJ1T2oQfvFZxHVhI9GHN+V2thecl7aWwP+61eYovsC2+T42vwypN+Wt/Sh1ezI95JMeNHh&#xA;+amfyzuR/wBLWx/4N8eNfD81kn5cyRIXk1jT0Rd2ZpGAHzJx4/JeDzQR8n2wO2vaWR4/WDh4vJHD&#xA;5u/wjAOmvaX/ANJBx4vJeHzb/wAKxjp5g0z/AKST/XHi8l4fNseWAOnmHTvouW/rjfkvD5r/APDU&#xA;nbzFp/8A0kt/XG/JeHzd/huT/qYrD/pJb+uN+S8PmtPlx+/mGw/6SW/rjfkvD5rG8uqByOtabcU3&#xA;9F7pgG9qgjG14fN6F5C8w6LMjaNBaRadewgsYImEkcoHV0kBPM+NSTTxyuYPNthIcmY5BsdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirC/JUyHRbnXpviutTmlnmbvxR2jSMHwXjt88nLnT&#xA;XA7WpXd9LPIZJGqT0HYDwGSAYkoN5sKELc3kcMTSysFjQVZj4Yotg2ta3NqMvEVS2U/BH4/5Te+T&#xA;AYE2lmFDsVXpEWxVFR2vtiqIW09sVbNp7YqpSWntiqFktyOmKqml38+m6jb3sJpLbSLIvvQ7j5Eb&#xA;HAQoNF9IZjOY7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXnflabj5CtR/xk/G4bLTza&#xA;Y/Sh3m98KFB5sKLYn5l1NppvqkZ/dx7yU7t/ZkgGBKR4UOxVUhj5HFUxt7fptiqYQ2vtgVFpZ+2K&#xA;VxszTpjaoeW09sVQM9t7YUJZdRcQT4Yq+ksxXMdirsVdirsVdirsVdirsVdirTyJGvJ2CKOrMaD8&#xA;cVUvrtn/AL/j/wCDX+uNLbvrtn/v+P8A4Nf640tu+u2f+/4/+DX+uNLbvrtn/v8Aj/4Nf640tu+u&#xA;2f8Av+P/AINf640tqiSRyLyjYOvipBH4YquxV5b5em4+Srdf9f8A5Ptlx5uOOSGknwoQl1d+lDJI&#xA;f2FLU+QwothbszsWY1ZiST7nJMWsVcoqaYqmFrF0xVN7WDpgSm1va9NsCaV5THE6QqjTXMu0NvGO&#xA;Tsfl4Zg6vXww0PqmeURzLnaTQTzWR6YDnI8gm9l5MvrgCTVbsWaEf7y21GkFf5pDUA/IHNefzGXf&#xA;JPwx/Njz/wBM7Afl8W2OHiH+dLl/pf1pqnknyiFAktXnb+eSaXkf+BZRkP5P0x+oGR85H9bYO0tQ&#xA;PpIiPKI/U1J5I8nuhVLV4Sf20lkr/wAMzD8Mf5P04+kGJ8pH9aD2jqD9REh3GI/UxvXPyxZombSb&#xA;r16Cot5qLJtvs4op+kD55ZE6jF9E/Ej/ADZc/hL9bXIafL9cPDl/Ojy+Mf1M80XzFZapziCtbX0P&#xA;+9FlN8Mie9O6+4zJ0uthmsfTMc4nm0arRTw0fqgeUhyTTMxw3Yq7FXYq7FXYq7FXYq7FXnujaTpH&#xA;mHTG8xeYud5LctI0UJkkRII0kZFjRUZf5csJI2DUACLKGudM/Lu3jeSTSGEaCrMbiboP+emH1MfT&#xA;3MdbW/y6DEL5clK12JuZgaf8HkqPexuPcqw6l5Al6eXJB/0czf8ANeNHvW49yKV/IbCv+HZP+kmb&#xA;/mvGj3rce5qSXyGg/wCUdk/6SZv+a8aPetx7kBJ5j0jTLyC88v2M+m3ETj1kMzSRTR1+JHVyx3+e&#xA;PD3rxAcnt2UOS8isQ9np91o0u1zp0rxuvivMurj2YHbL/Nx+WyCebCwS/VJa2coHcD9Ywqx7Ch2K&#xA;r4RVsVTe0Tpiqd2cdaZFITGWY28SiNPUuJWEdvEP2nPT6MwNfrPAhY3mdojzdhoNH486O0BvI9wT&#xA;7R7OHSkZywm1KYf6VdHen+RH4KM0uL0EyJ4skucv0DydzmPGBEDhxx5R/SfNHfXj45Z4zV4Tvr3v&#xA;j4q+E76974+KvhO+vHxx8ZfCQuoxC+aO4hk+ratb72l4NjX/AH3J4o2V5f3lSB4ckeUv0HybcJ8O&#xA;4kcWOXOP6R5p95c1watYl5E9G9t29K9t/wCSQdaf5J6jNpodX40LO0xtIebrdbpPBnQ3gd4nyTXM&#xA;1w3Yq7FXYq7FXYq7FXYq8q0DUfT8mW8NenP8Z2OXEbuODsxnzPqLusdup+Fjzf3p0yQDAlIoU5uB&#xA;kkMj0yxDU2wFIZHbaTyX7ORtkAo3ulBVO2G0EMV1m2EcbNToR+vCxfQQIIqOhzGcxh/nzQNJkjGs&#xA;vfLpV9EOAuW3SUdQjoN2PhTf55OBLXOI5vNRFr8wLwWMlxEfszQwTlG9xVcttpoqc2meY5Y2RtMu&#xA;AG6/uJv+acbCKKE/w5rv/Vuuv+REv/NGGwvCXf4d1z/q33X/ACIl/wCaMbC8JaGi6xG29jOCOxhl&#xA;/wCacbWiiYrbW4+lhKfnFL/zTja0UXFc+YYumnOfnDN/TAu6caFc3E08l/doI5oAYIY6EcGP2zRt&#xA;wwG305yWt1HHqJHpD0j39XrtHp+DTxj1n6j7v4f1pv8AXPfMbxG/wmDebbuxs79Vt3pK45TQj7K1&#xA;6H2r4Z0HZ2Wc4erl0LodfihCfp59Uj/TR/mzYOC9E1bW/qOjSXIajqgEZ/ymoB+vOZ08fEyiPm9H&#xA;nPBi4vJA+XPOaakTbTkJdqKinRwOpHuPDL9bpTi9Ufp+5o0epGT0n6vvT/6575rvEdh4StpOpfVP&#xA;Mtpcg0j1Clndjxk/3S/z/Zy7S5+DPGXSfpP6GvU4OPBKPWHqHu/ieg51DzLsVdirsVdirsVdirsV&#xA;eM67p8+natdaZobnUbdGLvbRRyyPbljXgxRStAcvidt3GkN9kjutE8xXDh3026BAptBN/wA0YbDH&#xA;hKkmh65C1Tp9yD/lQy/804bC8JTK2k8x2/2dMkNPGGb+mDZNFMo/MPmxFCjSDT/jBcf0wUE2Vk+u&#xA;+a5lo2ksPcQT/wBMdlsrNE0/9L69bWmtuNPjZg6WzxyI05B+wC4pv8/ljI0NliLO72nKHJYVokMW&#xA;v6lP5k1D97bQyvDpED7xxxRmhm4mo5sR9H3Umdtmsb7o+98wTs5FufTQdDSpP34iKmSBfXdRHSc/&#xA;cP6YaRxFQfX9T/5aD9y/0w8IRxFjGu/mHq8bNbWN0eY2kmopA9l265IQDEzKRf4481/9XGT/AIFP&#xA;+acPCGPGWx5281k0/SD/APAp/wA048IXjKvF5t81N11CQ/7FP+aceELxFEWeqRrCFkc+qzM8jHuz&#xA;Mamuebxzjr1fSJac9OQACLGoRtuHB+RGWDJbWcVc3il/5je8vZ7p23mdnoewJ2H0DO6xQEIiI6PD&#xA;5JmcjI9WT6v5YvLTSIb22czSrGGvIupBO5ZKdQvQ/fms0/asZ5TCW2+zss/ZcoYxOO+27Ltetv0l&#xA;obQBysqKJYiDsXVdgfY5p9Jq/CzX0Jp2+q0viYa6gW8r0/zI9nfQXSN8ULhtu4B3H0jbOry4xOJi&#xA;ery2KZhISHR7UdQjXcuB8yM4U5Ke4GK+SGudWj4D02rJG6SJTsyMCN8rlnHTm2w05vfkdntuegPA&#xA;OxV2KuxV2KuxV2KuxVgnkrUVs/JUNyADcStNJM56vI0zLyY9zQDLJDdqiaigdX87alZWzzfWCW6R&#xA;pRd2PQdMIiGJmWGt5/8AN7MW/SUgrvQKgH/EcnwhhxlXtvOPnKU/8dKWnyT/AJpx4QvGUwTzH5vK&#xA;1/SMv3J/zTjwheMoe580+cYwSNSlH0J/zTjwheMpNqPmjzDfIkV7ePMsTiSPkFBV16MCACMPCEGR&#xA;L6FzGctgHlKcp5BtabbSj77hhlh5tMfpQ7ze+SQh3mxQkHmPWWt4vq0LUmlHxMOqr/U5IBiSxLJM&#xA;XDFUVbw1xVM7e26bYFQ7AqxU9QaZ5bOJiSD0fVoTEoiQ6rSK7HpkWT5l1i1vdI1a705pJFa2laP7&#xA;RFVB+Ftv5loc9Gw5RkgJDkQ+cZsRhMxPMGnu3krz3Ya5pcAN0I9SiQLc2zPxbkooWUE7qeu3TOO7&#xA;R0GTFkJAJgTsXseztfiyYwCQJgb27zr57sdC0ucLdCXUpEK21sr8m5MKBmAOyjrv1x7P0GTLkBII&#xA;gOZXtHX4seMgEGZ5PCdHtb3V9WtNOWSR2upVjPxE0Un4m3/lWpzsc2UY4GR5APHYcRnMRHMmn00B&#xA;TYdM85fR1SCJ5po4U3eRgij3Y0GSjGyAOqJSEQSej6Ez0l80dirsVdirsVdirsVdirx3R9R9Ly0l&#xA;kx4yws6SIeqt6pahH05fW7jA7Mc8w3TSzRJX4VBP0k0/hkgwKVwrykAwqyrR7FW47YCkJ1Jbu1wl&#xA;hZqpuWXnLI32Ik/mb38Bmm1/aEoS8LH9fU9Ih3Og7PjKPi5fo6DrI/qTGDy15djWl2JL+b9qR3ZF&#xA;r/kqhWgzUyw45b5DLIfM/c7WOfJHbGI4x5Afap3vlPyvdRFIY3s5P2XVmkWv+UHLfhTGOLHHfGZY&#xA;z5H71lnyT/vBHIPMD7Cyby75iuZrptJ1UKuoIvOGdNo7iMftKOzDuM2Oh10pS8PJ9fQ9JBwNboox&#xA;j4mP6Oo6xLFPLc3HyPbL/r/9RDZuzzdIPpQzze+FjaGmuAqliaACpPsMUMIu7l7m5knbq5qB4DsP&#xA;uyTFSwqvhWrYqmtrF0xVOLWCtNsCUBq1qYLqtPgkHJfn3zgu2tN4eoJ6T3/X9r3/AGHqfF04HWG3&#xA;6vsQQBJoM1DuGG/mF+WLeY0GoacVj1aJeLK2yTIOik9mHY/Qfbb9l9rjB6J/R937HQ9q9neMeOH1&#xA;/f8AteKaroOs6RMYdTsprRwaD1UKgn/Jb7LfQc6/FnhkFwIkPJ5XJjlA1IUXaVoOs6vMIdMsprty&#xA;aH0kLAH/ACm+yv0nHLnhjFzIiPNceOUzURZe2fl7+WDeXUOoakVk1aVeKqu6Qoeqg92Pc/QPfkO1&#xA;O2Bn9EPo+/8AY9V2V2d4J45/X937WYkEGhzUO+ZL+X2kNf8AmKGUisFl+/kP+Uv92Pny3+jNp2Pp&#xA;/Ezg9I7/AKvtdV2xqPDwEdZbfr+x7FnbvEOxV2KuxV2KuxV2KuxV5be+Wp/N1/cavpUcGnWTSMi3&#xA;DtJzuSh4tLxT4QCfpy0SrZpMeLcIGT8s7uvx6vY1H8zvX8cPGx8PzQTeSIEcoPMGl81NGBnIIIw8&#xA;Xkjg81RPJL/seYNO+i4fHi8k8Hmq6FdxW1gR6gMsrFpWJ+Ki7KDX784KOp4zKXWZt7yem4BGP8MI&#xA;1+svljU7C982a1r+s6Fpqx2NuxuXtoBThEzcQQndjQuwX3zrhMYxGMjudveXkzA5DKURsN3q/nz8&#xA;xfM3lTztoV0rn9AS2cUc9tXkkqhj6zcf2ZEDLxI/USM12mwwy45D+LiPwc/UZZYskT/Dwj4vWb3V&#xA;xCba6Vx9Ysplli3+IioDr8mHXNDPUcJEhzibd9j03FcTykKa0SUp5VSA7SQs6SL3DCYkg/fnfHm8&#xA;EOSGebCxS/U5yLKandaffthQxnCh2Koi1XfFU6tE6YFTuzjG2BkEdd6QmoWhhqFlHxROeze/sc13&#xA;aOiGox8P8Q5F2PZuuOmycX8J5jyYmtpJDcvBOpSZDQqf4Z57qMcscjGQoh76OaM4CUTcSmlvb7Db&#xA;MCcmickxismYdMr3caWWm5LFlHTHdY5QUvuLcUO2WRk5EJpaun3F5ex2dpGZbmU0SNf1nwGZ+nxy&#xA;ySEYiyXIOaMImUjUQ9g8q+XYdC0tbYEPcSfHcyj9p6dB/kr0Gd72fohp8fD/ABHm8R2hrTqMnF/C&#xA;OScZnOC7FXYq7FXYq7FXYq7FXm/ljUTD5Fto1ajASD6Gnav68tI3aIn0sd8x6y8Nr6cTUlmqoYdQ&#xA;vc5MBgSxuwg5EE98kxZLYWQam2RKQlElmyTyQON4yVIPhnmGogcUzE84l9Qw5xkxiY5SDxIp5k/L&#xA;HzDdyx2hudHuvhSQ8hG8YNY/3i14utaEH+hzrBLF2hiG9SHzB/U8iDl0OU0LifkR+ttV8yfmd5ht&#xA;JZLM22j2vwvIORjSMmsn7w05O1KUH9TiZYuz8J3uR+ZP6kk5ddlFioj5Afre42Wmy3eoW9lHu9xI&#xA;sY9qmhP0ZyWCByTER1L12XMIQMz0DN/NflnUNNvrnUtMga7069JkvbSMVkjkP2pEXuG6nPTYyfM5&#xA;x6hhEuq2gYqXII2KsrAj5imWNSEvL+3lgdFepI22PjXwxQlWFXYqr28qIRyNMVTS21KySnKSn0N/&#xA;TAqa2vmDSUpynp/sH/5pwUyBTa183eXk+1dU/wCecn/NOCkiQUdU1ryfqKD1bspMv93MscoYf8Ju&#xA;M1+u7Nx6geoVLvdhou056c+k3E8x0SaLXba1mCesl5EOkih4zT3DqM4zWezueBuI4h5fq5vSYu1N&#xA;NmH1cEvPl82RWHmjQClZXeM+BQn/AIjXNQdNOBqQplPS5JbwIkPIr73zPoHGkLSSsdgqoR/xKmI0&#xA;0pGgLWGkyR3mREeZas/LnmPWWDJb/o60brPcbOR/kp1/z65tdJ2BmmbkOEef6uacnaGDCOfHLy5f&#xA;NnHl7ytpmhxH6upkuXFJrqTd29h/KvsM7DRdn49OPTvLvef1uvyag+raPQdE4zOcF2KuxV2KuxV2&#xA;KuxV2KuxV4rcTXOgQvouoI8LQMwhlKkpKhcsHUjxrl433cY7bMb1W7S5mVkbkoWncd/fJMFWxu7a&#xA;KnqPT6Cf1DCrIbDzBosVPUuOP+wc/qXIkMgXa3qfly643VpeBbtBRlMcvGQDsfg65oO1+x/zHrh9&#xA;f3/td72V2uMI8Of92fs/YhLbVLJ1HOqnvTcfhnD6jRZcRqQI971OOccgvHISCIhZr2UW+nwSXU7d&#xA;ERTsPE+AwYNHlyGoi0zkMYuchEM/8m+TW0tzqGoFX1FxxRF3WJT1APdj3Odr2V2V4Hrn9f3fteb7&#xA;T7T8YcEPo+9//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:B4052B1D0C2068118F62AD85486E0984</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:B4052B1D0C2068118F62AD85486E0984</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:40d7260b-36cb-114f-baeb-437ec704646f</stRef:instanceID>
            <stRef:documentID>uuid:F4E8C6D12EEEDD11AF8BBF931F055AD6</stRef:documentID>
            <stRef:originalDocumentID>uuid:F4E8C6D12EEEDD11AF8BBF931F055AD6</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:OriginalDocumentID>uuid:F4E8C6D12EEEDD11AF8BBF931F055AD6</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B4052B1D0C2068118F62AD85486E0984</stEvt:instanceID>
                  <stEvt:when>2010-02-26T07:04:35-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>128.000000</stDim:w>
            <stDim:h>64.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 8.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -64 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 64 li
128 64 li
128 0 li
cp
clp
[1 0 0 1 0 0 ]ct
116.123 63 mo
99 63 li
97.8975 63 97 62.0127 97 60.7988 cv
97 61.9765 97.8965 62.9336 99 62.9336 cv
99.2774 62.9336 li
99.2774 62.9336 li
101.566 62.9336 li
101.527 62.625 101.5 62.3144 101.5 62 cv
101.5 59.5852 102.622 57.3437 104.535 55.4658 cv
112.018 55.4658 li
112.006 55.6424 112 55.8205 112 56 cv
112 59.012 113.664 61.6353 116.123 63 cv
97 60.7988 mo
97 60.7988 li
97 56.5332 li
97 55.3203 97.8975 54.333 99 54.333 cv
112.174 54.333 li
112.169 54.3551 112.165 54.3773 112.16 54.3994 cv
105.756 54.3994 li
105.756 54.3994 li
99 54.3994 li
97.8965 54.3994 97 55.3564 97 56.5332 cv
97 60.7988 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
gsave
[11.9417 0 0 11.9417 115.224 62.3721 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k3XT
%1NaU%1NaV%LrsY%M''\%hB0]%hB3_&.fBa&.oKd&J5Te&J5Wg&eYfi',)#m',)#m',)&o'GM5q'bqGu
'bqGu'bqK"()@Z$(Ddl((Ddl((Dmu+(`4),)&X;0)&X>2)B'M4)B'M5)]K_8)]Kb:*#oq<*#oq=*??.@
*?H7C*Zc@D*Zc@E+!2RH+!;[K+<VdL+<VdM+X&!P+X/*S+sJ3T+sJ6V,9nEX,:"N[,U=W\,U=Z^,pai`
~>
0 0 <~)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X>2)B0V7
*#oq=*??.A+!2UJ+<_mO+sJ3U,9nHZ,palb-7:/g-n$Jm.4Qhu.kE5&/M/P+/hSb00JG490etL>1G^gD
1c.'I2E!KQ2`NcV3B9)\3]]>a4?Yhj4[)%n5<h@t5s[h(6:4+-6psF377BX77n6*@84cBE8kM]K91qrP
9hnGY:/=Y]:f'tc;,U=k;cH^q<E3%!<`W7&=BJ^/=^#!4>?b<:>[1Q??=$uG?XR8L@:<SR@UiqZA7]=`
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
np
121 53.333 mo
99 53.333 li
97.3496 53.333 96 54.7725 96 56.5332 cv
96 60.7988 li
96 62.5586 97.3496 64 99 64 cv
121 64 li
122.65 64 124 62.5586 124 60.7988 cv
124 56.5332 li
124 54.7725 122.65 53.333 121 53.333 cv
121 54.333 mo
122.103 54.333 123 55.3203 123 56.5332 cv
123 60.7988 li
123 62.0127 122.103 63 121 63 cv
99 63 li
97.8975 63 97 62.0127 97 60.7988 cv
97 56.5332 li
97 55.3203 97.8975 54.333 99 54.333 cv
121 54.333 li
.47451 .298039 .27451 0 cmyk
f
101.566 62.9336 mo
99.2774 62.9336 li
99.1055 62.6172 99 62.2559 99 61.8672 cv
99 57.5996 li
99 56.4238 99.8965 55.4658 101 55.4658 cv
104.535 55.4658 li
102.622 57.3437 101.5 59.5852 101.5 62 cv
101.5 62.3144 101.527 62.625 101.566 62.9336 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[6.72 0 0 9.12 98.4 .160003 ]ct
snap_to_device
<<
/T 1
/W 14 
/H 19 
/M[14 0 0 -19 0 19 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~$47.K$k*RS%Ls![&.o9X$k*RS%Ls![&.oKe$k*RS%Ls![&.fEd&eb]`%Ls![&.fEc&eYil%Ls![&.fEc
&eYil'GV,h&.fEc&eYil'GV>u&.fEc&eYik'GM8s()@Jo&eYik'GM8s()Ic'&eYik'GM8s()Ic((`*i!
'GM8s()@]&(`4),'GM8s()@]&(`4,.)&X/(()@]&(`4,.)B0S4()@]&(`4,.)B'P6)]BM/(`4,.)B'P6
*#oq;(`4,.)B'P6*#ot>*#oh6)B'P6*#ot>*Zc=B)B'P6*#ot>*ZcCF*Zc7>*#ot>*ZcCF+<VaJ*#ot>
*ZcCF+<VgN+<U~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!~>
<~)B9b=+<_pS-7:2k.kD\^+<_pS,pt)j.kE;++<_pS,pk#h.kE;+0JXgt,pk#h.kE;+0JYF@,pk#h.P*/)
0JYF@2E*$5.P*/(0JP@?2E*TU.P*/(0JP@?2E*TV4$,#H0JP=>2)dKU4$5Yh0JP=>2)[ET4$5\k5<^hZ
2)[ES4$5\k5XIb%2)[ES3]oPi5XIh+6UEam3]oPh5XIh+7Rom73]oPh5X@b*7Rp!?7n#R)5X@_)77Tm@
91hcG5X@_)77Tm@92&)T91_H<77Kg>92&)V:eseZ77Kg>8k_rT:f:4i:ejPQ8k_rT:f:4k<`N$o8k_rS
:f1.j<``C)<Dr~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
112.888 52.333 mo
99 52.333 li
97.8975 52.333 97 51.3457 97 50.1318 cv
97 51.3096 97.8965 52.2647 99 52.2647 cv
99.2774 52.2647 li
99.2774 52.2647 li
101.566 52.2647 li
101.527 51.958 101.5 51.6475 101.5 51.333 cv
101.5 48.918 102.622 46.6764 104.535 44.7979 cv
122.721 44.7979 li
122.721 44.7979 li
122.375 44.165 121.736 43.7314 121 43.7314 cv
105.756 43.7314 li
105.756 43.7314 li
99 43.7314 li
97.8965 43.7314 97 44.6885 97 45.8662 cv
97 50.1318 li
97 50.1318 li
97 45.8662 li
97 44.6523 97.8975 43.6651 99 43.6651 cv
121 43.6651 li
122.103 43.6651 123 44.6523 123 45.8662 cv
123 48.5822 li
122.073 48.2068 121.061 48 120 48 cv
116.903 48 114.218 49.7602 112.888 52.333 cv
gsave
[8.59579 0 0 8.59579 114.5 52.4307 ]ct
clp
/0 /Gradient get_res exec grestore
np
121 42.665 mo
99 42.665 li
97.3496 42.665 96 44.1045 96 45.8662 cv
96 50.1318 li
96 51.8916 97.3496 53.333 99 53.333 cv
121 53.333 li
122.65 53.333 124 51.8916 124 50.1318 cv
124 45.8662 li
124 44.1045 122.65 42.665 121 42.665 cv
121 43.6651 mo
122.103 43.6651 123 44.6523 123 45.8662 cv
123 50.1318 li
123 51.3457 122.103 52.333 121 52.333 cv
99 52.333 li
97.8975 52.333 97 51.3457 97 50.1318 cv
97 45.8662 li
97 44.6523 97.8975 43.6651 99 43.6651 cv
121 43.6651 li
.47451 .298039 .27451 0 cmyk
f
101.566 52.2647 mo
99.2774 52.2647 li
99.1055 51.9502 99 51.5889 99 51.1982 cv
99 46.9326 li
99 45.7549 99.8965 44.7979 101 44.7979 cv
104.535 44.7979 li
102.622 46.6764 101.5 48.918 101.5 51.333 cv
101.5 51.6475 101.527 51.958 101.566 52.2647 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[6.72 0 0 8.64 98.4 11.2 ]ct
snap_to_device
<<
/T 1
/W 14 
/H 18 
/M[14 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~$47.K$k3XU%M'']&.o9X$k3XU%M'']&.oKe$k3XU%M'']&.oKe&eb]`%Ls![&.oKe&ebom%Ls![&.oKe
&ebom'GV,h&.oKe&ebom'GV>u&.fEc&ebom'GV>u()IPp&eYil'GV>u()Ic(&eYil'GV>u()Ic((`<u#
'GV>u()Ic((`=20'GM8s()Ic((`=20)B0D+()Ic((`=20)B0V8()Ic((`=20)B0V8*$#h3(`4,.)B0V8
*$$%@(`4,.)B0V8*$$%@*Zl7;)B0V8*$$%@*ZlIH)B'P6*#ot?*ZlIH+<_[C*#ot?*ZlIH+<_mP~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~)]Tn@+<i$V-7C;m/1hka+<i$U-7:5l/1iJ.+<i$U-7:2k.kNA-0est!-7:2k.kNA-0etRC,pt)j.kE;+
0etRC2E3*7.kE;+0JYFA2E3]X.kE;+0JYFA2E3]X4?Y;M0JYF@2E*WW4?Ykn0JYF@2E*TV4?Ykn5sd@a
2E*TV4$>bm5sdt.2E*TV4$5\k5sdt.7S#L"4$5\k5sdt.7S$*C4$5\k5XIh,7S$*C9MI]85XIh+7Rp$B
9MJ8Y5XIh+7Rp$B9MJ8Y;,TbL7Rp!A92//X;,U@n7Rp!A92&)W;,U@n<`hmb92&)V;,U@n<`iL.~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
121 41.665 mo
99 41.665 li
97.8975 41.665 97 40.6787 97 39.4658 cv
97 40.6416 97.8965 41.5986 99 41.5986 cv
99.2774 41.5986 li
99.2774 41.5986 li
101.566 41.5986 li
101.527 41.29 101.5 40.9795 101.5 40.665 cv
101.5 38.2504 102.621 36.009 104.535 34.1318 cv
122.721 34.1318 li
122.721 34.1318 li
122.375 33.4971 121.736 33.0654 121 33.0654 cv
105.756 33.0654 li
105.756 33.0654 li
99 33.0654 li
97.8965 33.0654 97 34.0225 97 35.1982 cv
97 39.4658 li
97 39.4658 li
97 35.1982 li
97 33.9854 97.8975 32.998 99 32.998 cv
121 32.998 li
122.103 32.998 123 33.9854 123 35.1982 cv
123 39.4658 li
123 40.6787 122.103 41.665 121 41.665 cv
gsave
[10.0021 0 0 10.0021 115.304 41.7627 ]ct
clp
/0 /Gradient get_res exec grestore
np
121 31.9981 mo
99 31.9981 li
97.3496 31.9981 96 33.4385 96 35.1982 cv
96 39.4658 li
96 41.2256 97.3496 42.665 99 42.665 cv
121 42.665 li
122.65 42.665 124 41.2256 124 39.4658 cv
124 35.1982 li
124 33.4385 122.65 31.9981 121 31.9981 cv
121 32.998 mo
122.103 32.998 123 33.9854 123 35.1982 cv
123 39.4658 li
123 40.6787 122.103 41.665 121 41.665 cv
99 41.665 li
97.8975 41.665 97 40.6787 97 39.4658 cv
97 35.1982 li
97 33.9854 97.8975 32.998 99 32.998 cv
121 32.998 li
.47451 .298039 .27451 0 cmyk
f
101.566 41.5986 mo
99.2774 41.5986 li
99.1055 41.2842 99 40.9228 99 40.5322 cv
99 36.2646 li
99 35.0889 99.8965 34.1318 101 34.1318 cv
104.535 34.1318 li
102.621 36.009 101.5 38.2504 101.5 40.665 cv
101.5 40.9795 101.527 41.29 101.566 41.5986 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[6.72 0 0 8.64 98.4 21.76 ]ct
snap_to_device
<<
/T 1
/W 14 
/H 18 
/M[14 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~$4@4M$k3XU%M'']&J5BZ$k3XU%M'']&.oKe$k3XU%M'']&.oKe&eb]a%M'']&.oKe&ebrn%M'']&.oKe
&ebom'GV,i&.oKe&ebom'GV>u&.oKe&ebom'GV>u(DdYr&ebom'GV>u()If)&ebom'GV>u()Ic((`<u$
'GV>u()Ic((`=20'GV>u()Ic((`=20)]KM-()Ic((`=20)B0V8()Ic((`=20)B0V8*$#h4(`=20)B0V8
*$$(A(`=20)B0V8*$$%@*Zl7<)B0V8*$$%@*ZlIH)B0V8*$$%@*ZlIH+<_[D*$$%@*ZlIH+<_mP~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~)]]tB+X/0X-R^Gp/1qtc+X/0X-7C;n/1rS0+X/0X-7C;m/1iM/1,C.$-7C;m/1iM/1,CaF-7C;m/1iJ.
0f(XE2`N69/1iJ.0etRD2`Ni[.kNA-0etRC2`Ni[4?bAO0etRC2E3]Y4?btp0etRC2E3]X4?btp6:3Od
2E3]X4?Yno6:4.12E3]X4?Ykn5sn%07n>X$4?Ykn5sn%07n?6F4$>bm5sdt.7n?6F9MRc:5sdt.7S$*D
9MSA[5sdt.7S$*D9MSA[;H#tP7S$*C9MJ;Z;H$Oq7S$*C9MJ8Y;H$Oq='/$d9MJ8Y;,^Fp='/X1~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
112.018 55.4658 mo
104.535 55.4658 li
104.912 55.0958 105.32 54.7397 105.756 54.3994 cv
112.16 54.3994 li
112.09 54.7473 112.041 55.1031 112.018 55.4658 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[9.12 0 0 2.4 103.68 7.84 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 5 
/M[19 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!'%!WiE)!WiE)!WiE)!WiE)!X&W/"9\i1
"9\i1"9S`.!s8W-"pP89"pP89"U,&5"U,&4"9\i~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!3-"pP89"U,&5"U,&4"9\i1":GSF$O[=M
$47+H#mgkC#RC\@&J5Te&.f?_%LrsX%1EXQ$O[=~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
99.2774 62.9336 mo
99 62.9336 li
97.8965 62.9336 97 61.9765 97 60.7988 cv
97 60.7988 li
97 56.5332 li
97 55.3564 97.8965 54.3994 99 54.3994 cv
105.756 54.3994 li
105.32 54.7397 104.912 55.0958 104.535 55.4658 cv
101 55.4658 li
99.8965 55.4658 99 56.4238 99 57.5996 cv
99 61.8672 li
99 62.2559 99.1055 62.6172 99.2774 62.9336 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[10.08 0 0 10.08 96.48 .160002 ]ct
snap_to_device
<<
/T 1
/W 21 
/H 21 
/M[21 0 0 -21 0 21 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!$#!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<N<(!WiE)!WiE)!WiE)!WiE)!WiE)!s8W-!s8W-!s/N+!s8W-!s8W."9\i1"9\i1"9\f/
"9\i1"9\i1"U,&5"U,&6"pG/5"9er4"U,&6"pP89#6tJ=#6tJ="U,)7"pP;;#6tJ=#RC\A#RC\A#R:S>
#6tJ>#RC\B#mgnF$47+I$47%E#RC_C#mgqG$47.K$OdFO$O[=K#mq"H$4@4M$k*OR%1NaU%1NaU$O[=M
$k*RS%1NdW%Ls![%hB-[%L`aT%1WjX%M'']&.fBb&ePZd&.f<]%hB3_&.fEc&eYfi',)#l&eYfg&.oKe
&eYfj',2,q'bqGu'bh>q&eYik'GM5q'bqK"(Ddo*(Ddi&'bh>s'c%Q$(Dmu+(`=20)AsD0(`4#((Ddo*
)&X>2)]Kb:*??+>)]BV4)&aD4)]Th<*?H7D+!2RH+!)FC)&aG5*#ot>*ZcCF+<VgN+<V^H*<~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!$#!<E3&!WiE)!WiE)!WiE)!s8W-
!s8W-!sA`0"9\i1"U,&5"U,&5"9\l3"U,)7"pP;;#6tM?#RC\B#R1M=#6tM?#RLeD$47+J$O[=N$k*FK
#mq"H$O[@O$k3XU%Ls![%hB0Y$k*RS%LrsZ%hK9a&J>]h'+toj%M'']&.oKe&ebrn'bqK"(Ddi&((h/l
',2,q()@]&(`=20)B0V6)&X/(()If))&aD4*$$%@+!2RH*Zc==)&aG5*??1C+!;^N,9nHZ,9e<T*$-.C
+<_pQ,:"Q^-R^Al-n$Gh,p=EV,:+W_-R^Dn.kE8)/hJV).OcYj-R^Do.kE8)0JG7;1G^d@0J>"-/1`D,
0/54;1c70M3B9)Z2E!BI0JG7<1c70N3BB5b4[)+q4Zkbc2`*EO3BB5a4[21u6:=73770C,5!1nh4[21t
6UX@584cEI9h\/M7mo[06:=7484cHJ:/=_b;cQdo:JFJQ6q0^=8k_rS:f1.j<``C)<Du^h9)~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
122.721 44.7979 mo
104.535 44.7979 li
104.912 44.4279 105.32 44.0718 105.756 43.7314 cv
121 43.7314 li
121.736 43.7314 122.375 44.165 122.721 44.7979 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[19.68 0 0 2.4 103.68 18.4 ]ct
snap_to_device
<<
/T 1
/W 41 
/H 5 
/M[41 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!'%!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE+"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"pP89"pP89"pP89"pP89"pP88"U,&5"U,&5
"pP89"pP89"pP89"o~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!0+"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&;$O[=M
$O[=M$O[=M$O[=M$47+I$47+I$47+I$O[=M$O[=M$O[=M&.fBa&.fBa&.fBa&.fBa%hB0\%LrsY%LrsZ
%hB3_&.fBa&.fBa&-~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
99.2774 52.2647 mo
99 52.2647 li
97.8965 52.2647 97 51.3096 97 50.1318 cv
97 50.1318 li
97 45.8662 li
97 44.6885 97.8965 43.7314 99 43.7314 cv
105.756 43.7314 li
105.32 44.0718 104.912 44.4279 104.535 44.7979 cv
101 44.7979 li
99.8965 44.7979 99 45.7549 99 46.9326 cv
99 51.1982 li
99 51.5889 99.1055 51.9502 99.2774 52.2647 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[10.08 0 0 9.6 96.48 11.2 ]ct
snap_to_device
<<
/T 1
/W 21 
/H 20 
/M[21 0 0 -20 0 20 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!$#!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiE)!WiE*!s8W-!s8W-!s/N+!s8W-!s8W-"9\i1"9\i1"U+u1
"9\i1"9\i2"U,&5"U,&6"pP87"9er4"U,)7"pP89#6tJ=#6tJ="U,)7"pP89#6tJ>#RC\A#RLeD#mU\?
#6tJ>#RC_C#mgqG$47+I$O[4G#RC_C#mq"H$4@4L$OdFP$k3XP#mq"H$4@4L$k*RS%1NdW%Ls![$O[=M
$k*RS%1WjX%M'']&.fBb&I]'W%1WjX%hB3_&.fEc&eYfi',(ic%hB3_&.oKe&eYfj',2,q'bqGp&.oKe
&eYfj',2/r'bqK"(Ddo*&eYik'GM5q'c%Q$(Dmu,)&X;1)AEl#'c%Q$(`4),)&X>2)]Kb:*?>n2(Ddo*
)&X>2)]Th<*?H7D+!;[D)&aD4)]Th<*ZcCF+!2UJ+X&$R~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!$#!<E3%!WiE)!WiE)!WiE)!WiE*
!s8W-!s8Z/"9\i1"9er4"U,&6"9er4"U,)7"pP8:#6tJ>#RC\B#mLS=#7(S@#RLeD$47+J$O[=N$k*FK
#mq"I$O[@O$k3XU%Ls![%hK9[$k*RS%LrsZ%hK9a&J>]i',2,q%Ls!\&.oKe&ebom'bqK"(Ddo*)%dJo
',2,q()@]'(`=20)]Kb:*?Gq2()If*)&X>3)]Tk>*ZlLI+X/-K)&aG6*$$(B+<VgO,9nH[-71)g*??4D
+<_pR,:"Q^-R^Dm.P!&%/g2D`,UFcb-RgJp.kN>*0/,(81,L=)-n$Pq/1iG,0JP==1c70M3&s#M/1iJ-
0JP==1c@6O3BB5a4[)(q0JP=>1c@9P3BB8c5!M;!6:4127l<1a3]fDd5!M>"6UXC684cEI9hmc45!M>"
6UaI784lNK:/=\a;cQd_6UXC68P2WM:/Fed<)m"%=^,0:~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
122.721 34.1318 mo
104.535 34.1318 li
104.912 33.7618 105.32 33.4057 105.756 33.0654 cv
121 33.0654 li
121.736 33.0654 122.375 33.4971 122.721 34.1318 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[19.68 0 0 2.88 103.68 28.96 ]ct
snap_to_device
<<
/T 1
/W 41 
/H 6 
/M[41 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1":#/:#6tJ=#6tJ=#6kA:"pP88"U,&5"U,&5"U,&5"U5/8"pP8:#6t~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!$#!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3*"pP89
"pP89"pP89"pP89"pP88"U,&5"U,&5"U5/8"pP89"pP89$k*OQ$k*OQ$k*OQ$k!FN$47+I$47(G#mgnE
$47+I$4@4L$OdFP$ka0c&eYfi&eYfi&J5Qc%hB-[%LrpW%1NaU%1WjX%M'']&.oKe&eY~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
99.2774 41.5986 mo
99 41.5986 li
97.8965 41.5986 97 40.6416 97 39.4658 cv
97 39.4658 li
97 35.1982 li
97 34.0225 97.8965 33.0654 99 33.0654 cv
105.756 33.0654 li
105.32 33.4057 104.912 33.7618 104.535 34.1318 cv
101 34.1318 li
99.8965 34.1318 99 35.0889 99 36.2646 cv
99 40.5322 li
99 40.9228 99.1055 41.2842 99.2774 41.5986 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[10.08 0 0 10.08 96.48 21.76 ]ct
snap_to_device
<<
/T 1
/W 21 
/H 21 
/M[21 0 0 -21 0 21 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3&!WiE)!WiE)!WiE)!WiE)!WiE)!WiH+!s8W-!s8W."9\f/
!s8W-!s8W."9\i1"9\l3"U,&3"9\i1"9\l3"U,&5"U,)7"pP8:"9er4"U5/8"pP8:#6tJ=#7(S@#R1J;
"pP;;#6tM?#RC\A#mgnF$47"C#7(S@#RLeD#mq"H$47.K$O[@K#mgnE$47+I$O[=M$k*OQ%1NaV$47+J
$O[=N$k3XT%1WjX%M''\&.8jS$k*RS%LrsY%hB3_&.oKd&J>N_%LrsZ%hK9`&.oKe&eYfj',2,k%hB3_
&J5Wg&eYik'GM8s'c%Q#&J5Tf&ebom'GV>t'c%Q$(`4,.(_[St'GM8s()@]&(`4,.)B'M4)]BG,()Ic(
(`4)-)&aD4)]Th<*??.:(`4,.)B'P6*#ot>*ZcCF+<_jM)&X>3)]Th<*?H7D+!;[L+X/*S+o~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
!<N<(!WiE)!WiE)!s8W-!s8W-!s8W-"9\i1"9\i2"U,&5"pP89"pG/6"U5/8#6tJ=#7(S@#RLeD$47"C
#7(SA#mgnF$47.K$k*OQ%1NaQ$47+J$OdFQ%1NdW%hB0^&.oKd$k*RS%Ls!\&.oKd&ebol'GM8s((Urf
&J5Wg',2,q'c%Q$(`4,.)B'5%'GM8t()If))&X>3)]Tk=*ZcC=(Dmu,)B0V8*??1C+<VgO+sS?Y)B0V8
*?H:F+<_pR,U=]`-R^Al.NTZS+X/-V,UFcb-n-Vq/1`A*0/"Op,pjuf.4Qeu/1rP/0JP==1c7-=.4Hbt
/M8\10etOA2)dHR3]]Aa/1rS00f(UB2E*QT3]fGf5<hG"5;G#P2E*TV4$5Yi5X@_(6q0[:7n#Bt3]oSj
5=%V'77Kg=8kViQ:JOSH5<qP&77Kd=8kVlS:f1.j<E<.!6UXC68P2ZN:/Fed<*!(&>$G69=9~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
120 63 mo
116.141 63 113 59.8604 113 56 cv
113 56.169 113.014 56.334 113.025 56.5 cv
113.051 56.1361 113.105 55.7799 113.184 55.4333 cv
115.243 55.9478 117.547 56.25 120 56.25 cv
122.453 56.25 124.757 55.9478 126.816 55.4333 cv
126.895 55.7799 126.949 56.1361 126.975 56.5 cv
126.986 56.334 127 56.169 127 56 cv
127 59.8604 123.859 63 120 63 cv
127 56 mo
127 52.3302 124.16 49.3103 120.563 49.0224 cv
120.563 49.0224 120.562 49.0224 120.562 49.0223 cv
120.559 49.0221 120.556 49.0219 120.553 49.0216 cv
120.552 49.0216 120.552 49.0215 120.551 49.0215 cv
120.549 49.0213 120.546 49.0211 120.543 49.0209 cv
120.542 49.0208 120.541 49.0207 120.54 49.0206 cv
120.538 49.0205 120.535 49.0203 120.533 49.0201 cv
120.532 49.02 120.531 49.0199 120.529 49.0198 cv
120.527 49.0196 120.525 49.0195 120.522 49.0193 cv
120.521 49.0192 120.52 49.0191 120.519 49.019 cv
120.516 49.0188 120.514 49.0187 120.512 49.0185 cv
120.51 49.0184 120.509 49.0183 120.508 49.0182 cv
120.505 49.0181 120.504 49.0179 120.501 49.0178 cv
120.5 49.0177 120.498 49.0175 120.497 49.0174 cv
120.495 49.0173 120.493 49.0172 120.491 49.017 cv
120.489 49.0169 120.487 49.0168 120.486 49.0167 cv
120.484 49.0166 120.482 49.0164 120.48 49.0163 cv
120.478 49.0162 120.477 49.0161 120.475 49.0159 cv
120.473 49.0158 120.471 49.0157 120.469 49.0155 cv
120.468 49.0154 120.465 49.0153 120.464 49.0152 cv
120.462 49.0151 120.46 49.015 120.458 49.0149 cv
120.456 49.0147 120.454 49.0146 120.452 49.0145 cv
120.451 49.0144 120.449 49.0143 120.448 49.0142 cv
120.445 49.014 120.444 49.0139 120.441 49.0138 cv
120.44 49.0137 120.438 49.0136 120.437 49.0135 cv
120.435 49.0134 120.432 49.0132 120.431 49.0131 cv
120.429 49.013 120.428 49.0129 120.426 49.0128 cv
120.423 49.0127 120.421 49.0125 120.418 49.0124 cv
120.417 49.0123 120.416 49.0122 120.415 49.0122 cv
120.408 49.0117 120.401 49.0113 120.393 49.0109 cv
120.393 49.0109 120.391 49.0108 120.391 49.0108 cv
120.388 49.0106 120.385 49.0105 120.382 49.0103 cv
120.381 49.0103 120.38 49.0102 120.379 49.0101 cv
120.376 49.01 120.374 49.0099 120.371 49.0097 cv
120.37 49.0097 120.369 49.0096 120.368 49.0096 cv
120.366 49.0094 120.363 49.0093 120.36 49.0092 cv
120.359 49.0091 120.358 49.009 120.357 49.009 cv
120.354 49.0089 120.352 49.0087 120.35 49.0086 cv
120.348 49.0085 120.347 49.0085 120.345 49.0084 cv
120.343 49.0083 120.341 49.0082 120.339 49.0081 cv
120.338 49.008 120.336 49.0079 120.334 49.0079 cv
120.332 49.0078 120.33 49.0077 120.328 49.0076 cv
120.326 49.0075 120.325 49.0074 120.323 49.0074 cv
120.322 49.0073 120.321 49.0073 120.32 49.0072 cv
124.032 49.1749 127 52.2469 127 56 cv
127 56 li
113 56 mo
113 56 li
113 52.2504 115.963 49.1807 119.67 49.0077 cv
119.668 49.0078 119.667 49.0078 119.666 49.0079 cv
119.664 49.008 119.663 49.008 119.661 49.0081 cv
119.659 49.0082 119.657 49.0083 119.655 49.0084 cv
119.653 49.0085 119.652 49.0086 119.65 49.0086 cv
119.648 49.0088 119.645 49.0089 119.643 49.009 cv
119.642 49.0091 119.641 49.0091 119.64 49.0092 cv
119.637 49.0093 119.634 49.0094 119.631 49.0096 cv
119.63 49.0096 119.63 49.0097 119.629 49.0097 cv
119.626 49.0099 119.623 49.01 119.62 49.0102 cv
119.619 49.0102 119.618 49.0103 119.618 49.0103 cv
119.614 49.0105 119.611 49.0107 119.607 49.0109 cv
119.607 49.0109 119.607 49.0109 119.607 49.0109 cv
119.599 49.0113 119.592 49.0117 119.585 49.0122 cv
119.584 49.0122 li
119.581 49.0124 119.577 49.0126 119.574 49.0128 cv
119.573 49.0129 119.572 49.0129 119.571 49.013 cv
119.568 49.0132 119.566 49.0133 119.563 49.0135 cv
119.562 49.0136 119.561 49.0136 119.56 49.0137 cv
119.557 49.0138 119.554 49.014 119.552 49.0142 cv
119.551 49.0143 119.55 49.0143 119.549 49.0144 cv
119.546 49.0146 119.544 49.0147 119.541 49.0149 cv
119.54 49.015 119.538 49.0151 119.537 49.0151 cv
119.535 49.0153 119.533 49.0154 119.53 49.0156 cv
119.529 49.0157 119.527 49.0158 119.526 49.0159 cv
119.524 49.016 119.522 49.0162 119.52 49.0163 cv
119.518 49.0164 119.517 49.0165 119.515 49.0166 cv
119.513 49.0168 119.511 49.0169 119.509 49.0171 cv
119.507 49.0172 119.506 49.0173 119.504 49.0174 cv
119.502 49.0175 119.5 49.0177 119.498 49.0178 cv
119.496 49.0179 119.495 49.018 119.493 49.0182 cv
119.491 49.0183 119.489 49.0184 119.487 49.0186 cv
119.486 49.0187 119.484 49.0188 119.482 49.019 cv
119.48 49.0191 119.478 49.0192 119.476 49.0194 cv
119.475 49.0195 119.473 49.0196 119.471 49.0198 cv
119.469 49.0199 119.467 49.0201 119.465 49.0202 cv
119.464 49.0203 119.462 49.0205 119.461 49.0206 cv
119.459 49.0207 119.457 49.0209 119.455 49.021 cv
119.453 49.0212 119.451 49.0213 119.449 49.0214 cv
119.448 49.0216 119.446 49.0217 119.445 49.0218 cv
119.443 49.022 119.441 49.0221 119.439 49.0223 cv
119.437 49.0224 119.436 49.0225 119.434 49.0227 cv
119.432 49.0228 119.43 49.023 119.428 49.0232 cv
119.426 49.0233 119.425 49.0234 119.424 49.0235 cv
119.422 49.0237 119.419 49.0239 119.417 49.0241 cv
119.416 49.0241 119.416 49.0242 119.415 49.0242 cv
119.402 49.0253 119.389 49.0265 119.375 49.0276 cv
119.375 49.0276 119.375 49.0277 119.375 49.0277 cv
119.371 49.028 119.368 49.0283 119.365 49.0286 cv
119.365 49.0286 119.365 49.0286 119.364 49.0286 cv
119.361 49.0289 119.358 49.0292 119.355 49.0295 cv
119.355 49.0295 119.354 49.0296 119.354 49.0296 cv
119.35 49.0299 119.347 49.0302 119.344 49.0305 cv
119.344 49.0305 119.344 49.0305 119.343 49.0306 cv
119.34 49.0309 119.337 49.0312 119.334 49.0315 cv
119.333 49.0315 119.333 49.0315 119.333 49.0315 cv
119.329 49.0319 119.326 49.0322 119.323 49.0325 cv
119.322 49.0325 li
119.319 49.0328 119.316 49.0332 119.313 49.0335 cv
119.312 49.0335 119.312 49.0335 119.312 49.0336 cv
119.308 49.0339 119.305 49.0342 119.302 49.0345 cv
119.302 49.0346 119.302 49.0346 119.301 49.0346 cv
119.298 49.0349 119.295 49.0353 119.292 49.0356 cv
119.291 49.0356 119.291 49.0356 119.291 49.0357 cv
119.288 49.036 119.284 49.0363 119.281 49.0367 cv
119.281 49.0367 li
115.758 49.3981 113 52.3835 113 56 cv
119.67 49.0077 mo
119.673 49.0075 119.677 49.0074 119.68 49.0072 cv
119.679 49.0073 119.678 49.0073 119.677 49.0074 cv
119.675 49.0075 119.674 49.0075 119.672 49.0076 cv
119.671 49.0076 119.671 49.0076 119.67 49.0077 cv
120.319 49.0072 mo
120.319 49.0072 120.318 49.0071 120.317 49.0071 cv
120.315 49.007 120.314 49.007 120.313 49.0069 cv
120.312 49.0069 120.311 49.0068 120.31 49.0068 cv
120.313 49.0069 120.316 49.0071 120.319 49.0072 cv
119.681 49.0072 mo
119.684 49.007 119.687 49.0069 119.69 49.0068 cv
119.689 49.0068 119.688 49.0068 119.687 49.0069 cv
119.686 49.007 119.685 49.007 119.683 49.0071 cv
119.683 49.0071 119.681 49.0072 119.681 49.0072 cv
120.308 49.0067 mo
120.307 49.0067 120.307 49.0066 120.306 49.0066 cv
120.304 49.0065 120.303 49.0065 120.301 49.0064 cv
120.301 49.0064 120.3 49.0063 120.299 49.0063 cv
120.302 49.0064 120.305 49.0066 120.308 49.0067 cv
119.692 49.0067 mo
119.695 49.0066 119.698 49.0064 119.701 49.0063 cv
119.7 49.0063 119.699 49.0064 119.698 49.0064 cv
119.697 49.0065 119.696 49.0065 119.694 49.0066 cv
119.693 49.0066 119.693 49.0067 119.692 49.0067 cv
120.298 49.0062 mo
120.297 49.0062 120.296 49.0062 120.295 49.0061 cv
120.293 49.0061 120.292 49.006 120.291 49.006 cv
120.29 49.0059 120.289 49.0059 120.289 49.0059 cv
120.292 49.006 120.295 49.0061 120.298 49.0062 cv
119.702 49.0062 mo
119.705 49.0061 119.708 49.006 119.711 49.0059 cv
119.711 49.0059 119.71 49.0059 119.709 49.006 cv
119.708 49.006 119.707 49.0061 119.705 49.0061 cv
119.704 49.0062 119.703 49.0062 119.702 49.0062 cv
120.287 49.0058 mo
120.286 49.0058 120.285 49.0057 120.284 49.0057 cv
120.282 49.0056 120.281 49.0056 120.28 49.0055 cv
120.279 49.0055 120.279 49.0055 120.278 49.0054 cv
120.281 49.0056 120.284 49.0057 120.287 49.0058 cv
119.713 49.0058 mo
119.716 49.0057 119.719 49.0056 119.722 49.0054 cv
119.721 49.0055 119.721 49.0055 119.72 49.0055 cv
119.719 49.0056 119.717 49.0056 119.716 49.0057 cv
119.715 49.0057 119.714 49.0058 119.713 49.0058 cv
120.276 49.0054 mo
120.275 49.0053 120.274 49.0053 120.273 49.0053 cv
120.272 49.0052 120.27 49.0051 120.269 49.0051 cv
120.268 49.0051 120.268 49.0051 120.267 49.005 cv
120.27 49.0051 120.273 49.0052 120.276 49.0054 cv
119.724 49.0054 mo
119.727 49.0052 119.73 49.0051 119.733 49.005 cv
119.732 49.0051 119.732 49.0051 119.731 49.0051 cv
119.73 49.0051 119.729 49.0052 119.727 49.0052 cv
119.726 49.0053 119.725 49.0053 119.724 49.0054 cv
120.265 49.0049 mo
120.264 49.0049 120.263 49.0049 120.262 49.0049 cv
120.261 49.0048 120.259 49.0047 120.257 49.0047 cv
120.257 49.0047 120.257 49.0046 120.256 49.0046 cv
120.259 49.0047 120.262 49.0048 120.265 49.0049 cv
119.735 49.0049 mo
119.738 49.0048 119.741 49.0047 119.744 49.0046 cv
119.743 49.0046 119.743 49.0047 119.743 49.0047 cv
119.741 49.0047 119.739 49.0048 119.738 49.0048 cv
119.737 49.0049 119.736 49.0049 119.735 49.0049 cv
120.255 49.0046 mo
120.253 49.0045 120.252 49.0045 120.251 49.0045 cv
120.25 49.0044 120.248 49.0043 120.247 49.0043 cv
120.246 49.0043 120.246 49.0043 120.246 49.0043 cv
120.249 49.0044 120.251 49.0045 120.255 49.0046 cv
119.746 49.0046 mo
119.749 49.0045 119.751 49.0044 119.754 49.0043 cv
119.754 49.0043 119.754 49.0043 119.753 49.0043 cv
119.752 49.0043 119.75 49.0044 119.749 49.0045 cv
119.748 49.0045 119.747 49.0045 119.746 49.0046 cv
120.244 49.0042 mo
120.243 49.0041 120.241 49.0041 120.24 49.0041 cv
120.239 49.004 120.237 49.004 120.236 49.0039 cv
120.235 49.0039 120.235 49.0039 120.235 49.0039 cv
120.238 49.004 120.241 49.0041 120.244 49.0042 cv
119.756 49.0042 mo
119.759 49.0041 119.762 49.004 119.765 49.0039 cv
119.765 49.0039 119.765 49.0039 119.764 49.0039 cv
119.763 49.004 119.761 49.004 119.76 49.0041 cv
119.759 49.0041 119.758 49.0041 119.756 49.0042 cv
120.234 49.0038 mo
120.232 49.0038 120.23 49.0037 120.228 49.0037 cv
120.227 49.0036 120.226 49.0036 120.225 49.0036 cv
120.225 49.0036 120.224 49.0035 120.224 49.0035 cv
120.227 49.0036 120.23 49.0037 120.234 49.0038 cv
119.766 49.0038 mo
119.77 49.0037 119.773 49.0036 119.776 49.0035 cv
119.776 49.0035 119.775 49.0036 119.775 49.0036 cv
119.774 49.0036 119.773 49.0036 119.772 49.0037 cv
119.77 49.0037 119.768 49.0038 119.766 49.0038 cv
120.224 49.0035 mo
120.222 49.0035 120.219 49.0034 120.217 49.0033 cv
120.216 49.0033 120.215 49.0032 120.214 49.0032 cv
120.206 49.003 120.199 49.0028 120.192 49.0026 cv
120.191 49.0026 120.19 49.0026 120.19 49.0025 cv
120.188 49.0025 120.186 49.0024 120.185 49.0024 cv
120.198 49.0027 120.211 49.0031 120.224 49.0035 cv
119.776 49.0035 mo
119.789 49.0031 119.802 49.0027 119.815 49.0024 cv
119.814 49.0024 119.812 49.0025 119.81 49.0025 cv
119.81 49.0026 119.809 49.0026 119.808 49.0026 cv
119.801 49.0028 119.794 49.003 119.786 49.0032 cv
119.785 49.0032 119.784 49.0033 119.783 49.0033 cv
119.781 49.0034 119.779 49.0035 119.776 49.0035 cv
120.181 49.0023 mo
120.181 49.0023 120.181 49.0023 120.181 49.0023 cv
120.179 49.0023 120.178 49.0022 120.177 49.0022 cv
120.176 49.0022 120.175 49.0022 120.174 49.0021 cv
120.176 49.0022 120.179 49.0023 120.181 49.0023 cv
119.819 49.0023 mo
119.821 49.0023 119.824 49.0022 119.826 49.0021 cv
119.825 49.0022 119.824 49.0022 119.823 49.0022 cv
119.821 49.0022 119.821 49.0023 119.819 49.0023 cv
119.819 49.0023 119.819 49.0023 119.819 49.0023 cv
119.83 49.002 mo
119.832 49.002 119.834 49.0019 119.836 49.0019 cv
119.836 49.0019 119.835 49.0019 119.835 49.0019 cv
119.833 49.002 119.832 49.002 119.83 49.002 cv
119.83 49.002 li
120.17 49.002 mo
120.17 49.002 li
120.168 49.002 120.167 49.002 120.165 49.0019 cv
120.165 49.0019 120.164 49.0019 120.163 49.0019 cv
120.166 49.0019 120.168 49.002 120.17 49.002 cv
119.841 49.0018 mo
119.843 49.0017 119.845 49.0017 119.847 49.0017 cv
119.846 49.0017 119.846 49.0017 119.846 49.0017 cv
119.844 49.0017 119.843 49.0017 119.841 49.0018 cv
119.841 49.0018 119.841 49.0018 119.841 49.0018 cv
120.159 49.0018 mo
120.159 49.0018 120.159 49.0018 120.159 49.0018 cv
120.157 49.0017 120.156 49.0017 120.154 49.0017 cv
120.154 49.0017 120.154 49.0017 120.153 49.0017 cv
120.155 49.0017 120.157 49.0017 120.159 49.0018 cv
119.852 49.0015 mo
119.854 49.0015 119.855 49.0015 119.858 49.0014 cv
119.857 49.0014 119.857 49.0014 119.857 49.0014 cv
119.855 49.0015 119.854 49.0015 119.852 49.0015 cv
119.852 49.0015 li
120.148 49.0015 mo
120.148 49.0015 li
120.146 49.0015 120.145 49.0015 120.143 49.0014 cv
120.143 49.0014 120.143 49.0014 120.142 49.0014 cv
120.145 49.0015 120.146 49.0015 120.148 49.0015 cv
119.863 49.0013 mo
119.865 49.0013 119.867 49.0013 119.868 49.0012 cv
119.868 49.0012 119.868 49.0012 119.868 49.0012 cv
119.866 49.0013 119.865 49.0013 119.863 49.0013 cv
119.863 49.0013 119.863 49.0013 119.863 49.0013 cv
120.137 49.0013 mo
120.137 49.0013 120.137 49.0013 120.137 49.0013 cv
120.135 49.0013 120.134 49.0013 120.132 49.0012 cv
120.132 49.0012 120.132 49.0012 120.132 49.0012 cv
120.133 49.0013 120.135 49.0013 120.137 49.0013 cv
119.873 49.0011 mo
119.875 49.0011 119.878 49.0011 119.879 49.001 cv
119.879 49.001 119.879 49.001 119.879 49.001 cv
119.877 49.0011 119.876 49.0011 119.874 49.0011 cv
119.873 49.0011 li
120.126 49.0011 mo
120.126 49.0011 li
120.124 49.0011 120.123 49.0011 120.121 49.001 cv
120.121 49.001 120.121 49.001 120.121 49.001 cv
120.122 49.0011 120.125 49.0011 120.126 49.0011 cv
119.885 49.0009 mo
119.886 49.0009 119.888 49.0009 119.89 49.0008 cv
119.89 49.0009 119.89 49.0009 119.89 49.0009 cv
119.888 49.0009 119.887 49.0009 119.885 49.0009 cv
119.885 49.0009 119.885 49.0009 119.885 49.0009 cv
120.115 49.0009 mo
120.115 49.0009 120.115 49.0009 120.115 49.0009 cv
120.113 49.0009 120.112 49.0009 120.11 49.0009 cv
120.11 49.0009 120.11 49.0009 120.11 49.0008 cv
120.112 49.0009 120.114 49.0009 120.115 49.0009 cv
119.896 49.0008 mo
119.897 49.0007 119.899 49.0007 119.901 49.0007 cv
119.901 49.0007 li
119.899 49.0007 119.898 49.0007 119.896 49.0008 cv
119.896 49.0008 li
120.104 49.0008 mo
120.104 49.0008 li
120.102 49.0007 120.101 49.0007 120.099 49.0007 cv
120.099 49.0007 li
120.101 49.0007 120.103 49.0007 120.104 49.0008 cv
119.907 49.0006 mo
119.909 49.0006 119.91 49.0006 119.912 49.0005 cv
119.912 49.0005 119.912 49.0005 119.912 49.0005 cv
119.91 49.0006 119.909 49.0006 119.907 49.0006 cv
119.907 49.0006 119.907 49.0006 119.907 49.0006 cv
120.093 49.0006 mo
120.093 49.0006 120.093 49.0006 120.093 49.0006 cv
120.091 49.0006 120.09 49.0006 120.088 49.0005 cv
120.088 49.0005 120.088 49.0005 120.088 49.0005 cv
120.09 49.0006 120.091 49.0006 120.093 49.0006 cv
119.918 49.0005 mo
119.919 49.0005 119.921 49.0004 119.923 49.0004 cv
119.923 49.0004 li
119.921 49.0004 119.919 49.0005 119.918 49.0005 cv
119.918 49.0005 li
120.082 49.0005 mo
120.082 49.0005 li
120.081 49.0005 120.079 49.0004 120.077 49.0004 cv
120.077 49.0004 li
120.079 49.0004 120.081 49.0005 120.082 49.0005 cv
119.929 49.0004 mo
119.931 49.0003 119.932 49.0003 119.934 49.0003 cv
119.934 49.0003 li
119.932 49.0003 119.931 49.0003 119.929 49.0004 cv
119.929 49.0004 119.929 49.0004 119.929 49.0004 cv
120.071 49.0004 mo
120.071 49.0004 120.071 49.0004 120.071 49.0004 cv
120.069 49.0003 120.068 49.0003 120.066 49.0003 cv
120.066 49.0003 li
120.068 49.0003 120.069 49.0003 120.071 49.0004 cv
119.94 49.0003 mo
119.941 49.0002 119.943 49.0002 119.945 49.0002 cv
119.945 49.0002 li
119.943 49.0002 119.942 49.0002 119.94 49.0003 cv
119.94 49.0003 li
120.06 49.0003 mo
120.06 49.0003 li
120.058 49.0002 120.057 49.0002 120.055 49.0002 cv
120.055 49.0002 li
120.057 49.0002 120.059 49.0002 120.06 49.0003 cv
119.951 49.0002 mo
119.953 49.0002 119.954 49.0001 119.956 49.0001 cv
119.956 49.0001 li
119.954 49.0001 119.953 49.0002 119.951 49.0002 cv
119.951 49.0002 li
120.049 49.0002 mo
120.049 49.0002 li
120.047 49.0002 120.046 49.0001 120.044 49.0001 cv
120.044 49.0001 li
120.046 49.0001 120.047 49.0002 120.049 49.0002 cv
gsave
[13.4214 0 0 13.4214 119.563 69.415 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~zzzzzzzz!<E6(!sAc2"pP;<#RLhF$OdFQ%Ls![&.oKe',)&p'c%T%(`4,/)B0Y9*?H7D+<VgO+sS<X,p
alc-R^Dm.P*,&/M8\00JP:;1G^jF2)[?O3&ioZ3]fGd4[)%o5<h@t5X7S#5sdn*6UO4/6q'O67Ros=7n
?0B8P2TJ92&#R9hnGZ:Jakb;,U:j;cH^r<E<.%='/R-=^#!5>?b?;?!UcC?XI2K@:<VTA7T7_AnG[gBP
;*oC2.O#D/F0.Df9T6EH-#?FEDYJG'8(RG^+L[H[C-fI=6Qn~>
<~Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR?['[6L[^WfX]"5Md]Y;.q^qmk(_o0O5`lH-Ab0%oO
bg"GZd*U1gdaQ^rf%8O+g"P39gtgfChr*JQioB+\jlbgjkiqBum-X3.n*fc:o(2JFp%A(Sq"ad_qu-Km
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /1 /Gradient get_res exec grestore
np
120 48 mo
115.58 48 112 51.584 112 56 cv
112 60.4179 115.58 64 120 64 cv
124.416 64 128 60.4179 128 56 cv
128 51.584 124.416 48 120 48 cv
120 49 mo
123.859 49 127 52.1396 127 56 cv
127 59.8604 123.859 63 120 63 cv
116.141 63 113 59.8604 113 56 cv
113 52.1396 116.141 49 120 49 cv
0 .5 1 0 cmyk
f
120 56.25 mo
117.547 56.25 115.243 55.9478 113.184 55.4333 cv
113.897 52.3256 116.679 50 120 50 cv
123.321 50 126.103 52.3256 126.816 55.4333 cv
124.757 55.9478 122.453 56.25 120 56.25 cv
119.281 49.0367 mo
119.281 49.0367 li
119.281 49.0367 119.281 49.0367 119.281 49.0367 cv
119.291 49.0357 mo
119.291 49.0356 119.291 49.0356 119.292 49.0356 cv
119.291 49.0356 119.291 49.0356 119.291 49.0357 cv
119.301 49.0346 mo
119.302 49.0346 119.302 49.0346 119.302 49.0345 cv
119.302 49.0346 119.302 49.0346 119.301 49.0346 cv
119.312 49.0336 mo
119.312 49.0335 119.312 49.0335 119.313 49.0335 cv
119.312 49.0335 119.312 49.0335 119.312 49.0336 cv
119.322 49.0325 mo
119.323 49.0325 li
119.322 49.0325 li
119.333 49.0315 mo
119.333 49.0315 119.333 49.0315 119.334 49.0315 cv
119.333 49.0315 119.333 49.0315 119.333 49.0315 cv
119.343 49.0306 mo
119.344 49.0305 119.344 49.0305 119.344 49.0305 cv
119.344 49.0305 119.344 49.0305 119.343 49.0306 cv
119.354 49.0296 mo
119.354 49.0296 119.355 49.0295 119.355 49.0295 cv
119.355 49.0295 119.354 49.0295 119.354 49.0296 cv
119.364 49.0286 mo
119.365 49.0286 119.365 49.0286 119.365 49.0286 cv
119.364 49.0286 li
119.375 49.0277 mo
119.375 49.0277 119.375 49.0276 119.375 49.0276 cv
119.375 49.0276 119.375 49.0277 119.375 49.0277 cv
119.415 49.0242 mo
119.416 49.0242 119.416 49.0241 119.417 49.0241 cv
119.416 49.0241 119.416 49.0242 119.415 49.0242 cv
119.424 49.0235 mo
119.425 49.0234 119.426 49.0233 119.428 49.0232 cv
119.427 49.0233 119.425 49.0234 119.424 49.0235 cv
119.434 49.0227 mo
119.436 49.0225 119.437 49.0224 119.439 49.0223 cv
119.437 49.0224 119.436 49.0225 119.434 49.0227 cv
120.563 49.0224 mo
120.563 49.0224 120.562 49.0224 120.562 49.0223 cv
120.562 49.0224 120.563 49.0224 120.563 49.0224 cv
119.445 49.0218 mo
119.446 49.0217 119.448 49.0216 119.449 49.0214 cv
119.448 49.0216 119.446 49.0217 119.445 49.0218 cv
120.553 49.0216 mo
120.552 49.0216 120.552 49.0216 120.551 49.0215 cv
120.552 49.0215 120.552 49.0216 120.553 49.0216 cv
119.455 49.021 mo
119.457 49.0209 119.459 49.0207 119.461 49.0206 cv
119.459 49.0207 119.457 49.0209 119.455 49.021 cv
120.543 49.0209 mo
120.542 49.0208 120.541 49.0207 120.54 49.0206 cv
120.541 49.0207 120.542 49.0208 120.543 49.0209 cv
119.465 49.0202 mo
119.467 49.0201 119.469 49.0199 119.471 49.0198 cv
119.469 49.0199 119.467 49.0201 119.465 49.0202 cv
120.533 49.0201 mo
120.532 49.02 120.531 49.0199 120.529 49.0198 cv
120.531 49.0199 120.532 49.02 120.533 49.0201 cv
119.476 49.0194 mo
119.478 49.0192 119.48 49.0191 119.482 49.019 cv
119.48 49.0191 119.478 49.0192 119.476 49.0194 cv
120.522 49.0193 mo
120.521 49.0192 120.52 49.0191 120.519 49.019 cv
120.52 49.0191 120.521 49.0192 120.522 49.0193 cv
119.487 49.0186 mo
119.489 49.0184 119.491 49.0183 119.493 49.0182 cv
119.491 49.0183 119.489 49.0184 119.487 49.0186 cv
120.512 49.0185 mo
120.511 49.0184 120.509 49.0183 120.508 49.0182 cv
120.509 49.0183 120.51 49.0184 120.512 49.0185 cv
119.498 49.0178 mo
119.5 49.0177 119.502 49.0175 119.504 49.0174 cv
119.502 49.0175 119.5 49.0177 119.498 49.0178 cv
120.501 49.0178 mo
120.5 49.0177 120.498 49.0175 120.497 49.0174 cv
120.498 49.0175 120.5 49.0177 120.501 49.0178 cv
119.509 49.0171 mo
119.511 49.0169 119.513 49.0168 119.515 49.0166 cv
119.513 49.0168 119.511 49.0169 119.509 49.0171 cv
120.491 49.017 mo
120.489 49.0169 120.487 49.0168 120.486 49.0167 cv
120.487 49.0168 120.489 49.0169 120.491 49.017 cv
119.52 49.0163 mo
119.522 49.0162 119.524 49.016 119.526 49.0159 cv
119.524 49.016 119.522 49.0162 119.52 49.0163 cv
120.48 49.0163 mo
120.478 49.0162 120.477 49.0161 120.475 49.0159 cv
120.477 49.0161 120.478 49.0162 120.48 49.0163 cv
119.53 49.0156 mo
119.533 49.0154 119.535 49.0153 119.537 49.0151 cv
119.535 49.0153 119.533 49.0154 119.53 49.0156 cv
120.469 49.0155 mo
120.467 49.0154 120.466 49.0153 120.464 49.0152 cv
120.465 49.0153 120.468 49.0154 120.469 49.0155 cv
119.541 49.0149 mo
119.544 49.0147 119.546 49.0146 119.549 49.0144 cv
119.546 49.0145 119.543 49.0147 119.541 49.0149 cv
120.458 49.0149 mo
120.456 49.0147 120.455 49.0146 120.452 49.0145 cv
120.454 49.0146 120.456 49.0147 120.458 49.0149 cv
119.552 49.0142 mo
119.554 49.014 119.557 49.0138 119.56 49.0137 cv
119.557 49.0139 119.555 49.014 119.552 49.0142 cv
120.448 49.0142 mo
120.446 49.014 120.444 49.0139 120.441 49.0138 cv
120.444 49.0139 120.445 49.014 120.448 49.0142 cv
119.563 49.0135 mo
119.566 49.0133 119.568 49.0132 119.571 49.013 cv
119.568 49.0132 119.565 49.0133 119.563 49.0135 cv
120.437 49.0135 mo
120.435 49.0133 120.433 49.0132 120.431 49.0131 cv
120.432 49.0132 120.435 49.0134 120.437 49.0135 cv
119.574 49.0128 mo
119.577 49.0126 119.581 49.0124 119.584 49.0122 cv
119.581 49.0124 119.577 49.0126 119.574 49.0128 cv
120.426 49.0128 mo
120.423 49.0127 120.421 49.0125 120.418 49.0124 cv
120.421 49.0125 120.423 49.0127 120.426 49.0128 cv
119.585 49.0122 mo
119.592 49.0117 119.599 49.0113 119.607 49.0109 cv
119.599 49.0113 119.592 49.0117 119.585 49.0122 cv
120.415 49.0122 mo
120.408 49.0117 120.401 49.0113 120.393 49.0109 cv
120.401 49.0113 120.408 49.0117 120.415 49.0122 cv
119.607 49.0109 mo
119.611 49.0107 119.614 49.0105 119.618 49.0103 cv
119.614 49.0105 119.611 49.0107 119.607 49.0109 cv
120.391 49.0108 mo
120.388 49.0106 120.385 49.0105 120.382 49.0103 cv
120.385 49.0105 120.388 49.0106 120.391 49.0108 cv
119.62 49.0102 mo
119.623 49.01 119.626 49.0099 119.629 49.0097 cv
119.626 49.0099 119.623 49.01 119.62 49.0102 cv
120.379 49.0101 mo
120.376 49.01 120.374 49.0099 120.371 49.0097 cv
120.374 49.0099 120.376 49.01 120.379 49.0101 cv
119.631 49.0096 mo
119.634 49.0094 119.637 49.0093 119.64 49.0092 cv
119.637 49.0093 119.634 49.0094 119.631 49.0096 cv
120.368 49.0096 mo
120.365 49.0094 120.363 49.0093 120.36 49.0092 cv
120.363 49.0093 120.366 49.0094 120.368 49.0096 cv
119.643 49.009 mo
119.645 49.0089 119.648 49.0088 119.65 49.0086 cv
119.648 49.0088 119.645 49.0089 119.643 49.009 cv
120.357 49.009 mo
120.355 49.0089 120.352 49.0087 120.35 49.0086 cv
120.352 49.0087 120.354 49.0089 120.357 49.009 cv
119.655 49.0084 mo
119.657 49.0083 119.659 49.0082 119.661 49.0081 cv
119.659 49.0082 119.657 49.0083 119.655 49.0084 cv
120.345 49.0084 mo
120.343 49.0083 120.341 49.0082 120.339 49.0081 cv
120.341 49.0082 120.343 49.0083 120.345 49.0084 cv
119.666 49.0079 mo
119.667 49.0078 119.668 49.0078 119.67 49.0077 cv
119.67 49.0077 li
119.671 49.0076 119.671 49.0076 119.672 49.0076 cv
119.67 49.0077 119.668 49.0078 119.666 49.0079 cv
120.334 49.0079 mo
120.332 49.0078 120.33 49.0077 120.328 49.0076 cv
120.33 49.0077 120.332 49.0078 120.334 49.0079 cv
119.677 49.0074 mo
119.678 49.0073 119.679 49.0073 119.68 49.0072 cv
119.68 49.0072 119.68 49.0072 119.681 49.0072 cv
119.681 49.0072 119.683 49.0071 119.683 49.0071 cv
119.681 49.0072 119.679 49.0073 119.677 49.0074 cv
120.323 49.0074 mo
120.321 49.0073 120.319 49.0072 120.317 49.0071 cv
120.318 49.0071 120.319 49.0072 120.319 49.0072 cv
120.32 49.0072 120.32 49.0072 120.32 49.0072 cv
120.321 49.0073 120.322 49.0073 120.323 49.0074 cv
119.687 49.0069 mo
119.688 49.0068 119.689 49.0068 119.69 49.0068 cv
119.691 49.0067 119.691 49.0067 119.692 49.0067 cv
119.693 49.0067 119.693 49.0066 119.694 49.0066 cv
119.692 49.0067 119.69 49.0068 119.687 49.0069 cv
120.313 49.0069 mo
120.31 49.0068 120.308 49.0067 120.306 49.0066 cv
120.307 49.0066 120.307 49.0067 120.308 49.0067 cv
120.309 49.0067 120.309 49.0067 120.31 49.0068 cv
120.311 49.0068 120.312 49.0069 120.313 49.0069 cv
119.698 49.0064 mo
119.699 49.0064 119.7 49.0063 119.701 49.0063 cv
119.701 49.0063 119.702 49.0063 119.702 49.0062 cv
119.703 49.0062 119.704 49.0062 119.705 49.0061 cv
119.703 49.0062 119.701 49.0063 119.698 49.0064 cv
120.301 49.0064 mo
120.299 49.0063 120.297 49.0062 120.295 49.0061 cv
120.296 49.0062 120.297 49.0062 120.298 49.0062 cv
120.298 49.0063 120.299 49.0063 120.299 49.0063 cv
120.3 49.0063 120.301 49.0064 120.301 49.0064 cv
119.709 49.006 mo
119.71 49.0059 119.711 49.0059 119.711 49.0059 cv
119.712 49.0058 119.713 49.0058 119.713 49.0058 cv
119.714 49.0058 119.715 49.0057 119.716 49.0057 cv
119.714 49.0058 119.711 49.0059 119.709 49.006 cv
120.291 49.006 mo
120.288 49.0059 120.286 49.0058 120.284 49.0057 cv
120.285 49.0057 120.286 49.0058 120.287 49.0058 cv
120.287 49.0058 120.288 49.0059 120.289 49.0059 cv
120.289 49.0059 120.29 49.0059 120.291 49.006 cv
119.72 49.0055 mo
119.721 49.0055 119.721 49.0055 119.722 49.0054 cv
119.723 49.0054 119.724 49.0054 119.724 49.0054 cv
119.725 49.0053 119.726 49.0053 119.727 49.0052 cv
119.725 49.0053 119.723 49.0054 119.72 49.0055 cv
120.28 49.0055 mo
120.277 49.0054 120.275 49.0053 120.273 49.0053 cv
120.274 49.0053 120.275 49.0053 120.276 49.0054 cv
120.276 49.0054 120.277 49.0054 120.278 49.0054 cv
120.279 49.0055 120.279 49.0055 120.28 49.0055 cv
119.731 49.0051 mo
119.732 49.0051 119.732 49.0051 119.733 49.005 cv
119.734 49.005 119.734 49.005 119.735 49.0049 cv
119.736 49.0049 119.737 49.0049 119.738 49.0048 cv
119.736 49.0049 119.733 49.005 119.731 49.0051 cv
120.269 49.0051 mo
120.267 49.005 120.264 49.0049 120.262 49.0049 cv
120.263 49.0049 120.264 49.0049 120.265 49.0049 cv
120.266 49.005 120.267 49.005 120.267 49.005 cv
120.268 49.0051 120.268 49.0051 120.269 49.0051 cv
119.743 49.0047 mo
119.743 49.0047 119.743 49.0046 119.744 49.0046 cv
119.744 49.0046 119.745 49.0046 119.746 49.0046 cv
119.747 49.0045 119.748 49.0045 119.749 49.0045 cv
119.747 49.0045 119.745 49.0046 119.743 49.0047 cv
120.257 49.0047 mo
120.255 49.0046 120.253 49.0045 120.251 49.0045 cv
120.252 49.0045 120.253 49.0045 120.255 49.0046 cv
120.255 49.0046 120.256 49.0046 120.256 49.0046 cv
120.257 49.0046 120.257 49.0047 120.257 49.0047 cv
119.753 49.0043 mo
119.754 49.0043 119.754 49.0043 119.754 49.0043 cv
119.755 49.0042 119.756 49.0042 119.756 49.0042 cv
119.758 49.0041 119.759 49.0041 119.76 49.0041 cv
119.758 49.0041 119.755 49.0042 119.753 49.0043 cv
120.247 49.0043 mo
120.245 49.0042 120.242 49.0041 120.24 49.0041 cv
120.241 49.0041 120.243 49.0041 120.244 49.0042 cv
120.245 49.0042 120.245 49.0042 120.246 49.0043 cv
120.246 49.0043 120.246 49.0043 120.247 49.0043 cv
119.764 49.0039 mo
119.765 49.0039 119.765 49.0039 119.765 49.0039 cv
119.766 49.0039 119.766 49.0039 119.766 49.0038 cv
119.768 49.0038 119.77 49.0037 119.772 49.0037 cv
119.769 49.0038 119.767 49.0038 119.764 49.0039 cv
120.236 49.0039 mo
120.233 49.0038 120.231 49.0038 120.228 49.0037 cv
120.23 49.0037 120.232 49.0038 120.234 49.0038 cv
120.234 49.0039 120.234 49.0039 120.235 49.0039 cv
120.235 49.0039 120.235 49.0039 120.236 49.0039 cv
119.775 49.0036 mo
119.775 49.0036 119.776 49.0035 119.776 49.0035 cv
119.776 49.0035 li
119.779 49.0035 119.781 49.0034 119.783 49.0033 cv
119.78 49.0034 119.778 49.0035 119.775 49.0036 cv
120.225 49.0036 mo
120.222 49.0035 120.22 49.0034 120.217 49.0033 cv
120.219 49.0034 120.222 49.0035 120.224 49.0035 cv
120.224 49.0035 li
120.224 49.0035 120.225 49.0036 120.225 49.0036 cv
119.786 49.0032 mo
119.794 49.003 119.801 49.0028 119.808 49.0026 cv
119.801 49.0028 119.794 49.003 119.786 49.0032 cv
120.214 49.0032 mo
120.206 49.003 120.199 49.0028 120.192 49.0026 cv
120.199 49.0028 120.206 49.003 120.214 49.0032 cv
119.81 49.0025 mo
119.812 49.0025 119.814 49.0024 119.815 49.0024 cv
119.817 49.0024 119.818 49.0023 119.819 49.0023 cv
119.819 49.0023 119.819 49.0023 119.819 49.0023 cv
119.816 49.0024 119.813 49.0025 119.81 49.0025 cv
120.19 49.0025 mo
120.187 49.0025 120.184 49.0024 120.181 49.0023 cv
120.181 49.0023 120.181 49.0023 120.181 49.0023 cv
120.182 49.0023 120.183 49.0024 120.185 49.0024 cv
120.186 49.0024 120.188 49.0025 120.19 49.0025 cv
120.177 49.0022 mo
120.175 49.0022 120.172 49.0021 120.17 49.002 cv
120.17 49.002 li
120.172 49.0021 120.173 49.0021 120.174 49.0021 cv
120.175 49.0022 120.176 49.0022 120.177 49.0022 cv
119.823 49.0022 mo
119.824 49.0022 119.825 49.0022 119.826 49.0021 cv
119.827 49.0021 119.828 49.0021 119.83 49.002 cv
119.83 49.002 li
119.828 49.0021 119.825 49.0022 119.823 49.0022 cv
120.165 49.0019 mo
120.163 49.0019 120.161 49.0018 120.159 49.0018 cv
120.159 49.0018 120.159 49.0018 120.159 49.0018 cv
120.161 49.0018 120.162 49.0019 120.163 49.0019 cv
120.164 49.0019 120.165 49.0019 120.165 49.0019 cv
119.835 49.0019 mo
119.835 49.0019 119.836 49.0019 119.836 49.0019 cv
119.838 49.0019 119.839 49.0018 119.841 49.0018 cv
119.841 49.0018 119.841 49.0018 119.841 49.0018 cv
119.839 49.0018 119.837 49.0019 119.835 49.0019 cv
120.154 49.0017 mo
120.152 49.0016 120.15 49.0016 120.148 49.0015 cv
120.148 49.0015 li
120.15 49.0016 120.152 49.0016 120.153 49.0017 cv
120.154 49.0017 120.154 49.0017 120.154 49.0017 cv
119.846 49.0017 mo
119.846 49.0017 119.846 49.0017 119.847 49.0017 cv
119.848 49.0016 119.85 49.0016 119.852 49.0015 cv
119.852 49.0015 li
119.85 49.0016 119.848 49.0016 119.846 49.0017 cv
120.143 49.0014 mo
120.141 49.0014 120.139 49.0014 120.137 49.0013 cv
120.137 49.0013 120.137 49.0013 120.137 49.0013 cv
120.139 49.0014 120.141 49.0014 120.142 49.0014 cv
120.143 49.0014 120.143 49.0014 120.143 49.0014 cv
119.857 49.0014 mo
119.857 49.0014 119.857 49.0014 119.858 49.0014 cv
119.859 49.0014 119.861 49.0014 119.863 49.0013 cv
119.863 49.0013 119.863 49.0013 119.863 49.0013 cv
119.861 49.0014 119.859 49.0014 119.857 49.0014 cv
120.132 49.0012 mo
120.13 49.0012 120.128 49.0012 120.126 49.0011 cv
120.126 49.0011 li
120.128 49.0012 120.13 49.0012 120.132 49.0012 cv
120.132 49.0012 120.132 49.0012 120.132 49.0012 cv
119.868 49.0012 mo
119.868 49.0012 119.868 49.0012 119.868 49.0012 cv
119.87 49.0012 119.872 49.0012 119.873 49.0011 cv
119.874 49.0011 li
119.872 49.0012 119.87 49.0012 119.868 49.0012 cv
120.121 49.001 mo
120.119 49.001 120.117 49.001 120.115 49.0009 cv
120.115 49.0009 120.115 49.0009 120.115 49.0009 cv
120.117 49.001 120.119 49.001 120.121 49.001 cv
120.121 49.001 120.121 49.001 120.121 49.001 cv
119.879 49.001 mo
119.879 49.001 119.879 49.001 119.879 49.001 cv
119.881 49.001 119.883 49.001 119.885 49.0009 cv
119.885 49.0009 119.885 49.0009 119.885 49.0009 cv
119.883 49.001 119.881 49.001 119.879 49.001 cv
120.11 49.0009 mo
120.108 49.0008 120.106 49.0008 120.104 49.0008 cv
120.104 49.0008 li
120.106 49.0008 120.108 49.0008 120.11 49.0008 cv
120.11 49.0009 120.11 49.0009 120.11 49.0009 cv
119.89 49.0009 mo
119.89 49.0009 119.89 49.0009 119.89 49.0008 cv
119.892 49.0008 119.894 49.0008 119.896 49.0008 cv
119.896 49.0008 li
119.894 49.0008 119.892 49.0008 119.89 49.0009 cv
120.099 49.0007 mo
120.097 49.0007 120.095 49.0006 120.093 49.0006 cv
120.093 49.0006 120.093 49.0006 120.093 49.0006 cv
120.095 49.0006 120.097 49.0007 120.099 49.0007 cv
120.099 49.0007 li
119.901 49.0007 mo
119.901 49.0007 li
119.903 49.0007 119.905 49.0006 119.907 49.0006 cv
119.907 49.0006 119.907 49.0006 119.907 49.0006 cv
119.905 49.0006 119.903 49.0007 119.901 49.0007 cv
120.088 49.0005 mo
120.086 49.0005 120.084 49.0005 120.082 49.0005 cv
120.082 49.0005 li
120.084 49.0005 120.086 49.0005 120.088 49.0005 cv
120.088 49.0005 120.088 49.0005 120.088 49.0005 cv
119.912 49.0005 mo
119.912 49.0005 119.912 49.0005 119.912 49.0005 cv
119.914 49.0005 119.916 49.0005 119.918 49.0005 cv
119.918 49.0005 li
119.916 49.0005 119.914 49.0005 119.912 49.0005 cv
120.077 49.0004 mo
120.075 49.0004 120.073 49.0004 120.071 49.0004 cv
120.071 49.0004 120.071 49.0004 120.071 49.0004 cv
120.073 49.0004 120.075 49.0004 120.077 49.0004 cv
120.077 49.0004 li
119.923 49.0004 mo
119.923 49.0004 li
119.925 49.0004 119.927 49.0004 119.929 49.0004 cv
119.929 49.0004 119.929 49.0004 119.929 49.0004 cv
119.927 49.0004 119.925 49.0004 119.923 49.0004 cv
120.066 49.0003 mo
120.064 49.0003 120.062 49.0003 120.06 49.0003 cv
120.06 49.0003 li
120.062 49.0003 120.064 49.0003 120.066 49.0003 cv
120.066 49.0003 li
119.934 49.0003 mo
119.934 49.0003 li
119.936 49.0003 119.938 49.0003 119.94 49.0003 cv
119.94 49.0003 li
119.938 49.0003 119.936 49.0003 119.934 49.0003 cv
120.055 49.0002 mo
120.053 49.0002 120.051 49.0002 120.049 49.0002 cv
120.049 49.0002 li
120.051 49.0002 120.053 49.0002 120.055 49.0002 cv
120.055 49.0002 li
119.945 49.0002 mo
119.945 49.0002 li
119.947 49.0002 119.949 49.0002 119.951 49.0002 cv
119.951 49.0002 li
119.949 49.0002 119.947 49.0002 119.945 49.0002 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[15.36 0 0 8.64 112.32 6.88 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 32 
/H 18 
/M[32 0 0 -18 0 18 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
i;hgOi@<gehuM^RiA9KohZ2UViB60$h>lLYiC2i.h#QC]iD/M8g]6:`iE,1BgAp1diF(jLg&U(hiG.TW
f`9tkiH+8afDskoiI'qkf)XbriJ$Uuec=Z!iK!:*eH"Q$iKrs4e,\H(iLoW>dfA?+iMl;HdK&6/iNr%S
d/`fFqd&i#iOn^]ciElN"(>SE?M[q1?=.)K@JOBk`Ua)u!.Y~>

%%EndBinary
grestore
np
119.67 49.0077 mo
119.67 49.0077 li
119.67 49.0077 li
119.68 49.0072 mo
119.68 49.0072 119.68 49.0072 119.681 49.0072 cv
119.68 49.0072 119.68 49.0072 119.68 49.0072 cv
120.32 49.0072 mo
120.32 49.0072 120.32 49.0072 120.319 49.0072 cv
120.32 49.0072 120.32 49.0072 120.32 49.0072 cv
119.69 49.0068 mo
119.69 49.0068 119.691 49.0067 119.692 49.0067 cv
119.691 49.0067 119.691 49.0067 119.69 49.0068 cv
120.31 49.0068 mo
120.309 49.0067 120.309 49.0067 120.308 49.0067 cv
120.309 49.0067 120.309 49.0068 120.31 49.0068 cv
119.701 49.0063 mo
119.701 49.0063 119.702 49.0063 119.702 49.0062 cv
119.702 49.0063 119.701 49.0063 119.701 49.0063 cv
120.299 49.0063 mo
120.299 49.0063 120.298 49.0063 120.298 49.0062 cv
120.298 49.0063 120.299 49.0063 120.299 49.0063 cv
119.711 49.0059 mo
119.712 49.0059 119.713 49.0058 119.713 49.0058 cv
119.713 49.0058 119.712 49.0058 119.711 49.0059 cv
120.289 49.0059 mo
120.288 49.0059 120.287 49.0058 120.287 49.0058 cv
120.287 49.0058 120.288 49.0058 120.289 49.0059 cv
119.722 49.0054 mo
119.723 49.0054 119.724 49.0054 119.724 49.0054 cv
119.724 49.0054 119.723 49.0054 119.722 49.0054 cv
120.278 49.0054 mo
120.277 49.0054 120.276 49.0054 120.276 49.0054 cv
120.276 49.0054 120.277 49.0054 120.278 49.0054 cv
119.733 49.005 mo
119.733 49.005 119.734 49.005 119.735 49.0049 cv
119.734 49.005 119.734 49.005 119.733 49.005 cv
120.267 49.005 mo
120.267 49.005 120.266 49.005 120.265 49.0049 cv
120.266 49.005 120.266 49.005 120.267 49.005 cv
119.744 49.0046 mo
119.744 49.0046 119.745 49.0046 119.746 49.0046 cv
119.745 49.0046 119.744 49.0046 119.744 49.0046 cv
120.256 49.0046 mo
120.256 49.0046 120.255 49.0046 120.255 49.0046 cv
120.255 49.0046 120.256 49.0046 120.256 49.0046 cv
119.754 49.0043 mo
119.755 49.0042 119.756 49.0042 119.756 49.0042 cv
119.756 49.0042 119.755 49.0042 119.754 49.0043 cv
120.246 49.0043 mo
120.245 49.0042 120.245 49.0042 120.244 49.0042 cv
120.244 49.0042 120.245 49.0042 120.246 49.0043 cv
119.765 49.0039 mo
119.766 49.0039 119.766 49.0039 119.766 49.0038 cv
119.766 49.0039 119.766 49.0039 119.765 49.0039 cv
120.235 49.0039 mo
120.234 49.0039 120.234 49.0039 120.234 49.0038 cv
120.234 49.0039 120.234 49.0039 120.235 49.0039 cv
119.776 49.0035 mo
119.776 49.0035 119.776 49.0035 119.776 49.0035 cv
119.776 49.0035 li
120.224 49.0035 mo
120.224 49.0035 li
120.224 49.0035 li
119.815 49.0024 mo
119.817 49.0024 119.818 49.0023 119.819 49.0023 cv
119.818 49.0023 119.817 49.0024 119.815 49.0024 cv
120.185 49.0024 mo
120.183 49.0024 120.182 49.0023 120.181 49.0023 cv
120.182 49.0023 120.184 49.0024 120.185 49.0024 cv
120.174 49.0021 mo
120.173 49.0021 120.172 49.0021 120.17 49.002 cv
120.172 49.0021 120.173 49.0021 120.174 49.0021 cv
119.826 49.0021 mo
119.827 49.0021 119.828 49.0021 119.83 49.002 cv
119.828 49.0021 119.827 49.0021 119.826 49.0021 cv
120.163 49.0019 mo
120.162 49.0019 120.161 49.0018 120.159 49.0018 cv
120.161 49.0018 120.162 49.0019 120.163 49.0019 cv
119.836 49.0019 mo
119.838 49.0019 119.839 49.0018 119.841 49.0018 cv
119.839 49.0018 119.838 49.0019 119.836 49.0019 cv
120.153 49.0017 mo
120.152 49.0016 120.15 49.0016 120.148 49.0015 cv
120.15 49.0016 120.152 49.0016 120.153 49.0017 cv
119.847 49.0017 mo
119.848 49.0016 119.85 49.0016 119.852 49.0015 cv
119.85 49.0016 119.848 49.0016 119.847 49.0017 cv
120.142 49.0014 mo
120.141 49.0014 120.139 49.0014 120.137 49.0013 cv
120.139 49.0014 120.141 49.0014 120.142 49.0014 cv
119.858 49.0014 mo
119.859 49.0014 119.861 49.0014 119.863 49.0013 cv
119.861 49.0014 119.859 49.0014 119.858 49.0014 cv
120.132 49.0012 mo
120.13 49.0012 120.128 49.0012 120.126 49.0011 cv
120.128 49.0012 120.13 49.0012 120.132 49.0012 cv
119.868 49.0012 mo
119.87 49.0012 119.872 49.0012 119.873 49.0011 cv
119.872 49.0012 119.87 49.0012 119.868 49.0012 cv
120.121 49.001 mo
120.119 49.001 120.117 49.001 120.115 49.0009 cv
120.117 49.001 120.119 49.001 120.121 49.001 cv
119.879 49.001 mo
119.881 49.001 119.883 49.001 119.885 49.0009 cv
119.883 49.001 119.881 49.001 119.879 49.001 cv
120.11 49.0008 mo
120.108 49.0008 120.106 49.0008 120.104 49.0008 cv
120.106 49.0008 120.108 49.0008 120.11 49.0008 cv
119.89 49.0008 mo
119.892 49.0008 119.894 49.0008 119.896 49.0008 cv
119.894 49.0008 119.892 49.0008 119.89 49.0008 cv
120.099 49.0007 mo
120.097 49.0007 120.095 49.0006 120.093 49.0006 cv
120.095 49.0006 120.097 49.0007 120.099 49.0007 cv
119.901 49.0007 mo
119.903 49.0007 119.905 49.0006 119.907 49.0006 cv
119.905 49.0006 119.903 49.0007 119.901 49.0007 cv
120.088 49.0005 mo
120.086 49.0005 120.084 49.0005 120.082 49.0005 cv
120.084 49.0005 120.086 49.0005 120.088 49.0005 cv
119.912 49.0005 mo
119.914 49.0005 119.916 49.0005 119.918 49.0005 cv
119.916 49.0005 119.914 49.0005 119.912 49.0005 cv
120.077 49.0004 mo
120.075 49.0004 120.073 49.0004 120.071 49.0004 cv
120.073 49.0004 120.075 49.0004 120.077 49.0004 cv
119.923 49.0004 mo
119.925 49.0004 119.927 49.0004 119.929 49.0004 cv
119.927 49.0004 119.925 49.0004 119.923 49.0004 cv
120.066 49.0003 mo
120.064 49.0003 120.062 49.0003 120.06 49.0003 cv
120.062 49.0003 120.064 49.0003 120.066 49.0003 cv
119.934 49.0003 mo
119.936 49.0003 119.938 49.0003 119.94 49.0003 cv
119.938 49.0003 119.936 49.0003 119.934 49.0003 cv
120.055 49.0002 mo
120.053 49.0002 120.051 49.0002 120.049 49.0002 cv
120.051 49.0002 120.053 49.0002 120.055 49.0002 cv
119.945 49.0002 mo
119.947 49.0002 119.949 49.0002 119.951 49.0002 cv
119.949 49.0002 119.947 49.0002 119.945 49.0002 cv
120.044 49.0001 mo
120.042 49.0001 120.04 49.0001 120.038 49.0001 cv
120.04 49.0001 120.042 49.0001 120.044 49.0001 cv
119.956 49.0001 mo
119.958 49.0001 119.96 49.0001 119.962 49.0001 cv
119.96 49.0001 119.958 49.0001 119.956 49.0001 cv
120.033 49.0001 mo
120.031 49.0001 120.029 49.0001 120.026 49 cv
120.029 49.0001 120.031 49.0001 120.033 49.0001 cv
119.967 49.0001 mo
119.969 49.0001 119.971 49.0001 119.974 49 cv
119.971 49.0001 119.969 49.0001 119.967 49.0001 cv
119.978 49 mo
119.98 49 119.983 49 119.985 49 cv
119.983 49 119.98 49 119.978 49 cv
120.022 49 mo
120.02 49 120.017 49 120.015 49 cv
120.017 49 120.02 49 120.022 49 cv
119.989 49 mo
119.993 49 119.996 49 120 49 cv
119.996 49 119.993 49 119.989 49 cv
120.011 49 mo
120.007 49 120.004 49 120 49 cv
120.004 49 120.007 49 120.011 49 cv
gsave
[-5.86748e-07 13.4232 -13.4232 -5.86748e-07 120 46.2813 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~!!!!"!<N<)!sA`1"U5/9#7(SA#mq"I$OdFQ%1WjY%hK9a&J>]i',2/r()Ic((`=20)B0V8*$$%@*ZlIH
+<VgN+sJ6V,U=Z^-71)f-n$Mn.Olr!/1`A)/hSe10JG491,:XA1c.'I2E!KQ3&ioY3]]>a4?Pbi5!D1q
5<qJ"5sdn*6UX=277Ka:7n?0B8P2TJ92&#R9hnGZ:Jakb;,U:j;cH^r<E<.%='/R-=^#!5>?kE=?!^iE
?XI2K@:<VS@q0%[AS#IcB4kmkBkhBuCi!s*DJjB2E,]f:EcQ5BFEDYJG'8(RG^+LZH?spbI!g?jIXZcr
~>
<~!!!$$!sAc3#7(VC$OdIS%hK<c',2/s(Dn#.)]Tk>+!;^N,:"Q^-R^Dn/1iJ-0JP==1c70M3&s#]4?Ykm
5<qM$6UX@47n?3D92&&T:Jand;cHat='/U/>?kH??XR;O@q9._B4u!oCM[j*DfB]:F*)PJGBeCZH[L6j
It3*%K7nr5LPUeEMi<XUO-#KePE_>uQ^F20S"-%@T:hmPUSO``Vl6SpX/rG+YHY:;Za@-K\%&u[]=bhk
^;%J"_Sa=2`lH0Bb0/#RcHjkbdaZguf@\d1gYCWAhr*JQj5f=akNM0qlg4$,n*ol<oCV_Lp\=R\qu$El
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
np
126.975 56.5 mo
126.949 56.1361 126.895 55.7799 126.816 55.4333 cv
126.867 55.4205 126.918 55.4076 126.969 55.3945 cv
126.676 52.0039 123.96 49.2944 120.563 49.0224 cv
124.16 49.3103 127 52.3302 127 56 cv
127 56 li
127 56.169 126.986 56.334 126.975 56.5 cv
113.025 56.5 mo
113.014 56.334 113 56.169 113 56 cv
113 56 li
113 52.3835 115.758 49.3981 119.281 49.0367 cv
115.956 49.3777 113.318 52.0558 113.031 55.3945 cv
113.082 55.4076 113.133 55.4205 113.184 55.4333 cv
113.105 55.7799 113.051 56.1361 113.025 56.5 cv
119.281 49.0367 mo
119.284 49.0363 119.288 49.036 119.291 49.0357 cv
119.287 49.036 119.284 49.0363 119.281 49.0367 cv
119.292 49.0356 mo
119.295 49.0353 119.298 49.0349 119.301 49.0346 cv
119.298 49.0349 119.295 49.0352 119.292 49.0356 cv
119.302 49.0345 mo
119.305 49.0342 119.308 49.0339 119.312 49.0336 cv
119.309 49.0339 119.305 49.0342 119.302 49.0345 cv
119.313 49.0335 mo
119.316 49.0332 119.319 49.0328 119.322 49.0325 cv
119.319 49.0328 119.316 49.0332 119.313 49.0335 cv
119.323 49.0325 mo
119.326 49.0322 119.329 49.0319 119.333 49.0315 cv
119.329 49.0319 119.326 49.0322 119.323 49.0325 cv
119.334 49.0315 mo
119.337 49.0312 119.34 49.0309 119.343 49.0306 cv
119.34 49.0309 119.337 49.0312 119.334 49.0315 cv
119.344 49.0305 mo
119.347 49.0302 119.35 49.0299 119.354 49.0296 cv
119.35 49.0299 119.347 49.0302 119.344 49.0305 cv
119.355 49.0295 mo
119.358 49.0292 119.361 49.0289 119.364 49.0286 cv
119.361 49.0289 119.358 49.0292 119.355 49.0295 cv
119.365 49.0286 mo
119.368 49.0283 119.371 49.028 119.375 49.0277 cv
119.372 49.028 119.368 49.0283 119.365 49.0286 cv
119.375 49.0276 mo
119.389 49.0265 119.402 49.0253 119.415 49.0242 cv
119.402 49.0253 119.389 49.0265 119.375 49.0276 cv
119.417 49.0241 mo
119.419 49.0239 119.422 49.0237 119.424 49.0235 cv
119.422 49.0237 119.419 49.0239 119.417 49.0241 cv
119.428 49.0232 mo
119.43 49.023 119.432 49.0228 119.434 49.0227 cv
119.432 49.0228 119.43 49.023 119.428 49.0232 cv
120.562 49.0223 mo
120.559 49.0221 120.556 49.0219 120.553 49.0216 cv
120.556 49.0219 120.559 49.0221 120.562 49.0223 cv
119.439 49.0223 mo
119.441 49.0221 119.443 49.022 119.445 49.0218 cv
119.443 49.022 119.441 49.0221 119.439 49.0223 cv
120.551 49.0215 mo
120.549 49.0213 120.546 49.0211 120.543 49.0209 cv
120.546 49.0211 120.549 49.0213 120.551 49.0215 cv
119.449 49.0214 mo
119.451 49.0213 119.453 49.0212 119.455 49.021 cv
119.453 49.0211 119.451 49.0213 119.449 49.0214 cv
120.54 49.0206 mo
120.538 49.0205 120.535 49.0203 120.533 49.0201 cv
120.535 49.0203 120.538 49.0205 120.54 49.0206 cv
119.461 49.0206 mo
119.462 49.0205 119.464 49.0203 119.465 49.0202 cv
119.464 49.0203 119.462 49.0205 119.461 49.0206 cv
120.529 49.0198 mo
120.527 49.0197 120.525 49.0195 120.522 49.0193 cv
120.525 49.0195 120.527 49.0196 120.529 49.0198 cv
119.471 49.0198 mo
119.473 49.0196 119.475 49.0195 119.476 49.0194 cv
119.475 49.0195 119.473 49.0196 119.471 49.0198 cv
120.519 49.019 mo
120.516 49.0189 120.514 49.0187 120.512 49.0185 cv
120.514 49.0187 120.516 49.0188 120.519 49.019 cv
119.482 49.019 mo
119.484 49.0188 119.486 49.0187 119.487 49.0186 cv
119.486 49.0187 119.484 49.0188 119.482 49.019 cv
120.508 49.0182 mo
120.506 49.0181 120.503 49.0179 120.501 49.0178 cv
120.504 49.0179 120.505 49.0181 120.508 49.0182 cv
119.493 49.0182 mo
119.495 49.018 119.496 49.0179 119.498 49.0178 cv
119.496 49.0179 119.495 49.0181 119.493 49.0182 cv
120.497 49.0174 mo
120.495 49.0173 120.493 49.0172 120.491 49.017 cv
120.493 49.0172 120.495 49.0173 120.497 49.0174 cv
119.504 49.0174 mo
119.506 49.0173 119.507 49.0172 119.509 49.0171 cv
119.507 49.0172 119.506 49.0173 119.504 49.0174 cv
120.486 49.0167 mo
120.484 49.0165 120.482 49.0164 120.48 49.0163 cv
120.482 49.0164 120.484 49.0166 120.486 49.0167 cv
119.515 49.0166 mo
119.517 49.0165 119.518 49.0164 119.52 49.0163 cv
119.518 49.0164 119.517 49.0165 119.515 49.0166 cv
120.475 49.0159 mo
120.473 49.0158 120.471 49.0157 120.469 49.0155 cv
120.471 49.0157 120.473 49.0158 120.475 49.0159 cv
119.526 49.0159 mo
119.527 49.0158 119.529 49.0157 119.53 49.0156 cv
119.529 49.0157 119.528 49.0158 119.526 49.0159 cv
120.464 49.0152 mo
120.462 49.0151 120.46 49.015 120.458 49.0149 cv
120.46 49.015 120.462 49.0151 120.464 49.0152 cv
119.537 49.0151 mo
119.538 49.0151 119.54 49.015 119.541 49.0149 cv
119.54 49.015 119.538 49.0151 119.537 49.0151 cv
120.452 49.0145 mo
120.451 49.0144 120.449 49.0143 120.448 49.0142 cv
120.449 49.0143 120.451 49.0144 120.452 49.0145 cv
119.549 49.0144 mo
119.55 49.0143 119.551 49.0143 119.552 49.0142 cv
119.551 49.0143 119.55 49.0143 119.549 49.0144 cv
120.441 49.0138 mo
120.44 49.0137 120.438 49.0136 120.437 49.0135 cv
120.438 49.0136 120.44 49.0137 120.441 49.0138 cv
119.56 49.0137 mo
119.561 49.0136 119.562 49.0136 119.563 49.0135 cv
119.562 49.0136 119.561 49.0136 119.56 49.0137 cv
120.431 49.0131 mo
120.429 49.013 120.427 49.0129 120.426 49.0128 cv
120.428 49.0129 120.429 49.013 120.431 49.0131 cv
119.571 49.013 mo
119.572 49.0129 119.573 49.0129 119.574 49.0128 cv
119.573 49.0129 119.572 49.0129 119.571 49.013 cv
120.418 49.0124 mo
120.417 49.0123 120.416 49.0122 120.415 49.0122 cv
120.416 49.0122 120.417 49.0123 120.418 49.0124 cv
119.584 49.0122 mo
119.585 49.0122 li
119.584 49.0122 li
120.393 49.0109 mo
120.393 49.0109 120.391 49.0108 120.391 49.0108 cv
120.391 49.0108 120.393 49.0109 120.393 49.0109 cv
119.607 49.0109 mo
119.607 49.0109 119.607 49.0109 119.607 49.0109 cv
119.607 49.0109 119.607 49.0109 119.607 49.0109 cv
120.382 49.0103 mo
120.381 49.0103 120.38 49.0102 120.379 49.0101 cv
120.38 49.0102 120.381 49.0103 120.382 49.0103 cv
119.618 49.0103 mo
119.618 49.0103 119.619 49.0102 119.62 49.0102 cv
119.619 49.0102 119.619 49.0103 119.618 49.0103 cv
120.371 49.0097 mo
120.37 49.0097 120.369 49.0096 120.368 49.0096 cv
120.369 49.0096 120.37 49.0097 120.371 49.0097 cv
119.629 49.0097 mo
119.63 49.0097 119.63 49.0096 119.631 49.0096 cv
119.631 49.0096 119.63 49.0097 119.629 49.0097 cv
120.36 49.0092 mo
120.359 49.0091 120.358 49.0091 120.357 49.009 cv
120.358 49.009 120.359 49.0091 120.36 49.0092 cv
119.64 49.0092 mo
119.641 49.0091 119.642 49.0091 119.643 49.009 cv
119.642 49.0091 119.641 49.0091 119.64 49.0092 cv
120.35 49.0086 mo
120.348 49.0086 120.347 49.0085 120.345 49.0084 cv
120.347 49.0085 120.348 49.0085 120.35 49.0086 cv
119.65 49.0086 mo
119.652 49.0086 119.653 49.0085 119.655 49.0084 cv
119.653 49.0085 119.652 49.0086 119.65 49.0086 cv
120.339 49.0081 mo
120.337 49.008 120.336 49.0079 120.334 49.0079 cv
120.336 49.0079 120.338 49.008 120.339 49.0081 cv
119.661 49.0081 mo
119.663 49.008 119.664 49.008 119.666 49.0079 cv
119.664 49.008 119.663 49.008 119.661 49.0081 cv
120.328 49.0076 mo
120.326 49.0075 120.325 49.0074 120.323 49.0074 cv
120.325 49.0074 120.326 49.0075 120.328 49.0076 cv
119.672 49.0076 mo
119.674 49.0075 119.675 49.0075 119.677 49.0074 cv
119.675 49.0074 119.673 49.0075 119.672 49.0076 cv
120.317 49.0071 mo
120.315 49.007 120.314 49.007 120.313 49.0069 cv
120.314 49.007 120.315 49.007 120.317 49.0071 cv
119.683 49.0071 mo
119.685 49.007 119.686 49.007 119.687 49.0069 cv
119.686 49.007 119.685 49.007 119.683 49.0071 cv
120.306 49.0066 mo
120.305 49.0065 120.303 49.0065 120.301 49.0064 cv
120.303 49.0065 120.304 49.0065 120.306 49.0066 cv
119.694 49.0066 mo
119.696 49.0065 119.697 49.0065 119.698 49.0064 cv
119.697 49.0065 119.695 49.0065 119.694 49.0066 cv
120.295 49.0061 mo
120.294 49.0061 120.292 49.006 120.291 49.006 cv
120.292 49.006 120.293 49.0061 120.295 49.0061 cv
119.705 49.0061 mo
119.707 49.0061 119.708 49.006 119.709 49.006 cv
119.708 49.006 119.707 49.0061 119.705 49.0061 cv
120.284 49.0057 mo
120.283 49.0056 120.281 49.0056 120.28 49.0055 cv
120.281 49.0056 120.282 49.0056 120.284 49.0057 cv
119.716 49.0057 mo
119.717 49.0056 119.719 49.0056 119.72 49.0055 cv
119.719 49.0056 119.717 49.0056 119.716 49.0057 cv
120.273 49.0053 mo
120.271 49.0052 120.27 49.0051 120.269 49.0051 cv
120.27 49.0051 120.272 49.0052 120.273 49.0053 cv
119.727 49.0052 mo
119.729 49.0052 119.73 49.0051 119.731 49.0051 cv
119.73 49.0051 119.728 49.0052 119.727 49.0052 cv
120.262 49.0049 mo
120.261 49.0048 120.259 49.0047 120.257 49.0047 cv
120.259 49.0047 120.261 49.0048 120.262 49.0049 cv
119.738 49.0048 mo
119.739 49.0048 119.741 49.0047 119.743 49.0047 cv
119.741 49.0047 119.739 49.0048 119.738 49.0048 cv
120.251 49.0045 mo
120.25 49.0044 120.248 49.0043 120.247 49.0043 cv
120.248 49.0043 120.25 49.0044 120.251 49.0045 cv
119.749 49.0045 mo
119.75 49.0044 119.752 49.0043 119.753 49.0043 cv
119.752 49.0043 119.75 49.0044 119.749 49.0045 cv
120.24 49.0041 mo
120.239 49.004 120.237 49.004 120.236 49.0039 cv
120.237 49.004 120.239 49.004 120.24 49.0041 cv
119.76 49.0041 mo
119.761 49.004 119.763 49.004 119.764 49.0039 cv
119.763 49.004 119.761 49.004 119.76 49.0041 cv
120.228 49.0037 mo
120.227 49.0036 120.226 49.0036 120.225 49.0036 cv
120.226 49.0036 120.227 49.0036 120.228 49.0037 cv
119.772 49.0037 mo
119.773 49.0036 119.774 49.0036 119.775 49.0036 cv
119.774 49.0036 119.773 49.0036 119.772 49.0037 cv
120.217 49.0033 mo
120.216 49.0033 120.215 49.0033 120.214 49.0032 cv
120.215 49.0032 120.216 49.0033 120.217 49.0033 cv
119.783 49.0033 mo
119.784 49.0033 119.785 49.0032 119.786 49.0032 cv
119.785 49.0033 119.784 49.0033 119.783 49.0033 cv
120.192 49.0026 mo
120.191 49.0026 120.19 49.0026 120.19 49.0025 cv
120.19 49.0026 120.191 49.0026 120.192 49.0026 cv
119.808 49.0026 mo
119.809 49.0026 119.81 49.0026 119.81 49.0025 cv
119.81 49.0026 119.809 49.0026 119.808 49.0026 cv
120.181 49.0023 mo
120.179 49.0023 120.178 49.0022 120.177 49.0022 cv
120.178 49.0022 120.179 49.0023 120.181 49.0023 cv
119.819 49.0023 mo
119.821 49.0023 119.821 49.0022 119.823 49.0022 cv
119.822 49.0022 119.821 49.0023 119.819 49.0023 cv
119.83 49.002 mo
119.832 49.002 119.833 49.002 119.835 49.0019 cv
119.833 49.002 119.832 49.002 119.83 49.002 cv
120.17 49.002 mo
120.168 49.002 120.167 49.002 120.165 49.0019 cv
120.167 49.002 120.168 49.002 120.17 49.002 cv
119.841 49.0018 mo
119.843 49.0017 119.844 49.0017 119.846 49.0017 cv
119.844 49.0017 119.843 49.0017 119.841 49.0018 cv
120.159 49.0018 mo
120.157 49.0017 120.156 49.0017 120.154 49.0017 cv
120.156 49.0017 120.157 49.0017 120.159 49.0018 cv
119.852 49.0015 mo
119.854 49.0015 119.855 49.0015 119.857 49.0014 cv
119.855 49.0015 119.854 49.0015 119.852 49.0015 cv
120.148 49.0015 mo
120.146 49.0015 120.145 49.0015 120.143 49.0014 cv
120.145 49.0015 120.146 49.0015 120.148 49.0015 cv
119.863 49.0013 mo
119.865 49.0013 119.866 49.0013 119.868 49.0012 cv
119.866 49.0013 119.865 49.0013 119.863 49.0013 cv
120.137 49.0013 mo
120.135 49.0013 120.134 49.0013 120.132 49.0012 cv
120.134 49.0013 120.135 49.0013 120.137 49.0013 cv
119.874 49.0011 mo
119.876 49.0011 119.877 49.0011 119.879 49.001 cv
119.877 49.0011 119.876 49.0011 119.874 49.0011 cv
120.126 49.0011 mo
120.124 49.0011 120.123 49.0011 120.121 49.001 cv
120.123 49.0011 120.124 49.0011 120.126 49.0011 cv
119.885 49.0009 mo
119.887 49.0009 119.888 49.0009 119.89 49.0009 cv
119.888 49.0009 119.886 49.0009 119.885 49.0009 cv
120.115 49.0009 mo
120.114 49.0009 120.112 49.0009 120.11 49.0009 cv
120.112 49.0009 120.113 49.0009 120.115 49.0009 cv
119.896 49.0008 mo
119.898 49.0007 119.899 49.0007 119.901 49.0007 cv
119.899 49.0007 119.898 49.0007 119.896 49.0008 cv
120.104 49.0008 mo
120.102 49.0007 120.101 49.0007 120.099 49.0007 cv
120.101 49.0007 120.102 49.0007 120.104 49.0008 cv
119.907 49.0006 mo
119.909 49.0006 119.91 49.0006 119.912 49.0005 cv
119.91 49.0006 119.909 49.0006 119.907 49.0006 cv
120.093 49.0006 mo
120.091 49.0006 120.09 49.0006 120.088 49.0005 cv
120.09 49.0006 120.091 49.0006 120.093 49.0006 cv
119.918 49.0005 mo
119.919 49.0005 119.921 49.0004 119.923 49.0004 cv
119.921 49.0004 119.92 49.0005 119.918 49.0005 cv
120.082 49.0005 mo
120.08 49.0005 120.079 49.0004 120.077 49.0004 cv
120.079 49.0004 120.081 49.0005 120.082 49.0005 cv
119.929 49.0004 mo
119.931 49.0003 119.932 49.0003 119.934 49.0003 cv
119.932 49.0003 119.931 49.0003 119.929 49.0004 cv
120.071 49.0004 mo
120.069 49.0003 120.068 49.0003 120.066 49.0003 cv
120.068 49.0003 120.069 49.0003 120.071 49.0004 cv
119.94 49.0003 mo
119.942 49.0002 119.943 49.0002 119.945 49.0002 cv
119.943 49.0002 119.942 49.0002 119.94 49.0003 cv
120.06 49.0003 mo
120.058 49.0002 120.057 49.0002 120.055 49.0002 cv
120.057 49.0002 120.058 49.0002 120.06 49.0003 cv
119.951 49.0002 mo
119.953 49.0002 119.954 49.0001 119.956 49.0001 cv
119.954 49.0001 119.953 49.0002 119.951 49.0002 cv
120.049 49.0002 mo
120.047 49.0002 120.046 49.0001 120.044 49.0001 cv
120.046 49.0001 120.047 49.0002 120.049 49.0002 cv
119.962 49.0001 mo
119.963 49.0001 119.965 49.0001 119.967 49.0001 cv
119.965 49.0001 119.964 49.0001 119.962 49.0001 cv
120.038 49.0001 mo
120.036 49.0001 120.035 49.0001 120.033 49.0001 cv
120.035 49.0001 120.037 49.0001 120.038 49.0001 cv
119.974 49 mo
119.975 49 119.976 49 119.978 49 cv
119.977 49 119.975 49 119.974 49 cv
120.026 49 mo
120.025 49 120.023 49 120.022 49 cv
120.023 49 120.025 49 120.026 49 cv
120.015 49 mo
120.013 49 120.012 49 120.011 49 cv
120.012 49 120.014 49 120.015 49 cv
119.985 49 mo
119.986 49 119.988 49 119.989 49 cv
119.988 49 119.987 49 119.985 49 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[15.36 0 0 8.64 112.32 6.88 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 32 
/H 18 
/M[32 0 0 -18 0 18 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
i;hgniFq3NhuM^riH!rYhZ2UuiHsVch>lM$iIp:mh#QD(iK!%#g]6;+iKr^-gAp2/iLoB7g&U)3iMu,B
f`9u6iNqeLfDsl:iOnIVf)Xc=iPk-`ec=ZAiQplkeH"QEiRmPue,\HHiSj5*dfA?LiTot5dK&6PiUlX?
d/`ffqgJ*ciVi<IciElk"atcFH?jf8GQrG=H@($fIeeKPs766Z!.Y~>

%%EndBinary
grestore
np
113.184 55.4333 mo
113.133 55.4205 113.082 55.4076 113.031 55.3945 cv
113.318 52.0558 115.956 49.3777 119.281 49.0367 cv
119.281 49.0367 119.281 49.0367 119.281 49.0367 cv
119.284 49.0363 119.287 49.036 119.291 49.0357 cv
119.291 49.0356 119.291 49.0356 119.292 49.0356 cv
119.295 49.0352 119.298 49.0349 119.301 49.0346 cv
119.302 49.0346 119.302 49.0346 119.302 49.0345 cv
119.305 49.0342 119.309 49.0339 119.312 49.0336 cv
119.312 49.0335 119.312 49.0335 119.313 49.0335 cv
119.316 49.0332 119.319 49.0328 119.322 49.0325 cv
119.323 49.0325 li
119.326 49.0322 119.329 49.0319 119.333 49.0315 cv
119.333 49.0315 119.333 49.0315 119.334 49.0315 cv
119.337 49.0312 119.34 49.0309 119.343 49.0306 cv
119.344 49.0305 119.344 49.0305 119.344 49.0305 cv
119.347 49.0302 119.35 49.0299 119.354 49.0296 cv
119.354 49.0295 119.355 49.0295 119.355 49.0295 cv
119.358 49.0292 119.361 49.0289 119.364 49.0286 cv
119.365 49.0286 li
119.368 49.0283 119.372 49.028 119.375 49.0277 cv
119.375 49.0277 119.375 49.0276 119.375 49.0276 cv
119.389 49.0265 119.402 49.0253 119.415 49.0242 cv
119.416 49.0242 119.416 49.0241 119.417 49.0241 cv
119.419 49.0239 119.422 49.0237 119.424 49.0235 cv
119.425 49.0234 119.427 49.0233 119.428 49.0232 cv
119.43 49.023 119.432 49.0228 119.434 49.0227 cv
119.436 49.0225 119.437 49.0224 119.439 49.0223 cv
119.441 49.0221 119.443 49.022 119.445 49.0218 cv
119.446 49.0217 119.448 49.0216 119.449 49.0214 cv
119.451 49.0213 119.453 49.0211 119.455 49.021 cv
119.457 49.0209 119.459 49.0207 119.461 49.0206 cv
119.462 49.0205 119.464 49.0203 119.465 49.0202 cv
119.467 49.0201 119.469 49.0199 119.471 49.0198 cv
119.473 49.0196 119.475 49.0195 119.476 49.0194 cv
119.478 49.0192 119.48 49.0191 119.482 49.019 cv
119.484 49.0188 119.486 49.0187 119.487 49.0186 cv
119.489 49.0184 119.491 49.0183 119.493 49.0182 cv
119.495 49.0181 119.496 49.0179 119.498 49.0178 cv
119.5 49.0177 119.502 49.0175 119.504 49.0174 cv
119.506 49.0173 119.507 49.0172 119.509 49.0171 cv
119.511 49.0169 119.513 49.0168 119.515 49.0166 cv
119.517 49.0165 119.518 49.0164 119.52 49.0163 cv
119.522 49.0162 119.524 49.016 119.526 49.0159 cv
119.528 49.0158 119.529 49.0157 119.53 49.0156 cv
119.533 49.0154 119.535 49.0153 119.537 49.0151 cv
119.538 49.0151 119.54 49.015 119.541 49.0149 cv
119.543 49.0147 119.546 49.0145 119.549 49.0144 cv
119.55 49.0143 119.551 49.0143 119.552 49.0142 cv
119.555 49.014 119.557 49.0139 119.56 49.0137 cv
119.561 49.0136 119.562 49.0136 119.563 49.0135 cv
119.565 49.0133 119.568 49.0132 119.571 49.013 cv
119.572 49.0129 119.573 49.0129 119.574 49.0128 cv
119.577 49.0126 119.581 49.0124 119.584 49.0122 cv
119.585 49.0122 li
119.592 49.0117 119.599 49.0113 119.607 49.0109 cv
119.607 49.0109 119.607 49.0109 119.607 49.0109 cv
119.611 49.0107 119.614 49.0105 119.618 49.0103 cv
119.619 49.0103 119.619 49.0102 119.62 49.0102 cv
119.623 49.01 119.626 49.0099 119.629 49.0097 cv
119.63 49.0097 119.631 49.0096 119.631 49.0096 cv
119.634 49.0094 119.637 49.0093 119.64 49.0092 cv
119.641 49.0091 119.642 49.0091 119.643 49.009 cv
119.645 49.0089 119.648 49.0088 119.65 49.0086 cv
119.652 49.0086 119.653 49.0085 119.655 49.0084 cv
119.657 49.0083 119.659 49.0082 119.661 49.0081 cv
119.663 49.008 119.664 49.008 119.666 49.0079 cv
119.668 49.0078 119.67 49.0077 119.672 49.0076 cv
119.673 49.0075 119.675 49.0074 119.677 49.0074 cv
119.679 49.0073 119.681 49.0072 119.683 49.0071 cv
119.685 49.007 119.686 49.007 119.687 49.0069 cv
119.69 49.0068 119.692 49.0067 119.694 49.0066 cv
119.695 49.0065 119.697 49.0065 119.698 49.0064 cv
119.701 49.0063 119.703 49.0062 119.705 49.0061 cv
119.707 49.0061 119.708 49.006 119.709 49.006 cv
119.711 49.0059 119.714 49.0058 119.716 49.0057 cv
119.717 49.0056 119.719 49.0056 119.72 49.0055 cv
119.723 49.0054 119.725 49.0053 119.727 49.0052 cv
119.728 49.0052 119.73 49.0051 119.731 49.0051 cv
119.733 49.005 119.736 49.0049 119.738 49.0048 cv
119.739 49.0048 119.741 49.0047 119.743 49.0047 cv
119.745 49.0046 119.747 49.0045 119.749 49.0045 cv
119.75 49.0044 119.752 49.0043 119.753 49.0043 cv
119.755 49.0042 119.758 49.0041 119.76 49.0041 cv
119.761 49.004 119.763 49.004 119.764 49.0039 cv
119.767 49.0038 119.769 49.0038 119.772 49.0037 cv
119.773 49.0036 119.774 49.0036 119.775 49.0036 cv
119.778 49.0035 119.78 49.0034 119.783 49.0033 cv
119.784 49.0033 119.785 49.0033 119.786 49.0032 cv
119.794 49.003 119.801 49.0028 119.808 49.0026 cv
119.809 49.0026 119.81 49.0026 119.81 49.0025 cv
119.813 49.0025 119.816 49.0024 119.819 49.0023 cv
119.821 49.0023 119.822 49.0022 119.823 49.0022 cv
119.825 49.0022 119.828 49.0021 119.83 49.002 cv
119.832 49.002 119.833 49.002 119.835 49.0019 cv
119.837 49.0019 119.839 49.0018 119.841 49.0018 cv
119.843 49.0017 119.844 49.0017 119.846 49.0017 cv
119.848 49.0016 119.85 49.0016 119.852 49.0015 cv
119.854 49.0015 119.855 49.0015 119.857 49.0014 cv
119.859 49.0014 119.861 49.0014 119.863 49.0013 cv
119.865 49.0013 119.866 49.0013 119.868 49.0012 cv
119.87 49.0012 119.872 49.0012 119.874 49.0011 cv
119.876 49.0011 119.877 49.0011 119.879 49.001 cv
119.881 49.001 119.883 49.001 119.885 49.0009 cv
119.886 49.0009 119.888 49.0009 119.89 49.0009 cv
119.892 49.0008 119.894 49.0008 119.896 49.0008 cv
119.898 49.0007 119.899 49.0007 119.901 49.0007 cv
119.903 49.0007 119.905 49.0006 119.907 49.0006 cv
119.909 49.0006 119.91 49.0006 119.912 49.0005 cv
119.914 49.0005 119.916 49.0005 119.918 49.0005 cv
119.92 49.0005 119.921 49.0004 119.923 49.0004 cv
119.925 49.0004 119.927 49.0004 119.929 49.0004 cv
119.931 49.0003 119.932 49.0003 119.934 49.0003 cv
119.936 49.0003 119.938 49.0003 119.94 49.0003 cv
119.942 49.0002 119.943 49.0002 119.945 49.0002 cv
119.947 49.0002 119.949 49.0002 119.951 49.0002 cv
119.953 49.0002 119.954 49.0001 119.956 49.0001 cv
119.958 49.0001 119.96 49.0001 119.962 49.0001 cv
119.964 49.0001 119.965 49.0001 119.967 49.0001 cv
119.969 49.0001 119.971 49.0001 119.974 49 cv
119.975 49 119.977 49 119.978 49 cv
119.98 49 119.983 49 119.985 49 cv
119.987 49 119.988 49 119.989 49 cv
119.993 49 119.996 49 120 49 cv
120.004 49 120.007 49 120.011 49 cv
120.012 49 120.013 49 120.015 49 cv
120.017 49 120.02 49 120.022 49 cv
120.023 49 120.025 49 120.026 49 cv
120.029 49.0001 120.031 49.0001 120.033 49.0001 cv
120.035 49.0001 120.036 49.0001 120.038 49.0001 cv
120.04 49.0001 120.042 49.0001 120.044 49.0001 cv
120.046 49.0001 120.047 49.0002 120.049 49.0002 cv
120.051 49.0002 120.053 49.0002 120.055 49.0002 cv
120.057 49.0002 120.058 49.0002 120.06 49.0003 cv
120.062 49.0003 120.064 49.0003 120.066 49.0003 cv
120.068 49.0003 120.069 49.0003 120.071 49.0004 cv
120.073 49.0004 120.075 49.0004 120.077 49.0004 cv
120.079 49.0004 120.08 49.0005 120.082 49.0005 cv
120.084 49.0005 120.086 49.0005 120.088 49.0005 cv
120.09 49.0006 120.091 49.0006 120.093 49.0006 cv
120.095 49.0006 120.097 49.0007 120.099 49.0007 cv
120.101 49.0007 120.102 49.0007 120.104 49.0008 cv
120.106 49.0008 120.108 49.0008 120.11 49.0009 cv
120.112 49.0009 120.114 49.0009 120.115 49.0009 cv
120.117 49.001 120.119 49.001 120.121 49.001 cv
120.123 49.0011 120.124 49.0011 120.126 49.0011 cv
120.128 49.0012 120.13 49.0012 120.132 49.0012 cv
120.134 49.0013 120.135 49.0013 120.137 49.0013 cv
120.139 49.0014 120.141 49.0014 120.143 49.0014 cv
120.145 49.0015 120.146 49.0015 120.148 49.0015 cv
120.15 49.0016 120.152 49.0016 120.154 49.0017 cv
120.156 49.0017 120.157 49.0017 120.159 49.0018 cv
120.161 49.0018 120.163 49.0019 120.165 49.0019 cv
120.167 49.002 120.168 49.002 120.17 49.002 cv
120.172 49.0021 120.175 49.0022 120.177 49.0022 cv
120.178 49.0022 120.179 49.0023 120.181 49.0023 cv
120.184 49.0024 120.187 49.0025 120.19 49.0025 cv
120.19 49.0026 120.191 49.0026 120.192 49.0026 cv
120.199 49.0028 120.206 49.003 120.214 49.0032 cv
120.215 49.0033 120.216 49.0033 120.217 49.0033 cv
120.22 49.0034 120.222 49.0035 120.225 49.0036 cv
120.226 49.0036 120.227 49.0036 120.228 49.0037 cv
120.231 49.0038 120.233 49.0038 120.236 49.0039 cv
120.237 49.004 120.239 49.004 120.24 49.0041 cv
120.242 49.0041 120.245 49.0042 120.247 49.0043 cv
120.248 49.0043 120.25 49.0044 120.251 49.0045 cv
120.253 49.0045 120.255 49.0046 120.257 49.0047 cv
120.259 49.0047 120.261 49.0048 120.262 49.0049 cv
120.264 49.0049 120.267 49.005 120.269 49.0051 cv
120.27 49.0051 120.271 49.0052 120.273 49.0053 cv
120.275 49.0053 120.277 49.0054 120.28 49.0055 cv
120.281 49.0056 120.283 49.0056 120.284 49.0057 cv
120.286 49.0058 120.288 49.0059 120.291 49.006 cv
120.292 49.006 120.294 49.0061 120.295 49.0061 cv
120.297 49.0062 120.299 49.0063 120.301 49.0064 cv
120.303 49.0065 120.305 49.0065 120.306 49.0066 cv
120.308 49.0067 120.31 49.0068 120.313 49.0069 cv
120.314 49.007 120.315 49.007 120.317 49.0071 cv
120.319 49.0072 120.321 49.0073 120.323 49.0074 cv
120.325 49.0074 120.326 49.0075 120.328 49.0076 cv
120.33 49.0077 120.332 49.0078 120.334 49.0079 cv
120.336 49.0079 120.337 49.008 120.339 49.0081 cv
120.341 49.0082 120.343 49.0083 120.345 49.0084 cv
120.347 49.0085 120.348 49.0086 120.35 49.0086 cv
120.352 49.0087 120.355 49.0089 120.357 49.009 cv
120.358 49.0091 120.359 49.0091 120.36 49.0092 cv
120.363 49.0093 120.365 49.0094 120.368 49.0096 cv
120.369 49.0096 120.37 49.0097 120.371 49.0097 cv
120.374 49.0099 120.376 49.01 120.379 49.0101 cv
120.38 49.0102 120.381 49.0103 120.382 49.0103 cv
120.385 49.0105 120.388 49.0106 120.391 49.0108 cv
120.391 49.0108 120.393 49.0109 120.393 49.0109 cv
120.401 49.0113 120.408 49.0117 120.415 49.0122 cv
120.416 49.0122 120.417 49.0123 120.418 49.0124 cv
120.421 49.0125 120.423 49.0127 120.426 49.0128 cv
120.427 49.0129 120.429 49.013 120.431 49.0131 cv
120.433 49.0132 120.435 49.0133 120.437 49.0135 cv
120.438 49.0136 120.44 49.0137 120.441 49.0138 cv
120.444 49.0139 120.446 49.014 120.448 49.0142 cv
120.449 49.0143 120.451 49.0144 120.452 49.0145 cv
120.455 49.0146 120.456 49.0147 120.458 49.0149 cv
120.46 49.015 120.462 49.0151 120.464 49.0152 cv
120.466 49.0153 120.467 49.0154 120.469 49.0155 cv
120.471 49.0157 120.473 49.0158 120.475 49.0159 cv
120.477 49.0161 120.478 49.0162 120.48 49.0163 cv
120.482 49.0164 120.484 49.0165 120.486 49.0167 cv
120.487 49.0168 120.489 49.0169 120.491 49.017 cv
120.493 49.0172 120.495 49.0173 120.497 49.0174 cv
120.498 49.0175 120.5 49.0177 120.501 49.0178 cv
120.503 49.0179 120.506 49.0181 120.508 49.0182 cv
120.509 49.0183 120.511 49.0184 120.512 49.0185 cv
120.514 49.0187 120.516 49.0189 120.519 49.019 cv
120.52 49.0191 120.521 49.0192 120.522 49.0193 cv
120.525 49.0195 120.527 49.0197 120.529 49.0198 cv
120.531 49.0199 120.532 49.02 120.533 49.0201 cv
120.535 49.0203 120.538 49.0205 120.54 49.0206 cv
120.541 49.0207 120.542 49.0208 120.543 49.0209 cv
120.546 49.0211 120.549 49.0213 120.551 49.0215 cv
120.552 49.0216 120.552 49.0216 120.553 49.0216 cv
120.556 49.0219 120.559 49.0221 120.562 49.0223 cv
120.562 49.0224 120.563 49.0224 120.563 49.0224 cv
123.96 49.2944 126.676 52.0039 126.969 55.3945 cv
126.918 55.4076 126.867 55.4205 126.816 55.4333 cv
126.103 52.3256 123.321 50 120 50 cv
116.679 50 113.897 52.3256 113.184 55.4333 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[15.36 0 0 7.68 112.32 7.84 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 32 
/H 16 
/M[32 0 0 -16 0 16 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
i;hgCi=Y&LhuM^Di>:MShZ2UFi>ptZh>lLIi?[Lbh#QCLi@F$jg]6:NiAB]tgAp1RiB6<(g&U(ViCE,4
f`9tZiDJk?fDsk_iEPUJf)XbciFhKWec=YiiH+AdeH"PniIL=re,\GtiJm:+dfA?$iLKB;dK&6+iN)JK
nGn(~>

%%EndBinary
grestore
np
124 55.999 mo
124 54.4678 123.127 53.1504 121.859 52.4785 cv
121.266 54.4648 li
121.711 54.832 122 55.3789 122 55.999 cv
122 57.1045 121.104 58 120 58 cv
118.898 58 118 57.1045 118 55.999 cv
118 55.4443 118.229 54.9414 118.596 54.5791 cv
120.018 55.999 li
120.018 52 li
116.016 52 li
117.18 53.165 li
116.451 53.8877 115.998 54.8916 115.998 55.999 cv
115.998 58.209 117.791 60 120 60 cv
122.209 60 124 58.209 124 55.999 cv
cp
0 0 0 1 cmyk
f
42.4187 63 mo
6.00001 63 li
3.25022 63 1.01152 60.5894 1.00006 57.6224 cv
1.00006 57.6228 1.00006 57.6232 1.00006 57.6237 cv
1.00007 57.6249 1.00007 57.6261 1.00008 57.6274 cv
1.00009 57.6287 1.00009 57.6301 1.0001 57.6315 cv
1.00011 57.633 1.00012 57.634 1.00012 57.6354 cv
1.00013 57.6367 1.00014 57.6379 1.00015 57.6391 cv
1.00016 57.6407 1.00017 57.6422 1.00018 57.6438 cv
1.00018 57.6441 1.00019 57.6444 1.00019 57.6447 cv
1.00024 57.6516 1.00031 57.6586 1.00039 57.6654 cv
1.00039 57.6656 1.00039 57.666 1.0004 57.6661 cv
1.00042 57.6684 1.00045 57.6709 1.00048 57.6732 cv
1.00048 57.6733 li
1.03755 60.5809 3.26525 62.9336 6.00001 62.9336 cv
11.2871 62.9336 li
11.1045 61.9707 11 60.9941 11 60 cv
11 54.2256 14.1789 48.9317 19.4642 44.7998 cv
32.3202 44.7998 li
32.1102 45.834 32 46.9041 32 48 cv
32 54.8734 36.333 60.7352 42.4187 63 cv
1.00005 57.6206 mo
1.00004 57.6188 1.00004 57.6171 1.00003 57.6152 cv
1.00003 57.6154 1.00003 57.6155 1.00004 57.6157 cv
1.00004 57.6168 1.00004 57.6178 1.00005 57.6189 cv
1.00005 57.6195 1.00005 57.62 1.00005 57.6206 cv
1.00003 57.6113 mo
1.00002 57.6102 1.00002 57.6087 1.00002 57.6076 cv
1.00002 57.6078 1.00002 57.6075 1.00002 57.6077 cv
1.00002 57.6086 1.00002 57.6093 1.00002 57.6102 cv
1.00002 57.6105 1.00002 57.6109 1.00003 57.6113 cv
1.00001 57.5996 mo
1.00001 57.5996 li
1.00001 49.0664 li
1.00001 46.0889 3.24315 43.667 6.00001 43.667 cv
32.5939 43.667 li
32.5877 43.6888 32.5814 43.7116 32.5754 43.7334 cv
20.9121 43.7334 li
20.9121 43.7334 li
6.00001 43.7334 li
3.24219 43.7334 1.00001 46.126 1.00001 49.0664 cv
1.00001 57.5996 li
gsave
[19.6066 0 0 19.6066 39.5576 60.8271 ]ct
clp
/0 /Gradient get_res exec grestore
np
50 42.667 mo
6.00001 42.667 li
2.69921 42.667 0 45.5459 0 49.0664 cv
0 57.5996 li
0 61.1191 2.69921 64 6.00001 64 cv
50 64 li
53.2988 64 56 61.1191 56 57.5996 cv
56 49.0664 li
56 45.5459 53.2988 42.667 50 42.667 cv
50 43.667 mo
52.7568 43.667 55 46.0889 55 49.0664 cv
55 57.5996 li
55 60.5771 52.7568 63 50 63 cv
6.00001 63 li
3.24315 63 1.00001 60.5771 1.00001 57.5996 cv
1.00001 49.0664 li
1.00001 46.0889 3.24315 43.667 6.00001 43.667 cv
50 43.667 li
.47451 .298039 .27451 0 cmyk
f
11.2871 62.9336 mo
6.00001 62.9336 li
3.26525 62.9336 1.03755 60.5809 1.00048 57.6733 cv
1.0323 60.1601 2.67191 62.2281 4.85548 62.7793 cv
3.73242 61.7988 3.00001 60.3301 3.00001 58.666 cv
3.00001 50.1338 li
3.00001 47.1924 5.24218 44.7998 8 44.7998 cv
19.4642 44.7998 li
14.1789 48.9317 11 54.2256 11 60 cv
11 60.9941 11.1045 61.9707 11.2871 62.9336 cv
1.00048 57.6732 mo
1.00045 57.6709 1.00042 57.6684 1.0004 57.6661 cv
1.00042 57.6686 1.00045 57.6708 1.00048 57.6732 cv
1.00039 57.6654 mo
1.00031 57.6586 1.00024 57.6516 1.00019 57.6447 cv
1.00024 57.6516 1.00031 57.6585 1.00039 57.6654 cv
1.00018 57.6438 mo
1.00017 57.6422 1.00016 57.6407 1.00015 57.6391 cv
1.00016 57.6406 1.00017 57.6422 1.00018 57.6438 cv
1.00012 57.6354 mo
1.00012 57.634 1.00011 57.633 1.0001 57.6315 cv
1.00011 57.6329 1.00012 57.6341 1.00012 57.6354 cv
1.00008 57.6274 mo
1.00007 57.6261 1.00007 57.6249 1.00006 57.6237 cv
1.00007 57.6249 1.00007 57.6261 1.00008 57.6274 cv
1.00005 57.6189 mo
1.00004 57.6178 1.00004 57.6168 1.00004 57.6157 cv
1.00004 57.6168 1.00004 57.6178 1.00005 57.6189 cv
1.00002 57.6102 mo
1.00002 57.6093 1.00002 57.6086 1.00002 57.6077 cv
1.00002 57.6085 1.00002 57.6095 1.00002 57.6102 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[19.68 0 0 19.68 .479999 .160002 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 41 
/H 41 
/M[41 0 0 -41 0 41 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 41 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 41 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 41 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 41 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
!!iH.r<`E0r!WH3r=/]8r"&`;rt2F7!u)Ib(*jY3(`4,/)B0Y9*?H7D+<VgN+sJ6W,UFca-R^Al.Olr"
/1iIQ#lP)-$N1A2%/gY5%fHq:&H*3f!8mi+'c%Q$(`4,/)B0Y9*?H7D+!;^M+sJ6W,UFca-R^Al.Olr"
/1iG+/dVC^r!NB1r=&W6r!rZ9r=Jo>rt=u)])X5p(Dmu,)B'P7*$$%@+!2UJ+X/*T,U=Z_-7:2i.4Qet
.kE8(/hSe2rX&K0r<rQ4r=/Z7r=Ai<r=Su@Y5f4Q(`=51)]Th<*?H7D+<VgO+sS?J,UFca-R^Al.4Qhu
/1`A*/h\n40a[abr<rQ4r=/Z7r=Ai<r=Sr?!#*-Jn,OjS)B'P6*$$%@*ZlLI+X/*T,U=Z_-7:/h.4H_r
.kE5'/hSe20JP=<r<iK2r=&T5r=8c:r=Jl=r=])CjT*I(.N06F*#ot?*ZlLI+X/*T,U=Z_-7:/h-n-Vq
.kE5'/hSe20JP=<1G]@Fr<rQ4r!iT7r"&c<r"8l?r=]/FY5fdd*#ot?*ZlLI+X/*T,U=Z^-7:/h-n-Vq
.kE5'/hSe20JP<c1,C^C2#Ia\%/^S5%f?k:&H!.=')`LC'X.Qd!$!"#*ZlLI+X/*T,:"Q]-71)g-n-Vq
.kE5'/hSe20JP:;1G^jE2)bFArXA]6r=8`9r=Jo>r=]&Br"RZ]gAiZD*ZlLI+X/*T,:"N\-71)g-n-Vq
.kE5'/hSe10JP:;1,CaD2)[?O$iLM4%K-e7&,d(<&cE@@'DrRE(&@p=!%8p3+<_mP,9nHZ,pjrd-n$Mo
.P!&$/M/S.0/,(71,:XB1c70L2`Ner%/gY6%KI";&,d(<&c<:@'DrRC's@TI+<_mP+sS?Y,pjrd-n$M_
.Olr"/1iG+/h\n40etL?1c.'J2E*TT3B7NH%K$_7&,d(<&c<:@'DrRC(&o&g!:'V5+X/*T,U=Z_-7:2i
.4Qet.kE8(/hSe20JP=<1GgpG2E!KR3&ru[3rTTd%fHq:&H*4=')`LB'`AdF(?tn>!%B*:,U=Z_-7:2i
.4H_s.kE5'/hSe20JP=<1GgpG2E!KQ3&ru[3]fG5r!rZ9r=Jo>r"ArAr=o2Fr>,DLY5fUh,UFca-R^Al
.4Qet/1`A*/h\n40etL?1c.'I2E(q$3&ioZ3]fGd4oGlh&,d(;&cE@@'E&XC(&f!I(UX8?!%K9A-7:/h
.4H_r.kE5'/hSe20JP=<1G^jF2)[?O3&ioZ3]fGd4[)%>%fHq:&H!.=')`LB'`8^F(AnsK(tnu@!%90A
-R^Al.Olr"/1iJ,0/,(71,:XA1c.'J2E*TT3BB2_4?Pbj5!M:0&,m.<&cE@@'E&XC(&\pH(]G9O!3lMP
-R^Al.Olr"/1iJ,0/,(70etO@1c.'J2E*TT3BB2_4?Pbj5!M7s5lM;n&H!.=')`LA'`AdF(B#'I(p<oG
-n-Vq.kE5'/hS5!0/,+81,:XB1c70L2`NcW3]]>b4?Yhk5<hCu5sc+\&H*4>')`LA'`AdF(B#'I)#kJr
!9O80.Olr"/1iJ,0/#"50etL?1c.'J2E*TT3BB2_4$5Yh5!D1r5X@_'6iIYq&c<:@'DrRC(&\pH(]5-K
)=IRA!%BEL/1iG+0/#"50etL?1c.'J2E*TT3B9,^4$5Vg5!D1r5X@_'6UX<Rr=Sr?rY,2Dr>#8Hr>5AK
r>GVRY5fFk/M/S-0/,(71,:XB1c70L2`NcW3BB2_4:XJ:5!D1r5X@_'6UX=27K*ns')`LB'`AdF(Ao!I
)#Y?N)S,qB!%BKP/h\n40etL?1c.'J2E*QS3B9,]4$5Vg5!D1r5X@_'6UX=277K`Yr"ArAr=o2Fr>,;I
r>>JNr>P\ThZ2%(-n[/,0JP=<1GgpG2)[BP3&ioZ3]fGd4[)%o5X7V%6:4+.77B[87nERkr=f,Dr"]2H
r"o;Kr#,JP!#tnVY5g"*0JP=<1GgpG2)[?O3&ioZ3]fGd4[)%o5X7V$6:4+.6q'R77n?0B&c`RC'E&XC
(&f!H(]>3K)?(QP)ZUk]!%9QW1,C^C2)R9M2`NcW3]]>b4?Ykl5<hD!5sdn*6psI57Rp!?8P2VR'E&XC
(&\pH(]>3K)>tKP)u^i,!8IQ(1,C^C1c70L2`NcW3]]>b4?Ykl5<hCu5sdn*6psI57Rp!?8P2TJ9+r!;
'`8^E(B#'I)#Y?N)Z:WQ*;KTD!%9W[1c70L2`NcW3]]>b4?Yhk5<hCu5sdn*6psI57Rp!?8P2TJ92&%W
'`AdG('#-K(]5-K)>tKP)uL]U*NoGR1c70L2`NcW3]]>a4?Yhk(d:/L5X@_'6UX=27Rfm=84cBF91qrP
9ht[%r>#8Hr>5AKr>GPPr>YYSr>ifVli8Im2E*TT3BB2_4$5Vg5!D1r5X@_'6UX=27Rfm<84cBF8kViO
9hnGZ'`AdF(B#'I)#Y?N)Z:WQ*;poX*pE[F!%9cc3&ru[4$,Pe4[)%o5X7V%6:4./77B[97n?0B8kM`M
9MJ8W:Jame(&\pG(]>3L)>tKP)ZUiU*;poV*j5Pc3&ru[3]fGd4[)%o5X7V%6:4./77B[87n?0B8kM`M
#u"&g:/=\_;,J),(Ao!I)#Y?N)Z1QQ*;poV*rd=h!;lgF3BB2_4?Pbj5!M:t5sdn*6UX@37Rfm=84cEG
92&#R:/4S]:f1(f;Z7I0(]>3K)?(QP)uUcT*W7&X+5$YG!%Brj4?Pbj5!M:t5s[h)6UX=27Rfm=84cEG
92&#R:/4S\:f1(f;H$O1r"o;Kr#,JPr#>SSr>keWr>u"^rW'5(-p0UT5!D1q5X@\&6:4./77Ka:84Z<E
8kViO9heAY:Jakb;GpFm<)rl5rYPVPr#,GOr>Y\Tr>keWr?)"]Y5enm5!D1q5X7V%6:2h_6q'R77n?0B
8kM`L9MJ5V:/=\_;,U:j<)cju<YlSM)#Y?N)Z:WQ*<$uV*rR2Y+NXWH!%:#q5<qJ"6:+%-6q'R77n?0B
8kM`L9MA/U:/=\_;,U:j<)cju<``B#)#Y?N)Z:WQ*<$uV*rR2Y+TEVQ!5\^a5<qJ"6:+%-6q'R77n?0B
8P2WK9MA/U:/=\_;,U:j<)cjt<``@)=T009)>tKP)uL]T*<7,Y*rR2Y+T3Ie!#e*g6:+%-6q'R77n6*A
8P2TJ9MA/U:/=\_;%?K%;cH^r<E<.%=BJ^0)#Y?N)Z:WQ*;poV*rR2Y+T3J`,.R^J!%:0#6UX=277Kd;
84Z<E8kViO9hnGZ:f("e;H$Ln<E3(#='/R->$>/0)>tKO)uUcT*W7&W+8m>\+oNVA!7Cir6UX=277Ka:
84Z<E8kViO9hnGZ:f("d;H$Ln<)lt"='/R->$>-8>T*JYr#>SSr>khXr#bk[r?;+`s!+]I-q$Km7Rfm=
84cEG92&#R:/4S]:f1(f;H$Oo<E<.%=BJ^0>$G6:?!Vs~>

%%EndBinary
grestore
np
1.00048 57.6733 mo
1.00048 57.6732 li
1.00048 57.6733 li
1.0004 57.6661 mo
1.00039 57.666 1.00039 57.6656 1.00039 57.6654 cv
1.00039 57.6658 1.00039 57.6658 1.0004 57.6661 cv
1.00019 57.6447 mo
1.00019 57.6444 1.00018 57.6441 1.00018 57.6438 cv
1.00018 57.6441 1.00019 57.6444 1.00019 57.6447 cv
1.00015 57.6391 mo
1.00014 57.6379 1.00013 57.6367 1.00012 57.6354 cv
1.00013 57.6365 1.00014 57.638 1.00015 57.6391 cv
1.0001 57.6315 mo
1.00009 57.6301 1.00009 57.6287 1.00008 57.6274 cv
1.00009 57.6286 1.00009 57.6303 1.0001 57.6315 cv
1.00006 57.6237 mo
1.00006 57.6232 1.00006 57.6228 1.00006 57.6224 cv
1.00006 57.6218 1.00005 57.6212 1.00005 57.6206 cv
1.00005 57.62 1.00005 57.6195 1.00005 57.6189 cv
1.00005 57.6205 1.00006 57.6221 1.00006 57.6237 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 5.44 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~()@Z$()@]&(B~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~3]];a4?Pek4o~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00006 57.6224 mo
1.00006 57.6219 1.00005 57.6211 1.00005 57.6206 cv
1.00005 57.6212 1.00006 57.6218 1.00006 57.6224 cv
gsave
[1.20029 26.6729 -26.6729 1.20029 26.5972 40.7695 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~!!!!"!<N<)!sA`1"U5/9#7(S@#RLeE$4@4M$k3XU%M'']&.oKe&ebom'GV>u()Ic((`=20)B0V8*$$%@
*ZcCF+<VgN+sJ6V,U=Z^,palb-RU;j.4H_r.k</%/M/S-0/#"50ekF=1G^jE2)R9M2`E]U3&ioY3]]>a
4?Yhk5!M7s5X7S#5sdn*6UX=277Ka:7n?0B8P2TJ92&#R9hnGZ:Jakb;,U:j;c?Uo<)lq!<``@)=BSd1
>$>-7>[1Q??=$uG?smDO@U`hWA7T7_AnG[gBP;*oC2.O"Ci!s*DJjB2E,]c8EH-#>F)uGFF`hkNGB\:V
~>
<~z!!**$!<N<)!sA`0"9er4"U5/8"pYA<#7(SA#mq"H$4@4L$OdFP$k3XU%M''\%hK9`&.oKd&J>]h&eYi
k'GM8s'bqK"()@]&(Ddo*(`4,.)B'P6)]Kb:*#ot>*??1B*ZcCF+!2UJ+X&$R+sJ6V,9nHZ,U=Z^,pjr
d-RU8i-n$Jm.4H\q.P!##/1`>(/M/P,/hSb00/"t40JG180etL?1G^gD1c.$H2)R6L2E!HP2`NcW3B9)
[3]];_4$,Mc4?P_g4Zttm5<h@s5X7S"5s[e&6:+%,6psF277BX67Rfj:7n6'>84Z<D8kM]J91qoN~>
<~z!!**$!<N<(!WrN,!sA`0"9er5"pYA<#7(S@#RLeD#mq"H$4@4L$OdFP$k3XU%M''\%hK9`&.oKd&J5W
g&eYik',)&o'GM8s'bqK"()@]&(Ddo*)&X>2)B'P6)]Kb:*#ot>*??1B*ZcCF+!2UJ+<VgN+X&$R+sS<
X,U=W],paia-71&e-RU8i-n$Jm.4H\q.Olnu.k<,$/1iG+/hSb00/"t40JG180ekC<1,:U@1G^gD1c.$
G2)R6K2E!HO2`E]U3B9)[3]];_4$,Mc4?P_g4Ztqk5!D.o5<hCu5s[e&6:+"*6UO4.6psF277BX6~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
np
1.00004 57.6157 mo
1.00003 57.6155 1.00003 57.6154 1.00003 57.6152 cv
1.00003 57.6138 1.00003 57.6127 1.00003 57.6113 cv
1.00002 57.6109 1.00002 57.6105 1.00002 57.6102 cv
1.00003 57.612 1.00003 57.6139 1.00004 57.6157 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 5.44 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~()@Z$()@]&(B~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~3]];a4?Pek4o~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00003 57.6152 mo
1.00003 57.6139 1.00003 57.6126 1.00003 57.6113 cv
1.00003 57.6127 1.00003 57.6138 1.00003 57.6152 cv
gsave
[1.20029 26.6729 -26.6729 1.20029 26.5972 40.7695 ]ct
clp
/3 /Gradient get_res exec grestore
np
1.00002 57.6077 mo
1.00002 57.6075 1.00002 57.6078 1.00002 57.6076 cv
1.00001 57.6049 1.00001 57.6023 1.00001 57.5996 cv
1.00001 57.6023 1.00001 57.605 1.00002 57.6077 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.92 .48 5.44 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 4 
/M[3 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'bqH!()@Z$()Ic'~>
<~!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!~>
<~3&ilY3]]Ac4?bqm~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00002 57.6076 mo
1.00001 57.605 1.00001 57.6022 1.00001 57.5996 cv
1.00001 57.5996 li
1.00001 57.5996 li
1.00001 57.6023 1.00001 57.6049 1.00002 57.6076 cv
gsave
[1.20029 26.6729 -26.6729 1.20029 26.5972 40.7695 ]ct
clp
/3 /Gradient get_res exec grestore
np
32.3202 44.7998 mo
19.4642 44.7998 li
19.9307 44.4351 20.4135 44.0796 20.9121 43.7334 cv
32.5754 43.7334 li
32.4785 44.0843 32.3934 44.4397 32.3202 44.7998 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[14.4 0 0 2.4 18.72 18.4 ]ct
snap_to_device
<<
/T 1
/W 30 
/H 5 
/M[30 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!s8W-!s8W-!s8Z/"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
"9\i1"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U5/8"pP89"pP89"pP57"pP89"pP89
"pP89"pP89"pP89"pP89"pP89"pP~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~#RC\A#RC\A#RLeD#mgnE#mgqG$47+I$47+I$47+I$47+I$47+I$4@4L$O[=M$O[@O$k*OQ$k*LO$k*OQ
$k*OQ$k*OQ$k3XT%1NaU%1NdV%1NaU%1NdW%LrsY%LrsY%LrsY%M''\%hB0]%hB-\%h9'Z%hB3_&.fBa
&.fBa&.fBa&.oKd&J,Nc&.fBa&.e~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
4.85548 62.7793 mo
2.67191 62.2281 1.0323 60.1601 1.00048 57.6733 cv
1.00048 57.6732 li
1.00045 57.6708 1.00042 57.6686 1.0004 57.6661 cv
1.00039 57.6658 1.00039 57.6658 1.00039 57.6654 cv
1.00031 57.6585 1.00024 57.6516 1.00019 57.6447 cv
1.00019 57.6444 1.00018 57.6441 1.00018 57.6438 cv
1.00017 57.6422 1.00016 57.6406 1.00015 57.6391 cv
1.00014 57.638 1.00013 57.6365 1.00012 57.6354 cv
1.00012 57.6341 1.00011 57.6329 1.0001 57.6315 cv
1.00009 57.6303 1.00009 57.6286 1.00008 57.6274 cv
1.00007 57.6261 1.00007 57.6249 1.00006 57.6237 cv
1.00006 57.6221 1.00005 57.6205 1.00005 57.6189 cv
1.00004 57.6178 1.00004 57.6168 1.00004 57.6157 cv
1.00003 57.6139 1.00003 57.612 1.00002 57.6102 cv
1.00002 57.6095 1.00002 57.6085 1.00002 57.6077 cv
1.00001 57.605 1.00001 57.6023 1.00001 57.5996 cv
1.00001 57.5996 li
1.00001 49.0664 li
1.00001 46.126 3.24219 43.7334 6.00001 43.7334 cv
20.9121 43.7334 li
20.4135 44.0796 19.9307 44.4351 19.4642 44.7998 cv
8 44.7998 li
5.24218 44.7998 3.00001 47.1924 3.00001 50.1338 cv
3.00001 58.666 li
3.00001 60.3301 3.73242 61.7988 4.85548 62.7793 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[21.12 0 0 20.16 .479999 .640001 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 44 
/H 42 
/M[44 0 0 -42 0 42 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
oDmkOXoSA"oE"I`oE5*rrW(gVq?#OSb5hG@ncJIdpB:L"j8f5]o)blko`Fdgp]U?qrs%ikklS^%kQ(P_
p&k!kq$$Nt!!i)rliQqao)Q6"q#g?oq$$Ntq$-m*q#LHsm/lh\W;uo"!!N'"qZZa!q?Qj&!XT/6lN6PX
r<1[Oe,]@Kq$$X"p]p[%q[*6/n,i(]r<3!#W;lo$q??^"q?Qm'r!<?0q?m30pB'gdn-$9%nGrOlq?Hj&
q?Zs)q[36/r!`K)n,r7bq$$$`^]=<;qZls'r<`?.r!W?0r=&`:ncSjopB:$j!!]D&r!3'(!"&W2q[36/
r!`K4q[NT:p]L$ho*,$rblHQ"q[!*+r!N?0r=&T5r!rW8r=Jf-oE=gjpBLX&rW'#"!!rK/r!NB1r!`K4
r!rZ9r"/i>!YQ+JoE=diq$-U!YQ4M"!"&Q1r<rN3r!iQ6r=Al=r"8l?rY,)1o`b!mp]pd(i;gt"rsJZ3
rXA]6r!r]:r=Jl=rY#,BrY,>IqulcuoEP*rp^!i!rsSf7r!iQ6r=Al=rXo&@r=f,DrY>DJp'(0ppBUBt
rs?UDjo>Air!iT7rX\r=r=Su@r=f/Er>#;IrYPSOqZZa!o`t9up^-Tn[/^19r=8c:rXf&@r"ArAr=o5G
rYGJLr>>MOq?Hg$q$6[#q$Hp*W;lr/&-!1>&H!.>')iRC'`JjG(B,-L)#Y?O)ZLcR#5AGu#l+f$$NCLd
!7ClG&H3:@')iRB'`JjH(B,-L)#Y?O)ZC]T*!%&ao`t6tq$Hp*rX/Q2W;ur1rY#,BrY5>HrYGJLrYYSO
ru(kUrYthVrZ1tZq?Qg%p^-a'p^@'0])_:"!##5DrY5>HrYGJLrYYSOrYkbTrZ(nXrZ;(]rZD1Gp^$[%
q$Qm)q$[64li=a"!#,>Gr=o;Jr"f>Mr>GSQrYthVrZ2"[rZD+^rZV:cq$?d&r!N6-q$d*/W;uo4rYGJL
rYYVPru1kUrZ(nXrZ;(]rZM1`ruqUj,9nHZ#l"`%$MY#-%/CA1%^Q00!<3i7(]G9N)?(QQ)ZUlW*W@,Z
+9*J_+oW\c,Q8tg-3#=h$2Y)*$ht/.%J^M6&**`1!<*i7)?1WR)u^fW*W@,Z+9!D_+oW\a,60"g-3#=j
-iXMK$N(;-$igb4%K6k4&#fO/)>tKQ)ugoW*W@)]+!;[-+<_p-,5i_d,lT+h-N>Im-ithI.K'VK$iLM0
%JUG3&,QpY!94(Y)u^iW*W@,Z*rmG_+o`bb,Q8qg-2o7k-iPOn.0_7O.k<(V$N1A-%/gY1%fHq5&-<FU
&GQ72!!"#<*W@,[+9!A_+oNSb,Q/kf-2o7k-iPLo.K1gs/,_"#/M/OP$NLS5%/CA1%f$Y6&GZq<&ukp5
!$33\+9*J_+o`bc,QB%g,lf:k-iYUo.0(js/,q1"/cRI&0*!X$%/gY1%fHq8&Gd";&cr^['&*E4!<+,@
+oW\c,Q8tg-2o4k-iPLq.4HbF.f_.!/H@F&0*X*a0etI;%/CA2%epS5&H*4?')N=>'<(s5+X/-0,QB%g
-3#=k-NY\F.K1gs/,h("/H@C%/d<s_0JP:;1As!/1B%aZ%f6e8&GQk9')`L?'YXS6!!"8B,QK.i-N>Im
-ithI.fLsu/H.4(/hSe20`Ed,1B''71c.'I2Dd6"r=8`9q%3K:r"Af=r=o5GrtOo%])VpY,pao;-iYUo
.0M+N.kE7N/cRI&0*3g^1&`p21GgpG2?#N42ZPc8%f?k9&-*=>&c34>'DrR='r_06-7Ad@!\#QJ!%Rsu
!\>oTr[n7*0/3A[">V_g1c51h!]Dqqr\t*B3BB2]3"Pcqr"8o@q%NZ?r"]/Grtk\NdK%o""t1lK.Olr!
r[\+&/M@#U">DMa1,Ahb!]2blr\as>2`NcW3]d7%r]C0Ar=Jl=q%EW>r=o2Fp_NfErthX7"=boP/1gcP
">2;[0JNJ\"#;Yg2#]B42ZG`93;to@3]fDc4TIYC4p!kY&H!.=')`L='`JjF(B#'I(]kQl(UX89!!4]'
/cI@+0/#"60f&_a">hqm2E(Lm"ZSM&3]fG&49I`15!T$3"$o4<5PPli'E&XC(&SjD(]5-K)#tN9!5nj=
/h\mW0EX$b1,Jnd#W4It2E*TT3B@(""$8V-4oRYD5QX5<6N'7O62hMq'DW@?(&o'L(B#'J)#P9M)?Lir
)6!T90`Ed11,C^C2)Y@ks#9s;"$&D'48q>M4Zttn5<qM#6:+%,r^6oY7Rfg6')`LB'`AdE(B#'F)#P9M
)Z:TT)T`!<!"1P;1GgpG2)[BP3&pmt$9C714?Yhk5<hCur]pfV6UO7077Ka:r^[)^84NFir"]/Gr>5DL
r#,GOr>Y\T!Z`7"q>d`"r\Xp=2E*QS3B9/"48qAN5!D1r5X@\&6UO70r^@#\7n6*A8P8tT!D5q6~>

%%EndBinary
grestore
np
33.3026 41.667 mo
6.00001 41.667 li
3.25022 41.667 1.01152 39.2564 1.00006 36.2893 cv
1.00006 36.2898 1.00006 36.2902 1.00006 36.2907 cv
1.00007 36.2919 1.00007 36.2931 1.00008 36.2944 cv
1.00009 36.2957 1.00009 36.2971 1.0001 36.2985 cv
1.00011 36.2999 1.00012 36.301 1.00012 36.3024 cv
1.00013 36.3037 1.00014 36.3048 1.00015 36.306 cv
1.00016 36.3077 1.00017 36.3092 1.00018 36.3108 cv
1.00018 36.3109 1.00019 36.3113 1.00019 36.3115 cv
1.00024 36.3186 1.00031 36.3253 1.00039 36.3325 cv
1.00039 36.3327 1.00039 36.3329 1.0004 36.333 cv
1.03398 39.2429 3.26306 41.5996 6.00001 41.5996 cv
11.2871 41.5996 li
11.1045 40.6377 11 39.6602 11 38.667 cv
11 32.8925 14.1789 27.5987 19.4642 23.4668 cv
52 23.4668 li
52.3945 23.4668 52.7754 23.5283 53.1445 23.6211 cv
53.1445 23.6211 li
53.1445 23.6211 li
52.2813 22.8691 51.1973 22.4004 50 22.4004 cv
20.9121 22.4004 li
20.9121 22.4004 li
6.00001 22.4004 li
3.24219 22.4004 1.00001 24.793 1.00001 27.7334 cv
1.00001 36.2666 li
1.00001 36.2666 li
1.00001 27.7334 li
1.00001 24.7559 3.24315 22.334 6.00001 22.334 cv
50 22.334 li
52.7568 22.334 55 24.7559 55 27.7334 cv
55 33.6102 li
52.8852 32.5788 50.5099 32 48 32 cv
41.4111 32 35.7557 35.9816 33.3026 41.667 cv
1.00005 36.2877 mo
1.00004 36.2859 1.00004 36.284 1.00003 36.2822 cv
1.00003 36.2824 1.00003 36.2825 1.00004 36.2827 cv
1.00004 36.2838 1.00004 36.2848 1.00005 36.2859 cv
1.00005 36.2865 1.00005 36.2871 1.00005 36.2877 cv
1.00003 36.2783 mo
1.00002 36.2772 1.00002 36.2757 1.00002 36.2746 cv
1.00002 36.2748 1.00002 36.2745 1.00002 36.2747 cv
1.00002 36.2756 1.00002 36.2763 1.00002 36.2772 cv
1.00002 36.2775 1.00002 36.278 1.00003 36.2783 cv
gsave
[19.497 0 0 19.497 40.5039 41.4541 ]ct
clp
/0 /Gradient get_res exec grestore
np
50 21.334 mo
6.00001 21.334 li
2.69921 21.334 0 24.2129 0 27.7334 cv
0 36.2666 li
0 39.7852 2.69921 42.667 6.00001 42.667 cv
50 42.667 li
53.2988 42.667 56 39.7852 56 36.2666 cv
56 27.7334 li
56 24.2129 53.2988 21.334 50 21.334 cv
50 22.334 mo
52.7568 22.334 55 24.7559 55 27.7334 cv
55 36.2666 li
55 39.2441 52.7568 41.667 50 41.667 cv
6.00001 41.667 li
3.24315 41.667 1.00001 39.2441 1.00001 36.2666 cv
1.00001 27.7334 li
1.00001 24.7559 3.24315 22.334 6.00001 22.334 cv
50 22.334 li
.47451 .298039 .27451 0 cmyk
f
11.2871 41.5996 mo
6.00001 41.5996 li
3.26306 41.5996 1.03398 39.2429 1.0004 36.333 cv
1.02907 38.8222 2.66976 40.8955 4.85548 41.4463 cv
3.73242 40.4668 3.00001 38.9971 3.00001 37.333 cv
3.00001 28.7998 li
3.00001 25.8594 5.24218 23.4668 8 23.4668 cv
19.4642 23.4668 li
14.1789 27.5987 11 32.8925 11 38.667 cv
11 39.6602 11.1045 40.6377 11.2871 41.5996 cv
1.00039 36.3325 mo
1.00031 36.3253 1.00024 36.3186 1.00019 36.3115 cv
1.00024 36.3185 1.00031 36.3255 1.00039 36.3325 cv
1.00018 36.3108 mo
1.00017 36.3092 1.00016 36.3077 1.00015 36.306 cv
1.00016 36.3076 1.00017 36.3092 1.00018 36.3108 cv
1.00012 36.3024 mo
1.00012 36.301 1.00011 36.2999 1.0001 36.2985 cv
1.00011 36.2999 1.00012 36.3011 1.00012 36.3024 cv
1.00008 36.2944 mo
1.00007 36.2931 1.00007 36.2919 1.00006 36.2907 cv
1.00007 36.2919 1.00007 36.2931 1.00008 36.2944 cv
1.00005 36.2859 mo
1.00004 36.2848 1.00004 36.2838 1.00004 36.2827 cv
1.00004 36.2838 1.00004 36.2848 1.00005 36.2859 cv
1.00002 36.2772 mo
1.00002 36.2763 1.00002 36.2756 1.00002 36.2747 cv
1.00002 36.2755 1.00002 36.2765 1.00002 36.2772 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[19.68 0 0 19.68 .479999 21.76 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 41 
/H 41 
/M[41 0 0 -41 0 41 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 41 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 41 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 41 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 41 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
rs/K.r<`E0r!WH3r=/]8r"&`;!"lC7!tu@`'dOP1(Dmu,)B'P7*$$(A+!2UK+X/*T,U=Z_-7:2i.4Qet
/1`CO#lP)-$N1A2%/gY5%fHq:&H39g!8mi,'GVB!(Dmu,)B'P7*$$(A+!2UJ+X/*T,U=Z_-7:2i.4Qet
.kE8(/dMa]$2b//$iLM4%K$_7&,d(<&HEI:!4r4[()@]'(`=51)]Th<*?H:E+<VgO+sS?Y,pjrd-n$Mo
.P!##/1iJ,0*qO`r!NB1rX8c8r=/Z7r=Ai<r=T#AY5f4P(`4,/)B0V8*??1B+!;[L+sJ6I,U=Z_-7:2i
.4H_s.kE5'/hSe20F8'`$N1A2%/^S5%fHq:&H!.='#4M:!%Aa&)B'P6*#ot?*ZlLI+X/*T,U=Z_-7:/h
.4H_r.kE5'/hSe20JP<hr<iK2r=&T5r=8c:r=Jl=r=],DjT*I(-lEpB)]Th<*ZcCG+<_pQ,:"N\,pjue
-n$Mo.P!&$/M8Y/0JG4:1,Jn:r!WK4r!iT7r"&c<r=K#Ar=]&BY5fdc)]Th<*ZcCG+<_pQ,:"N\,pjrd
-n$Mo.P!&$/M8Y/0JG3b0etO@1^a-grXA]6r=8`9rXeu>r=]&BrtM[;.0(>-*?H7D+<VgO+sS<X,palb
-R^Al.Olr"/1iJ,0/,(70etL?1c.)g$iLM4%K-e7&,d(<&cE@@'E&Wq!8@K'*?H7D+<VgN+sS<X,UFca
-R^Al.Olr"/1iJ,0/#"60etL?1c.'J2@Bok%/gY6%f?k9&H*4>')`LA'EAmE!4DkU*ZlLI+X&$R,:"N\
-71)g-n-Vq.kE5'/M8\00JG4:1,CaD2)[?O3;j9a%K6k;%fHq:&H*4=')iRB'`JiN!"L(n+X&$R,:"N\
-71)g-lXTb.P!##/M/S-0/,(71,:XB1c70L2`NcW$k3(Dr!rZ9r=Jo>r"AuBr"T)E!#ENRlMr=U+X/*T
,U=Z_-7:2i.4Qet.kE5'/hSe20JP=<1GgpG2E!KQ3&ru[r=/Z7r=Ai<r=Sr?r=f,Dr>#;Il2\g(.O$&]
,U=Z_-7:2i.4H_s.kE5'/hSe20JP=<1GgpG2E!KQ3&ioZ3]dc[r!rZ9r=Jl=r=])C!#,;Fr"]2H!#Mg=
*[;pU,pjrd-R^Dm.Olr"/1iJ,0/,(71,:XB1c7-K$9'n'3&s#\4$5V7r=8c:r=Jl=r=]&Br=o/ErYGJL
[/g((-mU)c-7:/h-n-Vq.kE5'/hSe20JP=<1G^jF2)[?O3&ioZ3]fGd4[/iTr"&c<r"8l?r=f,Dr"]/G
r>4/fec7-F-7:/h-n-Vq.kE5'/hSe20JP:;1G^jE2)[?O3&ioZ3]fGd4[)%o%f?k:&H!.=')`LB'`8^E
(B#'L)#jT@!%90A-n$Mo.P!&$/M8Y/0JG491,:XB1c70L2`NcW3]]>b4?Yhk5<hF3&-!4@&H*4>')`LA
'`AdF(B#'J(p<oG-n$Mo.P!&$/M8.u0/#"60etL?1c.'J2E*TT3BB2_4?Pbi5!D1r5X>nkr=Jo>r=]&B
r"T)Er>,>Jr"oDOaoLQ(-n-Vq.kE5'/M8\00JG4:1,CaD2)[?O3&ioZ3]fDc4Zttm5<qJ"6:1V^r=Sr?
rY,2Dr>#8Hr>5AKrYb/)_#Pr7.kE5'/M8Y/0JG4:1,CaD2)[?O3&ioY3]fDc4?Ykl5<qJ"6:+%-&.ndP
r"AuBr"T,F!#>GJr>5AKr>>SRY5fFj/1iG+/h\n40etL?1c.'J2E*QS3B9,]3t=A84[)%o5X7V%6:4./
7K!hr')`LB'`AdF(Ao!I)#Y?O)S,qB!%KNO/hSe20JP=<1GgpG2E!KQ3&ioZ3]fGd4[)%o5X7V%6:4+.
77BZX&c<:?'E&XC(&f!H(]>3K)?(NS)rCYC!%BNQ0/,(71,:XB1c7-K2`E]U3BB2_4?Pbj5!M:t5sdn*
6UX=27Rfl[r=]&Br=o/ErYGDJr>>GMrYkbTY5g")0JG4:1,C^C2)R9M2`NcW3]]>b4?Ykl5<qJ"5sdq+
6psI57Rp!?')rUC'E&XC(&\pH(]>3K)>tKP)m95j0JP=<1G^jE2)[?O3&ioZ3]fGd4[)%o5<qM#6:+%-
6q'R77n?0B8eV(9r=o/Er>,>Jr>>GMr>PVRruBMgg]/`W1,C^C1c70L2`NcW3]]>b4?Yhk5<hCu5sdn*
6psI57Rp!?8P2TJrY,2Dr>#8Hr>5AKr>GPPr>Y\Tq#Il(.5E\91c70L2`NcW3]]>b4?Yhk5!M:t5sdn*
6psI57Rp!?8P)NI92$#s'`AdH(B50K(]5-K)>tKP)uLZU*NoGR1c.'J2E*TT3BB2_4$5Yh(d:,J5X7V%
6:4./77Ka:84Z<D8kM`M9MPI"r>#8Hr>5AKr>GPPr>YYSrZ/oWli8Lm2E!KR3&ru[4$,Pe4[)%o5X7V%
6:4./77Ka:7n?3C8kM`M9MJ8W'GUK\r>,>Jr##AMr>PVRr#GYU!$:A)`rIMG2`NcW3BB2_4?Pbj5!M:t
5sdn*6psI47Ros>84cEG92&#R:/4S]r>#8Hr"o;Kr>GPPrYtkVr>bbVrZ86C+#c/>3BB2_4?Pbj5!M:t
5sdn*6UX@37Rfm=84cEG9*e3b9hnGZ:f($g(&f!H(]>3K)?(QP)uUcT*W7#Z+1)%G!%Blf3]]>b4?Ykl
5<qJ"6:+%,6psI57Rp!?8P2TJ9MA/U:/=Y^;,L4+rYGDJr>>GMrYk\Rr>bbVr>tq[f`9V(-osCN4?Pbj
5!M:t5s[h)6UX=27Rfm=84cEG92&#R:/4S\:f("e;H*Q1r>5DLr#,GOr>Y\Tr>keWr?)"=Z2c=84?Pbj
5!M7s5s[h(6UX=27Rfm=84cEG92&#R9hnJ[:f("e;H$Oo(B#'L)#kHN)>tKP)uUcT*W-uW+9*Ie!"(hO
4[)(p5X7V%66/E]6q'R77n?0B8kM`L9MJ5V:/=\_;,U:j<)cjurYPJLr>GPPr>YYSrZ1nXr?(t\aT1K(
.6TjY5<qJ"6:+%-6q'R77n?0B8P2WK9MA/U:/=\_;,U:j<)cju<`^+8)#Y?N)Z:WQ*<$uV*rR2Y+93SQ
!5\^a5!M:t5sdn*6psI57Rp!?8P)NH92&#R:/4S]:f1+g;cH^r<E<1&=T'*8)>tKP)uL]U*WI/Y*rR2Y
+T<Of!#e*f5sdn*6psI57Ros>8P)NH92&#R:/4S]:_-E$;H$Oo<E3(#='/R-(`<2hr>PVRr#GYUr>tkY
r?2%^!$\rRpAcU-6:+%-6q'O67n6*@8P2TJ9MA/U:/=\_;,U:j;cH^r<`W:(=BSg2r>GPPr#>SSr>khX
r#bk[r?;.ah>kt(-pg9g6q'O67Rp!?8P2TJ9MA/U:/=\_;,L4i;cH^r<`W:(=BSg2>?q.FrYk\Rr>bbV
r>tkYr?2%^rZV@e,Hh(q6UX=27Rfm=84cEG92&#R:/4S\:f1(f;H$Oo<E<.%=BJ^0>$G6:?%;~>

%%EndBinary
grestore
np
1.0004 36.333 mo
1.00039 36.3329 1.00039 36.3327 1.00039 36.3325 cv
1.00039 36.3327 1.00039 36.3329 1.0004 36.333 cv
1.00019 36.3115 mo
1.00019 36.3113 1.00018 36.3109 1.00018 36.3108 cv
1.00018 36.311 1.00019 36.3113 1.00019 36.3115 cv
1.00015 36.306 mo
1.00014 36.3048 1.00013 36.3037 1.00012 36.3024 cv
1.00013 36.3035 1.00014 36.305 1.00015 36.306 cv
1.0001 36.2985 mo
1.00009 36.2971 1.00009 36.2957 1.00008 36.2944 cv
1.00009 36.2956 1.00009 36.2972 1.0001 36.2985 cv
1.00006 36.2907 mo
1.00006 36.2902 1.00006 36.2898 1.00006 36.2893 cv
1.00006 36.2888 1.00005 36.2882 1.00005 36.2877 cv
1.00005 36.2871 1.00005 36.2865 1.00005 36.2859 cv
1.00005 36.2875 1.00006 36.289 1.00006 36.2907 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 27.04 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'bqH!()@]&(B~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~3B9)]4$,Pf4T~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00006 36.2893 mo
1.00006 36.2889 1.00005 36.2881 1.00005 36.2877 cv
1.00005 36.2882 1.00006 36.2888 1.00006 36.2893 cv
gsave
[1.20023 26.6715 -26.6715 1.20023 26.5972 19.437 ]ct
clp
/3 /Gradient get_res exec grestore
np
1.00004 36.2827 mo
1.00003 36.2825 1.00003 36.2824 1.00003 36.2822 cv
1.00003 36.2808 1.00003 36.2797 1.00003 36.2783 cv
1.00002 36.278 1.00002 36.2775 1.00002 36.2772 cv
1.00003 36.279 1.00003 36.2809 1.00004 36.2827 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 27.04 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'bqH!()@]&(B~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~3B9)]4$,Pf4T~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00003 36.2822 mo
1.00003 36.2808 1.00003 36.2797 1.00003 36.2783 cv
1.00003 36.2797 1.00003 36.2808 1.00003 36.2822 cv
gsave
[1.20023 26.6715 -26.6715 1.20023 26.5972 19.437 ]ct
clp
/3 /Gradient get_res exec grestore
np
1.00002 36.2747 mo
1.00002 36.2745 1.00002 36.2748 1.00002 36.2746 cv
1.00001 36.2719 1.00001 36.2693 1.00001 36.2666 cv
1.00001 36.2693 1.00001 36.272 1.00002 36.2747 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 27.04 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'bqH!()@]&(B~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~3B9)]4$,Pf4T~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00002 36.2746 mo
1.00001 36.272 1.00001 36.2692 1.00001 36.2666 cv
1.00001 36.2666 li
1.00001 36.2666 li
1.00001 36.2693 1.00001 36.2719 1.00002 36.2746 cv
gsave
[1.20023 26.6715 -26.6715 1.20023 26.5972 19.437 ]ct
clp
/3 /Gradient get_res exec grestore
np
53.1445 23.6211 mo
52.7754 23.5283 52.3945 23.4668 52 23.4668 cv
19.4642 23.4668 li
19.9307 23.1021 20.4135 22.7466 20.9121 22.4004 cv
50 22.4004 li
51.1973 22.4004 52.2813 22.8691 53.1445 23.6211 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[35.04 0 0 2.88 18.72 39.52 ]ct
snap_to_device
<<
/T 1
/W 73 
/H 6 
/M[73 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W."9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
"9er4"U,&5"Tni/!s8W-!s8Z/"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"U,&5"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&5"U5)4"9\i1"9\i1"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U5/8"pP89"pP89"pP89"pP89"pP88"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,)7"pP89"pP89
"pP89"pP89"pP89"pP89"pP89"pP89#6tJ=#6tJ=#6tJ="U,&5"U5/8"pP89"pP89"pP89"pP89"pP89
"pP89"pP89"pP89"pP89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=#6kA:"pP89"pP89"pP89"pP;;
#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ>#RC\A#RC\A#RC\A#RC~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~#6tJ=#6tJ>#RC\A#RC\A#RC\A#RLeD#mgnE#mgnF$47+I$47+I$47+I$4@4L$O[=M$O[=N$k*OQ$k*OQ
$k*OQ$k*RS%1*=I#mgnE#mgqG$47+I$47+I$47+I$O[=M$O[=M$O[@O$k*OQ$k*OQ$k*OQ%1NaU%1NaU
%1NdW%LrsY%LrsY%LrsY%M&mS$O[=M$O[=M$OdFP$k*OQ$k*OQ$k*OR%1NaU%1NaU%1WjW%1NdW%LrsY
%LrsY%hB0]%hB0]%hK9`&.fBa&.fBa&.fB]$k*RS%1NaU%1NaU%LrsY%LrsY%LrsY%Ls![%hB0]%hB0]
%hB0]%hB0]%hB3_&.fBa&.fBb&J5Te&eYfi&eYfi&eYfi%LrsY%M''\%hB0]%hB0^&.fBa&.fBa&.fBa
&.oKd&.fEb&.fBa&.fBa&J5Te&J5Te&J5Wg&eYik',)#n'GM5q'GM5q'G(fe&.fBa&J5Te&J5Te&J5Wg
&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi',)#m',)&o'GV>t'bqK"()@Z$()?~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
4.85548 41.4463 mo
2.66976 40.8955 1.02907 38.8222 1.0004 36.333 cv
1.00039 36.3329 1.00039 36.3327 1.00039 36.3325 cv
1.00031 36.3255 1.00024 36.3185 1.00019 36.3115 cv
1.00019 36.3113 1.00018 36.311 1.00018 36.3108 cv
1.00017 36.3092 1.00016 36.3076 1.00015 36.306 cv
1.00014 36.305 1.00013 36.3035 1.00012 36.3024 cv
1.00012 36.3011 1.00011 36.2999 1.0001 36.2985 cv
1.00009 36.2972 1.00009 36.2956 1.00008 36.2944 cv
1.00007 36.2931 1.00007 36.2919 1.00006 36.2907 cv
1.00006 36.289 1.00005 36.2875 1.00005 36.2859 cv
1.00004 36.2848 1.00004 36.2838 1.00004 36.2827 cv
1.00003 36.2809 1.00003 36.279 1.00002 36.2772 cv
1.00002 36.2765 1.00002 36.2755 1.00002 36.2747 cv
1.00001 36.272 1.00001 36.2693 1.00001 36.2666 cv
1.00001 36.2666 li
1.00001 27.7334 li
1.00001 24.793 3.24219 22.4004 6.00001 22.4004 cv
20.9121 22.4004 li
20.4135 22.7466 19.9307 23.1021 19.4642 23.4668 cv
8 23.4668 li
5.24218 23.4668 3.00001 25.8594 3.00001 28.7998 cv
3.00001 37.333 li
3.00001 38.9971 3.73242 40.4668 4.85548 41.4463 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[21.12 0 0 20.64 .479999 21.76 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 44 
/H 43 
/M[44 0 0 -43 0 43 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
nc7_OXoSA"m/cbZp]L<lhZ<`YhZ1h"p]9mdo`P$nj8o/ZpB%;orrM`np]LErpB:BtkQ1)Q_>rd"q#^0j
p]U<pr<DZjliR+fo)Q6"rrVlrp]U?qp]g[%p]:Bql2p\^W;ul!rr_uuq??[!q$6g'q>opanH7>Be,TIN
q#pHrq?Ha#q[!*+!!2KhmfNOlquiu!r<3!$q$-[#q?R'-r!E6-nH/4_o`Vf*nGrIjq?Ha#q[!'*r!N</
!"AW(ncSFcquu?c^]=69q$6g'q[*0-q@!0/!"Jl.o)nsoo`XslW;ur&qZm$)!!rH.r!N</r!`K4rXSN%
oE=dir<CLHh#RH[q?[!*r<iB/r!`N5r!rZ9!"er.oE=gjp'1KrX8r2)r!E</q@!30r=/Z7rX\o<rt585
oE=dio`k@"YQ4M"r<`E0r!WE2r!iT7r"&]:rXo)AoE=snoEP$pi;gt"r!NB1r=&T5r=8`9rXeu>r=]&B
!#584oEG'q!!`*$r<TA&r<rQ4r!iT7r"&c<r"8o@rY,2DrY5D9o`b$np':C!!"$RDjoG>gr=/]8rX\o<
r=Su@rY,2DrY>AI!#PG7o`k3sp^$^&o`2B"r=/`9r=Ai<r"8o@rY,2DrY>DJrYPMMqZQs(q?Ha#p'CF"
rsG_*rso&=rX\u>rXo&@rY,8Fr>#8HrYPPNr>GVRq$-Ksp^$[%q?kjTdK':Xr=Jr?r=])Cr=o2FrYGJL
rYYSOrYkbT!$(k?q$6[#q$Hs+r<iK2W;lo0rXo)Ar"K&DrY>DJrYPPNrYbYQrYthVrZ1e>q$?a%q$Qm)
rsZL>mf3>"rY#/CrY5>HrYGJLrYYVPr>PYSrZ(nXrZ;(]qZlp&p^-a'r!W</li=a"rtG;ErtYMKr>5JN
rYbYQrYthVrZ2"[r?)%^ruq.Cq?[-.q$Qm)r=&Q4W;ur4rY>DJrYPPNr>GVRrYthVrZ1tZ!$D.^ruh@c
rZV=eq[!*+p^6g)p^I-2r=6.6pAb70()HlcrYYSOrYkbTruD"YrZ;%\!$M4`rZ_@erZhLj#l+f%$N:G.
%/CA1%KI%#!6,$<(B><N)?(QR)u^iW*W@,Z+9!D_+oW\b,QB%g,m#D@-iOGJ$MY#-%/:;/%f?j:!!!l8
)?1WS)u^iV*WI2\*rmD^+TEVa,5rhe,lT+h-3,Fm-ikb'r<i<-q$d32p^[03rXd*MirK)tr>P_VrZ1tZ
rZD._rZV:crZhFgr[%Oj!%7aor[@mu.P(K*q[<6/p^R03q%*B7rt5#+Z2akDrZ(nX!$;+]rZM4arZ_@e
rZqLir[%Umr[@dqr[Rpur[\%$r<rW5r!`E2q%!<5p^mE:!"u:3!WX5]rZ;(]ruh=brZ_:c!$qOis!I^m
!%@gqs!n!us"+.$!\Q)Yq$d01q%!63r"/c<q\%W`cN*qd!$M4`rZ_@erZhIir[%[o-ResCs!n!us"+.$
s"=:(">DPb$k2q@q[WH5r=Ji<rXo)Ar=c.1!$M7as!%Fes!7Ri![]9Br[7aqr@.k!/1^iR/1piR!\Z2\
r\=F.s"jT_p^[65q%3H9r=\o>rtN0Ili@&0s!.Lgs!@Xk![fBEr[Ijss""(""t_DZ/h\k3r\=F.r\FX5
1c72j%K6k4&,[";&c!(<'E&XD(%2.7!!+;ir[%Rkr[.aq.4P6Gs""+#r[e1(0/*;Y!&=I.s"j[3s#'d6
!B3":%f?k9&H*1=&c<:>'D`F@'`]#K!<+;J-RU;j.0:qJ.fLsu/H7=$/cm[[0`Ed/1,C^CrA=X72E1Up
!]`8%q@EN9r"8`;r=f,Dr"]&DdK%o""",KF.K(^t.kE7N/cRI&0+BTi0etL?1GgpG2)[BPr\ss>3BI.$
!^&RUr"/Z9r=]&Bq%W`Ar>,AK!>cTP!!4T!.fLq$/1`A*0)dL*0JP<]1'06g2#]?82E!KQ3;to>3]fD)
4?Pe+4odhH&H!.<')E:>'`JjF(AJ^G(psA:!!"PK/-IOV/h\mW0ENsa1B''61c.'J2E*So3!D<'3]fDc
r]LHL5<hCu5skG\r=]&Br=o&Br"f5Ir##DN!#ju"_uKum/M8Y/0JNJ\"Yqki1c7/h2?c$!3&s#\r]:9G
4Zttn5Q3nO5s[h(6U^kcq%N]@r"T2IrYGGKq&'#Iru.j:">;D^0erY_"Z%tl2)R;k2[MH'3B9,^4$5Yh
r]UQO5X7V$6:+'=6j,qJ7M6@4'E&XD(&/RC(]5-K)>tKP)p&*=!!G#31,C`c1^>lr2E*QS3B@("#!4q0
4[)%or]gHLr^$rZ6UX@37Ros>8P&dnr=o/Er>,>Jr>>DLr#5GOruCk8YQ+b]1c.)h2@2<$3&ioZ3]fGd
r]LZR5<hCu5sdn*6UX@3r^QlX#"_EZ91os5!#5;Fr"f2Hr>>GMr>PVRr>bbVX8r5""Z81r2`Ner3=7f/
4$5Yh5!M7s5lO(K6OcFO77Ka:84Z<E8kViOr_3AfJ,~>

%%EndBinary
grestore
np
50 20.334 mo
6.00001 20.334 li
3.25022 20.334 1.01152 17.9234 1.00006 14.9563 cv
1.00006 14.9568 1.00006 14.9572 1.00006 14.9577 cv
1.00007 14.9589 1.00007 14.9601 1.00008 14.9614 cv
1.00009 14.9628 1.00009 14.9641 1.0001 14.9655 cv
1.00011 14.9669 1.00012 14.968 1.00012 14.9694 cv
1.00013 14.9707 1.00014 14.9718 1.00015 14.973 cv
1.00016 14.9747 1.00017 14.9762 1.00018 14.9778 cv
1.00018 14.9779 1.00019 14.9783 1.00019 14.9784 cv
1.00024 14.9856 1.00031 14.9924 1.00039 14.9995 cv
1.00039 14.9997 1.00039 14.9999 1.0004 15 cv
1.03398 17.9099 3.26306 20.2666 6.00001 20.2666 cv
11.2871 20.2666 li
11.1045 19.3047 11 18.3272 11 17.334 cv
11 11.5587 14.1789 6.26467 19.4642 2.13281 cv
52 2.13281 li
52.3945 2.13281 52.7754 2.1953 53.1445 2.2871 cv
53.1445 2.2871 li
53.1445 2.2871 li
52.2813 1.53712 51.1973 1.06641 50 1.06641 cv
20.9121 1.06641 li
20.9121 1.06641 li
6.00001 1.06641 li
3.24219 1.06641 1.00001 3.459 1.00001 6.40039 cv
1.00001 14.9336 li
1.00001 14.9336 li
1.00001 6.40039 li
1.00001 3.42285 3.24315 1.00001 6.00001 1.00001 cv
50 1.00001 li
52.7568 1.00001 55 3.42285 55 6.40039 cv
55 14.9336 li
55 17.9111 52.7568 20.334 50 20.334 cv
1.00005 14.9547 mo
1.00004 14.9529 1.00004 14.951 1.00003 14.9492 cv
1.00003 14.9494 1.00003 14.9495 1.00004 14.9497 cv
1.00004 14.9508 1.00004 14.9518 1.00005 14.9529 cv
1.00005 14.9535 1.00005 14.9541 1.00005 14.9547 cv
1.00003 14.9453 mo
1.00002 14.9442 1.00002 14.9427 1.00002 14.9416 cv
1.00002 14.9418 1.00002 14.9415 1.00002 14.9417 cv
1.00002 14.9426 1.00002 14.9433 1.00002 14.9442 cv
1.00002 14.9445 1.00002 14.945 1.00003 14.9453 cv
gsave
[17.2552 0 0 17.2552 41.7661 19.3267 ]ct
clp
/0 /Gradient get_res exec grestore
np
50 0 mo
6.00001 0 li
2.69921 0 0 2.87891 0 6.40039 cv
0 14.9336 li
0 18.4521 2.69921 21.334 6.00001 21.334 cv
50 21.334 li
53.2988 21.334 56 18.4521 56 14.9336 cv
56 6.40039 li
56 2.87891 53.2988 0 50 0 cv
50 1.00001 mo
52.7568 1.00001 55 3.42285 55 6.40039 cv
55 14.9336 li
55 17.9111 52.7568 20.334 50 20.334 cv
6.00001 20.334 li
3.24315 20.334 1.00001 17.9111 1.00001 14.9336 cv
1.00001 6.40039 li
1.00001 3.42285 3.24315 1.00001 6.00001 1.00001 cv
50 1.00001 li
.47451 .298039 .27451 0 cmyk
f
11.2871 20.2666 mo
6.00001 20.2666 li
3.26306 20.2666 1.03398 17.9099 1.0004 15 cv
1.02907 17.4892 2.66976 19.5615 4.85548 20.1123 cv
3.73242 19.1328 3.00001 17.6641 3.00001 16 cv
3.00001 7.4668 li
3.00001 4.5254 5.24218 2.13281 8 2.13281 cv
19.4642 2.13281 li
14.1789 6.26467 11 11.5587 11 17.334 cv
11 18.3272 11.1045 19.3047 11.2871 20.2666 cv
1.00039 14.9995 mo
1.00031 14.9924 1.00024 14.9856 1.00019 14.9784 cv
1.00024 14.9855 1.00031 14.9925 1.00039 14.9995 cv
1.00018 14.9778 mo
1.00017 14.9762 1.00016 14.9747 1.00015 14.973 cv
1.00016 14.9746 1.00017 14.9762 1.00018 14.9778 cv
1.00012 14.9694 mo
1.00012 14.968 1.00011 14.9669 1.0001 14.9655 cv
1.00011 14.9669 1.00012 14.9681 1.00012 14.9694 cv
1.00008 14.9614 mo
1.00007 14.9601 1.00007 14.9589 1.00006 14.9577 cv
1.00007 14.9589 1.00007 14.9601 1.00008 14.9614 cv
1.00005 14.9529 mo
1.00004 14.9518 1.00004 14.9508 1.00004 14.9497 cv
1.00004 14.9508 1.00004 14.9518 1.00005 14.9529 cv
1.00002 14.9442 mo
1.00002 14.9433 1.00002 14.9426 1.00002 14.9417 cv
1.00002 14.9425 1.00002 14.9435 1.00002 14.9442 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[19.68 0 0 19.68 .479999 42.88 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 41 
/H 41 
/M[41 0 0 -41 0 41 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 41 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 41 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 41 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 41 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
!!iH.r<`B/r<rQ4r=/Z7r=Ai<rt2F7!u)Fa(*jY3(`4,/)B0Y9*??1C+!;[L+sJ6W,UFca-R^Al.Olr!
/1iIP#lY/.$N1A2%/gY5%fHq:&H*3f!8mi,'c%Q$(`4,/)B0Y9*??1B+!;[L+sJ6W,UFca-R^Al.4Qhu
/1`A*/dMa^$2b//$iLM4%K$_7&,d(<&cWL:!4r4Z()If))&aD4)]Tk=*ZcCG+<_pQ,:"N\-71)g-n-Sp
.P!&$/M8Y/0`;=V$N1A2%/^S5%fHq:&H!.>'!D9K(`4,.)B0V8*$$(A+!;[L+sJ6W(*k1Q-7:/h.4H_r
.kE5'/hSe20JNk?r<iK2r=&T5r=8c:r=Jl=r=T)D^]<j(-lEm@)B0Y9*?H7D+<VgO+sS?Y,palc-R^Al
.Olr"/1iJ,0/,(71,Ae8r!WK4r!iT7r"&c<r"8l?rY+Anb5a"1)B0Y9*?H7D+<VgO+sS<X,palb-R^Al
.Olr"/1iJ,0/,(70etO@$4?\=rXA]6r=8`9rXeu>r=]&B!#2U:,9%UB*?H7D+<VgO+sS<X,UFca-R^Al
.Olr"/1iJ,0/#"60a'6e1Ggrd$iLM4%K-e7&,d(<&cE@@'E/]M!%@mf*?H7D+<VgN+sS<X,UFca-R^Al
.Olr"/1iJ,0/#"50etL?1c.'JrX8Z5r=/Z7r=Ai<r=Sr?rY,2DeH">(.39NP+!;^M+sJ6W,UFca-R^Al
.Olr"/1iG+0/#"50etL?1c.'J2E)$B%/gY5%fHq:&H*4=')iRB'`SpE!4DkU+!2UJ+X/*T,U=Z_-7:2i
.4Qet.kE8(/hSe20JP=<1GgpG2E!KR3;s?b%K-b:%fHq:&H*4=')`LB'`AcM!"L+o+X/*T,U=Z_-7:2i
.2jWb.k</%/M8Y/0JG4:1,CaD2)[?O2`NfX%/gY5%fHq:&H*4=')`LB'`AdH(<$:>!%9!7+sS?Y,pjrd
-n$Mn.Olr"/1iJ,0/,(71,:XB1c7-K2`E]U3BB5"%K-e8&,d(;&cE@@'E&XC(&f!6!6,!g+sS?Y,pjrd
-R^Dm.Olr"/1iJ,0/,(71,:XB1c7-K2E*TT3BB2_4:Mbu%fHq:&H!.=')`LB'`8^F(B52S!$3C2,palc
-R^Al.Olr"/1iJ,0/,(71,:XA1c7-K2@2<%3&s#\4$5Vgr=8`9rXeu>r=]&Br=o/Er>,AK[/g((.O?Af
-7:2i.4Qet/1`A*/h\n40ekF>1GgpG2E!KR3&s#\4$5Vg5!BGdr"&c<r"8l?r=f,Dr"]/Gr>,GNg&T\(
-mg8g-n$Mo.P!&$/M8Y/0/,+81,:XB1c70L2`NcW3]]>b4?Yhk5<o&Vr=Jo>r=]&Br"T)Er>,>JrYYY8
YlH1"-n$Mo.P!&$/M8Y/0/,(71,:XB1c70L2`NcW3]]>a4?Yhk5!M:trX\u>!"f)@r"AuBr"T)Er>,>J
r"uU;#q.5P.P!&$/M/Rs0/#"50etL?1c.'J2E*TT3B9,^4$5Vg5!D1r5X@^Ir=Jo>r"AuBr"T)Er>,>J
r##GOaoLQ(-n6\s.kE8(/hSe20JP=<1GgpG2E!KR3&ru[3]fGd4[)%o5X7V%6::_`r=Sr?r=f,Dr>#8H
r"o;Kr>G&(_#Po7.kE5'/hSe20JP=<1GgpG2E!KQ3&ru[3]fGd4[)%o5X7V%6:4./&H*4=')`LB'`AdF
(Ao!I)#Y?P)Qs,Y/1`A*/h\n40etL?1c.'I2E*QS3&s#\4$4!84[)%o5X7V%6:4+.77I.er=]&Br=o/E
rYGDJr>>GMrYi?Jp&HQo/hSe20JP=<1GgpG2)[?O3&ioZ3]fGd4[)%o5X7V$6:4+.6q'R7&J=sSr=f,D
r"]2Hr"o;Kr#,JPru9hqd/YRI0/,(71,:XA1c7-K2E*TT3BB2_4?Pbj5!M7s5s[h(6UX=27Rfm=r=]&B
r=o/Er>,>Jr>>GMr>PYSY5g"*0JP:;1G^jE2)[?O3&ioZ3]fGd4[)%o5<qJ"6:+%-6q'R77n?0B&c`RC
'E&XC(&\pH(]5-K)>tKP)ZUk]!%9QV1,:XB1c70L2`NcW3]]>b4?Yhk5<hCu5sdn*6psI57Rp!?8P2VR
'DrRC(&\pH(]5-K)>tKP)u^i,!8IQ(1,:XB1c70L2`NcW3]]>a4?Yhk5!M:t5sdn*6psI57Rp!?8P)NI
9+r!:'`AdF(B#'I)#Y?N)Z:WQ*;KTD!%9W[1c70L2`NcW3]]>a4?Pbj5!M:t5sdn*6psI57Ros>8P)NH
92&%W'`AdG('#-K(]5-K)>tKP)uL]U*NoGR1c70L2`NcW3BB5`4?Pbj(d:/L5X@_'6UX=277Kd;84Z<E
8kViO9ht[%r>#8Hr"o;Kr>GPPr#>SSr>ifVli8Im2E*QS3B9,]4$5Vg5!D1r5X@_'6UX=277Ka:84Z<E
8kViO9hnGZ'`AdF(Ao!I)#Y?N)Z1QQ*;poX*pE[F!%9cb3&ioZ3]fGd4[)%o5X7V%6:4+.77B[87n?0B
8kM`M9MJ8W:Jamd(&f!H(]>3K)?(QQ)ZUiU*;poV*j5Pc3&ioZ3]fGd4[)%o5X7V$6:4+.6q'R77n?0B
8kM`M$;=/h:/=Y^;,J&CrYGDJr>>GMrYk\Rr>bbVr>tt\ZiL"(-oj=L4$5Vg5!D1r5X@\&6:4./77Ka:
84Z<E8kViO9heAY:Jakb;H!H/r>5DLr#,GOr>Y\Tr>keWrZBenf)R9]4$5Vg5!D1q5X@\&6:4./77Ka:
84Z<E8kVfN9heAX:Jakb;GpFm()Hibr>>GMr>PVRr#G\Vr#YeY!$M7@Z2c:84?Yhk5<hCu5sdn*6psI5
7Rp!?8P2TJ92&#R:/4S]:f1+g;cH^rr>5GMrtt\Pr>PVRr#G\Vr#YeYrZJBE$9^O95!M:t5sdn*+%/Lc
7Rfm=84cBF91qrP9hnGZ:f("e;H$Oo<E<-:(]5-K)>tKP)uL]S*W7&X+8d8'!9X>15!D1r5X@_'6UX=2
7Rfm<84cBF8kViO9hnGZ:f("e;H$Oo<E3($=8Wp6)>tKP)uL]S*W7&X+8d8]+mo?I!%:&s5X@_'6UX=2
7Rfm<84Z<E8kViO9hnGZ:f("e;H$Ln<E3(#='/T()#Y?N)Z1QQ*<$rY*W7&W+8m>\+g1ka5X@_'6UX=2
77Kd;84Z<E8kViO9hnGZ:f("!;,U=k<)cju<``C*=]u[@)>tKO)uUcT*W7&W+8m>\+o`as!;?IA6:+%,
6q'O67Rp!?8P2TJ9MA/U:/=\_;,L4h;cH^r<`W:(=BSg2>Q#H=)Z1QQ*;poV*rI,Y+T3J^,2N=J!%L?'
6psI57Rp!?8P2TJ9MA/U:/=Y^;,L4h;cH^r<`W:(=BSg2>?kDN)?(QP)uUcT*W7&W+8m>\+oNVb,Hh(q
6psI57Rp!?8P2TJ9MA/T:/=Y^:f1+g;cH^r<`W:(=BSg2>?b?<?%;~>

%%EndBinary
grestore
np
1.0004 15 mo
1.00039 14.9999 1.00039 14.9997 1.00039 14.9995 cv
1.00039 14.9997 1.00039 14.9999 1.0004 15 cv
1.00019 14.9784 mo
1.00019 14.9783 1.00018 14.9779 1.00018 14.9778 cv
1.00018 14.978 1.00019 14.9783 1.00019 14.9784 cv
1.00015 14.973 mo
1.00014 14.9718 1.00013 14.9707 1.00012 14.9694 cv
1.00013 14.9705 1.00014 14.972 1.00015 14.973 cv
1.0001 14.9655 mo
1.00009 14.9641 1.00009 14.9628 1.00008 14.9614 cv
1.00009 14.9626 1.00009 14.9642 1.0001 14.9655 cv
1.00006 14.9577 mo
1.00006 14.9572 1.00006 14.9568 1.00006 14.9563 cv
1.00006 14.9558 1.00005 14.9552 1.00005 14.9547 cv
1.00005 14.9541 1.00005 14.9535 1.00005 14.9529 cv
1.00005 14.9545 1.00006 14.956 1.00006 14.9577 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 48.16 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'bqK"()@]&(B~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~3]];a4?Pbj4o~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00006 14.9563 mo
1.00006 14.9559 1.00005 14.9551 1.00005 14.9547 cv
1.00005 14.9552 1.00006 14.9558 1.00006 14.9563 cv
gsave
[1.20023 26.6715 -26.6715 1.20023 26.5972 -1.89697 ]ct
clp
/3 /Gradient get_res exec grestore
np
1.00004 14.9497 mo
1.00003 14.9495 1.00003 14.9494 1.00003 14.9492 cv
1.00003 14.9478 1.00003 14.9467 1.00003 14.9453 cv
1.00002 14.945 1.00002 14.9445 1.00002 14.9442 cv
1.00003 14.946 1.00003 14.9479 1.00004 14.9497 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 48.16 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'bqK"()@]&(B~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~3]];a4?Pbj4o~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00003 14.9492 mo
1.00003 14.9478 1.00003 14.9467 1.00003 14.9453 cv
1.00003 14.9467 1.00003 14.9478 1.00003 14.9492 cv
gsave
[1.20023 26.6715 -26.6715 1.20023 26.5972 -1.89697 ]ct
clp
/3 /Gradient get_res exec grestore
np
1.00002 14.9417 mo
1.00002 14.9415 1.00002 14.9418 1.00002 14.9416 cv
1.00001 14.9389 1.00001 14.9363 1.00001 14.9336 cv
1.00001 14.9363 1.00001 14.939 1.00002 14.9417 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 .48 48.16 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'bqK"()@]&(B~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~3]];a4?Pbj4o~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1.00002 14.9416 mo
1.00001 14.939 1.00001 14.9362 1.00001 14.9336 cv
1.00001 14.9336 li
1.00001 14.9336 li
1.00001 14.9363 1.00001 14.9389 1.00002 14.9416 cv
gsave
[1.20023 26.6715 -26.6715 1.20023 26.5972 -1.89697 ]ct
clp
/3 /Gradient get_res exec grestore
np
53.1445 2.2871 mo
52.7754 2.1953 52.3945 2.13281 52 2.13281 cv
19.4642 2.13281 li
19.9307 1.76807 20.4135 1.41257 20.9121 1.06641 cv
50 1.06641 li
51.1973 1.06641 52.2813 1.53712 53.1445 2.2871 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[35.04 0 0 2.4 18.72 61.12 ]ct
snap_to_device
<<
/T 1
/W 73 
/H 5 
/M[73 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!s8W-!s8W-!s8W-!sA`0"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i2"U,&5"U,&5
"U,&5"U,&5"U"r2"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&6"pP89"pP89"pP25"9\i1"9\i1"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,)7"pP89
"pP89"pP89"pP89"pP89"pP89"pP89"pP88"U,&5"U,&5"U,&5"U,&5"pP89"pP89"pP89"pP89"pP89
"pP89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=#6tJ="pP89"pP89"pP89"pP89"pP89"pP89"pP89
"pYA<#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ>#RC\A#RC\A#Q~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~#RC\A#RC\A#RC\B#mgnE#mgnE#mq"H$47+I$47+I$47+J$O[=M$O[=M$OdFP$k*OQ$k*OQ$k*OQ%1NaU
%1NaU%1WjX%LNOM$47+I$47+I$47.K$O[=M$O[=M$k*OQ$k*OQ$k*OQ$k*RS%1NaU%1NaU%LrsY%LrsY
%LrsY%LrsZ%hB0]%hB0]&.f3X$k*OQ$k*OQ$k*OQ$k3XT%1NaU%1NaV%LrsY%LrsY%LrsY%Ls![%hB0]
%hB0^&.fBa&.fBa&.fBa&.fEc&J5Te&J5Ta%1NdW%LrsY%LrsY%LrsY%hB0]%hB0]%hB3_&.fBa&.fBa
&.fBa&.oKd&J5Te&J5Wg&eYfi&eYfi&eYfi&ebol',)#m%hB0]%hK9`&.fBa&.fBa&.fBb&J5Te&J5Te
&J>]h&eYfi&eYfi&eYfi'+toj',)#m',)#n'GM5q'GM5q'GM5q'bqGu'`~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
4.85548 20.1123 mo
2.66976 19.5615 1.02907 17.4892 1.0004 15 cv
1.00039 14.9999 1.00039 14.9997 1.00039 14.9995 cv
1.00031 14.9925 1.00024 14.9855 1.00019 14.9784 cv
1.00019 14.9783 1.00018 14.978 1.00018 14.9778 cv
1.00017 14.9762 1.00016 14.9746 1.00015 14.973 cv
1.00014 14.972 1.00013 14.9705 1.00012 14.9694 cv
1.00012 14.9681 1.00011 14.9669 1.0001 14.9655 cv
1.00009 14.9642 1.00009 14.9626 1.00008 14.9614 cv
1.00007 14.9601 1.00007 14.9589 1.00006 14.9577 cv
1.00006 14.956 1.00005 14.9545 1.00005 14.9529 cv
1.00004 14.9518 1.00004 14.9508 1.00004 14.9497 cv
1.00003 14.9479 1.00003 14.946 1.00002 14.9442 cv
1.00002 14.9435 1.00002 14.9425 1.00002 14.9417 cv
1.00001 14.939 1.00001 14.9363 1.00001 14.9336 cv
1.00001 14.9336 li
1.00001 6.40039 li
1.00001 3.459 3.24219 1.06641 6.00001 1.06641 cv
20.9121 1.06641 li
20.4135 1.41257 19.9307 1.76807 19.4642 2.13281 cv
8 2.13281 li
5.24218 2.13281 3.00001 4.5254 3.00001 7.4668 cv
3.00001 16 li
3.00001 17.6641 3.73242 19.1328 4.85548 20.1123 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[21.12 0 0 20.16 .479999 43.36 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 44 
/H 42 
/M[44 0 0 -42 0 42 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
oDmkOXoSA"ncA:_oE,'rrW(gVq?#OSb5hA>o)eUfp&k@!j8o8]oE(ulo`FdgpB:3oliHAQ_>rd"qZ?Ko
pB:3oq$-EkklU_ao)Q6"p]L6np]^Htq?I!+q#LHsm/lh\W;ul!p]UBrq$-^$q$7$.!<MNgn,rUlec=2"
q?6Wuq$-[#q?Zs)rsJ5sn,rUlqZNkurri0%q?Hg%q?[$+!"&K/rX8H%n,r._\H)."rWW-&q?Qp(q[*-,
q@!92quZ?inHA^ml2\U"r<E-(q?Zs)q[36/r!`N5!Y,85o)o!qoE=diW;ui$q?R'-rX&H/r!WE2r!iN5
!"\i,n-&@er!(CGh#R9Wr<`?.r!WE2r!iT7r"&c<q?-?moEFpmrW'#"rs8Q0r!N?0r!`N5r!rW8r=Jr?
!YH"HoE=dipBLI!YQ4M"rX&N1r!WE2rXJc8r=Ai<r"8l?rtG22oEFmlq$6m)i;gt"rsJZ3rXA]6r!rZ9
rXer=rY#/Cr=o,3q$$Bpp]pU#W;ur+r!`Q6r!rZ9rXf#?r"ArArY5>HrYG/1p]gBrp^$m+_uSp"rs\f7
rXSl;rXeu>r=])Cr=o5GrYGGK!#YP9p]gEsp^$[%o`2B"rseo:rX\u>r=Sr?rY,5ErY>DJr>5GMrYbP:
qZcj$p^$[%q[0;&!=fY?&,d(<&cE@A'E&XE(&f!I(]G9N)?(QS)u9d6#P\T!$2=k[!7CiI&,m.>&cNF@
'E/^F(&f!I(]G9N)?(QR)u^fW*W?9:#PeZ$$2Y)/$N(:2!<*T/')iRD'`JjH(B,-K)#bEQ)?:]T)u^iV
*W@,V#P\T#$2=l'$iURH!:Kpf')iRD'`JjH(B,-K)#bEP)ZC]T*<$uX*rR/^+9r/G#l=r($MY#)$igb'
!58I5'E/^F(&f!J(]P?M)#tTS)u^iV*W@,[+8d5_+X&'*#l+f'$Mt5+%/UL5!<*`4(B,-L)#Y?P)ZLcU
*<$uX*rR/\+T3G`+pK58,9nH>#l+f%$Mb).%/CA1%^Q00!<3i6(]P?O)>tKQ)u^fW*W@,Y+9*J_+oW\b
,60"g,lf:f$2k5+$i(5/%J^M6&**`1!<!c6)?1WS)u^iV*<7/[+8m>^+oW\b,60"g-2o4o-RU;K$2Fr+
$i(22%J^J3%f$X7!<3r9)ZC]U*<$uX*WdE++TES`+o`bc,60"g-2o7k-iPOn.K'VK$iLM/%J^M4&,QpY
!94%\)B'Ro*<.&Y*r[8\+TEVa,6&ne,QK.i-N>Im./k[q.fLsu$N(;-%/gY1%f?k5&H3::!3uS)*<$uX
*rd>]+TEVa,6&ne,l]1j-N5Cm./taq.fV$u/-7CT0)Z.X$iLM0%K$_3&,d(7&HEHD!!3-@*r[8]+T<Pa
,5rhe,lT(i-N5Cm./k[q.fLsu/H.4$0)dL(0_u4V%JUG3&,6_7&c<:A'AEN5!<"#?+oNSb,Q8tg-2o4k
-iPOo.K(^r/,h+"/cI@-0/,(70etKmq$m63q%*E8r"8rAq\&i@!#2C4ruq@cs!.Lg![T0?r[.[or[Ijs
r[S%$/1giRr[n7*0JNJ\!&FL/!&XW`q%!?6r"/Z9r=]&Bq@pXDli@#0s!7Ri![]9Br[7gs.4Y9H!%e+$
!\Q)Yr\4@,r\=O21Go(gs#0ldrXSi:p^mE:q@`Z=r=o/Emf9s"#UC]B-71)f-n,'Ds!n%!r[\%$r[n7*
0/3A[">V_g1Go%f!]Dtrr]'idr=Ai<!"o#=r=]&Bq@rfArt_R6!@B2n-ithH.fV!u/,q1"/H[UY0/3A[
s"aU1r\Oa82)[BPr\t*B3]]>a%hJIIr"8l?p_3W@r"]/Gr>3l^fDl%&-n-Spr@81*/M/S-0/#"51&`s.
1]K<32?#K92`NcWr]13E4$5Yh55c&h&c34>'DrRC(&8XD(BG<hW;m8T.P!##/1iG+/hd2X"u.hf1G^jE
r\Xa82E1Up#!"\)4$,Pf#X(=75!M7s&.naOr=\r?q\8uDr>,>Jq\]>N[/fk"!\>lSr[nC.0/,+81,Ahb
!]2blr\ap=2`NfX3rV2F4?Pbj5!M:25QX5<6MM2l'E&XC(&8XD(]5-K)#tT;!5nj;0)dL-0JG4:1,Jkc
"Z8.q2`E_q3<hN*4$5Vg4oRVM5<qJ"5sdq+r^?_ur=er?r>#>JrtbPLr##AMr>PYSW;m2X0JP:;1G^jE
r\Xg:2E*TT%ll[34$,Pe4Zttm5<qJ"62j4M6j6"K7Rou^r=f,Dr"]/Gq\T)Gr>GPPr>P_VaT19"#r47l
1GgsH2E!Mn3!VH(3]fDc4[&d.rBLlZ6:+%-6q'R77n6*@8P)PN'`8^E(B#'J)#P9M)Z:WR*<$uT!3cG1
1c.'I2E*QS3B9/"3t+564[)%o5<qM#6:+'=6k)RR7Ros>8P)NI92&#RJ,~>

%%EndBinary
grestore
np
48 63 mo
39.7285 63 33 56.2705 33 48 cv
33 48.168 33.0195 48.332 33.0254 48.5 cv
33.0468 47.8528 33.1094 47.2152 33.2104 46.591 cv
35.336 47.1763 37.6103 47.6419 39.9981 47.9667 cv
39.9981 47.9775 39.9981 47.9882 39.9981 47.999 cv
39.9981 52.418 43.584 56 48 56 cv
52.4199 56 56.0019 52.418 56.0019 47.999 cv
56.0019 47.9882 56.0019 47.9774 56.0019 47.9666 cv
58.3902 47.6417 60.664 47.1762 62.7891 46.5906 cv
62.8904 47.2153 62.953 47.8523 62.9746 48.5 cv
62.9805 48.332 63 48.168 63 48 cv
63 56.2705 56.2715 63 48 63 cv
48 52 mo
45.9217 52 44.2048 50.4059 44.017 48.3701 cv
45.3206 48.4557 46.6499 48.5 48 48.5 cv
49.3508 48.5 50.6805 48.4557 51.985 48.3699 cv
51.7975 50.4059 50.0822 52 48 52 cv
62.9999 47.9495 mo
62.9998 47.9237 62.9997 47.8982 62.9995 47.8725 cv
62.9997 47.8982 62.9998 47.9237 62.9999 47.9495 cv
58.6189 37.4156 mo
58.6182 37.415 58.6183 37.4151 58.6176 37.4144 cv
58.618 37.4147 58.6185 37.4153 58.6189 37.4156 cv
58.6122 37.4089 mo
58.6112 37.4079 58.6106 37.4074 58.6096 37.4064 cv
58.6103 37.407 58.6115 37.4083 58.6122 37.4089 cv
58.6052 37.4019 mo
58.6038 37.4006 58.603 37.3997 58.6016 37.3984 cv
58.6026 37.3994 58.6042 37.4009 58.6052 37.4019 cv
58.5981 37.3948 mo
58.5964 37.3932 58.5953 37.392 58.5936 37.3904 cv
58.5949 37.3917 58.5968 37.3935 58.5981 37.3948 cv
58.5915 37.3882 mo
55.9438 34.7456 52.3157 33.0843 48.3075 33.0031 cv
48.3068 33.0031 li
48.3032 33.003 48.3001 33.0029 48.2966 33.0029 cv
48.2961 33.0029 48.2964 33.0029 48.296 33.0029 cv
52.3094 33.081 55.9413 34.7428 58.5915 37.3882 cv
48.2955 33.0029 mo
48.295 33.0028 48.2953 33.0029 48.2948 33.0028 cv
48.2918 33.0028 48.2884 33.0027 48.2854 33.0027 cv
48.2849 33.0027 48.285 33.0027 48.2845 33.0027 cv
48.2886 33.0027 48.2915 33.0028 48.2955 33.0029 cv
48.2842 33.0026 mo
48.2837 33.0026 48.2838 33.0026 48.2833 33.0026 cv
48.2798 33.0026 48.2772 33.0025 48.2737 33.0025 cv
48.2732 33.0024 48.2725 33.0024 48.272 33.0024 cv
48.269 33.0024 48.2653 33.0023 48.2623 33.0023 cv
48.2617 33.0022 li
48.2692 33.0024 48.2766 33.0025 48.2842 33.0026 cv
48.2616 33.0022 mo
48.2611 33.0022 48.261 33.0022 48.2605 33.0022 cv
48.2575 33.0022 48.2538 33.0021 48.2507 33.0021 cv
48.2503 33.002 48.2495 33.002 48.249 33.002 cv
48.2455 33.002 48.2429 33.0019 48.2394 33.0019 cv
48.2389 33.0019 48.238 33.0019 48.2375 33.0018 cv
48.2164 33.0015 48.1946 33.0012 48.1735 33.001 cv
48.173 33.001 48.1728 33.001 48.1723 33.001 cv
48.202 33.0013 48.2319 33.0017 48.2616 33.0022 cv
48.1705 33.0009 mo
48.1704 33.0009 li
48.1679 33.0009 48.1654 33.0009 48.1629 33.0009 cv
48.1621 33.0009 li
48.1651 33.0009 48.1675 33.0009 48.1705 33.0009 cv
48.159 33.0008 mo
48.1588 33.0008 li
48.1563 33.0008 48.1544 33.0008 48.1519 33.0008 cv
48.1516 33.0007 li
48.1542 33.0008 48.1564 33.0008 48.159 33.0008 cv
48.1469 33.0007 mo
48.1468 33.0007 li
48.1448 33.0007 48.1424 33.0007 48.1404 33.0006 cv
48.1403 33.0006 li
48.1423 33.0007 48.1448 33.0007 48.1469 33.0007 cv
48.1354 33.0006 mo
48.1353 33.0006 li
48.1333 33.0006 48.1306 33.0006 48.1286 33.0005 cv
48.1286 33.0005 li
48.1306 33.0006 48.1334 33.0006 48.1354 33.0006 cv
48.0882 33.0002 mo
48.0881 33.0002 li
48.0861 33.0002 48.0842 33.0002 48.0822 33.0002 cv
48.0821 33.0002 li
48.0841 33.0002 48.0862 33.0002 48.0882 33.0002 cv
48.0761 33.0002 mo
48.0759 33.0002 li
48.0744 33.0002 48.072 33.0002 48.0705 33.0002 cv
48.07 33.0002 48.0709 33.0002 48.0704 33.0002 cv
48.0719 33.0002 48.0746 33.0002 48.0761 33.0002 cv
48.0644 33.0001 mo
48.0643 33.0001 li
48.0628 33.0001 48.0603 33.0001 48.0588 33.0001 cv
48.0588 33.0001 li
48.0608 33.0001 48.0624 33.0001 48.0644 33.0001 cv
48.0523 33.0001 mo
48.0522 33.0001 li
48.0502 33.0001 48.049 33.0001 48.047 33.0001 cv
48.0469 33.0001 li
48.049 33.0001 48.0503 33.0001 48.0523 33.0001 cv
48.0409 33 mo
48.0409 33 li
48.0388 33 48.0372 33 48.0352 33 cv
48.0352 33 li
48.0372 33 48.0389 33 48.0409 33 cv
48.0282 33 mo
48.0281 33 li
48.0266 33 48.0251 33 48.0236 33 cv
48.0236 33 li
48.0251 33 48.0267 33 48.0282 33 cv
48.016 33 mo
48.0159 33 li
48.0144 33 48.0132 33 48.0117 33 cv
48.0117 33 li
48.0132 33 48.0144 33 48.016 33 cv
gsave
[12.6892 0 0 12.6892 47.9058 63.5 ]ct
clp
/1 /Gradient get_res exec grestore
np
48 32 mo
39.1602 32 32 39.168 32 48 cv
32 56.8359 39.1602 64 48 64 cv
56.832 64 64 56.8359 64 48 cv
64 39.168 56.832 32 48 32 cv
48 33 mo
56.2715 33 63 39.7295 63 48 cv
63 56.2705 56.2715 63 48 63 cv
39.7285 63 33 56.2705 33 48 cv
33 39.7295 39.7285 33 48 33 cv
0 .5 1 0 cmyk
f
56.0019 47.999 mo
56.0019 44.9355 54.2539 42.3008 51.7188 40.957 cv
50.5313 44.9297 li
51.4219 45.6641 52.002 46.7578 52.002 47.999 cv
52.002 50.209 50.207 52 48 52 cv
45.7969 52 44 50.209 44 47.999 cv
44 46.8887 44.459 45.8828 45.1934 45.1572 cv
48.0351 47.999 li
48.0351 40 li
40.0332 40 li
42.3613 42.3291 li
40.9043 43.7764 39.9981 45.7822 39.9981 47.999 cv
39.9981 52.418 43.584 56 48 56 cv
52.4199 56 56.0019 52.418 56.0019 47.999 cv
0 0 0 1 cmyk
f
48 48.5 mo
46.6499 48.5 45.3206 48.4557 44.017 48.3701 cv
44.0057 48.2478 44 48.1242 44 47.999 cv
44 46.8887 44.459 45.8828 45.1934 45.1572 cv
48.0351 47.999 li
48.0351 40 li
40.0332 40 li
42.3613 42.3291 li
40.9114 43.7693 40.0069 45.7627 39.9981 47.9667 cv
37.6103 47.6419 35.336 47.1763 33.2104 46.591 cv
34.3645 39.4619 40.5497 34 48 34 cv
55.4489 34 61.633 39.4622 62.7891 46.5906 cv
60.664 47.1762 58.3902 47.6417 56.0019 47.9666 cv
55.9896 44.917 54.2449 42.296 51.7188 40.957 cv
50.5313 44.9297 li
51.4219 45.6641 52.002 46.7578 52.002 47.999 cv
52.002 48.1241 51.9962 48.2478 51.985 48.3699 cv
50.6805 48.4557 49.3508 48.5 48 48.5 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[30.72 0 0 16.32 32.64 14.56 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 64 
/H 34 
/M[64 0 0 -34 0 34 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 64 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 64 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 64 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 64 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
_#V=Q!!0n<_Z7FO`!-,D_$\-]]`?%Xr!:+M`rN^Oa:%hP_&(2n\H'b^p^Y+\b5f!ObS'U^_'I8*[/eJe
oG,1lcN(9Ocku<j_(j=;YlN2kn/K2&df?QOe0"*#_*6BLXT6orlls86f)ViOfHof/_+WG]W;tX#kU=8E
gAn,OgaqS=_-#LnV#]@*j=e>UhZ0DOi%j:I_.DR*i;g[o_DM<N_/$pg^Au24r].f8`;mRO`]X/]_0F!#
])]o:qEMfGaT/jOb!Pki_1g&4[fFWAp-ulWblG-Oc:RY"_33+EZN/?Gnk?lfd/^EOdSK@._4T0VY5m'N
mSgs!eGu]OelM-<_5u5gWrUdTl<1s0f`7uOg0EiH_7A;#VZ>L[k$Z$@h#O8OhIGVV_8b@4UB'4aib$$O
i;hg:_#V>d!,99u_Z7FO`,5Kj_:lj.r;_?~>

%%EndBinary
grestore
np
44.017 48.3701 mo
42.647 48.2801 41.3057 48.1445 39.9981 47.9667 cv
40.0069 45.7627 40.9114 43.7693 42.3613 42.3291 cv
40.0332 40 li
48.0351 40 li
48.0351 47.999 li
45.1934 45.1572 li
44.459 45.8828 44 46.8887 44 47.999 cv
44 48.1242 44.0057 48.2478 44.017 48.3701 cv
51.985 48.3699 mo
51.9962 48.2478 52.002 48.1241 52.002 47.999 cv
52.002 46.7578 51.4219 45.6641 50.5313 44.9297 cv
51.7188 40.957 li
54.2449 42.296 55.9896 44.917 56.0019 47.9666 cv
54.6953 48.1443 53.3539 48.2799 51.985 48.3699 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~!!!$$!sAc3#7(VC$OdIS%hK<c',2/s(Dn#.)]Tk>+!;^N,:"Q^-R^Dn/1iJ-0JP==1c70M3&s#]4?Ykm
5<qM$6UX@47n?3D92&&T:Jand;cHat='/U/>?kH??XR;O@q9._B4u!oCM[j*DfB]:F*)PJGBeCZH[L6j
It3*%K7nr5LPUeEMi<XUO-#KePE_>uQ^F20S"-%@T:hmPUSO``Vl6SpX/rG+YHY:;Za@-K\%&u[]=bhk
^;%J"_Sa=2`lH0Bb0/#RcHjkbdaZguf@\d1gYCWAhr*JQj5f=akNM0qlg4$,n*ol<oCV_Lp\=R\qu$El
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
np
47.6814 33.0033 mo
47.6816 33.0033 li
47.6814 33.0033 li
47.6923 33.0031 mo
47.6933 33.0031 li
47.6928 33.0031 47.6928 33.0031 47.6923 33.0031 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.3075 33.0031 mo
48.307 33.0031 48.3073 33.0031 48.3068 33.0031 cv
48.3075 33.0031 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!$#!<~>
<~!!!!!!!!*'!r~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.7032 33.0029 mo
47.7042 33.0029 47.7043 33.0029 47.7052 33.0028 cv
47.7047 33.0029 47.7037 33.0029 47.7032 33.0029 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.2966 33.0029 mo
48.2961 33.0029 48.2954 33.0029 48.2948 33.0028 cv
48.2953 33.0029 48.295 33.0028 48.2955 33.0029 cv
48.296 33.0029 li
48.2964 33.0029 48.2961 33.0029 48.2966 33.0029 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!$#!<~>
<~!!!!!!!!*'!r~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.296 33.0029 mo
48.2955 33.0029 li
48.296 33.0029 li
47.7145 33.0027 mo
47.7154 33.0027 47.7158 33.0026 47.7167 33.0026 cv
47.7157 33.0026 47.7155 33.0027 47.7145 33.0027 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.2854 33.0027 mo
48.2848 33.0027 48.2838 33.0026 48.2833 33.0026 cv
48.2838 33.0026 48.2837 33.0026 48.2842 33.0026 cv
48.2845 33.0027 li
48.285 33.0027 48.2849 33.0027 48.2854 33.0027 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!$#!<~>
<~!!!!!!!!*'!r~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.2845 33.0027 mo
48.2842 33.0026 li
48.2845 33.0027 li
47.7262 33.0025 mo
47.7271 33.0024 47.7271 33.0024 47.7281 33.0024 cv
47.7276 33.0024 47.7267 33.0024 47.7262 33.0025 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.2737 33.0025 mo
48.2732 33.0024 48.2725 33.0024 48.272 33.0024 cv
48.2725 33.0024 48.2732 33.0024 48.2737 33.0025 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!$#!<~>
<~!!!!!!!!*'!r~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.7376 33.0023 mo
47.7381 33.0022 47.7391 33.0022 47.7396 33.0022 cv
47.7385 33.0022 47.7386 33.0022 47.7376 33.0023 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.2623 33.0023 mo
48.2613 33.0022 48.2615 33.0022 48.2605 33.0022 cv
48.261 33.0022 48.2611 33.0022 48.2616 33.0022 cv
48.2617 33.0022 li
48.2623 33.0023 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!$#!<~>
<~!!!!!!!!*'!r~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.2617 33.0022 mo
48.2616 33.0022 li
48.2617 33.0022 li
47.7491 33.0021 mo
47.7496 33.0021 47.7506 33.002 47.7511 33.002 cv
47.7506 33.002 47.7496 33.002 47.7491 33.0021 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.2507 33.0021 mo
48.2502 33.002 48.2495 33.002 48.249 33.002 cv
48.2495 33.002 48.2503 33.002 48.2507 33.0021 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!$#!<~>
<~!!!!!!!!*'!r~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.7605 33.0019 mo
47.761 33.0019 47.7621 33.0019 47.7626 33.0018 cv
47.7621 33.0019 47.761 33.0019 47.7605 33.0019 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.2394 33.0019 mo
48.2389 33.0019 48.238 33.0019 48.2375 33.0018 cv
48.238 33.0019 48.2389 33.0019 48.2394 33.0019 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!$#!<~>
<~!!!!!!!!*'!r~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.8263 33.001 mo
47.8272 33.001 47.8287 33.001 47.8296 33.0009 cv
47.8286 33.001 47.8273 33.001 47.8263 33.001 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.1735 33.001 mo
48.1725 33.001 48.1714 33.001 48.1704 33.0009 cv
48.1705 33.0009 li
48.171 33.001 48.1718 33.001 48.1723 33.001 cv
48.1728 33.001 48.173 33.001 48.1735 33.001 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!$#!<~>
<~!!!!!!!!*'!r~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.1723 33.001 mo
48.1718 33.001 48.171 33.001 48.1705 33.0009 cv
48.171 33.001 48.1719 33.001 48.1723 33.001 cv
47.8369 33.0009 mo
47.8384 33.0009 47.8397 33.0008 47.8411 33.0008 cv
47.8396 33.0008 47.8385 33.0009 47.8369 33.0009 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.1629 33.0009 mo
48.1614 33.0008 48.1603 33.0008 48.1588 33.0008 cv
48.159 33.0008 li
48.16 33.0008 48.1611 33.0008 48.1621 33.0009 cv
48.1629 33.0009 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!$#!<~>
<~!!!!!!!!*'!r~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.1621 33.0009 mo
48.1611 33.0008 48.16 33.0008 48.159 33.0008 cv
48.1599 33.0008 48.1611 33.0008 48.1621 33.0009 cv
47.848 33.0008 mo
47.8499 33.0007 47.8513 33.0007 47.8532 33.0007 cv
47.8517 33.0007 47.8495 33.0007 47.848 33.0008 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.1519 33.0008 mo
48.1504 33.0007 48.1483 33.0007 48.1468 33.0007 cv
48.1469 33.0007 li
48.1484 33.0007 48.1501 33.0007 48.1516 33.0007 cv
48.1519 33.0008 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!$#!<~>
<~!!!!!!!!*'!r~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.1516 33.0007 mo
48.1501 33.0007 48.1484 33.0007 48.1469 33.0007 cv
48.1488 33.0007 48.1497 33.0007 48.1516 33.0007 cv
47.8595 33.0006 mo
47.8614 33.0006 47.8627 33.0006 47.8646 33.0006 cv
47.8626 33.0006 47.8615 33.0006 47.8595 33.0006 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.1404 33.0006 mo
48.1384 33.0006 48.1374 33.0006 48.1353 33.0006 cv
48.1354 33.0006 li
48.1374 33.0006 48.1383 33.0006 48.1403 33.0006 cv
48.1404 33.0006 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!$#!<~>
<~!!!!!!!!*'!r~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.1403 33.0006 mo
48.1383 33.0006 48.1374 33.0006 48.1354 33.0006 cv
48.1373 33.0006 48.1384 33.0006 48.1403 33.0006 cv
47.8713 33.0005 mo
47.8728 33.0005 47.8751 33.0005 47.8765 33.0005 cv
47.875 33.0005 47.8728 33.0005 47.8713 33.0005 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.1286 33.0005 mo
48.1281 33.0005 48.1276 33.0005 48.1271 33.0005 cv
48.1276 33.0005 48.1281 33.0005 48.1286 33.0005 cv
48.1286 33.0005 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!$#!<~>
<~!!!!!!!!*'!r~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.1286 33.0005 mo
48.1281 33.0005 48.1276 33.0005 48.1271 33.0005 cv
48.1261 33.0005 48.1244 33.0005 48.1234 33.0005 cv
48.1248 33.0005 48.1272 33.0005 48.1286 33.0005 cv
47.8829 33.0004 mo
47.8848 33.0004 47.8864 33.0004 47.8882 33.0004 cv
47.8867 33.0004 47.8844 33.0004 47.8829 33.0004 cv
48.1171 33.0004 mo
48.1156 33.0004 48.1132 33.0004 48.1117 33.0004 cv
48.1136 33.0004 48.1152 33.0004 48.1171 33.0004 cv
47.8944 33.0004 mo
47.8962 33.0003 47.8985 33.0003 47.9004 33.0003 cv
47.8984 33.0003 47.8964 33.0003 47.8944 33.0004 cv
48.1056 33.0004 mo
48.1036 33.0003 48.1016 33.0003 48.0996 33.0003 cv
48.1015 33.0003 48.1037 33.0003 48.1056 33.0004 cv
47.906 33.0003 mo
47.9079 33.0003 47.91 33.0003 47.9119 33.0002 cv
47.9099 33.0003 47.908 33.0003 47.906 33.0003 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.091 33.0003 mo
48.09 33.0003 48.0891 33.0003 48.0881 33.0002 cv
48.0882 33.0002 li
48.0892 33.0003 48.09 33.0003 48.091 33.0003 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!$#!<~>
<~!!!!!!!!*'!r~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.094 33.0003 mo
48.0929 33.0003 48.092 33.0003 48.091 33.0003 cv
48.09 33.0003 48.0892 33.0003 48.0882 33.0002 cv
48.0901 33.0003 48.0921 33.0003 48.094 33.0003 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
47.9178 33.0002 mo
47.9201 33.0002 47.9217 33.0002 47.924 33.0002 cv
47.922 33.0002 47.9198 33.0002 47.9178 33.0002 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.0822 33.0002 mo
48.0802 33.0002 48.078 33.0002 48.0759 33.0002 cv
48.0761 33.0002 li
48.0781 33.0002 48.0801 33.0002 48.0821 33.0002 cv
48.0822 33.0002 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!$#!<~>
<~!!!!!!!!*'!r~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.0821 33.0002 mo
48.0801 33.0002 48.0781 33.0002 48.0761 33.0002 cv
48.0785 33.0002 48.0797 33.0002 48.0821 33.0002 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
47.9295 33.0002 mo
47.9318 33.0001 47.9333 33.0001 47.9357 33.0001 cv
47.9331 33.0001 47.932 33.0001 47.9295 33.0002 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.0705 33.0002 mo
48.068 33.0001 48.0668 33.0001 48.0643 33.0001 cv
48.0644 33.0001 li
48.0665 33.0001 48.0684 33.0001 48.0704 33.0002 cv
48.0709 33.0002 48.07 33.0002 48.0705 33.0002 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!$#!<~>
<~!!!!!!!!*'!r~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.0704 33.0002 mo
48.0684 33.0001 48.0665 33.0001 48.0644 33.0001 cv
48.0663 33.0001 48.0685 33.0001 48.0704 33.0002 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
47.9412 33.0001 mo
47.9431 33.0001 47.9458 33.0001 47.9477 33.0001 cv
47.9457 33.0001 47.9432 33.0001 47.9412 33.0001 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.0588 33.0001 mo
48.0568 33.0001 48.0542 33.0001 48.0522 33.0001 cv
48.0523 33.0001 li
48.0543 33.0001 48.0567 33.0001 48.0588 33.0001 cv
48.0588 33.0001 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!$#!<~>
<~!!!!!!!!*'!r~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.0588 33.0001 mo
48.0567 33.0001 48.0543 33.0001 48.0523 33.0001 cv
48.0542 33.0001 48.0569 33.0001 48.0588 33.0001 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
47.953 33.0001 mo
47.9549 33.0001 47.9572 33.0001 47.9591 33 cv
47.9571 33.0001 47.955 33.0001 47.953 33.0001 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.047 33.0001 mo
48.0449 33.0001 48.0429 33.0001 48.0409 33 cv
48.0409 33 li
48.043 33.0001 48.0449 33.0001 48.0469 33.0001 cv
48.047 33.0001 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!$#!<~>
<~!!!!!!!!*'!r~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.0469 33.0001 mo
48.0449 33.0001 48.043 33.0001 48.0409 33 cv
48.0428 33.0001 48.045 33.0001 48.0469 33.0001 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
47.9648 33 mo
47.9672 33 47.9695 33 47.9719 33 cv
47.9698 33 47.9668 33 47.9648 33 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.0352 33 mo
48.0332 33 48.0301 33 48.0281 33 cv
48.0282 33 li
48.0302 33 48.0331 33 48.0352 33 cv
48.0352 33 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!$#!<~>
<~!!!!!!!!*'!r~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.0352 33 mo
48.0331 33 48.0302 33 48.0282 33 cv
48.0306 33 48.0328 33 48.0352 33 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
47.9764 33 mo
47.9792 33 47.9812 33 47.984 33 cv
47.9815 33 47.9789 33 47.9764 33 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.0236 33 mo
48.0211 33 48.0184 33 48.0159 33 cv
48.016 33 li
48.0185 33 48.0211 33 48.0236 33 cv
48.0236 33 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!$#!<~>
<~!!!!!!!!*'!r~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.0236 33 mo
48.0211 33 48.0185 33 48.016 33 cv
48.0188 33 48.0207 33 48.0236 33 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
47.9883 33 mo
47.9921 33 47.9962 33 48 33 cv
47.9959 33 47.9923 33 47.9883 33 cv
48.0117 33 mo
48.0077 33 48.004 33 48 33 cv
48.0038 33 48.0079 33 48.0117 33 cv
gsave
[-8.23837e-07 18.8472 -18.8472 -8.23837e-07 47.999 32.8652 ]ct
clp
/2 /Gradient get_res exec grestore
np
62.9746 48.5 mo
62.953 47.8523 62.8904 47.2153 62.7891 46.5906 cv
62.8346 46.5781 62.8804 46.5654 62.9258 46.5527 cv
62.2049 39.0591 55.9508 33.1574 48.3075 33.0031 cv
52.3157 33.0843 55.9438 34.7456 58.5915 37.3882 cv
58.5921 37.3889 58.593 37.3897 58.5936 37.3904 cv
58.5953 37.392 58.5964 37.3932 58.5981 37.3948 cv
58.5994 37.3962 58.6003 37.397 58.6016 37.3984 cv
58.603 37.3997 58.6038 37.4006 58.6052 37.4019 cv
58.6068 37.4036 58.608 37.4047 58.6096 37.4064 cv
58.6106 37.4074 58.6112 37.4079 58.6122 37.4089 cv
58.6142 37.4109 58.6157 37.4124 58.6176 37.4144 cv
58.6183 37.4151 58.6182 37.415 58.6189 37.4156 cv
61.2972 40.1026 62.9655 43.7961 62.9995 47.8725 cv
62.9997 47.8982 62.9998 47.9237 62.9999 47.9495 cv
63 47.9661 63 47.9833 63 48 cv
63 48 li
63 48 li
63 48.168 62.9805 48.332 62.9746 48.5 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[16.32 0 0 17.28 47.52 14.56 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 34 
/H 36 
/M[34 0 0 -36 0 36 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
hZ2OJh^Rahec=SDh_4L"blHW>h_b00_uS[8iB%!"]`?q4l9P&.]`?q7o1&+:]`?q9r(H*D]`@(@r@$Q#
]`@CLoIJg#]`@^XlRq(#]`A$di\B>#_Z9Q6h_a5(bQ.26h`'G1eH"h6h`BY:h>lI6h`]kCk5a*6h`p"J
n,U`6ha64Sq#JA6haQI]!/nMjham!opQ<,hhb3O+mZtNdhbO'=jda!ai_f\PhkIdalW!OVhl+3goN(<Z
hlXQlrE8/`hm:0"quGVZhmpo1o)RZThnRY@l2]^Nho+=Ni;hbHhob']fDsfBhpCflnGqGHheV-#kQ'06
heh9*nGpf6hf.K3q>eG6hfIc>s6%&qhfe;Pp?fNnhg+hbmIT38J,~>

%%EndBinary
grestore
np
63 48 mo
63 48 li
63 48 li
63 48 li
63 48 mo
63 47.9833 63 47.9661 62.9999 47.9495 cv
63 47.9661 63 47.9833 63 48 cv
62.9995 47.8725 mo
62.9655 43.7961 61.2972 40.1026 58.6189 37.4156 cv
61.2967 40.1024 62.9655 43.7961 62.9995 47.8725 cv
58.6176 37.4144 mo
58.6157 37.4124 58.6142 37.4109 58.6122 37.4089 cv
58.6138 37.4106 58.616 37.4127 58.6176 37.4144 cv
58.6096 37.4064 mo
58.608 37.4047 58.6068 37.4036 58.6052 37.4019 cv
58.6065 37.4032 58.6083 37.4051 58.6096 37.4064 cv
58.6016 37.3984 mo
58.6003 37.397 58.5994 37.3962 58.5981 37.3948 cv
58.5991 37.3958 58.6006 37.3974 58.6016 37.3984 cv
58.5936 37.3904 mo
58.593 37.3897 58.5921 37.3889 58.5915 37.3882 cv
58.5921 37.3889 58.593 37.3897 58.5936 37.3904 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/2 /Gradient get_res exec grestore
np
33.0254 48.5 mo
33.0195 48.332 33 48.168 33 48 cv
33 48 li
33 48 li
33 39.9006 39.4526 33.2791 47.4883 33.0086 cv
39.937 33.2627 33.7876 39.1258 33.0723 46.5527 cv
33.1182 46.5656 33.1643 46.5783 33.2104 46.591 cv
33.1094 47.2152 33.0468 47.8528 33.0254 48.5 cv
47.4893 33.0086 mo
47.4928 33.0084 47.496 33.0083 47.4995 33.0082 cv
47.4963 33.0083 47.4926 33.0085 47.4893 33.0086 cv
47.5007 33.0082 mo
47.5043 33.0081 47.507 33.008 47.5105 33.0079 cv
47.5072 33.008 47.504 33.0081 47.5007 33.0082 cv
47.5126 33.0078 mo
47.5156 33.0077 47.5187 33.0076 47.5217 33.0075 cv
47.5189 33.0076 47.5155 33.0077 47.5126 33.0078 cv
47.5241 33.0074 mo
47.5271 33.0073 47.5305 33.0072 47.5335 33.0071 cv
47.5306 33.0072 47.527 33.0073 47.5241 33.0074 cv
47.5353 33.0071 mo
47.5388 33.007 47.5417 33.0069 47.5452 33.0068 cv
47.5419 33.0069 47.5386 33.007 47.5353 33.0071 cv
47.5462 33.0068 mo
47.5497 33.0067 47.5527 33.0066 47.5563 33.0065 cv
47.5525 33.0066 47.55 33.0066 47.5462 33.0068 cv
47.5585 33.0064 mo
47.5616 33.0063 47.5647 33.0062 47.5677 33.0061 cv
47.5644 33.0062 47.5618 33.0063 47.5585 33.0064 cv
47.5698 33.0061 mo
47.5953 33.0054 47.6216 33.0047 47.6472 33.0041 cv
47.6212 33.0047 47.5957 33.0053 47.5698 33.0061 cv
47.6476 33.0041 mo
47.6506 33.004 47.6539 33.0039 47.6569 33.0039 cv
47.6536 33.0039 47.6509 33.004 47.6476 33.0041 cv
47.6594 33.0038 mo
47.6619 33.0037 47.6652 33.0037 47.6677 33.0036 cv
47.6649 33.0037 47.6623 33.0037 47.6594 33.0038 cv
47.6711 33.0035 mo
47.6741 33.0035 47.6762 33.0034 47.6792 33.0034 cv
47.6769 33.0034 47.6735 33.0035 47.6711 33.0035 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[16.32 0 0 17.28 32.16 14.56 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 34 
/H 36 
/M[34 0 0 -36 0 36 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
hZ2OJh^Rahec=SDh_4L"blHW>h_b00_uS[8iB%!"]`?q4l9P&.]`?q7o1&+:]`?q9r(H*D]`@(@r@$Q#
]`@CLoIJg#]`@^XlRq(#]`A$di\B>#_Z9Q6h_a5(bQ.26h`'G1eH"h6h`BY:h>lI6h`]kCk5a*6h`p"J
n,U`6ha64Sq#JA6haQI]!/nMjham!opQ<,hhb3O+mZtNdhbO'=jda!ai_f\PhkIdalW!OVhl+3goN(<Z
hlXQlrE8/`hm:0"quGVZhmpo1o)RZThnRY@l2]^Nho+=Ni;hbHhob']fDsfBhpCflnGqGHheV-#kQ'06
heh9*nGpf6hf.K3q>eG6hfIc>s6%&qhfe;Pp?fNnhg+hbmIT38J,~>

%%EndBinary
grestore
np
33 48 mo
33 39.835 39.5565 33.1735 47.6814 33.0033 cv
47.6805 33.0033 47.6802 33.0034 47.6792 33.0034 cv
47.6762 33.0034 47.6741 33.0035 47.6711 33.0035 cv
47.6697 33.0036 47.6691 33.0036 47.6677 33.0036 cv
47.6652 33.0037 47.6619 33.0037 47.6594 33.0038 cv
47.659 33.0038 47.6574 33.0038 47.6569 33.0039 cv
47.6539 33.0039 47.6506 33.004 47.6476 33.0041 cv
47.6472 33.0041 li
47.6216 33.0047 47.5953 33.0054 47.5698 33.0061 cv
47.5693 33.0061 47.5681 33.0061 47.5677 33.0061 cv
47.5647 33.0062 47.5616 33.0063 47.5585 33.0064 cv
47.5581 33.0064 47.5567 33.0065 47.5563 33.0065 cv
47.5527 33.0066 47.5497 33.0067 47.5462 33.0068 cv
47.5452 33.0068 li
47.5417 33.0069 47.5388 33.007 47.5353 33.0071 cv
47.5343 33.0071 47.5344 33.0071 47.5335 33.0071 cv
47.5305 33.0072 47.5271 33.0073 47.5241 33.0074 cv
47.5232 33.0075 47.5226 33.0075 47.5217 33.0075 cv
47.5187 33.0076 47.5156 33.0077 47.5126 33.0078 cv
47.5117 33.0078 47.5114 33.0078 47.5105 33.0079 cv
47.507 33.008 47.5043 33.0081 47.5007 33.0082 cv
47.5003 33.0082 47.5 33.0082 47.4995 33.0082 cv
47.496 33.0083 47.4928 33.0084 47.4893 33.0086 cv
47.4883 33.0086 li
39.4526 33.2791 33 39.9006 33 48 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/2 /Gradient get_res exec grestore
np
47.6827 33.0033 mo
47.6852 33.0032 47.6881 33.0032 47.6906 33.0031 cv
47.6882 33.0032 47.6851 33.0033 47.6827 33.0033 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.6816 33.0033 mo
47.6851 33.0032 47.6887 33.0032 47.6923 33.0031 cv
47.6913 33.0031 47.6915 33.0031 47.6906 33.0031 cv
47.6881 33.0032 47.6852 33.0032 47.6827 33.0033 cv
47.6822 33.0033 47.6821 33.0033 47.6816 33.0033 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.3068 33.0031 mo
48.3035 33.003 48.2999 33.0029 48.2966 33.0029 cv
48.3001 33.0029 48.3032 33.003 48.3068 33.0031 cv
47.6944 33.0031 mo
47.6969 33.003 47.6995 33.003 47.702 33.0029 cv
47.6996 33.003 47.6968 33.003 47.6944 33.0031 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~'GM5q(Ddl()B'M4~>
<~.4H\p0/"t31c.$G~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.6933 33.0031 mo
47.6968 33.003 47.6997 33.003 47.7032 33.0029 cv
47.7027 33.0029 47.7025 33.0029 47.702 33.0029 cv
47.6995 33.003 47.6969 33.003 47.6944 33.0031 cv
47.6939 33.0031 47.6938 33.0031 47.6933 33.0031 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.2948 33.0028 mo
48.292 33.0028 48.2882 33.0027 48.2854 33.0027 cv
48.2884 33.0027 48.2918 33.0028 48.2948 33.0028 cv
47.7063 33.0028 mo
47.7083 33.0028 47.7116 33.0027 47.7136 33.0027 cv
47.7107 33.0027 47.7091 33.0028 47.7063 33.0028 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~'GM5q(Ddl()B'M4~>
<~.4H\p0/"t31c.$G~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.7052 33.0028 mo
47.7082 33.0028 47.7115 33.0027 47.7145 33.0027 cv
47.7136 33.0027 li
47.7116 33.0027 47.7083 33.0028 47.7063 33.0028 cv
47.7052 33.0028 li
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.2833 33.0026 mo
48.28 33.0026 48.277 33.0025 48.2737 33.0025 cv
48.2772 33.0025 48.2798 33.0026 48.2833 33.0026 cv
47.7176 33.0026 mo
47.7201 33.0026 47.7231 33.0025 47.7256 33.0025 cv
47.7228 33.0025 47.7204 33.0026 47.7176 33.0026 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~'GM5q(Ddl()B'M4~>
<~.4H\p0/"t31c.$G~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.7167 33.0026 mo
47.7198 33.0026 47.7231 33.0025 47.7262 33.0025 cv
47.7256 33.0025 li
47.7231 33.0025 47.7201 33.0026 47.7176 33.0026 cv
47.7167 33.0026 li
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.272 33.0024 mo
48.2687 33.0024 48.2656 33.0023 48.2623 33.0023 cv
48.2653 33.0023 48.269 33.0024 48.272 33.0024 cv
47.7289 33.0024 mo
47.7314 33.0024 47.7346 33.0023 47.7371 33.0023 cv
47.7343 33.0023 47.7317 33.0024 47.7289 33.0024 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~'GM5q(Ddl()B'M4~>
<~.4H\p0/"t31c.$G~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.7281 33.0024 mo
47.7311 33.0024 47.7346 33.0023 47.7376 33.0023 cv
47.7371 33.0023 47.7376 33.0023 47.7371 33.0023 cv
47.7346 33.0023 47.7314 33.0024 47.7289 33.0024 cv
47.7281 33.0024 li
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.2605 33.0022 mo
48.2572 33.0022 48.2541 33.0021 48.2507 33.0021 cv
48.2538 33.0021 48.2575 33.0022 48.2605 33.0022 cv
47.7405 33.0022 mo
47.7435 33.0022 47.7457 33.0021 47.7487 33.0021 cv
47.7464 33.0021 47.7429 33.0022 47.7405 33.0022 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~'GM5q(Ddl()B'M4~>
<~.4H\p0/"t31c.$G~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.7396 33.0022 mo
47.7426 33.0022 47.7461 33.0021 47.7491 33.0021 cv
47.7487 33.0021 47.7492 33.0021 47.7487 33.0021 cv
47.7457 33.0021 47.7435 33.0022 47.7405 33.0022 cv
47.74 33.0022 47.74 33.0022 47.7396 33.0022 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.249 33.002 mo
48.2457 33.002 48.2427 33.0019 48.2394 33.0019 cv
48.2429 33.0019 48.2455 33.002 48.249 33.002 cv
47.7521 33.002 mo
47.7546 33.002 47.7577 33.0019 47.7603 33.0019 cv
47.7579 33.0019 47.7544 33.002 47.7521 33.002 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~'GM5q(Ddl()B'M4~>
<~.4H\p0/"t31c.$G~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.7511 33.002 mo
47.7546 33.002 47.757 33.0019 47.7605 33.0019 cv
47.76 33.0019 47.7607 33.0019 47.7603 33.0019 cv
47.7577 33.0019 47.7546 33.002 47.7521 33.002 cv
47.7516 33.002 47.7516 33.002 47.7511 33.002 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.2375 33.0018 mo
48.2162 33.0015 48.1948 33.0012 48.1735 33.001 cv
48.1946 33.0012 48.2164 33.0015 48.2375 33.0018 cv
47.7633 33.0018 mo
47.7663 33.0018 47.7692 33.0017 47.7722 33.0017 cv
47.7693 33.0017 47.7661 33.0018 47.7633 33.0018 cv
47.7735 33.0017 mo
47.777 33.0016 47.78 33.0016 47.7836 33.0015 cv
47.7803 33.0016 47.7768 33.0016 47.7735 33.0017 cv
47.7854 33.0015 mo
47.7984 33.0013 47.8119 33.0011 47.825 33.001 cv
47.8117 33.0012 47.7986 33.0013 47.7854 33.0015 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~'GM5q(Ddl()B'M4~>
<~.4H\p0/"t31c.$G~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.7626 33.0018 mo
47.7837 33.0015 47.8051 33.0012 47.8263 33.001 cv
47.8258 33.001 47.8255 33.001 47.825 33.001 cv
47.8119 33.0011 47.7984 33.0013 47.7854 33.0015 cv
47.7849 33.0015 47.784 33.0015 47.7836 33.0015 cv
47.78 33.0016 47.777 33.0016 47.7735 33.0017 cv
47.773 33.0017 47.7726 33.0017 47.7722 33.0017 cv
47.7692 33.0017 47.7663 33.0018 47.7633 33.0018 cv
47.7628 33.0018 47.7631 33.0018 47.7626 33.0018 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.1704 33.0009 mo
48.1675 33.0009 48.1657 33.0009 48.1629 33.0009 cv
48.1654 33.0009 48.1679 33.0009 48.1704 33.0009 cv
47.8298 33.0009 mo
47.8318 33.0009 47.8337 33.0009 47.8357 33.0009 cv
47.8333 33.0009 47.8322 33.0009 47.8298 33.0009 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~'GM5q(Ddl()B'M4~>
<~.4H\p0/"t31c.$G~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.8296 33.0009 mo
47.8321 33.0009 47.8344 33.0009 47.8369 33.0009 cv
47.8357 33.0009 li
47.8337 33.0009 47.8318 33.0009 47.8298 33.0009 cv
47.8296 33.0009 li
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.1588 33.0008 mo
48.1565 33.0008 48.1543 33.0008 48.1519 33.0008 cv
48.1544 33.0008 48.1563 33.0008 48.1588 33.0008 cv
47.8413 33.0008 mo
47.8433 33.0008 47.8453 33.0008 47.8473 33.0008 cv
47.8454 33.0008 47.8432 33.0008 47.8413 33.0008 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~'GM5q(Ddl()B'M4~>
<~.4H\p0/"t31c.$G~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.8411 33.0008 mo
47.8437 33.0008 47.8454 33.0008 47.848 33.0008 cv
47.8473 33.0008 li
47.8453 33.0008 47.8433 33.0008 47.8413 33.0008 cv
47.8409 33.0008 47.8416 33.0008 47.8411 33.0008 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.1468 33.0007 mo
48.1449 33.0007 48.1423 33.0007 48.1404 33.0006 cv
48.1424 33.0007 48.1448 33.0007 48.1468 33.0007 cv
47.8534 33.0007 mo
47.8554 33.0007 47.8568 33.0007 47.8588 33.0006 cv
47.8569 33.0007 47.8553 33.0007 47.8534 33.0007 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~'GM5q(Ddl()B'M4~>
<~.4H\p0/"t31c.$G~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.8532 33.0007 mo
47.8552 33.0007 47.8575 33.0007 47.8595 33.0006 cv
47.8588 33.0006 li
47.8568 33.0007 47.8554 33.0007 47.8534 33.0007 cv
47.8532 33.0007 li
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.1353 33.0006 mo
48.133 33.0006 48.131 33.0006 48.1286 33.0005 cv
48.1306 33.0006 48.1333 33.0006 48.1353 33.0006 cv
47.8649 33.0006 mo
47.8669 33.0006 47.8689 33.0006 47.8709 33.0005 cv
47.869 33.0006 47.8668 33.0006 47.8649 33.0006 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~'GM5q(Ddl()B'M4~>
<~.4H\p0/"t31c.$G~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.8646 33.0006 mo
47.8666 33.0006 47.8693 33.0006 47.8713 33.0005 cv
47.8709 33.0005 47.8713 33.0005 47.8709 33.0005 cv
47.8689 33.0006 47.8669 33.0006 47.8649 33.0006 cv
47.8646 33.0006 li
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.1234 33.0005 mo
48.121 33.0005 48.1195 33.0005 48.1171 33.0004 cv
48.1197 33.0005 48.1209 33.0005 48.1234 33.0005 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.1234 33.0005 mo
48.1234 33.0005 li
48.1209 33.0005 48.1197 33.0005 48.1171 33.0004 cv
48.1171 33.0004 li
48.1196 33.0005 48.1209 33.0005 48.1234 33.0005 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/2 /Gradient get_res exec grestore
np
47.8768 33.0005 mo
47.8783 33.0005 47.8809 33.0005 47.8824 33.0004 cv
47.8805 33.0005 47.8787 33.0005 47.8768 33.0005 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.8765 33.0005 mo
47.8791 33.0005 47.8803 33.0005 47.8829 33.0004 cv
47.8824 33.0004 47.8829 33.0004 47.8824 33.0004 cv
47.8809 33.0005 47.8783 33.0005 47.8768 33.0005 cv
47.8765 33.0005 li
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.1117 33.0004 mo
48.1098 33.0004 48.1076 33.0004 48.1057 33.0004 cv
48.1077 33.0004 48.1096 33.0004 48.1117 33.0004 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.1117 33.0004 mo
48.1117 33.0004 li
48.1096 33.0004 48.1077 33.0004 48.1057 33.0004 cv
48.1056 33.0004 li
48.1076 33.0004 48.1097 33.0004 48.1117 33.0004 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/2 /Gradient get_res exec grestore
np
47.8885 33.0004 mo
47.8905 33.0004 47.892 33.0004 47.894 33.0004 cv
47.8921 33.0004 47.8904 33.0004 47.8885 33.0004 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.8882 33.0004 mo
47.8903 33.0004 47.8923 33.0004 47.8944 33.0004 cv
47.894 33.0004 li
47.892 33.0004 47.8905 33.0004 47.8885 33.0004 cv
47.8882 33.0004 li
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.0995 33.0003 mo
48.0976 33.0003 48.0959 33.0003 48.094 33.0003 cv
48.096 33.0003 48.0975 33.0003 48.0995 33.0003 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.52 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.0996 33.0003 mo
48.0995 33.0003 li
48.0975 33.0003 48.096 33.0003 48.094 33.0003 cv
48.094 33.0003 li
48.096 33.0003 48.0976 33.0003 48.0996 33.0003 cv
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/2 /Gradient get_res exec grestore
np
47.9007 33.0003 mo
47.9027 33.0003 47.9037 33.0003 47.9057 33.0003 cv
47.9038 33.0003 47.9026 33.0003 47.9007 33.0003 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~'GM5t(Ddu.)?~>
<~.4H]!0/#.=1]~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.9004 33.0003 mo
47.9024 33.0003 47.904 33.0003 47.906 33.0003 cv
47.9057 33.0003 li
47.9037 33.0003 47.9027 33.0003 47.9007 33.0003 cv
47.9004 33.0003 li
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.0881 33.0002 mo
48.0862 33.0002 48.0841 33.0002 48.0822 33.0002 cv
48.0842 33.0002 48.0861 33.0002 48.0881 33.0002 cv
47.912 33.0002 mo
47.913 33.0002 47.9142 33.0002 47.9152 33.0002 cv
47.9162 33.0002 47.9167 33.0002 47.9178 33.0002 cv
47.9159 33.0002 47.9139 33.0002 47.912 33.0002 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~'GM5q(Ddl()B'M4~>
<~.4H\p0/"t31c.$G~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.9119 33.0002 mo
47.9129 33.0002 47.9142 33.0002 47.9152 33.0002 cv
47.9142 33.0002 47.913 33.0002 47.912 33.0002 cv
47.9119 33.0002 li
gsave
[-9.28898e-07 21.2507 -21.2507 -9.28898e-07 48 28.75 ]ct
clp
/2 /Gradient get_res exec grestore
np
48.0759 33.0002 mo
48.0745 33.0002 48.0719 33.0002 48.0705 33.0002 cv
48.072 33.0002 48.0744 33.0002 48.0759 33.0002 cv
47.924 33.0002 mo
47.9255 33.0002 47.9279 33.0002 47.9295 33.0002 cv
47.928 33.0002 47.9254 33.0002 47.924 33.0002 cv
48.0643 33.0001 mo
48.0624 33.0001 48.0607 33.0001 48.0588 33.0001 cv
48.0603 33.0001 48.0628 33.0001 48.0643 33.0001 cv
47.9357 33.0001 mo
47.9372 33.0001 47.9396 33.0001 47.9412 33.0001 cv
47.9393 33.0001 47.9376 33.0001 47.9357 33.0001 cv
48.0522 33.0001 mo
48.0503 33.0001 48.0489 33.0001 48.047 33.0001 cv
48.049 33.0001 48.0502 33.0001 48.0522 33.0001 cv
47.9477 33.0001 mo
47.9498 33.0001 47.951 33.0001 47.953 33.0001 cv
47.9511 33.0001 47.9496 33.0001 47.9477 33.0001 cv
48.0409 33 mo
48.039 33 48.0371 33 48.0352 33 cv
48.0372 33 48.0388 33 48.0409 33 cv
47.9591 33 mo
47.9611 33 47.9628 33 47.9648 33 cv
47.9629 33 47.961 33 47.9591 33 cv
48.0281 33 mo
48.0267 33 48.025 33 48.0236 33 cv
48.0251 33 48.0266 33 48.0281 33 cv
47.9719 33 mo
47.9734 33 47.9749 33 47.9764 33 cv
47.975 33 47.9733 33 47.9719 33 cv
48.0159 33 mo
48.0145 33 48.0131 33 48.0117 33 cv
48.0132 33 48.0144 33 48.0159 33 cv
47.984 33 mo
47.9856 33 47.9868 33 47.9883 33 cv
47.9869 33 47.9855 33 47.984 33 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 47.04 30.4 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~'GM5q(Ddl()B'M4~>
<~.4H\p0/"t31c.$G~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
33.2104 46.591 mo
33.1643 46.5783 33.1182 46.5656 33.0723 46.5527 cv
33.7876 39.1258 39.937 33.2627 47.4883 33.0086 cv
47.4893 33.0086 li
47.4926 33.0085 47.4963 33.0083 47.4995 33.0082 cv
47.5 33.0082 47.5002 33.0082 47.5007 33.0082 cv
47.504 33.0081 47.5072 33.008 47.5105 33.0079 cv
47.511 33.0079 47.5121 33.0078 47.5126 33.0078 cv
47.5155 33.0077 47.5189 33.0076 47.5217 33.0075 cv
47.5227 33.0075 47.5231 33.0075 47.5241 33.0074 cv
47.527 33.0073 47.5306 33.0072 47.5335 33.0071 cv
47.534 33.0071 47.5348 33.0071 47.5353 33.0071 cv
47.5386 33.007 47.5419 33.0069 47.5452 33.0068 cv
47.5462 33.0068 li
47.55 33.0066 47.5525 33.0066 47.5563 33.0065 cv
47.5573 33.0064 47.5575 33.0064 47.5585 33.0064 cv
47.5618 33.0063 47.5644 33.0062 47.5677 33.0061 cv
47.5682 33.0061 47.5693 33.0061 47.5698 33.0061 cv
47.5957 33.0053 47.6212 33.0047 47.6472 33.0041 cv
47.6477 33.0041 47.6471 33.0041 47.6476 33.0041 cv
47.6509 33.004 47.6536 33.0039 47.6569 33.0039 cv
47.6579 33.0038 47.6584 33.0038 47.6594 33.0038 cv
47.6623 33.0037 47.6649 33.0037 47.6677 33.0036 cv
47.6687 33.0036 47.6701 33.0036 47.6711 33.0035 cv
47.6735 33.0035 47.6769 33.0034 47.6792 33.0034 cv
47.6803 33.0033 47.6817 33.0033 47.6827 33.0033 cv
47.6851 33.0033 47.6882 33.0032 47.6906 33.0031 cv
47.6921 33.0031 47.6929 33.0031 47.6944 33.0031 cv
47.6968 33.003 47.6996 33.003 47.702 33.0029 cv
47.7035 33.0029 47.7048 33.0029 47.7063 33.0028 cv
47.7091 33.0028 47.7107 33.0027 47.7136 33.0027 cv
47.7151 33.0027 47.716 33.0026 47.7176 33.0026 cv
47.7204 33.0026 47.7228 33.0025 47.7256 33.0025 cv
47.7271 33.0024 47.7274 33.0024 47.7289 33.0024 cv
47.7317 33.0024 47.7343 33.0023 47.7371 33.0023 cv
47.7381 33.0022 47.7395 33.0022 47.7405 33.0022 cv
47.7429 33.0022 47.7464 33.0021 47.7487 33.0021 cv
47.7497 33.002 47.7511 33.002 47.7521 33.002 cv
47.7544 33.002 47.7579 33.0019 47.7603 33.0019 cv
47.7613 33.0019 47.7623 33.0018 47.7633 33.0018 cv
47.7661 33.0018 47.7693 33.0017 47.7722 33.0017 cv
47.7727 33.0017 47.773 33.0017 47.7735 33.0017 cv
47.7768 33.0016 47.7803 33.0016 47.7836 33.0015 cv
47.7841 33.0015 47.7849 33.0015 47.7854 33.0015 cv
47.7986 33.0013 47.8117 33.0012 47.825 33.001 cv
47.8265 33.001 47.8283 33.001 47.8298 33.0009 cv
47.8322 33.0009 47.8333 33.0009 47.8357 33.0009 cv
47.8377 33.0009 47.8393 33.0008 47.8413 33.0008 cv
47.8432 33.0008 47.8454 33.0008 47.8473 33.0008 cv
47.8493 33.0007 47.8514 33.0007 47.8534 33.0007 cv
47.8553 33.0007 47.8569 33.0007 47.8588 33.0006 cv
47.8609 33.0006 47.8628 33.0006 47.8649 33.0006 cv
47.8668 33.0006 47.869 33.0006 47.8709 33.0005 cv
47.8729 33.0005 47.8748 33.0005 47.8768 33.0005 cv
47.8787 33.0005 47.8805 33.0005 47.8824 33.0004 cv
47.8845 33.0004 47.8865 33.0004 47.8885 33.0004 cv
47.8904 33.0004 47.8921 33.0004 47.894 33.0004 cv
47.896 33.0003 47.8987 33.0003 47.9007 33.0003 cv
47.9026 33.0003 47.9038 33.0003 47.9057 33.0003 cv
47.9078 33.0003 47.91 33.0003 47.912 33.0002 cv
47.9139 33.0002 47.9159 33.0002 47.9178 33.0002 cv
47.9198 33.0002 47.922 33.0002 47.924 33.0002 cv
47.9254 33.0002 47.928 33.0002 47.9295 33.0002 cv
47.932 33.0001 47.9331 33.0001 47.9357 33.0001 cv
47.9376 33.0001 47.9393 33.0001 47.9412 33.0001 cv
47.9432 33.0001 47.9457 33.0001 47.9477 33.0001 cv
47.9496 33.0001 47.9511 33.0001 47.953 33.0001 cv
47.955 33.0001 47.9571 33.0001 47.9591 33 cv
47.961 33 47.9629 33 47.9648 33 cv
47.9668 33 47.9698 33 47.9719 33 cv
47.9733 33 47.975 33 47.9764 33 cv
47.9789 33 47.9815 33 47.984 33 cv
47.9855 33 47.9869 33 47.9883 33 cv
47.9923 33 47.9959 33 48 33 cv
48.004 33 48.0077 33 48.0117 33 cv
48.0131 33 48.0145 33 48.0159 33 cv
48.0184 33 48.0211 33 48.0236 33 cv
48.025 33 48.0267 33 48.0281 33 cv
48.0301 33 48.0332 33 48.0352 33 cv
48.0371 33 48.039 33 48.0409 33 cv
48.0429 33.0001 48.0449 33.0001 48.047 33.0001 cv
48.0489 33.0001 48.0503 33.0001 48.0522 33.0001 cv
48.0542 33.0001 48.0568 33.0001 48.0588 33.0001 cv
48.0607 33.0001 48.0624 33.0001 48.0643 33.0001 cv
48.0668 33.0001 48.068 33.0001 48.0705 33.0002 cv
48.0719 33.0002 48.0745 33.0002 48.0759 33.0002 cv
48.078 33.0002 48.0802 33.0002 48.0822 33.0002 cv
48.0841 33.0002 48.0862 33.0002 48.0881 33.0002 cv
48.0891 33.0003 48.09 33.0003 48.091 33.0003 cv
48.092 33.0003 48.093 33.0003 48.094 33.0003 cv
48.0959 33.0003 48.0976 33.0003 48.0995 33.0003 cv
48.1015 33.0003 48.1037 33.0003 48.1057 33.0004 cv
48.1076 33.0004 48.1098 33.0004 48.1117 33.0004 cv
48.1132 33.0004 48.1156 33.0004 48.1171 33.0004 cv
48.1195 33.0005 48.121 33.0005 48.1234 33.0005 cv
48.1244 33.0005 48.1261 33.0005 48.1271 33.0005 cv
48.1276 33.0005 48.1281 33.0005 48.1286 33.0005 cv
48.131 33.0006 48.133 33.0006 48.1353 33.0006 cv
48.1374 33.0006 48.1384 33.0006 48.1404 33.0006 cv
48.1423 33.0007 48.1449 33.0007 48.1468 33.0007 cv
48.1483 33.0007 48.1504 33.0007 48.1519 33.0008 cv
48.1543 33.0008 48.1565 33.0008 48.1588 33.0008 cv
48.1603 33.0008 48.1614 33.0008 48.1629 33.0009 cv
48.1657 33.0009 48.1675 33.0009 48.1704 33.0009 cv
48.1714 33.001 48.1725 33.001 48.1735 33.001 cv
48.1948 33.0012 48.2162 33.0015 48.2375 33.0018 cv
48.238 33.0019 48.2389 33.0019 48.2394 33.0019 cv
48.2427 33.0019 48.2457 33.002 48.249 33.002 cv
48.2495 33.002 48.2502 33.002 48.2507 33.0021 cv
48.2541 33.0021 48.2572 33.0022 48.2605 33.0022 cv
48.2615 33.0022 48.2613 33.0022 48.2623 33.0023 cv
48.2656 33.0023 48.2687 33.0024 48.272 33.0024 cv
48.2725 33.0024 48.2732 33.0024 48.2737 33.0025 cv
48.277 33.0025 48.28 33.0026 48.2833 33.0026 cv
48.2838 33.0026 48.2848 33.0027 48.2854 33.0027 cv
48.2882 33.0027 48.292 33.0028 48.2948 33.0028 cv
48.2954 33.0029 48.2961 33.0029 48.2966 33.0029 cv
48.2999 33.0029 48.3035 33.003 48.3068 33.0031 cv
48.3073 33.0031 48.307 33.0031 48.3075 33.0031 cv
55.9508 33.1574 62.2049 39.0591 62.9258 46.5527 cv
62.8804 46.5654 62.8346 46.5781 62.7891 46.5906 cv
61.633 39.4622 55.4489 34 48 34 cv
40.5497 34 34.3645 39.4619 33.2104 46.591 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[31.68 0 0 15.36 32.16 16.48 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 66 
/H 32 
/M[66 0 0 -32 0 32 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 66 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 66 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 66 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 66 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcP!7^B*-jT`F'Qh>t@mk5^hKliPZ<^BF',N<&YSaofB_qZ)6K!!L(?_[68JL&guK^BVpj
o*^W[mJt!,f+.$TRK2CK^Brj3h\)^bg&SkplP7qbXoQfK^CBiRb8Iei`W3aaruJor_>q4K`tA+Z^EUl%
Z2i8cmh<G`ec;WKgD8ld^F[;'\cBhipDL_#c2b'Kdi7Zn^GjdFV?#EniuYruiW,JKk9AS'^I.>fOoY"u
cR$=tp&KmKq^BE3^JOt2JcP`L^FRB-pfNFSo)QNYdU2ELPlU%K^GFYWjCY"ahZ1DMk&8slW;tHK^H:q/
d!)erb5f:BqLHS9]`>kK_F4Ak^PKo1[fFWDoLZf\d/^9KekPF(^RNsXjT*$q`)?M2^ST$PpAf^~>

%%EndBinary
grestore
np
47.4883 33.0086 mo
47.4893 33.0086 li
47.4883 33.0086 li
47.4995 33.0082 mo
47.5 33.0082 47.5003 33.0082 47.5007 33.0082 cv
47.5002 33.0082 47.5 33.0082 47.4995 33.0082 cv
47.5105 33.0079 mo
47.5114 33.0078 47.5117 33.0078 47.5126 33.0078 cv
47.5121 33.0078 47.511 33.0079 47.5105 33.0079 cv
47.5217 33.0075 mo
47.5226 33.0075 47.5232 33.0075 47.5241 33.0074 cv
47.5231 33.0075 47.5227 33.0075 47.5217 33.0075 cv
47.5335 33.0071 mo
47.5344 33.0071 47.5343 33.0071 47.5353 33.0071 cv
47.5348 33.0071 47.534 33.0071 47.5335 33.0071 cv
47.5452 33.0068 mo
47.5462 33.0068 li
47.5452 33.0068 li
47.5563 33.0065 mo
47.5567 33.0065 47.5581 33.0064 47.5585 33.0064 cv
47.5575 33.0064 47.5573 33.0064 47.5563 33.0065 cv
47.5677 33.0061 mo
47.5681 33.0061 47.5693 33.0061 47.5698 33.0061 cv
47.5693 33.0061 47.5682 33.0061 47.5677 33.0061 cv
47.6472 33.0041 mo
47.6476 33.0041 li
47.6471 33.0041 47.6477 33.0041 47.6472 33.0041 cv
47.6569 33.0039 mo
47.6574 33.0038 47.659 33.0038 47.6594 33.0038 cv
47.6584 33.0038 47.6579 33.0038 47.6569 33.0039 cv
47.6677 33.0036 mo
47.6691 33.0036 47.6697 33.0036 47.6711 33.0035 cv
47.6701 33.0036 47.6687 33.0036 47.6677 33.0036 cv
47.6792 33.0034 mo
47.6802 33.0034 47.6805 33.0033 47.6814 33.0033 cv
47.6816 33.0033 li
47.6821 33.0033 47.6822 33.0033 47.6827 33.0033 cv
47.6817 33.0033 47.6803 33.0033 47.6792 33.0034 cv
47.6906 33.0031 mo
47.6915 33.0031 47.6913 33.0031 47.6923 33.0031 cv
47.6928 33.0031 47.6928 33.0031 47.6933 33.0031 cv
47.6938 33.0031 47.6939 33.0031 47.6944 33.0031 cv
47.6929 33.0031 47.6921 33.0031 47.6906 33.0031 cv
47.702 33.0029 mo
47.7025 33.0029 47.7027 33.0029 47.7032 33.0029 cv
47.7037 33.0029 47.7047 33.0029 47.7052 33.0028 cv
47.7063 33.0028 li
47.7048 33.0029 47.7035 33.0029 47.702 33.0029 cv
47.7136 33.0027 mo
47.7145 33.0027 li
47.7155 33.0027 47.7157 33.0026 47.7167 33.0026 cv
47.7176 33.0026 li
47.716 33.0026 47.7151 33.0027 47.7136 33.0027 cv
47.7256 33.0025 mo
47.7262 33.0025 li
47.7267 33.0024 47.7276 33.0024 47.7281 33.0024 cv
47.7289 33.0024 li
47.7274 33.0024 47.7271 33.0024 47.7256 33.0025 cv
47.7371 33.0023 mo
47.7376 33.0023 47.7371 33.0023 47.7376 33.0023 cv
47.7386 33.0022 47.7385 33.0022 47.7396 33.0022 cv
47.74 33.0022 47.74 33.0022 47.7405 33.0022 cv
47.7395 33.0022 47.7381 33.0022 47.7371 33.0023 cv
47.7487 33.0021 mo
47.7492 33.0021 47.7487 33.0021 47.7491 33.0021 cv
47.7496 33.002 47.7506 33.002 47.7511 33.002 cv
47.7516 33.002 47.7516 33.002 47.7521 33.002 cv
47.7511 33.002 47.7497 33.002 47.7487 33.0021 cv
47.7603 33.0019 mo
47.7607 33.0019 47.76 33.0019 47.7605 33.0019 cv
47.761 33.0019 47.7621 33.0019 47.7626 33.0018 cv
47.7631 33.0018 47.7628 33.0018 47.7633 33.0018 cv
47.7623 33.0018 47.7613 33.0019 47.7603 33.0019 cv
47.7722 33.0017 mo
47.7726 33.0017 47.773 33.0017 47.7735 33.0017 cv
47.773 33.0017 47.7727 33.0017 47.7722 33.0017 cv
47.7836 33.0015 mo
47.784 33.0015 47.7849 33.0015 47.7854 33.0015 cv
47.7849 33.0015 47.7841 33.0015 47.7836 33.0015 cv
47.825 33.001 mo
47.8255 33.001 47.8258 33.001 47.8263 33.001 cv
47.8273 33.001 47.8286 33.001 47.8296 33.0009 cv
47.8298 33.0009 li
47.8283 33.001 47.8265 33.001 47.825 33.001 cv
47.8357 33.0009 mo
47.8369 33.0009 li
47.8385 33.0009 47.8396 33.0008 47.8411 33.0008 cv
47.8416 33.0008 47.8409 33.0008 47.8413 33.0008 cv
47.8393 33.0008 47.8377 33.0009 47.8357 33.0009 cv
47.8473 33.0008 mo
47.848 33.0008 li
47.8495 33.0007 47.8517 33.0007 47.8532 33.0007 cv
47.8534 33.0007 li
47.8514 33.0007 47.8493 33.0007 47.8473 33.0008 cv
47.8588 33.0006 mo
47.8595 33.0006 li
47.8615 33.0006 47.8626 33.0006 47.8646 33.0006 cv
47.8649 33.0006 li
47.8628 33.0006 47.8609 33.0006 47.8588 33.0006 cv
47.8709 33.0005 mo
47.8713 33.0005 47.8709 33.0005 47.8713 33.0005 cv
47.8728 33.0005 47.875 33.0005 47.8765 33.0005 cv
47.8768 33.0005 li
47.8748 33.0005 47.8729 33.0005 47.8709 33.0005 cv
48.1271 33.0005 mo
48.1261 33.0005 48.1244 33.0005 48.1234 33.0005 cv
48.1234 33.0005 li
48.1244 33.0005 48.1261 33.0005 48.1271 33.0005 cv
47.8824 33.0004 mo
47.8829 33.0004 47.8824 33.0004 47.8829 33.0004 cv
47.8844 33.0004 47.8867 33.0004 47.8882 33.0004 cv
47.8885 33.0004 li
47.8865 33.0004 47.8845 33.0004 47.8824 33.0004 cv
48.1171 33.0004 mo
48.1156 33.0004 48.1132 33.0004 48.1117 33.0004 cv
48.1117 33.0004 li
48.1132 33.0004 48.1156 33.0004 48.1171 33.0004 cv
48.1171 33.0004 li
47.894 33.0004 mo
47.8944 33.0004 li
47.8964 33.0003 47.8984 33.0003 47.9004 33.0003 cv
47.9007 33.0003 li
47.8987 33.0003 47.896 33.0003 47.894 33.0004 cv
48.1057 33.0004 mo
48.1037 33.0003 48.1015 33.0003 48.0995 33.0003 cv
48.0996 33.0003 li
48.1016 33.0003 48.1036 33.0003 48.1056 33.0004 cv
48.1057 33.0004 li
47.9057 33.0003 mo
47.906 33.0003 li
47.908 33.0003 47.9099 33.0003 47.9119 33.0002 cv
47.912 33.0002 li
47.91 33.0003 47.9078 33.0003 47.9057 33.0003 cv
48.094 33.0003 mo
48.093 33.0003 48.092 33.0003 48.091 33.0003 cv
48.092 33.0003 48.0929 33.0003 48.094 33.0003 cv
48.094 33.0003 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[2.4 0 0 1.44 46.56 30.4 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 3 
/M[5 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!$#!<E3~>
<~!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 9.0%%AI8_CreatorVersion: 14.0.0%%For: (Nick La) ()%%Title: (database-reload.eps)%%CreationDate: 2/26/10 7:04 AM%%Canvassize: 16383%AI9_DataStream%Gb"/LB33j1g?A:CQN)RM!hgP*!ea[pU5'XX8:VO](k])QbMFW0_u8usH)>7E[TqHtT6J!7XrYQK7XA\/l"*h]T+BY.<iscL#OR"X%-u4R?W/>4<[TSuiheel0]a<ksG'3;;[/)0+FuAOW_KN9Am;491mn-55Wmp!$7JWN3S*`G*TNS6X93ogJSPHMRe6mn%TF8FlPR`Z#%9DXNQCYpL`c/aq]WSdMuQD,+&;Wt_:5^&1UG.NrB"%ImklL8LC!^UJf"n7%>C]H83_=j>B6*K1Jo\3Y0><Z<"pBYm)0U\DO[eEli%-G]s?7gK=2M]9ndDKfG;IDm\!@g9p<CCfn9<oH5*][s/A#IWUq(mWSVg-%RWgl_R,Uu-stJP@',*Zf_oOI6SKfk9iq=]0/LH5c2%%bn:!YnT<(JUf3u-@5Q\L&NLLN&!]Ge:Q\KW'^YO['LM/+#7pGt-Q=mm:8Y<-S(p^KnB[PXrrq'=*q&?OTpTAZPEQ9Md-5g[<D3eG%l3pu<1]ARBM(H;1?96>'59[%AkXA-!2#Q<Z$jpN3Q!&<)ctM05%)Z(=h50:g<[WARP!:ljQ)fmF^YO74CclE2WGqfRs1Il?OJ8Va%`$"R-fq=aT^U>&/@$Zh.4PK,">t^XQ&Et)l.k"/\+o&*8J;[%/T(LDkRKI+!L>o4,VnNRG%P,;X0%C,qi4+uX0%uWpfeqLf=tGk.%b(^uQjMF:egdG+qaOl=$++*Tf*>$3s.,AmP;/`g"Ls].,h!$_365:MHETn"M^Z\9sO+/U95]+9.Zl$rSIMX&^EE'>jFA=3nGT=BO%[jm@ak:3aF!-Gde<VdFiW`cL(lmDa1K&:u5&Jb9_#6*=7rd#XbL*8cr(q;F34DPdYehH=@36'g^QYdt3D.Cbt&^%Nob-p>tO6Loq%j*:pj_*@;RGmNMW#_dX#Mbmi<:go/C_[t.I+i;/PSrI77`nk]okMqs'Tbp^U.6_iCH5:kuo7g,0a'XKdRd_,eO=!^O4bja10>\i#%pks68:=-^G'E2GK.DfF3M=QL`N"k5(dZ%HnMDX:^PaccDKL39>(Lc;?O)at<k*3oNMj-m097'RZ.J=I"MAr*,1$:=O&G.&2+as-D%,>ebFWp)Mn1#*red`3Y-\O-0;IJA^PUlNS>IjsN)"Fh!jl,-jX7B.YuYB55`Om<!VcLlt9N8d@<N_ksYS1g+IMEPEDnY5X'Oh&+Q%"TO6280-;UU^h`MWp*Z^%t>1Kl8R-]Gs_Df0>\iSKmBiSgib+/kR:G&\IN[diS'$R;b`ss_!Q`sPk(AS8%DCXV0kYS\O8Do'R,5i%Zd[<9IsR^cUR5!'UtSLR:3f2sLrhl]^V\]=T>E_"<af.$:I=fTG&t>5qM2b<%WP,X;W_4"E^5RC-aC/=#03"hbNG_^d[lo)P(1!<%?;Y54FIf!8>PcZ&Bj5E<^V[Wpd3E*ns#CR+M_4nj]!Uk9Hu>;Lo6kpSD!A\WTP^s1rsJ?p7$!-UrDtW#[b0#XCAO"fF-I^E;Rt46%Dp^/`VjjAod?YG+A]o-=ps-7#hD7KUXma8l)9&ia>2_lr,6'!,o=q4=j3R;"n)CF_#BT`$-dJl`8@J`>[iU!\#>X?KPJ2iuhAP16%cru/a4i5[(j5QO&Mf[o"I[r63?.1P[O*pUL>6F&cHYb3"O>#QHb_TaB*\nXr5+!:gF;_J=PKbZ91<Q(a`[Mm^E[!QNjU(obRW0k,%%<tbX`br,(;f*D?;sM25VHSTb=)BZRdF:*O.O<-tc&^#/N*8SF.V&n@LscTNF'7UBoB$fN-?EfK2MagkVF+l6Vn+DK)R7(!N,'*@%_`E`>q6ht1CGtASGcJkEij@+D-d&n\hV(fXf\@pa.Ff;o&mr!j$9:u?@TGs47VZMa(4&I&E_<`03DCsA083'`1<.HuQXX[)ZLBG$%[jP$IGqRQ(7c'ONH#GU(-UpK3V.4Q0P\QO_c#Dg80k@9Gb?NQ&@<oso8@h9:0meq::R3O=E>YN+L[MIl@Fmo^0DqJ:23E)4CTcLc%r/cDhng'.a*[>/])4T<SgQZ/*,Loc8SmC$8`mHkAGE.&6.C*M/SA9[OF3\LBVkHWsNVCj6cc\=iHP3etiK^pdi7p.U>2C[2Vg2rn%-'ZGT\f"[]H![L6J74CXdbM[e1Z"Gn=,`et>N)QXkb$"`a&GXMbUXfRAk;_Jm!G%GM8RH_BR8gWo.*%kI1kA1Y"apFPI;^(#EM5+%)q(0e'f"`<ArFAL4lQohj%.XuKSWY3F@;85an]*u^SCdAneZG.>>lRGo/AWNaGFQ$>_<=E_IIgM8o!bR[^(UIj@M+;R]Z*b3)VQ(%$+2>MB1J\0::;tt"\#k^cA2%<U[k(_JU"'^F,\A/\4,N?/Y8IQ;Em"$1R0Ds'4PY+cOO1%(qQO\8n[><C9tQ=U+/*G(sQ%&H$79q%43D)+hIs&9o)>^i3R;?_Oto$1M^=&5=Jf/E-.s(E;jj=@-Vr^k9[48@jdjX+LEi5.%^XoKY)T,VA6UH@JN'P3,MhAlDE&!aDJ:Cf%+tiO?EpcW9A*e@E5?c$H3b9B0C8f#i<iC_&S?MM]6>';l-"lu6Bj2KI</]fa0t5N24Jqu]=b!Dh&\'$VTbk_YYS-g-Kbb[$49q@<%m]\5c:?uh)Thj?>YE!`aol;8*'Y2:A0>k'WFE9']1#S%WN,(a$T`K/@;r(5N&O^1RO!Wt^4SPMYVHNA,>r"T=k34Oi_=?=-%:c]0%jbLBRZ?E'CC31ul2lL(/nQR)tCSk9ChN"`$TZ5/TbuATD<=6ePV_B1q+^JFoK0T1O9F==C.;BVNZ&tHs63i2QW1=23&8`<1`$\TO%1(A&;#Os0$H:5(eCaC"@lD(;-3!JPOjUk50e1cT%UdD*R\C[7<eT30Y$`-jSmh,ueC"W#/d5;a(5^Uj\D;gK*N-Vrbo.?+N-tT,j%8[IPa45d.s_j95SL*M0:nMRatp_IHc\/49>Nae!5(e2Ya]ufeVop$ip*j(+!o2,q%g,#/ce2mq]!gXbpiZ?9=,JHU=6T@e#XO1,o%1/'DXVd@:`Z"B3jQs>Ofp%lrB3MqVJ^g3LUD>*WC!mN23nFCft"#qq9kCm;R8116cdPm\q$@-Z@Au\sc7oYXK:WneT>O#/O&Ye;<%_i&=KrqQ0MEIqQ=nH[8e,jMs:BgAc>c^2C]+lf2kDqm6h,oCm._:JkG>e3AZM;QmH#)oq'9&%_IQ6Ge8%e2S0a!.]ji>AAZRN<'0%6t)dhd`/J_do_7/e$#rP5#XQqW]qE>h;C-;0D'FEKrSs[R;m-@HG&a)$qFW@8Lq6;%!=u(Olr=VneI^5*?4Adn:k4AB07N*kRM9`%-D45^M5I=1_Qqk8X@c,daQ@+-7*L#+($F)<1DOe"a4OB`YXFIZk>GJCeu2)0%APSP>dJM^8$lP4JlDq/cgs[*=siPQ>/@(5QI7IW%",iO9l-<GBAs>T)UQM`Mks6cVQaTc;WPj0a4p/6rnXaF)TWB?LAX3)<\jIf3@=FBAe"g+W^BQr66E9cRI60Id_(Wb9^Ei+GWfU")%$e/%QS\idXA.NZ`]oU0U;("=EOW!]n--TqOGga69A@4@b\t2Z-&br<fF>)-ci-OaA-!7NKO#n*u__6f*gX*uuMF^*<Ri@@$4K9"(%HRq+4WJrWtip.L#gR_YSM3WRJ%H/nl>$?fg-][L&4_=ngDLR>p3Qk[M=mbCWN+tMX*2#78&8;nNo'n[\cGen6<p8FsVFn2)VABJ'%C*i?Q'6#og%LeD"ab<,l(QM)6?KuCVHm4_dVKE3ALWBR:a8Cf_I#i,mX@%cH,P[[BF0egL5eE61HfV^T#^X"pdBBBZTil!0nMO0m%<H5Bl_V>MF!OdQS3_5%0O]YEMF3r4">02S*VV6l_ha6d1HZ<To`HN./nl1t=I_`S#/#S\']H?odo]S7I7OPDp>'H11PuksMlX=:N%'t'3@'ns'"Cbb^Ijhg,1QqJ'c4`jF(eKMYM+3P8@UNSu!^STEL65MdG8;H71@&4)%ZZ=pIekATcp@?h)S0@:O6B$\c"dnU6[s'4h%b4J@3P%b_ILO9U5]@%qS;Zn"d0D-_1UY%c4__hKCab3m?p]rWQ4/4[uge)8P#bBp-4\dOqkI$bC;iph'gd1^)&t+gt^+/ie>cAFC%\KYC1Ri"B4RHfRsP\>tN3R,95cBk%/I.23QEop\,>ZDL6!gbb6j36MEn"*$t4L[#_4M>>QXZB4;hngS!DPk)aXaM+)3Tit>-VM9$%gl!WTFDgLqdlF7?>p*9ZAO*-Z,s7b\J;ng+F*PY^cVMUo6f`%2)N6$0JFK%,iNTF0"!TIlY/&,Z=JHoKlWY9o6Ih")hnr!Lg6IFj%!NdKVmQ7P&Fu*4^fX2EZ0bM^#J8Z]])+?AH-Shn].p.qPSMFYAj\!5A:iC1/9J4RT/6]ZP-V>N+cZ<.UUoRWljsn4"-+LRO#+4.R%1=GE%WUL.uK]UDaI#pigKAIIr+rPCEn^#dR\^=f:#>-K[pkCt81!SWP0rIm!GYb(,)=0ksnIg:Yrebhib&]dhBa)YdD<dD*O_^-?%<]ZnJ6XGUA"4u$'F4:nr<al`oAXU#KC`%qe6.VHKU'd=,I(<7p>H@!pfRCY`hg>9ul]Z4ufrieFkrq+KT(E7.HN,s=hgK2@FJFQa%F;MZQ1[a'jEr`+]]'VdrYP$6p/<ZnWP`%0N;I<Lcn"5bXIn<dR#K5KpT[?PmPt#D#i]qLidS1F%&iu4'hbNV\,nKD2Ms*osQ<Sha%c#uSq2EarPeWd+,[kiHrP@gXkkpkb=3q?_>%ldJg*f7/@Yo*bJoH0?kRC$_BFA1E4N^o.)+7Hk"2s#7KTKD@#.MqJq1EAB#.NP'#%-:\[IJ&`NVUdOIX72[pC'*B)Cam\s'f?FBDj(En+s-lLh/'V\$hQ:l@)qDS-EmCR=d;s5'XPY]*m:N-f,4nGfE`2/q)qAP@rk$cX%?7(Ydgj!M>C7pC$km2+[0-,H69f[^)F:p?@s"Pj^kNRNJ*B6OAorY>2$mfRYNfcQ)[\57$D7(iH8PQ1^c`Si7nd[.<!e\u0572.6%X+7["X1E&]a&FY@<ZT_EO/G;OXG1HmT<]ANGe^]t+%%hA9=$J\5-F$^OR,5oMVqFa@]324!kJ3_cqUHNCm'I_\u5FO5h68e]r]7.%(Q;kfL1-I(A_;_>+4oujh[#/P5*8]#@T+jp"+Ge5R"6"):n"nFLUh@8##S2,@M7@:J2]hGZq9W'MED/3LqmS,quO1saGA']MJPt-%+trKp;%SG+a*/5aeZr6,b=:/9>@kDT3DeBZqrOIjQD8I<l33hB#'=?2[UM=Q6nX3")8jZQFGB:n%33l^q7E:m=D7gA:#M'=`1'#\%BpofbCt!qGAEKa"T>1k0^rS(ETW/1.`2-iA_gf,V=L_o,><oG.(9GS,_p#-_ft)%Q0Tp;+[dD_MmFf2ofV'>=A\^tCETk2,e$0l3%Djbf3a+mFj.1,'A0!\@gaF`Kp,?55!<m-(:XU%'p4F:D%^Dh5Pk[D6#DUE+='[&+D5V[kHNk)&jch*/s"I1bX:!N=S3t4?*.('5]%m5#Z2O_Xt%0`di6!#Ru>PT2nBIR)RdNBc?o1UT/tlC13?/Rec>1BTH:QP]gRquX-[JCm<3C]gdA5;@W&9(52<esX&c`+2PN2AS"f%p^dTrbt?6>)-OtrKRF0mP&3io(:,Mi.hDkAR;u3UUl*:EOt3B1P2V3\Ji9?8V-6ku/c*\";5:.dlUB:M]N!$`!Dl.@)F%qr;3LG\%s,in?H"pe@_*gU_\=41-;Rf9V+GG0,SR[]0$@bK\PGD6(S(OT"OTP+ub_L`C;aJTLf76K@Ec'EJ?.Ztek\fTRDAdhs$MprQL1`hM%@!dn=Q'g`]JJWWp=8(VT/iEL:Dh&e6HlMtsQ;P@,'ojC3AT4_#=H,MV__96rnRm(@Kc*#P5H=46.f?%Ks/<e!Wpl'!jJkP8%Ipo>%LeLoCAb&XF4INlM_8;2%Oc,u5Z^p(J12UjXpa,`78`+]3rb&'7I8k=0L[pN+P7mhhnc(S`IoPAK<VT'!r_\B!<8k$Y7-^.U8H%9U%U!^:>M:WEugqfaun3pX]hp%ru=?gK,s(mgPZ;Fa%_-VP5Z_X[PWOsM!C17(Rn^;+u*(3ee;_jtRn#X<]4",nDP(!3:NIBH)JjY#;%VK/L1\5AM0*;t%M=Sf.#=Jo7"2@IYg9FG'V+Aa?1RnD^4V4$uQ#smS34r)Z<>Mg!g?=Do#E$s1&E*pu4AX(Wtgr):rJiZR@"QQd^%*:kFH&a/r&74O(CU+D06^(>hbXC9$:f='(Bflubp%78!6UP_aDFFTL_Z@:[!iYCZGIo"OX'UE"R<nPU<P-/iR:%00QW#JC&*:nB_%"g1C!hZI!El7&!9s1Ve'es%Y0H(Lng2[9aj<RueG]?-qKnL:&6mHSb>cr]N)g@,6l7^%fTZ\'tGnd<ANpaiC$l24%Cmnl*Go_M.g%nSe9T54R&\$?(K:G/pAZ"!U;l.r7/Dj^<'jk]_QOaa!$t\=f%f?Dl4G>1MLaJ"rn5)ZNQE`'LVPW\c!LVS]4+Bc1Ur($PXZ-l:"?%qF\<LkZ@0kbsq_Wap0icW#cs[>4k1XSgYuR%N"fB-?>=NMsesa]hZ18%iHjhVUfGqLNKEAD"NGl]i9=(XJa>)e>^q7I@H%piXbnQ%<+;UPlRAAs#:uP"GSr=g6AjK!(:*NiK_Q791F0'/ri#J7dtrgiYjQ_I'tOe*SL;\<8g!oH-qSV9lB/ESB0PBb]38pCRED`h^dSF.%#\R^@`n@ZHCu8<_B1Za_m%m+=&s:BUTX-Tu<)E),+hjFfe8eRN+a"c4i6=_A;>QqBZU'28DEfM^&Zq4)]0on>IjEQ.W%?k4BiU?o%V3SZ7\GEZ68@fg`SAWK)e=kT4F?lK9"TJW`;9/E[dN4=8=]C=EP&R#=ra%^#2S#&*P:lD;c>rmdPH4(g/ZF_%*?oC5T/j$qg=L'I%N0Qkj@+=V,lgk7G+%Jo)0mJhnbfs&*X6U*@q#jJG1Q9,(89i2]5EcCtK\rGqe83\hW>pMK*%]2f;WorPipB+_@1Tn<@c,j6LStl2%7g=,\Y%P8nF;AO^q;cp(*`1eb9GiIHAt"'!CTbl3$8s]H./7#W7=.aAQgD5:r,ejbiq>K'7Cc^,"&$7cqa!I2X`lh^@Wg&`[pQES%%E$\/K#=;p8=@jZ%/4D0eph5SoYs3\-B7jH)f-+,-_S5Oh#CELD?J*PdY$M=X]5.3hUp@%'J_[hhO*6uRgJ%V7^#9`d-EVN$]%Y-%bXplVMU2c*+?T\3;gZ=sm'^LqTi7F=-C&9PR*.'l<Wh7*>\k_trL!Z_mESZGTTEG&i<bB,@IMtL;unAf[JfUA9.&Uh^`J9H7MtsN%^'@.$)YI-B1qst6,\"F,4/mPd7?[e]*u`C7o#q6>d^sGi?RhVgTG47bj9kINX%fhXFpi,aO*OfF11V;lmd\!Q'4AG[@_7QdX>4@5%!.4e(qq1?943^TBTh#l^a3"u<c3bCH/"P\[N,X9*a/r9iGqLEq9V<^N%=t9T,D8#W'Elp(oM]JaD+T"6NhBdf(ht>21`"IKQp[YA%d%1<iPtL'cTHq._YB5,Tll,tV5tMN%B<!c/!2g<8#$AtnbQ'4V"a_fq9;VO@b@3U:Y]++$@3r!fJ<mIcNMRL2#JC87H%=-G2Z(kd%(Mh8jpS$E3AD3S\&bA]c(VRq*d49fu`14@ATYiXU%/I)%Yrh<$8Cit0=eEZ1!?C]0U:/-QPCTEn`V:%W[;IX5hccV9#T0`YH4t[O%oqfa1Np=gV8`!;E[el+J+d`h-P)T6uNe]l1Bjm1n_75RuJoX":VA%E`B=C(\]`JU`XdV9dWX$LY_T/)P2o/KmTMDiiH\-JJ9XWE?%`(>LD2k'<+;na:GE.Mm6%'e>s5.8Z58KQ%(HnutgL$9'73E8P_fetX_HQL+R"-`bA+K_FLET<*OFJC(3A>V4%VQ$9$WQ;,&3Sk@<%c"!T9FHbPalg.I&'UJ"E,nSuKL0"h)*=$+!'0T1(;k4J-#s`D1kldY;R&Q)dl8RC:WK.t)WfnD&!NNM1I!'9-e?lds4IFL<`NR8P%U2lOS6NLKW6TOj]nbh\IjQD]sLH_kc64YK@]QlLo^gJ/c?YT=r/55'OLsH):Z+0JX2+^Ms-^FYW>*7ii@SIBUQMpM?s-#-o=O\9m%;9<)d:rbk-Uu?,^&O,'RA*sTi^HOrq701eP:58$s2`d&W[jD53"RCY0l1P`XY<1LGI+`UVPi@3+8`R%j._NV7a0HTb_SR[+,lLgU%)P";9H+:?H=qU85L6o[;c-OE<5?>4q5(24fHs>Dc(67!u;Kq<cEMMB:[i`@h?2PNt.`L6Lqs/.QT%bZAh:XtI5AqP@r-23+%]W9/%erSU3br"T_[21tpoi:ZPC%JdC>hWBKoLce!ID%=Ag,sc7jZr_ATY>c!=P>Noo<@b!],DEB+6t.M*S.sBHqkC%D`H?1rTNJm0X')/%rKm4dceghQ5H\hWF+ZG-5?n@fc&Yq[q<1-#^X!qeKB#*SQ`!&sqA3T1Er;^ggr<'&lT)[.D=i]=/(*Y[+C<j&4V[#bZf5>9a+NU7%k/n"!V<57HLZ#EZ5!%;!L)n#EU8iD3>2&iNnVW>/./1U5qJ@2F(1*cLg>9GLc$fHHT<HMI-k>,a[6\6XHWj[RQE/U$@eaWnD/T1@%`kk@;AbFYI.K&ru%[4a"p>u;/j(>]&H,dP;9)7H8Oj:&-lP6>Pq!`'oEP#QcRe*.9Y'!fp%fF69Kic3BWO059Lk">noCAd>\#LNW%<^%O@Xue:$5;aEn^%Yq0h<LT?o":Zm,?CT<hBfDNq3X-CL0E>FK^0A7YBKPPEG[Q>Ra0"_V;V70Hn!k*R_(&QH<(R;ZM28.gNLI-%mE4!kmDjs15BfJLh/:I>6/2,(*/`g4I:]%ZOAFWIo9-f,<:dD=W+n848'uWoCE\/9Eo"];Ccl]17Nin.H1h18Sk8WW[c8sJ[rk\7%T]"dDq%k&Fs/tgAl@)Z5[^XG\HM"cIM2cTLBkt'Ko];B01.<&"3t<f"$NLA-.0;F0!H%AU)$2*23G,r4U-$6W.-Z.<m;)Tul<cqT%/()92_/$SZq=l,;n%YH?-hH60qT!#`&j;aD?;%I\)th'q@",l#UWgBZCY.Z0D<3N,^\PoioQ53l2P0:.c%hY]H5o+"CV[aQ?]K2.%CQ&#Do@K<2s7gR/+HDb&#F%0;d8]j+qYa1ZFQN+*jcpIcD7c(]k!f<`J$IlQN06*;=c!Yo&Dt(fpe^-]3QGRC0OMPsc.DVq>G!,t%r`M"4$>f[pMBgK.jjfWhmG/8q.a(stYZq`=F$;h^#)#W7Mp/*t_]Abp?R$Jq[F3b+'e_`j'Rb,ii`]^cE4\ONag/f*S9[]=\Bn@c%+76Dto#bAq(7GR7n@af&k.Fqd%5!-.]ds.tF%]s?Z.sCYX'a2#k?>V=QGL[\o.i,qqjm<3lFiN3'(7h@#Rg8'`DLIU4Nt5M"c)!-%o<9O&'&:cVk5gO=XK22XGr2N]rKDKjUq%@5f!W5t^%6$A0JDVkWi?SL3O50j?9>kH%]?8m?ETG_U\.ubjl!+FHO6.CbI2ojq!A.l%ENkT9cmc0,^Zb4)Re+E]H[,Goh/3u0HfaaZHHW/KiT%'MfX;m$(G&pBgZ:%--9/NG0]H"/dl2C<^S6)Hn]Lkm?gVF`(AtLs+&2L/%\[FphRKs$MM`BVN=1<eE`D.Z7g<gZ^hgU!^>`j:5Ys`W`RX.1H07J5\&s6ei/84T`hl-^(ana#'pXdRM?LInWG'2(;ZpF;=J,X4J%A7n(*=(uG//-<nr9CN"<$\<Ia\F\#O(T'/bJAI;_JX99D]!4Ms-/7VZpT;c^@EUZXW%Vo[[pOPniSB8El?&ulKSLl/gK+&mZqkFW%^[YH2>mrrqa0nEt_RtCE8$Nr).h#!>d^7=2oi"!MM>$'FKQo&@KDA_eZ"'n)BDUG,Vi2a&";mV*@6R+55bKc>*'+JQQQ;fb,/9]B%fH_Sqbm?Zb-.aN#']o^iP[Ho%3S?R,^gijE0JNqQ@[KS(jl&d&1EGqSc'%cII5^UX+lfn:,loCW;(f<BS#7\Cc3Z_a=gj&Q#L^p*%.S$jq5nHCm@'e3Da=K&(+bT85bDoAO.a]MoV).T$i)%RmAUD!Z.*?'R*Ka*cD,RbAcTb/Z`i91D+/W!D<QSef3<>R2b,eC'<an(Z%*M3JZ#^i/_e0.IZ)>K&/Cktd%PE"o?T<m1'l-*,)LF+=__WjCMKsWU5h%j0e^l]:ZNi?il(nRPKK.8<1_/,_PqfZ"9eec2D_F648%e$2"?84ZBJo5/557?Z@9op,a$1Y^HGNl`>R5E\<oa.M[6lF6+e>TU93d`:DM1AqG`%N(epJll/?N.2jrhh^/A(EnYZ>qV33CEF[?%M4R@AF'n6Aj7]WTY!0TQcql'c'3>-DHoWFL*@k3eS:Oip>L3pLU\`]mB:A[fln//M0eQCAWH4oZO,I?>3&nO1%LueIR@rIjn]tCd%EU!D0HOh!1Zh0u'B3?Cc_o<M#H+13T.rGli?%9W]",bIK::[r^Yo_PuqO1ABC;G<]8s[Z4,.GE_Bn,%I`iq#\VgBt[DK6?jV((!(%?8HI`d.D-bJ8ZcV>ALDaSc/0m0?BA#>IUd8PN$,-dKDA&s0+JNTep1\?`Kf88/a(J1UZ]=Z`$^UB!JtkAFOa@RH6rrp&gJt$9j<?%rr8uL80Q7DWSO2o6"#1q$'t"3e'a<=i,nsq:XWZn'i#72jB@58rO.,NN:rj5MI7B&(<AJTI_W;V>W**Gr8XscT^H3Y<&k++j,+2d%cY_EC:(:SYB\N,$,l>WKoC;a.'[bu$g3K8c^q<FOE)EA;H`R+9cMMt7>M1jJA;<;f;l"5XU`O-g5AuigTQg?7X.F`'ek9B-H)soW%=AFBLcfUId?b_&]$Qjl4gAloqm^Vn-MEl%kCd3/.>(K$$jM=M!A-33lgYc67oM1oIQ!N4E]ei_'dse/`[Y&h*r3McNil&;bbB%[6%2#s],kIh[uC=_[*ocL>84kpQC:J)0M^;#&(L^q/FqkmfH0<s*j-a'$L`oHcEl9#UF:Xm9WZ+8=F::`eK1TMLaqsU,e0V>@U>j?JS%^R?*3=.dS;S*K1]?Wc-<l@To@8RiidK&+3^"KJp,[J)9uK-.S:[s>3DT"$I]M[c<.@cc-<p\k)/]Y(UdK"JUGqI[.dK'7:la*12F%*g'?qZuplQ.UAUJ/8RGOS2VScGu$iS-1<t%J?c^%m<=nH;&pV+R!7Y/$CTUdB!Bsi=1A,3&cltmAt&Z:@aT2$oh(%5og1+[IL$n+%L5i5@CHp+orUO_`1u\pD^,53@4,D\IH4<DP%[mN26Z_-Nc6"]f5O&%MhmF@;j/7M_[A`fYX`EN-Hk1ArB/L$?k@cPQCVSUVdY.\4%H?Su'g.6ZE,`GO2-gO()Gc&<Mk:Mj?'^"Y=?bX*1jh':C++Sb;?0O5V>tcKoA#ab2FmT_2^^4oi@ns^b^OG"[jtO_`rue^2Mq<`,%aHW3qUX"-CG#LqEb:"b"gZ//maA"S?iB/ZVX"3I2hd#eK_>RZM1`'QK)fqjXcX.K_]pHa"^q0GEoM:fLlMfJU$<.d&o/em+n>t0O%EiMG.b,=oGn&OBB-6$S#"MF?WGolPE`PRE%phk!.Hh7=9$C^C<eS'GPBosZ"WU5mCU-ASc3oRd0I/%[[Qnt]J61h6[?<O]YjR@o0%lJ)QPV99DJIQI'DLq*H0mN9G]TZPbRE@l7sj#_DPa3GG>,)rd:L%a`piF/MOnam)b\lCtT^@*];Od:R)<XSGf2sh\O-NRL*4(#"W%a$Uu=amIM4=\%6A;Vu;T=52=FGXb?tc`QtSkG>rk&`K=kLDeL6\K8\PUIUcoI($fWKO;U>cU5:[Y$Q5-rID9NoaHLYHBkd'2O%AJ%p0MkKoAfsDNXUeQT*Mh'.=U+/MOK<d8:m6@Ds,tG&*L^]@H7:k$P_>Xp069um5uCU\Y.@k\#UP<k[@cgO#P2dV9PYXBAO''Xi41^%bo<<O0)<dem7[*0rE:j]-iJ`BIX4fGNu&B%Dnl2:a5^ah=B8SQFGVi($KM5ec[1h@Ck&aM49b8HrUP[2G\8:=]Sdh+HOu==X'jTJ%cGcK,;iegorG;5G-Z.3(et;ng&:aMTFEt,mM794nKFN1c\bDq[X/''B45E!(/ibs#'QhMd<hMl/O0__Ve%G#q><C*)Q^)E#B,BRN%lh0E7<)<cYb&S#ZktaT,Seaqb%i5=^ltq*!&/EN+CSd"D:X;pZ%R1d'qm[BH9/!9T^A:sF"tpPd1@5%n>^oFbIrSL:VTb(Vj$C&!%gZq;/pMkIol,3F#d)GIW_9;AW26&=-mid'A?Xot?W@`^o1Zoo]]3(+80"OmGW=LYF"n)&$IdPA"mg_tG\_DT*d-_Zj'\7o8=^T$]%45]&eiNj]OLXe&F*&tG>92hqe_mcOuWa!f1dE_H5!\&k:dl#eCj`N3sFu*I[X'K.Rq%J1p[j]q@`DU-K+ppSaQ,d!5>]Qt7jqVDq%4&>j\()Tk[Iss"eD0P,Q>NBK0m+'Z5/ulV8CO>rZ=n\u*K2Zk+g?:'jL`h!_lPI)dl$[s3.T`_fbe-t]b$ijkh`3oY5mH4Br3lX0%Qp1strkKO5`$/_fC45,U`ILL*Z1)WX9?jCuQ-2/+:D_p=4rEfYb?+A_nL5m:0=>'`hR0*+DWd8eYI60ZZ`,/9HnRA!KgV/3XF/a:%hNt_S;<K9>3i*@_P[G:_D7mC:/.^*7S8G>jCirZKjX#_Xh'Fpl2ES[.$@&7S;V8]:hlBs'jU@`?B[[WDZ]a6HM)i4NU\\Wj_g\t=%r*&-KddnU#>)k7HQA'AP]mU!Jbe%atG0b>ePE"2MZU7V=Da(fb/3qnfA;a\@-Nc=0O'O@N@DaW0Ef/,Bo#gLC'k#teg*F2q,;@#f%%kr'0baZ-sT?_jbg1nW#EXk8qf_Kd(6PFnX^QcE=,bV5TpT?[<*5Pi'8Y6boQbHs`nn#Kh\$<mb=q28(2:l^7O`n(lI&iT^GGj'5%9AaOTir7YCW-s*YD'g2000o-^P!&@0lO1fYd3jFH-<Y7InD3t:>m^nViEi-WFs5IQX.'WPUc[phgWS!Ue0DX\9U)D.Dng&D3TSrX%EEoMrP+N7;C=Dk--:KTH"4dKCTKZF<j<Il!rqU:8jAK?&ag2Q?/6<)FmsK>]p`:)8HUtgm*4:sFI'2#dbHEjkY4F[/%3L)LhID94%^9i#tgdVMR>OU%!`P^LS+,_WWjjN;9=%GEDdhPkiIBA*f^OCp)qp=lZRatKY$!4j+H;!/P7gJnqW;TuJa[R"[+DEQ<,HL=[M4g'<%[pPKrUM<nVNg:XMeIeF=\uX=ZV,$;gk%9.-CZj^/>SddNjjN:nqTF=fHOZA(WDmu9"[W)t@HE\[Y(<-NpfC>K]Qj]9oh3`-,R$4-%GZ.qTSHcU3jnEj#KKH7*7]f_)f_BK65DXgF$m+qFL"bBRoN=C%`VMb74@^Kcb1G2@l^SRA_#E/tfKX`7S`Ln"g:)&@ip(1iD!^e$%C\RhE<H'4Un((6JF>E^4p"&F&K>;\4pHD#g,8C-4ik;`\Lhc%:0;f2XG2V!#V,SY*Dl@0!0p_dpHS.H%QCR\&=+=L.VsbcS,X41;%=7)o!^&0]_>U%B9OK,dAWdfE#Mq;+thna?IlHY["j[QXDkn7L!4Uc]nB4(5!<(c)M5.#,\[K%Z-Ge&R\nt4pRD>shnjm;'1H,F$j%FoNZN/HZJ'H5BLl$2>4_KqnDf=M[Lcf[X$ai?9APA;6Cl*613ZT1AeI*n8DC\/8lG)M1g?LmP]"4*^pYiI1iPe6FDR1LBsMp&$pI%Tdsem,bO4*;Yi=_AO$,R(G?g4Y(-"Ps(An=H,0P,IAjKQp8e%eR!J:s\Pn90h`hRbK6l?iYbQi7-i`1Apg\R5?6Ae_%1()ub.#^N%,K>n-;;Ab[(>[JYe.fHSA<a4Cqu.5q<>QH3/`>e-U\/OA1rU[')%-!b8n)9b9BgYB7n;R9VKcP4Yd<?8]mJ8(4l](o55a&0PBSCH%XEWX/#$Kc"O";Fd&+aXl/0^AV$[\MMp:E&+B)>dPorgSF:bTKdc\j`s4rF<D41udiHf$$]-Xc$/7s[P^d+sc\p"iQiStO"L=5%b`%iFbpI)8=2$WfD@JEori4o56%Jj[nJ0LCFe*T][rG7pD_]T<2E'+8HoNb[b&3UNW\DII+CL'%-`PdAfpRQ[._["lqip_P]REO/KrN%\)6TQg$V$/;]ZgEq%;ffHSJC'A6sjJ5*XphT?u>9V.Uhs14#j&q)t=qk/>!TC!h,8TD.sGgOIH@,]qmnifSDacdM,2hSf-*oRW]=%p_L;B2=fh^?4H\]G\HUDAaO1=)N&0JKSGJKZS(pfVdH[W8\<[6:IMjT_DC_tM=dn?YXZt.&roPL`8<9-=1dks9)l-d45nMSR55`=%S,'sdGHY"`%YbjslZj!NjQl??0'5?=n>:CHbcD*:>n#1r*FlI_P<@nNLM>%`mV@uPI#Dkb^W04M2H@KL&(iH4fP?)kn_$DD^gDAu%HQpGlK6s,uh<LW+.5269PDgK<]E#Ku7g[0u%*Ep%F;ll'Q1"7/oL.=W-%P!hhk1K1B*:F2/L's5]I&0$-$;W?%?Vq/LslSn!N"OD%T5'p3.!Zt]1.Dn3^.`h1Sp+U]QhpYliZgH$]Roc)g1a0O8&6#I9KSA,5ikCAn_t/YWe,^CW;i55m(n/TPS;ppePlHp9Nk&lnd!TE%Bdm^09A#5.#'pWQd_g,M!T`]].OnePA6eosO`$RqJ%#YT#<\IWTccW=_]4I8*OB'd[$4%<FAjGp>ZG1c[!rJI;>P,LVj]"CneRII%d]AOJ^[Vb2PthR+R0K2<T_aJsm^480@(mJ9c:_dPjp_=Np4L/Xd8L7OB7):7EI?KU<M\>cFCnJ((u5$hEdub5rgXJBc$@_NeepIi%aq%V#RMSbK?C"N8hQO;$Q0s;1(-1GE(BhOGCn0YFEb"``6I2Mkn=9ToR.Leu)Am^A1Q*cW3(!h:_.\t_Q%!cD3-_uP<>nU2>kF6e%5^i7\Vj3l&OV`VBVHj&e9_LJ76=?Racc),==bdXM$gI%hdg;oZg#125c'%<_2IE?<+foeLCW.4)E.aSo]$LRC9V_)J4aCB0,<5h?%ec8M1B-/]%$h(A%.[n&"&N2[68DWORC`_+j!Nm.fc$m(R29%FT*h,<\c5\^;AQ;P_jTpHC$`ii'2^D0GScZ<t,50AX?3`f]1D40B%6ASZYoV>"4Mb\.^-Gr48dn=h33h?$q'(Ir^>1BECTP#X>L4*+@H((4R(<TI\F!!^actX>Y]]WIR&WrZXS;ap<Wg]-FB;A@P.iK9W%Sd$bAgaO^d0GW*p"DnVd;aB561I]9A2jfd)7T2(J4s@+qA\cji+H8l[BA0;&Z6<`1L1\>+Rmj8Ff)2H@]HPqLAj#ESB7\Xj"Kh9l%Vl:)=eXNlK!VJ%Y;gf$@e2NeKqBkp8D\9N<AB,?L1]CgOFW&*JQ!/5']@*-_aQg,K]8^QU3Bf`md@/V5)K5/$L<R^&Zt4)6jimIp%fkg[KPrF#/g,nA+f^)kllpI'*@tKW6XF*Zg0o!R#1e`!/PA/aJs2D?9T1*Db@6u>sIskoDe)(^*[B*M,j.7T=O2!qgYP#!TgS],M%XeBDTI9e1+c[e-J^TE%t0p6L62h#Ds<K2K4H2+QlP==F%rSIHpglA:G\uY$1rf')3G4icM_BOQM^D_FN.ZbJ-p4qM-.j1XG<<+?]%D?.)VJu\U"!Vt*OT$R+RF5%jf(\4D1>=Da$VI@Y+nP;Rh*DQ,^g+\DqWbIJ+(.cn'R^VT5LU?.Y4j-m")]M,]9\3/"5MHPRY/g8I%$_CNY*-&dCU`i9]N?/j+MbealRiF"D$KB5e+fFH6?^/jnq]7kO+S,P',p;+`VJX21i>MoX75([Pjr2,j;:i1LB5.ojY475SW9K$G%.+pYq@O67J4OD]^%gpK&L8*q"(33CK>h)(ZFa?;u7YZ.VgU96UGRq/pWc"Y'J3:;S4.]/i-$Egd!V:W?@jo"!L4%>r(GqA9<HLA/%O4tG*[54PA"_jf3npVPtPS)XZA\8N]0lT$[ZF'`"V*JU0'03riL?[Ch!3k,YIQ<^N].$U]08P47<]'>bJ1A4@MY!ljAsI+lD5eX5%`R@anfG.p_,:*`kq4tYJ6UtN)8e`7s"IHk=^(Ti/<\)hFif`m"C@m#`KVP+&ZCO!FdBP7>+]Yp4aq*?:!jSm"#j&U2=D0`.7qA0G%#-+J-RL8Md'ij!X%QWc+FRk<T:"Vss*0MO-Lg1$DJI+GJ418p-XJ%.E!i),:XD/]3UOaIH-lU8_J;6M1KP4>1Q3<&c)X+b@]BDGC%2-V_K\r!c(WbLe:V?Ffk]'4__R:$kl$Tgi*;F+2r:/Nh;2=D$6TUC>A%9fg%b.!^hiL3eEFY2h?k^^+D3DN>q28b!jSccWHFOs"3%2'o4#Pt?Ur-["@+"/=7q]d<`sI&S4/pgKDS7\$(>\*O*;\N9CtZsaYSgXWjXe_Hm2(obj3?r#NK?*:=G?,-RI@XCMBftMF9li;1(%F9K2$#%oQT:X*/t6S!<7'P4Nc8sI$*pYm9BEUciL=t]?Y)Hsd^%4dBAZolP%W:/gW=%C1/48\E*(V#"@?MIfL!*uT03&hE$Q$AJN%#kGmA9Zcg>WCP@'8"oiOr?1dNoRLeT"5"J?B4PhTW:93`8Le1:'!X_jSGH]#A(2Zt`m/UCapt)>n6f@Vm\Z4X,Gc(n?k]PU.`8FE%anM>n/f#Ha)ZY(\9!OLVM@G:In'7"/["K&tIuf?h[ct591G5qenBh(='8*.o%k[<C[Lji_:R,0AA17]e3[`aK>VnMd\S,sPVTsQG%(n7@+B`f6p*49An/^(Ct7h,7WW[^+ga858se/D.NSL0k>Y0U^_cZ2s^WB4($P,C3:VeJ4Q4]>,cpk)'@bam6^^N%\0k"1E-L+Sq2%5=m`[;hMfpL7B-f"2t0'#"ZsISm$mk_b<5$mK,JXe5I=ML:#H/)rS%fAhX8?,Ke:)Kr8MfBEh.#+T$P*k,J1+bYrSi;L_J>(42`C%fitamgXNoqVfm1"),V6THdG9BA]_"S=gF_>%fRVlkjrD!%?*Om(XAHi^gn9ocqGC&A[Z-:Jh/Wu9fQoRK0'm?3>^H/qncLB"1FI)%?tTV5&[Ras_RhTLWK^CSasrNolDtGc;2:5o43P;h4+J3SMH3$5[@e3Q.Ab\DMiM9SB?bk<POCtr]Iine4ok#JP[Yl6'_?-q$Lc9%%'XWN+?%7pAL+0B$@pEIPiN2heP_fVd`M$`SI$2a-$.O!LZNd^0&=u5=JF!VUc&W-CNEjn6$4Z-pX&dq>4u-KIgJE&q_H.sC(bUPW%qCh_\f3usc\68)T%2U4W4YEe\lR?JsL?\d$;"]kCeWV?)c`2&511(Kr,>8le)?g;,=EcX&&iPOO4i\^(!%/"@"DLcu\gVjN""8!]%DMYmmkc0gf@=B"c1X1YZ"On;u1t4q+pi5CVk^Tb6K<XR$&hYd$J30cbi.d0^'6"27?q'(t'VtkS]&:q#WB>:aWhJZ%8N05K?'Rq`%XGUs)*BO2A8T575!$$2f-l#%3f#UEZM`"QpJ/>A+:Zr)WPm<gV4d>6$V@)0@PtF/jiFVZe&hDr^k_b&rr,k]55F>DYpu2&Oq&fU(%9[k/u/+eT=8bE<e=[T+uccB?O3VsoB34]$EN0EQ<At5Hn:f`sPVC<-Z-L$R@oENho=)T'tH0tg'E+2?1`jLAp8U=l6(tW&e2mZ7:%W]*kR_V,WdmB#%s5\hC;2NWBb>Xe\\;(aVLH;n">2LJT)%6p#U%0fg4pJS]`dD;(M`W'?8@sT@'5Gg@bpfU"'0_dYgVFYNk8T/W,%L9*@o(C$f.0.;b]4SMOC0Jh#HAprXN')M1,i3DW\0O.qo/mEIBdAA'LP#Z=`XEHrM*#`P$OA1fW/>EZ4X>gl4X997TKP[]NQI40W%kugmhd_K;4%Nh4YX)o&eG0Y8CW<tHt7Q_.09a*s@%FZV7!?<gab5tKN>r,Vd^`"h.P(VQ+!r'U4\4g0nY[M)C;Mlb#,X7T-@`'EC%O2qIA2&[:6A82=*`>jp-#\eoIVJ>,l/VSd^m,r-J81>Bc/t?L@3j`]Q/di'q)m2dr-eTa)W!]-H<C>_Q.cE!OU'[Wq?rkU(@$dO'%o5PTYN_$#TfsLc^&e/?$T44j,Q=`+`$'Vo[L=[:coKe0#bbA_P/EAF`AWgVHZY8)C?,CRn4Ui$QgCVT.,$PN*+:T-f#]bKS6G"MH%0Vn5h.E$<!)-mfdMp'D%%`bk93HHnp#[/EnE@oFWLUCtN2,1)dB^Qf$X@-.#e_66m38nPTPoP^:p25He`#NK=:C'B7-iH]e"`KtB%'5U<:@W4/fg4\k0*rH8"3KUt<Puuic,'C\d3Q/S87G2MkZ$Me-\q[(ce:>n7&48_#OUOsIF_Vk!$:o!3MDiBX6bu\QU[qkt[nMM[%Zuf"%(lG7W.R[qA#DAZtnon=TSMQTs<)WQ`4NRpu_n:7hF!Zj0UqkHPk>4,mU!dmGLPN_;76PYO@()1`*DBNT?AG994D."cPhn%d%oJ$.bQaJA3VsF)u8IaH/(B'=\:ru$"U2.-uLC=G<;=%[&GCitPVL#&jE<$C)V2L71GXtPA!JO@D[)/)2]Wqh5*u>Se:,Y]acX7ff%@+*2kCoK@-i*Un&&1E9=XH?K["7Xs_<IAJL\k9+T69!.$]arR:)WiWE-E:\JL/l_7CQ2]VJ?u%Z`9YO6:;!b8@sE+WRC+<QkQ)(>%!Y+gdlmP7&9gWq6E?_G+*(JpN$7a(0HR!ms;Z%G$>T2uaHVd"CUq(*aX4s(WRkALH8iA6I2Up9Qeir/3W!?QY\G8DNJe%PbR"F^[%"jf!4Iot(*$lgO-@M%7$1P>q['W!X#EpWQT,UDu7J^ZLR3[1MiL?jU`_fdW^V@/6LAW140=A@O.b8=@!+UL/8l.$d'VRJ*%;P"`@%JsQQ*30p*V!0':JMoe'K9)QbL6UBmqe+2pOKnpuja9O6sf-'BkB0]WL4RQkCR[%VKH.nhJ`FN^S1,Xk]BhG,1FQLdjH=c]f+]0us%WbHomboi?W9FKYkm\^b.99=r]8.&Voa6=Ej5sqIcW)TI@]st88.6-Z$$?]8k:cHk6Gu'0\^d"&sq9O)P2'!/%Kl"REkcRL0Z&WB6%,fcM>Oh3Q.0.)sXD)24`()Nb+VMCP#>fTfSkttU+r$*u+^b%&#(jtG"kX`:fZ\CN:6+nW]G46'R#_i^S*_IME;o)hp$70I[BUj@E%:p[G%V#JERbLjC3<,iKYK::g3Q9irm!JgbFKC.*P6H91HmMNH!#74_aG#]onX5O,P9i&fp5NFr/]`,d<_<c6CA1^/;G@`jZVIg'%%"tpIT7D^C[a=<(L;a\BZr@k0E7\p1XkV]b*h+[Q/Vq&.oM#P<]9Ii8X_SdBeTWK(a=`)baHCeB#_<s.nK-TFe)hdi',LnKmr@_l[%ABj3+/Kj<q=N*<07>T-e6RHsG$67:6(+GA+^eWW/dLo6DZF$R0[ccr:6G8#n0Y*e\FF<_8.`+9.0]$tla0IFHK`g8qFaBb$;cS.'%")1(JZnZR9gH8_s96fo$:;8Y78K]<;0KFjH+!fq\'n#V+_2K$/]V_^i!*q].HW?4(BpUhs*lI4S)W>*Ye+%[+5aIcG1X-.544O_m%L87T9UjTsG*/HZI?/f/C^;pQ3!?1%P+LGQu4X<a^!6YU,G%k,G;5aD_AfhYFDb(:Y:eP&SJ8E+Z23Jfd#$T#;?=8*W/j-`6&n,K&%4U\CZNELgh2eCW><ko2Q^^'`p9p-74>flI<3Pqu5e)7@+d7n9$NGq9]UU-Ej6p'L?OF:9k=a?nNV.22aM6uMb.+';O$Du+IA;\3O%$]FTB#\F&jLZ:EP;\2olg`Ro4[%JP\id2s*&?/2YXq-59h+WU>h3;Yf#bnT?nDW1@We.*EU@1=m*cro,WQ:o^G&<,5&;F+/X+rfk%!(L1aa.5,,8PY`simPa>-&Ilo=_93b"qpsHhoBk.ZLV\,qbdX7&'5]B!Vs,u;[=5"\8@)2^GV(VC$"?cY/_cnc6BURMP(G3'3qRs%-BZ[H]#ok_!BguCSk6S7f)/JkG?.6\/<*nW[#-+=AlB"p*TZWO&frWr&Wi;Of147__Gp>7Z^L6F9S,2k-Gbc49Ys3$V27m_A@HW9%9EGo$1K9K.E(/72s,Ku\P-pL#$_Rc(4XlR[pM1Z"<5M0BgBfrUoM(bKpLY$B$ga<>5-ULl"r1(Z,j[@lk9U7O-K.7"7.0TJre1Z2%)(4L5"A749P"1lDM;V8Q_2cmd!2nCiSk#.h.5]I8_K&PVT^**G3lp]pHn6534\e@fLlWj/,(h"4\n8`=P6N+sjUZ`JQ9T>idPQWO%N*:#$Cdk)c%J^*44i>eU;n$"PX!jdTOQDNS%\b<U?F(&l2*?NqpL9R6:ZH;9-kXHil%;\G'S%JF?5nN&R3<Gk.%gdEl\a0mPq?R%%/MfaH"U#qd-6Im,b<jL33(559_`!m,\T$YP_)>Gr@%22*@%/DnY]7WZUFCef%U4NIdXk*:F?F+[bn)m+2L#bOGhl&K^tk59BF*U:%l%.g2]9><['`q":J&A"4S`W_`=g2da<t%k4/=4f(dfKfF]I#uelKN$opV?\<Q]+L;N+?O8).jKi1if2jGN&i"cV-]NcH+H9IRm'=%:qJlKV?Ob:=p#)brmnHlEEK29',QV52D<]?&YL/#'G+$:V$1m@3A%Ht(rf1SJi?Fc,qG(h@TK-_0&`&rY'VQI0_sE(pi@5(8]sKA%+_:d7?=n:m7_nai7_fre,N)(:7UQmIMi>I&W16:G!+GtCLl?lMR-+CWoMHGaAd"c5VCA]#R(3(PA244:@1;W2.h.DK"QnUTXtUca%/KSID(7k!+VP<4OhNW+IlH&Ms]MCm"h68bH@QlJSb/js@g^u=D$r(,\?=mn[oLabsZS[-M!LRHWAQWcJo[17WXeF.Clm?2jp<o/s%;M.]QeH.s0<ua&r!sbnC$r%Y1T4X;6Ws.5D(CSm_"fe8b-H-t#X]`//2_8fnjMp6=S2G8Z=1.6lM?u3V&-=S,6Q(bZ_\AIP9Y.!^%(:aQdi0@#UQ):Hu5]R'qEUe]tl/\-G%`Gr8JN+2]d*U3f$F$??&S\[G)n;hQFNG"179/h&<YZU1S5;cgA:XHN('DFmI=efNa'fp5%K%(la4$FkN5Cpt[=fTmpW'T?CX+QbFG/#6XCr7;^rVOVL]$=fm\4hc=LuNgii3lW4:sqg_74T#ln,Ll,690JJKNs-WpWCtWVb#;Q%4#e]:6FaCuCE?fn+?iD!l%lj@9eWA8'35LRD3-9)jJ`R#Q]A!N5%R5Zi3KO]r\H6B!0)r>Bc;72"BVkt)BCFni,rW_5bRM5\k</3%WO%k55"lLNkaGf02qYj!f@eLjJT,]lGh,6F0kB3`Wt&GA<QPD1?#s8uk'3^-1q[ITDP.gj\#<-7:!EcYW,S&$\?%r9YF(>\=i`+O%\1BnseEFe&==W<9MD13Rd11*?dOfJYKkWRr3s-R"J><D89<qMuFBi*,[V>hWK7"Jr5R94eNPe)gk+IVIK>EKr/qif[J:U6E_1^i-%,u&tJ(Qtll"pJ;=]SSQqTNEok)@!=;dSklq8N!a!2rtuXn@iU<Eu]KRfU/6A(gUEiaVD"Q3u;M#13hQ<-l4QpQTiF,]^FZbqC"n"%R^K$@#"[QI*P0$OT*$5q\e"lSSY0-o8M64>7GXWVK2q3[ZgQ\C8hV0-f&p*BktlVg$gJb%KA>Jg5)*KrKa?No^_+M364lM9\8V/5%U.%mbC7^i.OTF&!9[Ft7Hn;R\@nJL2a9%VaW]=H3-Fq!TKm%T]=B?g[4JEp-#1a3cL4>gnjP=fq(sk2qPZp$9`e65IX6B?@c&6J9%d7h-*HEZm0U/Y;J*&$Ql).7j?laOK_dX,g1M+=3H#:H^7]TZ[qFpFcmli!XVK!3m]c:MA7rfpI_%u'@5Je2./J9!#&OV__p\'P2L%SI`5OKJ+@A)DQ]:.cNSLHo(RCC$K2jSt@YXa+aNu,"T@g~>%AI9_PrivateDataEnd