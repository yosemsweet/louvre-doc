%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: favorite.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Nick La
%%CreationDate: 2/26/10
%%BoundingBox: 0 0 128 64
%%HiResBoundingBox: 0 0 128 64
%%CropBox: 0 0 128 64
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 64 8%%BeginData: 8680 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFDFCFFFD13FFCFC9C1C1BBC1BBC1BBC2C1C9CAFD11FFC9C8%C1C1BBC1BBC1BBC2C9FD55FFCFC1C1C8CFCFFFFFFFCFFFCACAC2C1C1C9FD%0CFFC9C1C1C2C2C9C9CAC9CFC9C9C2C2BBC2CAFD51FFC9C1CAFD08FFCFFF%FFFFCFCFC2C1C9FD08FFCFC1C2C9CFCACFC9CFC9CAC9CAFD04C9C2C1C2FD%4EFFCAC1A0FFFFFFCAFFCACFCACFCACFC9CFCACFCAFFC9C1A0FD06FFC998%C9CACAC9CAC9C9A0C9C2C9A0C9C2C8A0C9C8C199FD4DFFC1C9FFFFFFCFFF%CFCFCACFCACFCACFCACFC9CFCACFCAC2C9FD04FFC9C1CFCACFFD04C9C8C9%C8C9C2C9C8C9C2C9C2C9C8C8C1CFFD49FFCAC1CAFFFFFFCACFCACFCACFC9%CFC9CAC9CFC9CAC9CAC9CACAC1C9FFFFCFBBC9C9CFC9C9C2C9C2C9C2C9C2%C8C2C9C2C8C2C8FD04C2BBFD49FFC2C9FFFFFFCAFFCACFCACFCACFC9CFCA%CFC9CFC9CAC9CFC9C9C9C1FFFFC1C9CACFFD04C9C2C9C8C9C2C9C2C9C2C9%C2C8C2C8C2C8C2C2C1FD47FFC8C2FFCAFFCACFCACFCACFC9CFC9CAC9CAFD%0AC999C9C9C1C9CAC9C9A0C9C2C9A0C9C2C8A0C8C2C2A0C8C2C29FC2C1C2%9FC1C2FD46FFC1FFFFFFCFCFCACFCACFCACFCACFC9CFC9CFC9CFC9CAC9CF%FD04C9C1C2C9CFC9C9C8C9C8C9C2C9C8C9C2C9C2C8C2C9C2C8C2C8C2C8C2%C8C2C1CAFD44FFC1CAFFFFCACFCACFC9CFC9CAC9CFC9CAC9CAFD0AC9C2C1%BACAC9C9C2C9C2C9C2C8C2C8C2C8C2C8C2C2C2C8C2C2C1C2C1C2C1C2C1C1%FD43FFCAC2FFFFCFCFCACFCACFC9CFCACFC9CFC9CAC9CFFD0AC9C1C2C9C9%C2C9C8C9C2C9C2C9C2C9C2C8C2C8C2C8C2C8C2C2C1C8C2C2C1C2BBCFFD42%FFC2C9FFCACFCACAC9CFC9CAC9CAFD0AC9C3C9C9C9A0C9C2C2A0CAC2C9A0%C9C2C8A0C8C2C2A0C8C2C29FC2C1C29FC2C1C29FC2C1C29FC1C1FD42FFC1%FFFFCFCACFCACFCACFC9CFC9CFC9CFC9CAC9CAFD0AC9C2C9C9C9C2C9C8C9%C2C9C2C8C2C9C2C8C2C8C2C8C2C8C2C2C1C8C1C2C1C2C1C1CFFD40FFC9C8%CFFFC9CFC9CAC9CFC9CAC9CAFD0AC9C2C9C8C9C2C9C2C9C9C9C2C8C2C8C2%C8C2C8C2C2C2C8C2C2C1C2C1C2C1C2C1C2C1C2C1C1C1C2BBC9FD40FFC8C9%FFCACFC9CFCACFC9CFC9CAC9CAFD0AC9C8C9C9C9C2C9C8C9C8C9C2C9C2C9%C2C8C2C8C2C8C2C8C2C2C1C8C2C2C1C2C1C2C1C2C1C2C1C1C2FD40FFC1CF%CACFC9CAC9CAFD0AC9C2C9C9C9A0C9C2C9A0C9C2C8A0C9C2C8A0C8C2C2A0%C8C2C29FC2C1C29FC2C1C29FC2C1C29FC2C1C199C1C1C199C1FD40FFC1CF%FFCACFC9CFC9CFC9CFC9CAC9CAFD0AC9C8C9C8C9C2C9C8C9C2C9C2C8C2C9%C2C8C2C8C2C8C2C8C2C2C1C8C1C2C1C2FD06C1BBC1BBFD40FFBAFFCACFC9%CAC9CAFD0AC9C2C9C8C9C2C9C2C9C2C9C2C8C2C8C2C8C2C8C2C2C2C8C2C2%C1C2C1C2C1C2C1C299C1BBC198C1BAC198C1BAC198C1CAFD3FFFC1CFCFC9%CFC9CAC9CAFD0AC9C8C9C9C9C2C9C8C9C2C9C2C9C2C9C2C8C2C8C2C8C2C8%C2C2C1C8C2C2C1C1BBC1BAC1BBC1BAC1BBC1BAC1BBC1BACFFD3FFF9FFFFD%0AC9C2C9C9C9A0C9C2C9A0C9C2C8A0C9C2C8A0C8C2C2A0C8C2C29FC2C1C2%9FC2C1C199C198C198C198C198C198C198C198C198C198C1C9FD3FFFC1CF%CFC9CFC9CAC9CAFD0AC9C8C9C8C9C2C9C8C9C2C9C2C8C2C8C2C8C2C8C2C8%C2C8C1C1BBC1BBC1BBC1BBC1BBC1BBC1BBC1BBC1BBC1BBC1BBCFFD3FFF98%FFFD0AC9C2C9C8C9C2C9C2C9C2C9C2C8C2C8C2C8C2C8C2C2C2C8C2C2C1C2%C1C198C1BAC198C1BAC198C1BAC198C1BAC198C1BAC198C1BAC1CAFD3FFF%C1CACFFD0AC9C8C9C9C9C2C9C8C9C2C9C2C9C2C9C2C8C2C8C2C8C2C8C2C1%BBC1BBC1BAC1BBC1BAC1BBC1BAC1BBC1BAC1BBC1BAC1BBC1BAC1BBFD40FF%C1FD05C9C2C9C9C9A0C9C2C9A0C9C2C8A0C9C2C8A0C8C2C2A0C8C2C29FC2%C1C299C198C198C198C198C198C198C198C198C198C198C198C198C198C1%98C1FD40FFC8C9CFFD0AC9C8C9C8C9C2C9C8C9C2C9C2C8C2C9C2C8C2C8C2%C1BBC1C1C1BBC1BBC1BBC1BBC1BBC1BBC1BBC1BBC1BBC1BBC1BBC1BBC1BB%C1C1FD40FFC9C2FD04C9C2C9C8C9C2C9C2C9C2C9C2C8C2C8C2C8C2C8C2C2%C2C8C2C2C1C1BAC198C1BAC198C1BAC198C1BAC198C1BAC198C1BAC198C1%BAC198C1BAC198C9FD41FFC1CFFD04C9C8C9C9C9C2C9C8C9C2C9C2C8C2C9%C2C8C2C8C2C8C2C8C1C1C0C1C1C1BAC1C1C1BAC1C1C1BAC1BBC1BAC1BBC1%BAC1BBC1BAC1BBC1BAC1BBC1CAFD41FFC2C9C9A0C9C2C9A0C9C2C8A0C9C2%C8A0C8C2C8A0C8C2C29FC8C1C198C1BAC198C1BAC198C1BAC198C1BAC198%C198C198C198C198C198C198C198C198C1BBFD42FFC9C2FD04C9C8C9C8C9%C2C9C2C9C2C9C2C8C2C9C2C8C2C8FD16C1BBC1BBC1BBC1BBC1BBC1BBC1BB%C1BBC9FD43FFBBC9C2C9C2C9C2C9C2C8C2C8C2C8C2C8C2C8C2C8C2C8C1C1%C0C1C0C1C0C1C0C1C0C1C0C1C0C1BAC1C0C198C1BAC198C1BAC198C1BAC1%98C1BAC198C1CFFD43FFC9C1C9C2C9C8C9C2C9C2C8C2C9C2C8C2C8C2C8C2%C8FD1AC1BAC1BBC1BAC1BBC1BAC1BBC1C2FD27FFC2C1BBC1BAC1C1C9FD06%FFC9C2BBC1BBC1C1C9FD08FFC1C2C8A0C9C2C8A0C8C2C8A0C8C2C89FC8C2%C198C1C0C19EC1C0C19EC1C0C19EC1C0C19EC1C0C198C1C0C198C1BAC198%C198C198C198C198C1BAFD26FFCABAC9CAFFCFFFCACAC1C1C9FFFFCA99C2%C2CAC9CAC9C99FC1C9FD06FFC9C1C2C9C2C9C2C9C2C8C2C9C2C8C2C8C2FD%06C1C7C1C1C1C7C1C1C1C7C1C1C1C7FD0EC1BBC1BBC1BBC1BBCAFD25FFC9%C1FFFFFFCFFFCAFFCFFFC9C1FFFFBBC9CACFC9CFFD04C9C8C1C9FD06FFC2%C1C2C8C2C8C2C8C2C8C2C8C2C8C1C1C0C1C0C1C0C1C0C1C0C1C0C1C0C1C0%C1C0C1C0C1C0C1C0C1C0C1C0C1C0C198C1BAC198C1BAC198C2FD25FFCF99%FFFFFFCACFCACAC9CFC9CAC2C2C1C8C9CAC9C9C2C9C2C9C2C9C2C1C9FD06%FFC1C2C2C9C2C8C2C8C2C8C2C8C2FD06C1C7C1C7C1C7C1C7C1C7C1C7C1C7%C1C7C1C7FD0EC1BAC1BBC1CFFD25FFC1CAFFFFCACFCACFC9CFC9CFC9C9BA%C1C9CFFD04C9C2C9C2C9C2C9C1C2FD07FFBAC2A0C8C2C89FC8C2C8C1C1C0%C19EC1C0C19EC1C0C19EC1C0C1C0C1C0C19EC1C0C19EC1C0C19EC1C0C19E%C1C0C198C1BAC198C1C9FD25FFC9C2CFFFC9CFC9CAC9CAFD05C9C19FCAC9%C9A0C9C2C8A0C8C2C2A0C2BACAFD06FFCFBBC2C2C8C2C8C2C8C1C7C1C1C1%C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7FD0AC1BBC1%CAFD26FFC8C9FFCACFC9CFC9CFFD06C9C2C9C9C9C2C9C8C9C2C9C2C8C2C8%C2C2C2FD07FFCF99C2C2C8C1C8C1C1C0C1C0C1C0C7C0C1C0C7C0C1C0C7C0%C7C0C7C0C7C0C7C0C1C0C7C0C1C0C1C0C1C0C1C0C1BAC1BAC1C9FD27FF98%CFCACAC9CAFD06C9C2C9C2C8C2C9C2C8C2C8C2C2C2C8C2C2C1C2C1C1FD09%FFC1C1C2C8FD05C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1%C7C1C7C1C7C1C7FD06C1BBC1CFFD28FFC1CACFC9CAFD08C9C2C9C8C9C2C9%C2C8C2C8C2C2C1C1BBC1BAC1BBFD0AFF99C1C1C19EC1C0C19EC1C0C1C0C7%C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C1C0C7C0C19EC1C0C19EC198C1%CAFD28FFCFBBCFFD04C9C2C9C2C9A0C9C2C8A0C8C2C8A0C8C1C198C198C1%98C198C198C1FD0BFFC2C1C1C7C1C7C1C7C1C7C1C7C1C7C1C7C7C7C1C7C7%C7C1C7C7C7C1C7C1C7C1C7C1C7C1C7C1C7C1C1C1C2CFFD2AFFC1CACFFD06%C9C8C9C8C9C2C9C2C8C2C8C1C1BBC1BBC1BBC1BBC1BBC1BBFD0CFFC2C1C0%C1C0C1C0C7C0C7C0C7C0C7C0C7C1C7C1C7C1C7C1C7C1C7C0C7C0C7C0C7C0%C1C0C7C0C198C2FD2CFFBACFC9C9C8C9C2C9C2C8C2C8C2C8C2C8C1C198C1%BAC198C1BAC198C1BAC198C1FD0DFFC8C1C1C7C1C7C1C7C1C7C1FD0FC7C1%C7C1C7C1C7C1C7C1C1BBC8FD2DFFC1C9C9C8C9C8C9C2C9C2C8C2C8C2C2BB%C1C1C1BAC1BBC1BAC1BBC1BAC1BBC1C1FD0EFFC9C198C7C0C7C0C7C0C7C0%C7C1C7C1C7C7C7C1C7C7C7C1C7C1C7C0C7C0C7C0C7C0C198C9FD2EFFA0C8%C9C9A0C9C2C8A0C8C2C29FC1BAC198C1BAC198C1BAC198C198C198C198C2%FD0FFFC9C1C1C7C1FD08C7C8C7C7C7CDC7C7C7C8FD06C7C1C7C1C1BBC9FD%30FFC1CAC2C9C2C9C2C9C2C8FD0CC1BBC1BBC1BBC1BBC1CAFD10FFC9C1BA%C7C0C7C1C7C1FD0FC7C1C7C1C7C0C1BAC9FD31FFC2C2C8C2C8C2C2C2C8C1%C1C0C1C0C1C0C1C0C1C0C1C0C198C1BAC198C1C1FD12FFCAC1C1C7C1FD04%C7C8C7C8C7CDC7CDC7CDC7C8C7C8FD05C7C1BBCFFD32FFCAC1C2C8C2C8C2%C8FD05C1C7C1C1C1C7FD06C1C0C1BBC1BBFD14FFC9C1BAC7C1FD08C7CDC7%C8C7C8FD06C7C1C1BACAFD34FFA0C1C2C29FC8C1C19EC1C0C19EC1C0C19E%C1C0C19EC1C0C198C198C9FD15FFCFC1C1C7C7C8C7CDC7CDC7CDC8CDC7CD%C7CDC7CDC7C8C7C1C1CFFD36FFC9C1C1C8C1C1C1C7C1C7C1C7C1C7C1C7C1%C7C1C7FD04C1BBC9FD17FFCFC198FD04C7CDC7CDC7CDC7CDC7CDC7C8C7C8%C7C1BBCFFD38FFC9C198C1C0C1C0C7C0C7C0C7C0C7C0C7C0C1C0C1C0C198%C9FD1AFFC1BBC8C7CDC7CDCDCDC8CDCDCDC7CDC7CDC7C1C1FD3BFFC9C1BA%C7C1C7C1C7C1C7C1C7C7C7C1C7C1C7C1C1C1CFFD1BFFCAC198C7C7CDC7CD%C8CDC7CDC8CDC7CDC7C199FD3DFFC9C198C1C0C7C0C7C1C7C1C7C1C7C0C7%C0C198CFFD1DFFCFC8C1C8C8FD09CDC7C1C1FD3FFFCAC1C1C7C1FD04C7C8%FD05C7C1C1CFFD20FFC8BBC8C8CDCDCDC8CDCDCDC7C1C1FD41FFCAC1BAFD%06C7C8C7C7C1C1C1FD23FFC8BBC8FD06CDC8C1C1FD43FFCFC2C1C7C7CDC7%CDC7CDC7C1C1FD25FFC298C7C7CDC8CDC7C1C1FD45FFCAC1BAC7C7CDC7CD%C7C1C1FD27FFC8BBC8CDCDC8C1C2FD48FFC2BBCDCDCDC7C1C1FD29FFC298%C8C7C1C1FD4AFFC298CDC7C1C1FD2BFFC8BAC1C2FD4CFFC8BBC1C2FD2DFF%C29FFD4EFFC29FFD0EFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">favorite</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2010-02-26T07:09:52-05:00</xmp:CreateDate>
         <xmp:ModifyDate>2010-02-26T07:09:52-05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2010-02-26T07:09:52-05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>120</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAeAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qo3l7a2Vs9zdSrDBG&#xA;KvIxoB/b7ZXlyxxxMpGgGzFilkkIxFkpAt95j1wctOH6J01vsXkyh55B4xxHZQfE/MZrfGz6j6P3&#xA;eP8AnH6j7g7I4cGn+v8AeZP5o+ke8rZPJ+gvU6lNcajL3e4mkJ+gIUAyJ7Ow/wCUMpnzJ/QkdpZh&#xA;/diMB5AfpUT5P8mLuLFlI6ESzVH/AA+QPZ+l/m/af1sx2jqv532R/U0NAtoDXTNVvLBh9mMuZYva&#xA;qPWv35H8pGP93knD42Pkn83KX95jhP4UfmFRPMOtaSR+molu7CtP0naj7PvLEOnzXLBrcuH+9HFD&#xA;+dH9IYHRYs390eGf82X6CyeCeG4hSeB1khkHJJFNQQe4IzbwmJAEGwXUzgYkgiiHTTRQRPNM4jij&#xA;BZ3Y0AA6knGUhEWdgFjEyNDclis/mnVtTYpoUCw2laHUrkGjUPWKPqfmfwzTT7RyZdsIqP8AOP6A&#xA;7iHZ+PFvmNy/mj9JQFxphl31TVrq6Y/ajEnpR/RGnTMTJiv+8ySl8aHycmGev7vHGPws/MoGTRPK&#xA;1d7ZnPdi8tT/AMNmOdPp+77/ANbkDVajv+wfqWpp+lQHlYy3FhINw8Mjj76lsiMeOO8DKB8iyOXJ&#xA;L6xGY8wEzsfNmsaaQNRpqVgNjdRALOg8XQbMMzcPaWXF/eeuHeOYcPL2diy/3fon3HkWZWN9aX1q&#xA;l1aSrNBIKq6/q9jm/wAWaOSIlE2C6LLiljkYyFEK+WNbsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdiqyeeG3gknmcRwxKXkdugUCpORnMRBkdgGUIGRAG5LGbG3k8wXC6xqaldLiJbTLFxsw7Ty&#xA;juT+yP8AM6jFA6mXi5P7sfTH/fF22WY00fCx/wB4fql/vR+lOJ7stsuy5mZM1uDDFSEeTMcycgRU&#xA;HlysybBFQeTKzJsEVP12WtDsdmU7gg9iMhx0y4LQ2g366RrSWAPHTNTY+hGekNx/Kv8Akv2Hjg0W&#xA;fwcvB/k58vKX6i2azD42Lj/ykOfnH9YVNcuDrWsvpvIjStOIN4AaCafqIz/kp398lrMnj5Tj/wAn&#xA;Dn5nu+DDSY/AxDJ/lJ8vId/xU7rUDT0oPgiXYcdth4eAynJm6Dk2Y8PU80veTMUyckRUWkyBLYAo&#xA;tJkSWYCn6zKaqaHI8VMuG1+la1Nod99bgBNnKf8ATrRehH+/EHZhlmm1ZwT4h9J+ofpDDUaUaiHC&#xA;fqH0n9BeoW1xDc28dxA4khlUPG46FSKjOvhMTiJDkXkZwMJGJ5hUybF2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2Ksa8xs2p6raeX0P8Ao7D63qVD1hQ0SP8A2b9c1OuPi5I4By+qXu7vi7XRDwsc&#xA;s55/TH39/wAAmN1Ou0SUEabADYbZflydByDjY4dTzQbyZjmTkCKg8mVGTYIqLyZAybAFF5MrMmYC&#xA;i8mVmTMBK9bDvYPJGaTW5E8TDqGjNa/dmNqbMbHMb/Jy9LQnR5Hb5q2mPJFoqSSH/SL5muJm8TKe&#xA;Vf8AgaZZikRis85bn4tecA5aH0w2HwWNJlZLMBRaTIEswFFpMgSzAUmfIkswFJpMgSzAUWkyJLMB&#xA;lf5cawVkn0WVqqoM9nXspPxp9BNR9ObvsTU7nEfeP0j8ebpu29NYGUe6X6CzvOieddirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirFNBl9a51rWD9q4uTbwH/iq3HBSPnU5pNJOzky/wA6VD3Dk7nV&#xA;x4Y48X82Nn3y3V3lwmTARUXkysybBFReTIGTMBReTKzJsAUXkyBLMBRaTKyWYChIwZSp3BFCMgS2&#xA;RDU04KRIuyxoFA+W2CU7AHcmENye9DNJlZLaAos+QJZgKTSZAlmAotJkSWYCkz5AlmApM+RJZAK2&#xA;kX/1LXNPuw1BHMqyH/it/hf/AIU5Zpc3h5oy7j9nVhqcPiYZx7x9o5PaM714N2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KsJ8tMy+VLHl9qRpZG96yMf1HOd0ZrTR87+8vQa0XqZeVfcEQ8mSMms&#xA;BReTIGTMRUXkysyZgKLSZAlmIqTSZAlsAUWkyslmIqLSZElsAUmfIEswFJnyBLIBQkmVRViFHids&#xA;gZNkY2gZtTt12Ulz7f25VLKG+OAoSTU5W+yoX575UcpbhgCg11cN1c/Rt+rIGZbBjAUyzHqSfmci&#xA;ypoEg1GxGKvoSBzJDG56uoY06VIrnpMDcQXzWYokL8kxdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVYDoDGPy9bQH7dtJPE49xIT/HOY0prDEfzSR9r0urF55H+cIn7Fd5MkZNYCi8mVkswFFpMgSzE&#xA;VJpMgS2CKi0mQJZgKLSZAlmApM+RJZgIW5vYYR+8ah7L1P3ZVLIBzboYyeSV3GrytURLwH8x3OY8&#xA;sxPJyoacDmgXkkkNXYsffKSSW8ADktwJdirsVdircaNJIqKKs5CqPc7YQLNKTQt9CxoERUXooCiv&#xA;gNs9JiKFPmkjZtvCh2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVgUsZsta1awOyvKL+D3WbaSny&#xA;fbOZyR8PLkh58Q+PN6OB8TFjn5cJ+HL7FjSZWSzAUWkyslmIqTSZAlsAUmcnIEswFM5AyZKU0kca&#xA;8nYKMqlkA5s4xJ5JVc6jK9VhHBf5j1/szDnqCeTlwwgc0vaMkkncnqTlHE5AK0xYeJPEsMWHiZWs&#xA;KkZK021irsVdiqd+S9Oa+8y2UdKpE4nk8OMXxb/MgDM/s3D4meI7jfycDtPN4eCR7xXze2Z3jwTs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVYt54sJFjt9agUtJY1W6UdWtn2f8A4HqM03a2E0Mo&#xA;5w5/1T+p3HZOYEnEeU+X9YfrY+ZlZQyMGRgCrDoQehzUcTs+GlJnyJLMBTJrlZkydkDJKFurxIfh&#xA;X4pP5fD55i5c4j727HiJ9yVyGWZ+Uhqe3gPlmBLISbLlxAHJaIshxLxO9LHiXiWmLDxJ4ljRZISZ&#xA;CSi8WSBZiSi8dMmCzBU8kl2KvUPyx0JrWwk1SZaS3fww16iJTWv+yb9QzrOwtJwwOQ85cvd+15Lt&#xA;3V8cxjHKPP3/ALGb5v3QOxV2KuxV2KuxV2KuxVbJJHHG0kjBI0BZ3YgAAbkknBKQAs8kxiSaHNj7&#xA;ebprp2GiaZNqcaGhuCy28JI2IV5B8VPlms/lIzP7mBmO/wCkfMuzHZwgP30xjPd9R+QWnzJ5ii+K&#xA;58uyrEOphuIpm+hFAOA67PH6sRrykCn8jgP05hfnEj7Uz0fX9N1ZH+quRNFtNbSApLGf8pT/AAzL&#xA;02sx5h6eY5g8w4mp0eTCfUNjyI5F2seYNM0lEN25Msn9zbxjnK5/yVH8cdTrMeEeo7nkBzK6bR5M&#xA;x9I2HMnkEmbzhrLfFb6BI0fYzTxwt/wJBzA/lTKeWI15yAc4dmYh9WUX5RJXQeeo45FTWLCXTlY0&#xA;E/ITxAnpydAKfdhh2uAayxMPPmET7JJF4pCflyPyLJo5I5I1kjYPG4DI6kEEHcEEZt4yBFjk6mUS&#xA;DR5tuiOjI4DIwKsp3BB2IOJAIoqCQbDzLWtKl8v33oGraXcMTZzHcRk7mJj+rOR1emOmnX+TPI/o&#xA;es0uoGphf+UH1Dv81GuY5k2t5UZKg7u941ji+1+03h8sws2orYN2PF1KCEZO53J6nMEyci1QRZG2&#xA;NrvSwcSLd6WPEtrTFhtNqbR5IFkCovHkgWYKHePLAWYKHkjywFsBTvyd5Xl1zUBzBWwgINzJ0r3C&#xA;KfFvwzZ9m6A6ie/0Dn+pwO0teNPDb6zy/W9ljjjijWONQkaAKijYAAUAGdzGIAocnhZSJNnmuwod&#xA;irsVdirsVdirsVdirFdSZte1mXTSxXRtO4m/oSPXmO4iqP2V6t/tHNNnP5jKcf8AkofV5nu9w/HR&#xA;3GAfl8Qyf5Wf0/0R3+89EwlvURBFABFCgCoiigAHQADpl0s1Co7Bx44iTZ3KCku2/mOY8srkRxBI&#xA;9aupLWaDWbfa7s2X1COskJNHRvEZgajKYSGWP1R+0dzn6bGJg4pfTL7D3u025Mwl1y6HK9vmb0eX&#xA;+64QSERfAUFccWTivNL6pfYO5c2PhrDH6Yc/M9S3NfSOSWcn2yM8pKwxAIOW5qpVviVhRlO4I9wc&#xA;plNvjjRvkzW3sNTXSJWJsLsk2dTX0pepQV/Zb9f05l9las48nhH6JcvI/tcbtTSjJj8UfXHn5jv+&#xA;D0HOneaUL+wtL+0ktLuMSwSijof1jwIyrNhjkiYyFgtmHNLHISiaIea6xo975enCTkz6Y5pb3dN0&#xA;8Ekp39/8xyOt0c9Od94dD+gvV6XVQ1IsbZBzH6QgLq729OI1J+0w/hmoz5ugcrHj6lDJHmAS2kqy&#xA;x5AlgSqCPI2i13p4LY236eNrawx4bTam0eSBZAqLx5MFmCh5EABJywFsBR3lvytea/c1WsOnxtSe&#xA;5p1/yUr1P6s3HZ3Zs9Qe6I5lxtd2hHTx75nkP1vWtO06z06zjtLSMRwRigA6k9yT3JzuMGCOKIjE&#xA;UA8XnzyyyMpGyUTlrU7FXYq7FXYq7FXYq7FXEgCp2A6nFWD+XJyvl1Lhtpr+aa4mPcszkV+5RnOa&#xA;SdYL6zJJ+b0Othefh6QAA+SpJc++MsjGMENJc++Uym2xggrt1mhkib7MilT9IplGSVghyMceEgqc&#xA;k6JbwQp9iKNVH0Cn8MEp0AB0DKMLJJ6lLbnVrWOoaQE/yrufwzGnnAcqGnkeiXy66D/dxk+7Gn6q&#xA;5jy1Hc5EdL3lDfpe49aGUAK0MiyoRWoZDUb5DxzYPcbbfy8aI7xT3nPRXzp2KqdzbQXMDwXEaywy&#xA;Di8bCoIyE4RmDGQsFlCcoESiaIeX+ZvKdxoMpurYNPpDHc9XhJ7N4r4H/M8V2r2QcXqhvD7vf+t6&#xA;7Qdox1A4ZbZPvQEPF1DKaqdwRnNy2cuWyISOuQYEq6QYtRmrCD2w0w43GD2wUvGpPBjTMTUHjpi2&#xA;AoeUKqlmNFG5Jycd2yO6N8teVbnX5hcThoNIRt26PMR2X28TnRdldkSzHiltD7/d+txdd2hHTjhG&#xA;+T7nqFra29rbx21tGIoIhxjjXYADO3x44wiIxFAPI5MkpyMpGyVXJsHYq7FXYq7FXYq7FXYq7FXY&#xA;q830x2ttK+oPUSafcTW8gPWvMsD+OcliJjj4DzhIh6rOOLJxjlOIP2OkuffImaYwQzzk9MqM20QS&#xA;+81NIqqvxyfyjoPmcxcmpAcnHgJ9yTXVzeT15tRf5F2GYksxk5sIRjyQZRh1GQtutrCqvYWj3l7b&#xA;2sYJeeRY1p/lEDLMWMzkIjqaYZcghAyPQW+gM9HfNnYq7FWpI0kRo5FDowIZGFQQeoIOAgEUeSQS&#xA;DYeceZvKc+iyPf6ajS6YxLT243aH/KX/ACf1ZxnbHYvB68f0/d+z7nqdB2iM44Mm2Toe/wDahLQx&#xA;TRrJGQyN0IzlTEg0XJyXE0UfHDhAcaU1dbf2yVNRm21v7Y0omh5IfbIkNsZoG7McMbSSMFRepOAR&#xA;JNByMdk0ER5a8qT65It9qCmLSVNYYdw81O58F/zHjnU9j9i8fryfT9/7GjX9ojAOCG+Tqe79r0iO&#xA;OOKNY41CRoAqIooABsAAM7SMQBQ5PKykSbPNdhQ7FXYq7FXYq7FXYq7FXYq7FXYqwbzlpsmn37av&#xA;CpNjeBUvwv8AuuRdkloOx6H+3Oc7U05xz8UfTL6vI9C9D2ZnGSHhH64/T5jqGP8Aq8t6jj1r2pmo&#xA;lkdnwoK4u3kqkWy927n5Zrs2pvYORDGBuUOtt7ZhmbaZtm19seNHGoSW3tkxNsE0FNDx3y6Mm2Mm&#xA;b/ln5akkuf01cpSGKq2gP7TnYv8AJRt8/lnSdh6ImXiy5Dl73Qdua4CPhRO55+7uelZ1TyrsVdir&#xA;sVcQCCCKg7EHFWA+Y/K0+kTPqmjxGSyb4ryxX9juXj9vbt8unI9r9i1+8xjbqO79n3PSaHtAZh4e&#xA;U+rpL9BXabNb3kCzwNyjb7wfA++crw0aXPGUDRTNLfbJAOIZue32xIUTS3UZbe0gaedgka9z3PgP&#xA;fI8NuXgjKZoKfl3yxPrM0eqaqnp6cp5Wli3WTweT29u/y69T2P2LdZMg9PQd/wCz711uvGAHHjPr&#xA;6y7vIfj7WfKqqoVQFVRQAbAAZ1wFPOE23hQ7FXYq7FXYq7FXYq7FXYq7FXYq7FVskccsbRyKHjcF&#xA;XRhUEHYgg4JRBFHkmMiDY5vNPNflK50cPd6fyl0knlLD1aGp7eKf5nxzj+1eypYgZY/o+79j1fZ3&#xA;aUc3pntk7+/9qT2yJIgdDyU9DnKzJBp2EyQd0YlqSOmV20nI21qwHTFRkQdyiRoXc8VHU5ZAkmm6&#xA;BJOyaeVPJkusSLf6grRaWDWKLo81P1L/AJjxzqOyexzk9eT6Pv8A2OD2j2oMI4Ib5Pu/a9Ojjjij&#xA;WONQkaAKiKKAAbAADOyjEAUOTyUpEmzzXYUOxV2KuxV2KuxVhWveW7nSrqTWtETlC3xX2nDow7vH&#xA;Tofb/azlu1ux+eTGPeP1fqd/o9dHNEYsx3/hl+gozTdQtNQtEubZuUbdR3U91YeIzlSKac+GWOXD&#xA;Lm7UdRtNPtWubp+Ma7AdSx7Ko7nEC1w4ZZJcMeaC0Ly9PrVymsa1HxtB8Vhp7dKdpJB3r4d/lnU9&#xA;kdjggZMg26D9J8m7V60YI+FiPq/il+gfj7WbZ1ToHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;EAggioOxBxV595m8pS6VK+qaREZLMktd2K/seLx/5PiO3y6ch2x2JV5MY26ju/Z9z02g7SGUeHlN&#xA;S6S7/Iu0xLe9t1ngbnG33g+B985TwyE55GEqK7U0t7K2aeduEa/eT2A98Ph2jBKU5UGvLXlOXVZk&#xA;1TV4jHZqQ1pYt+3/AJcn+T4Dv8uvV9j9igjxMg26Dv8A2fejX9ojCPDxG5dZd3kPx9vLoAAAAAoB&#xA;sAM655p2KuxV2KuxV2KuxV2KuxVh2v6DdaVdSa3oqco2+LUNPHRx1LoOzDOY7X7Iu8mMe8fpDvdH&#xA;rI5ojDlO/wDDL9BU9A0G61q6j1vWk42y/Fp+nnoB1DuO9fx+WQ7I7IusmQbdB+kstZrI4InDiPq/&#xA;il+gfj7Wa51ToHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqwrX9Bu9Gun1rRE5WzfFq&#xA;GnjoR3dB2/h8s5XtfsjnkxjbqP0h3+j1kc8Riyn1fwy/Qfx9rtA0K71m5j1nW042ynlp+nnoB2dx&#xA;3+nr8seyOyOWTINug/SV1mrjgicWI+r+KX6B+PtZrnVOgdirsVf/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:AE6034D90C2068118F62AD85486E0984</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:AE6034D90C2068118F62AD85486E0984</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:50e66d66-4a68-904a-8cc4-cfd103d5b589</stRef:instanceID>
            <stRef:documentID>uuid:1007B6661DEEDD11AF8BBF931F055AD6</stRef:documentID>
            <stRef:originalDocumentID>uuid:1007B6661DEEDD11AF8BBF931F055AD6</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:OriginalDocumentID>uuid:1007B6661DEEDD11AF8BBF931F055AD6</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AE6034D90C2068118F62AD85486E0984</stEvt:instanceID>
                  <stEvt:when>2010-02-26T07:09:52-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>128.000000</stDim:w>
            <stDim:h>64.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 8.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -64 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 64 li
128 64 li
128 0 li
cp
clp
[1 0 0 1 0 0 ]ct
32.039 62.4863 mo
29.8615 60.2751 23.4451 53.8876 12.4594 43.9418 cv
18.3848 36.7471 27.3848 30.1035 38.373 25.4893 cv
46.7246 21.9834 55.1055 20.1221 62.7285 19.7822 cv
62.584 19.0078 62.4101 18.2373 62.1738 17.4795 cv
62.1364 17.3587 62.0979 17.2382 62.0582 17.1185 cv
62.098 17.2381 62.1365 17.3582 62.1738 17.4785 cv
63.3887 21.3974 63.3867 25.6504 62.166 29.7783 cv
60.9258 33.9668 58.5058 37.7607 55.168 40.7481 cv
42.1035 52.4346 34.4648 60.0283 32.039 62.4863 cv
1.53969 18.8249 mo
1.54032 18.8222 1.54104 18.8192 1.54167 18.8165 cv
1.54104 18.8192 1.54033 18.8222 1.53969 18.8249 cv
1.54235 18.8136 mo
1.64825 18.3647 1.76953 17.9196 1.90626 17.4785 cv
1.96379 17.2926 2.02427 17.1074 2.0876 16.9232 cv
2.02456 17.1073 1.96407 17.2927 1.90626 17.4795 cv
1.76935 17.9213 1.64812 18.3662 1.54235 18.8136 cv
32.0586 17.6836 mo
32.0565 17.6761 li
33.0039 14.21 li
33.0234 14.1396 li
33.6348 11.8936 35.498 5.05468 47.4961 5.05468 cv
47.8069 5.05468 48.1186 5.06787 48.4311 5.09404 cv
48.178 5.07333 47.9248 5.06093 47.6709 5.05702 cv
47.6708 5.05702 li
47.6659 5.05695 47.6613 5.05688 47.6563 5.05681 cv
47.6563 5.05681 li
47.6432 5.05662 47.6297 5.05646 47.6167 5.05632 cv
47.6149 5.0563 47.6125 5.05627 47.6107 5.05625 cv
47.6076 5.05622 47.6046 5.05619 47.6016 5.05616 cv
47.5988 5.05614 47.596 5.05611 47.5932 5.05609 cv
47.5906 5.05607 47.588 5.05604 47.5853 5.05602 cv
47.5817 5.05599 47.5778 5.05597 47.5741 5.05594 cv
47.5722 5.05593 47.5709 5.05592 47.5689 5.05591 cv
47.5638 5.05587 47.5582 5.05584 47.553 5.05581 cv
47.5507 5.0558 47.5492 5.0558 47.5469 5.05579 cv
47.5432 5.05577 47.5394 5.05575 47.5358 5.05574 cv
47.5335 5.05573 47.532 5.05573 47.5297 5.05572 cv
47.5258 5.05571 47.5223 5.0557 47.5184 5.05569 cv
47.5165 5.05569 47.5146 5.05569 47.5127 5.05568 cv
47.5072 5.05568 47.5016 5.05567 47.4961 5.05567 cv
47.4961 5.05567 li
35.498 5.05567 33.6348 11.8936 33.0234 14.1396 cv
33.0234 14.1396 li
32.3379 16.6572 li
32.338 16.6575 li
32.0586 17.6836 li
26.2391 7.31514 mo
24.2052 6.05705 21.2939 5.12996 17.0975 5.05991 cv
17.0962 5.05989 li
17.0805 5.05963 17.0646 5.05938 17.0488 5.05914 cv
17.0482 5.05913 li
17.0403 5.05901 17.0332 5.05891 17.0253 5.0588 cv
17.0248 5.05879 17.0244 5.05878 17.0239 5.05878 cv
17.0088 5.05856 16.9921 5.05834 16.977 5.05815 cv
16.976 5.05813 16.9757 5.05813 16.9747 5.05812 cv
16.9596 5.05793 16.9435 5.05774 16.9284 5.05757 cv
16.9274 5.05756 16.9266 5.05755 16.9256 5.05754 cv
16.9184 5.05746 16.9121 5.05739 16.9049 5.05732 cv
16.9039 5.05731 16.9029 5.0573 16.9019 5.05729 cv
16.894 5.05721 16.8866 5.05713 16.8787 5.05706 cv
16.8785 5.05706 li
16.8713 5.05699 16.8642 5.05692 16.8569 5.05686 cv
16.8549 5.05684 16.8538 5.05683 16.8518 5.05682 cv
16.8446 5.05675 16.8371 5.05669 16.8298 5.05663 cv
16.8298 5.05663 li
16.8218 5.05657 16.8149 5.05652 16.807 5.05646 cv
16.8054 5.05645 16.8042 5.05644 16.8026 5.05643 cv
16.7961 5.05639 16.7897 5.05634 16.7832 5.0563 cv
16.7821 5.0563 16.7809 5.05629 16.7799 5.05628 cv
16.7719 5.05623 16.7652 5.05619 16.7572 5.05615 cv
16.7557 5.05614 16.7556 5.05614 16.754 5.05613 cv
16.7475 5.0561 16.7411 5.05606 16.7345 5.05603 cv
16.7325 5.05602 16.7314 5.05602 16.7293 5.05601 cv
16.7228 5.05598 16.715 5.05594 16.7084 5.05592 cv
16.7079 5.05591 16.7075 5.05591 16.707 5.05591 cv
16.6997 5.05588 16.6921 5.05586 16.6848 5.05583 cv
16.6832 5.05583 16.6812 5.05582 16.6796 5.05582 cv
16.6731 5.0558 16.6681 5.05578 16.6615 5.05577 cv
16.66 5.05576 16.658 5.05576 16.6565 5.05575 cv
16.6492 5.05574 16.6419 5.05572 16.6346 5.05571 cv
16.6331 5.05571 16.6317 5.05571 16.6301 5.05571 cv
16.6243 5.0557 16.6181 5.05569 16.6122 5.05568 cv
16.6101 5.05568 16.6081 5.05568 16.606 5.05568 cv
16.5987 5.05567 16.5913 5.05567 16.584 5.05567 cv
16.2756 5.05567 15.9673 5.06829 15.6598 5.09313 cv
15.9686 5.06758 16.2769 5.05468 16.584 5.05468 cv
21.0591 5.05468 24.1234 6.0056 26.2391 7.31514 cv
false sop
/0 
[/DeviceCMYK] /CSA add_res
gsave
[31.7928 0 0 31.7928 31.8657 58.7051 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~zzzzzzzz!<E6(!sAc2"pP;<#RLhF$OdFQ%Ls![&.oKe',)&p'c%T%(`4,/)B0Y9*?H7D+<VgO+sS<X,p
alc-R^Dm.P*,&/M8\00JP:;1G^jF2)[?O3&ioZ3]fGd4[)%o5<h@t5X7S#5sdn*6UO4/6q'O67Ros=7n
?0B8P2TJ92&#R9hnGZ:Jakb;,U:j;cH^r<E<.%='/R-=^#!5>?b?;?!UcC?XI2K@:<VTA7T7_AnG[gBP
;*oC2.O#D/F0.Df9T6EH-#?FEDYJG'8(RG^+L[H[C-fI=6Qn~>
<~Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR?['[6L[^WfX]"5Md]Y;.q^qmk(_o0O5`lH-Ab0%oO
bg"GZd*U1gdaQ^rf%8O+g"P39gtgfChr*JQioB+\jlbgjkiqBum-X3.n*fc:o(2JFp%A(Sq"ad_qu-Km
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
np
32.0371 17.7471 mo
33.0039 14.21 li
33.0234 14.1396 li
33.6348 11.8936 35.498 5.05468 47.4961 5.05468 cv
50.5488 5.05468 53.7148 6.3291 56.4082 8.64257 cv
59.0683 10.9248 61.1152 14.0635 62.1738 17.4785 cv
63.3887 21.3974 63.3867 25.6504 62.166 29.7783 cv
60.9258 33.9668 58.5058 37.7607 55.168 40.7481 cv
42.1035 52.4346 34.4648 60.0283 32.039 62.4863 cv
29.6367 60.0469 22.0742 52.5234 8.91014 40.7481 cv
5.57225 37.7607 3.15236 33.9678 1.91405 29.7783 cv
.693367 25.6504 .691412 21.3974 1.90626 17.4785 cv
2.96288 14.0635 5.00975 10.9248 7.67187 8.64257 cv
10.3652 6.3291 13.5313 5.05468 16.584 5.05468 cv
28.584 5.05468 30.4434 11.8945 31.0547 14.1416 cv
31.0742 14.21 li
32.0371 17.7471 li
47.4961 4.05468 mo
34.6016 4.05468 32.6445 11.7315 32.039 13.9473 cv
31.4355 11.7315 29.4785 4.05468 16.584 4.05468 cv
9.66407 4.05468 3.20898 9.88671 .951161 17.1826 cv
.316402 19.2285 .00390936 21.3526 0 23.4892 cv
-.0136828 30.0322 2.86524 36.6806 8.24414 41.4932 cv
21.4434 53.3008 29.0293 60.8555 31.3379 63.2002 cv
31.4238 63.2861 li
31.6523 63.5185 31.8223 63.6933 31.9355 63.8096 cv
31.9355 63.9815 li
31.957 64 li
32.039 63.9141 li
32.123 64 li
32.1426 63.9815 li
32.1426 63.8096 li
32.2559 63.6933 32.4258 63.5185 32.6543 63.2861 cv
32.7383 63.2002 li
35.0508 60.8574 42.6367 53.3017 55.834 41.4932 cv
61.2129 36.6806 64.0937 30.0322 64.0801 23.4892 cv
64.0762 21.3526 63.7637 19.2285 63.1289 17.1826 cv
60.8692 9.88671 54.416 4.05468 47.4961 4.05468 cv
0 .5 1 0 cmyk
f
12.4594 43.9418 mo
11.3254 42.9152 10.1419 41.8498 8.91014 40.7481 cv
6.56156 38.6461 4.66744 36.1454 3.31962 33.3882 cv
3.88599 34.541 4.55174 35.6574 5.3125 36.7236 cv
3.14845 33.1455 1.99217 29.1113 1.99217 25.083 cv
1.99217 23.0322 2.29101 20.9834 2.90626 18.9971 cv
5.13475 11.7998 11.3066 6.57519 17.584 6.57519 cv
24.5254 6.57519 28.0703 8.86329 29.9473 11.2275 cv
29.9473 11.2275 li
29.9473 11.2275 li
28.4761 8.49568 25.1636 5.19418 17.0975 5.05991 cv
21.2939 5.12996 24.2052 6.05705 26.2391 7.31514 cv
29.7967 9.51713 30.6713 12.7325 31.0547 14.1416 cv
31.0742 14.21 li
32.0371 17.7471 li
32.0565 17.6761 li
32.0586 17.6836 li
32.338 16.6575 li
33.0586 19.2021 li
34.0234 15.6592 li
34.6348 13.4121 36.4981 6.57519 48.4961 6.57519 cv
52.9314 6.57519 57.3065 9.19051 60.2827 13.2606 cv
61.012 14.476 61.6116 15.774 62.0582 17.1185 cv
62.0979 17.2382 62.1364 17.3587 62.1738 17.4795 cv
62.4101 18.2373 62.584 19.0078 62.7285 19.7822 cv
55.1055 20.1221 46.7246 21.9834 38.373 25.4893 cv
27.3848 30.1035 18.3848 36.7471 12.459 43.9424 cv
48.489 5.09903 mo
48.2168 5.07535 47.944 5.06125 47.6709 5.05702 cv
47.9248 5.06093 48.178 5.07333 48.4311 5.09404 cv
48.4504 5.09565 48.4697 5.09732 48.489 5.09903 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[61.92 0 0 40.32 1.44 19.36 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 129 
/H 84 
/M[129 0 0 -84 0 84 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 129 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 129 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 129 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 129 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcPECE<-+B!sA`1"U52:#RLeE$O[@P%1WmZ&.oKe',)&p'c%T%(`4,/)B0Y9*?H7D+<VgO+sS?Y,pjrd
-n$Mo.P!##/M/S.0/,+81,C^C2)R9N2`NfX3]fDc4Zttm5<qJ"6:+%-6q'R77n?0B8kM_Y9MA/UpAf.5
!X&Z2#RLhG%1Wm\&ebuq(E",1*$-1E+sS?[-R^Gp/1rS00f(XD2`NfZ4?Yno5sdt.7S$*C9MJ8Y;,U@n
<``F->?tQB@:E_XAnPdlCM[m,E,p#AG'A1WH[L6kJ:W?+KnkJ@Mi<XUOHG]j"dPC@R@9Y%!.k4=!,DT9
!WrN-"U,)7#7(SA$47.L$k3[V%hK9a&eYil'GVB!(Dmu,)&aG5*$$%@+!2UK+X/-U,UF``-RU;k.4Qhu
/1`A*/h\n40etL?1c.'J2E*TT3BB2_4?Pbj5!M7s5s[h)6UX@37RmhV84cBF91qrQ9hnLZ!,2K:"9o):
$4@7O%hK<d'GVE$)&jP9*ZuUM,UFcc.4Ql#/hf"81Gq'L3BB5b5!M>"6UXC684lNK:/=\a;cHe!=BSj5
?!guJ@q9.`BPD3tD/O<4EccGIG^4U_I=?ZsJqJc3LP^nH%?6C/OHPflQC!u-S"-(3!.k46!+Z*3!WrQ.
"U5/9#7(VB$4@4M%1NdX%hK<b&ebom'bqK#(Dn#-)B'P7*$$(A+!;[L+sJ6W,UFca-R^Al.Olr"/1iG+
0/#"60etO@1c7-K2`E]V3BB5`4?Yhk5<hCu5sdmO6UX=27Rfm=84cEG92&#R:/4S]q>b"+!X&Z2#RLhH
%1Wm\&ebuq(E",1*?H:G+sS?[-R^Gp/1rS01,CaE2`NfZ4?Yno5sn%/7n?3D9MJ8Y;,U@n<`iL.>?tQB
@:E_XAnPgmCMds-E,p#AG'A1WH[L9lJ:W=fKS>2;M2R=PO-#KfPa.Q%R@9Y:StMGNJcOa0?3('.!s8Z0
"U52:#RC_D$4@7N%1WjY&.fEd&ebrn'c%Q$(`4,/)B0V8*??1C+!;^M+sS<X,palc-R^Dm.P!##/M/S-
0/,(71,:XB1c70L2`NcW3]]>b4?Ykl)a?SQ5s[h)6UX@37Ros>8P)NI92&&S:/=Y^;>U>u!WrQ0#7(YE
$k<dZ&JGin(Dn#/*$$+D+X86Y-7C;m/1iJ.0etRC2E*WW4$>bl5sdq-7Rp$B92&)V:f:4k<``C,>?kH@
?t!PUAS5[jCM[j+E,fo?F`r"TH6%B]IXm!$K8#&8M2I4NNfT<cPEhH#R$sM7StD[MTE'QDg&P1T!WiH,
"9eu6#7(SA$47.K$k3XU%hB3`&J>`j'GV>u(Ddo+)&aG5*$$%@*ZlLI+X/*T,U=Z_-7:2i.4Qet/1`A*
/h\n40ekF>1GgsH2E*QS3B9,F4$,Pf4[)(p5X@\&6:4./77Ka:84Z<E8kViO9hnGZ:f("er;]k!!X&Z2
#RLhH%1Wp]&el&r(E",1*?H:G+sSB\-R^Gp/1rS01,CaF2`Ni[4?Yno5sn%/7n?3E9MJ8Y;,U@n<`iL.
>[:ZD@:E_XAnPgmCMds-EH3@HFEVkQH@($gIt3-'KS>2;M2R=PO-#KfPa.T&R@9Y:StMdOUo49F!7V!G
!<E6(!sAc2"pYA=#mgqH$OdFQ%Ls!\&.oNf',2,q()@]'(`=51)]Th<*ZcCF+<_mP,9nH[,pjue-n-Sp
.k</&/M8\00JP:;1,CaD2)]nA2`NcW3]]>b4?Ykl5<qJ"6:+%-6q'O67n6*A8P2WK9MJ5V:JXea;,U<m
!!*-'"9o):$4@7P%hK?e'G_K%)&jP9+!;^O,UFfd.4Ql#/hf"81c70N3BB8c5!M>"6UaI78P2WM:/=\a
;cHe!=B\p6?=.)L@q9.`BPB&6Ci+*0EH?5EG'J:YI!pHoJV&Q/L5:\DMiEaXOckonQC"#.S"-(BTVA3W
VQ^&P!6kL9!<N<)"9\l4"pYD>#mq"I$k*RS%M'']&J5Wh',2/r()Ic()&X>3)]Tk=*ZlIH+<_pQ,:"N\
-71)g-n-Vq.kE5'/hSe20JP>31,C^C2)R9N2`NfX3]fDc4Zttn5<qM#6:4+.77B[87n?0B8kM`M9MJ8W
:Jakb;GpFm!!*0)"U>;>$4I@R&.oNh'c%W()B0\<+!DgQ,pjug.P!)'0/,.;1c@9P3]fGf5<qM%6q'U:
8P;`O:Jand<)lt$=^#'9?=72!@Us%^B5)*rD/O93EcZAHGBeF\I"$QqJqJ`2LPUhGN/`m[Ocu#pQ^F21
S=Q7ETq\?ZVPq!)JcNgk6id;i!s8Z0"U52:#RLeE$O[@P%1WjY&.fEd&ebrn'c%Q$(`4,/)B0Y9*?H7D
+<VgN+sS<X,palc-R^Dm.P!##/M2E(0/#"60etO@1c.'J2E*TT3BB2_4?Pbj5!M:t5sdn*6psI57Ros>
8P)NI92&&S:/=Y^;,L4i;cH`u!sJl6#mq%K%M'*`',22u(`F>5*?QCI,:"Q_-n-Yt/MAe41,LjH3&s#^
4[)+s6:4127nH<G9hnJ];H$Rr='.Uh>?kKA?t*VVAnPdkCM[j+E,fr@Fa&(UH[L6jJ:W<*KnbD?MN!OT
O-,ThQ'Rc)R[]k>T:r!SUo(&gWe(5&!;unD!WiH,"9eu6#7(SA$47.L$k3[V%hB3`&J>`j'GV>u(Ddo+
)&aG5*$$%@+!2UK+X/*T,U=Z_-7:2i.4Qet/1`A*/h\n40etL?1c.'I2E*QS3B9,^4$5Yh5!M7s5s[h)
6UX@37Ros>84cEG92&#R:/4S]:f1,>;H$Oo<E95+#7(VD$k3[X&J>cm()Ro-*$$(B+X/-W-7:5l.kNA,
0etOA2E*TV4$5\k5XIh+77Tm?92&&U:f1.j<EE:*>$P?>?t!MTAS,UiC27[(DfKf=F`qtSH@('hIt3-'
KSG8<MMmFRO-#KfPa.T&R@B_;T:hk_USO``W2ZeuM?&5.o`0"7!sAc2"pYA=#mgqH$OdIR%M'']&J5Wg
',2,q()@]'(`=51)]Th<*ZcCG+<_pQ,:"N\,pjue-n-Sp.k</&/M8\00JP:;1G^jF2)[BP3&ioZ3]fGd
4[)%o5X7V%6:4./77Ka:84Z<E8kVfN9hg(3:JXea;,U=k<)lq!<sAm9$4@:Q%hK?e'G_K%)B0Y;+!;aP
,UFfd.4Zr$0/,+:1c70N3BB8c5!VD#6q'R98P2WM:/=_b;cQk"=^#$7?=.)L@q91aBPM=!DJsK6F*)PK
G^4X`I=HcuJqSi4Ll%"JNK0*_P*D5tQ^JAQS"6.CTq\<YVPgAmX/rIe!.k4<!,;W>"U5/9#RC_D$4@7N
%1WjY&.fEd&ebom'bqK#(Dn#-)B0V8*??1C+!;^M+sS<X,palb-R^Al.Olr"/1iJ,0/,(71,:XB1c70L
2`NcW3BB5`4?Yhk5<hD!5sdq+6q'O67n6*A8Ua9)92&#R:/4S]:f1+g;cH^r<`W:(#RLkI%1a!^&el&r
(`=53*?H=H+s\H]-RgMq/M8\21,CdG2`Ni[4?btp6:4.17n?6F9MJ;Z;,^Fo='/U0>[:ZD@:EbYAnYmn
Ci+'/EH6,CG'A4XH[U?mJV&N-L51SBMi<[WO;F(DPa7Z'R@B_;T:hmQUnsufWN*&%Y-=>pJcOm4@Kco>
#6tM@#mq%J$k3XU%hB3`&J>`j'GM8t()If))&aD4*#ot?*ZlLI+X/*T,U=Z_-7:/h.4H_s.kE8(/h\k3
0ekF>1GgsH2E*QS3B9,]4$5Vg5!D1r5X@_'6UX=2IRZds84Z<E8kViO9heAY:Janc;H$Ln<E3($='/T4
$OmRV&J>`l()If+)]Tn@+<i$U-7:2j.kE8*0JP@?2)dKT4$5Yi5X@_)77Kg>8k_rS:Jk"g<E<1(>$G9=
?X[DRA7fIfC27X'DfB`<FEMePH$apeIt3*&KS>2;+,Pl6NK0*_P*D5tR$jD4SXuIIU8+Q^Vl?\sXKJb2
ZD%>N!8RWY"pP;<#RLhF$OdFQ%Ls!\&.oNf',2,q'c%T%(`=20)]Kb;*?H:E+<_mP,9nH[,pjue-n$Mo
.P!&$/M8Y/0JG4:1,CaD2)[?O3&ioZ3]fDc4Zttn5<qM`5sdq+6q'O67n6*A8P2WK9MJ5V:/=\_;,U:j
<)cju<``C*=]u4C%hK<d'GVE$)&aJ8*ZuUM,UFcc.4Qi"/h\q71Gq'L3BB5b5!M;!6UXC684lNK:/=\`
;cHau=BSj5?!guJ@q9._BPD3tD/O<4EccGIGBnL]I=?YnJV&N.L51VCMi<[WOHPflQC!u-S"-%ATV8-V
V5L8kX/rG,Yd(L@WW7VNeGrJP#7(VB$4@4M%1NdX%hK<b&ebom'bqK#(Dmu,)B'P7*$$(A+!;[L+sJ6W
,UFca-R^Al.Olr!/1iG+0/#"60etO@1c7-K2`E]V3BB5`4?S'U5!D1r5X@_'6UX=27Rfm=84cEG92&#R
:/4S\:f1(f;c?Xq<E<1&=BSd1>7M/U&ebuq(E",1*$-1E+sS?[-R^Gp/1rS00f(XD2`NfZ4?Yno5sdt.
7S$*C9MJ8Y;,U@n<``F->?tQB@:E_XAnPdlCM[m,E,p#AG'>TaH$apeIt3*&KS>2;M2R=PNf]BdPa.Q%
R@9Y:StD^NUSXicWN*#$Y-5+9Za@0H!.k3q!(mM&#mq"I$k*RT%M'*^&J>]i'GM8t()If))&X>3)]Tk=
*ZlIH+X&$S,:"Q]-7:/h.4H_s.kE5'/hSe20JP=<1GgpG2E!KR3.<kK3]fGd4[)%o5<qM#6:4+.77B[9
7n?3C8kVfN9heAY:Janc;GpFm<)lt"='/R->$>-8&.oQi'c.]))]Tk>+<_pS,pk#h.P*/(0JP==2)[BR
3]fJg5=%V'6q0[;8kViQ:Jaqf<*!(&=^,-:?XR;PA7]CeBkhI$DDuNSEccGIG^4U_I=?ZsJqJc3LP^nH
NK0']P*;,rQ^F52S=Z@GU8+N\Vl6SqXKA\1Z*UgF[^`mKJcNai64!r*$O[@P%1WmZ&.oKe',)&p'c%T%
(`=20)B0Y9*?H7D+<VgO+sS?Y,pjrd-n$Mo.P!&$/M/S.0/,+81,C^C4Z,)T2`E]V3BB5`4?Yhk5<hCu
5sdn*6psI57Rp!?8P2TJ9MA/U:/=\_;,U:j;cHas<``@)=]np4>?kH_&ebuq(E",1*?H:G+sS?[-R^Gp
/1rS01,CaE2`NfZ4?Yno5sn%/7S$*C9MJ8Y;,U@n<`iL.>?tQB@:E_XAnPgmCM[m,E,p#AG'A1WH[L9l
J:W?+KnkJ@Mi<XVOHG]jQ'Rf*R[fq?TV8*UV5C/iWiN8)YHbC>[C3OF\@R=nJcPZJGR=cc$k*RT%M'*^
&J>]i'GM8t()If))&aD4)]Tk=*ZlIH+X&$S,:"Q]-7:/h.4H_s.kE8(/hSe20JP=<1GgpG2E!KR3&s#\
4$5Vg5!D1r5X@\&6UO7177Kd;84cBF91qrQ9hnJ[:f1(f;c?Xp<E<.%=BL#T>$>-8>[:YM'c.]))]Tk?
+<_sT,pk#h.P*/(0JP=>2)[BR3]fJg5=%V'77Kd=8kViQ:Jaqf<*!(&>$G6;?XR;PA7]CeBkqO%DfB]:
FEMbOH$XjdIXm!$K8#&8M2I4NNfT<cPEhH#R$sM7StD[MUSOcbW2Zi!Xfi&8Z*UgF\%&u\]SliB!:p20
$O[@P%1WmZ&.oKe',)&p'c%T%(`=20)]Kb:*?H7D+<VgO+sS?Y,pjrd-n$Mo.P!&$/M8Y/0/,+81,C^C
2)R9N2`NfX3]fDc4Zttn5<qM#6:+%-6q'R77n?0B8kM`M9MJ8W:Jakb;GpFm<.7hI<``@)=]np4>?kH>
?=+Ha)&aG7*ZlOL,:+Za-n6_u/h\n61Gh!K3&s&_4[21t6UX@584cHJ9hnM^;H-Xs=BSg4?!^lH@Uit]
B5)*rD/O93EcZ>GGBeF\I"$QqJqJ`1LPUeFN/`m[Ocu#pQ^F20S=Q7ETq\?ZV@fc+WiN8)YHbC>[C3QT
]">YiPQ6:8lMtT,$k3[V%hK9a&eYil'GVB!(Dmu,)B'P7*$$(A+!2UK+X/-U,UF``-RU;k.4Qhu/1iG+
0/#"60etL?1c.'J2E*TT3BB2_4?Pbj5!M:t5sdn*6psI47Ros>8P)NI92&&S:/=Y^ISis?;c?Xq<E<.%
=BJ^0>$G6:?!^iE?l0b#*$$+D+X86Y-R^Dn/1iJ.0etRC2E3]X4?Ykm5sdq-7Rp$B92//W:f:4k<``C,
>?kKA?t*VVAS5[jCM[j+E,fr@F`r"TH@1-iJ:W<*KnbD?MMmISO-,ThQ'Rc)R[]h=)5!RrUSOcbW2co"
Xfnt6Za@-L\@K5a]t_@Q!.k42!+66F%M'']&J5Wh',2/r()Ic()&X>3)]Tk=*ZlIH+<_pQ,:"N\-71)g
-n-Vq.kE5'/hSe20JP=<1G^jF2)[BP3&ru[4$,Pf4[)(p5X@\&6UO7177Ka:84Z<E8kVj,9MJ8W:Jakb
;GpFm<)lt"='/R-=^#$6>[:WA?XI2L)B0\<+!DgQ,pjug.P!&&0/,.;1c@9P3]fGf5<qM%6q'U:8P;`O
:Jand<)lt$=^#'9?=72NA7]@cBkhF#DJsN8F*2YMG^=^aIXcm"K7nu7Ll.+LNK90`PE_=UQ^F21S=Q7E
Tq\?ZVPpJoXKAY0Z*L^D[^WfY]=kqn_8;uJJcOO*=:PfO&.fEd&ebrn'c%Q$(`4,/)B0Y9*?H7D+<VgN
+sS<X,palc-R^Dm.P!##/M/S.0/,+81,C^C1c70L2`NcW3]]>b4?Ykl5<qJ"6:+%-6q'R77n8#!8P)NI
92&&S:/=Y^;,L4i;cHas<``@)=]np3>?kE=?=$uH?t!La*?QCI,:"Q_-n-Yt/MAe41,LjH3&s#^4[)+s
6:4127nH<G9hnJ];H$Rr='/X1>[CcF@Uiq\B4u!pCi+*0EH?5EGBeCZI!pHoJV&Q/L5:\DN/]9HO-,Th
Q'Rc)R[]k>T:hpRUo(&gWiN5(YHY==['dBQ\\#Mf^VI\'`2irj!7LpE%hB3`&J>`j'GV>u(Ddo+)&aG5
*$$%@+!2UK+X/*T,U=Z_-7:2i.4Qet/1`A*/h\n40etL?1c.'I2E*QS3B9,^4$5Yh5!M7s5s[h)6[hEl
77Kd;84Z<E8kViO9hnGZ:f("e;H$Oo<E<.%=BJ^0>$G39?!UcD?XR;N@UgH$+X/-W-7:5l.kNA,0etOA
2E*TV4$5\k5XIh+77Tm?92&&U:f1.j<EE:*>$P?>?t!MTAS,UiC27[(DfKf=F`qtSH@('hIt3-'KJA4:
Ll.+LNfT9aPE_?!R$jG6SY)RKUSO``W2ZeuXfen5ZF%$J\%0)^]tV7t_Sa@4ZiG[Xb5b'E&J5Wg',2,q
()@]'(`=51)]Th<*ZcCG+<_pQ,:"N\,pjue-n-Sp.k</&/M8\00JP:;1G^jF2)[?O3&ioZ3]fGd4[)%o
IR$.a6:+%-6q'R77n?0B8P2WK9MJ5V:JXea;,U=k<)lq!='&L,=^#$6>[1Q@?=.)J@:E\UA0<'@,UFfd
.4Zr$0/,+:1c70N3BB8c5!VD#6q'R98P2WM:/=_b;cQk"=^#$7?=.)L@q91aBPM=!D/XB5F*)PKG^4X`
3IQC-JV&Q/L5:\DN/`jZOckonQC"#.S"6.CTq\<YVPgAmX/rJ-Yd1UB[^WcW]=bhl^qmq,`Q-'4!.k3g
!.GLm&ebom'bqK#(Dn#-)B0V8*??1C+!;^M+sS<X,palb-R^Al.Olr"/1iJ,0/,(71,:XB1c70L2`NcW
3BB5`4?Yhk5<hD!5sdq+6q'O67n6*A8P2WK9MA/U:/=\_;,U:j<)cju<``C*=^#!5>[1Q@?=.&I@:<VT
@t%s"+s\H]-RgMq/M8\21,CdG2`Ni[4?btp6:4.17n?6F9MJ;Z;,^Fo='/U0>[:ZD@:EbYAnYmnCi+'/
EH6,CG'A4XH[U?mJV&N-L51SBMi<[WOHPflQC!u,S"-%ATV8-VV5L8kWiW>*Yd(L@[C3TU]"G_j^VRe)
`<4-#ai]><JcPTHFqPH%'GM8t()If))&aD4*#ot?*ZlLI+X/*T,U=Z_-7:/h.4H_s.kE8(/h\k30ekF>
1GgsH2E*QS3B9,]4$5Vg5!D1r5X@_'6UX=27Rfm=84cEG92&#R9hnJ[:f1(f;c?Xq<E<1&=BSd1>?b?<
?!^lFIUHPl@U`hXA7]?u-7:2j.kE8*0JP@?2)dKT3]oPh5X@_)77Kg>8k_rS:Jk"g<E<1(>$G9=?XR>Q
A7fIfC27X'DfB`<FEMePH$apeIt3*&KS>/:M2I7ONf]BdPa.Q%R@9V9StD^NUSXicWN*##Y-5(8Za@0M
\@T;b$bjBk_8F41a2lBGb`2[T!:^&,',2,q'c%T%(`=20)]Kb;*?H:E+<_mP,9nH[,pjue-n$Mo.P!&$
/M8Y/0JG4:1,CaD2)[?O3&ioZ3]fDc4Zttn5<qM#6:4+.77B[97n?3C8kVfN9heAX:Jakb;GpFm<)lt"
='/R->$>-Z>[1Q@?=.)J@:<VT@q9.^AnNG=.4Qi"/h\q71Gq'L3BB5b5!M;!6UXC684lNK:/=\`;cHau
=BSj5?!guJ@q9._BPD3tD/O<4EccGIGBnL]I=?ZsJqJc3LP^nHN/is\P*;,rQ^F52S=Q:FTqeE[Vl6Sq
XKA\1Z*L_M[C3TU]"G_j^qmn*`Q#s?b0/&TQ2lL:kl><0'bqK"(Dmu,)B'P7*$$(A+!;[L+sJ6W,UFca
-R^Al.4Qhu/1iG+0/#"60etO@1c7-K2`E]V3BB5`4?Pbj5!M:t5sdn*6psI57Rp!?8P2TJ9MA/U:/=Y^
;,L4i;cHas<`a`O=BSd1>?b?<?!^lF?t!JQ@UiqZAS,OeBIG>\/1iM/0f(XD2`NfZ4?Yno5sdt.7S$*C
9MJ8Y;,U=m<``F->?tQB@:E_XAnPdlCM[m,E,p#AG'A1VH[L6kJ:W?+KnkJ@Mi<XUOHG]jQ'Rf*R[fq?
T:r!SV5C/iWiI)@Y-5+9Za@0M\@T;b^;%J#_o0O7aN;WLc-Ob.!.k40!+$BU()If))&X>3)]Tk=*ZlIH
+X&$S,:"Q]-7:/h.4H_s.kE5'/hSe20JP=<1GgpG2E!KR3&s#\4$5Vg5!D1q5X@\&6UO7177Kd;84cBF
91qrQ9hnJ[:f("e;LVPD<)lt"='/R->$>-8>[:ZB?XR8M@U`hWA7]=aB4kml.P*/(0JP==2)[BR3]fJg
5=%V'6q0[;8kViQ:Jaqf<*!(&=^,-:?XR;PA7]CeBkhI$DK'T9FEMbOH$XjdIXcp#K8#&8M2I4NNfT9b
PE_B"R$sM7StD[LUEcS2Vl6SqXKA\1Z*UgF[^`lZ]Y2%p_8=.0`lH3DbK\>YdF+llJcOI(<YcJf(`=20
)B0Y9*?H7D+<VgO+sS?Y,pjrd-n$Mo.P!&$/M/S.0/,+81,C^C2)R9N2`NfX3]fDc4Zttn5<qJ"6:+%-
6q'R77n?0B8kM`M9MJ8WISWd:;,U:j;cHas<``@)=]np4>?kH>?=.&I@:<VT@q9.^AnG[hBPD34/h\n6
1GgsJ3&s&_4[21t6UX@484cEI9hnM^;H-Xs=BSg3?!^lH@Uit]B5)*rCi401EcZ>GGBeF\I"$QqJV/W0
LPUeFN/`m[OckroQC+)//"E0%TV8*UV5C/iWiN8)YHbC>[C3QS]">Vh^VI_(`5]j=b0/#Rcd:(ge?/e'
!7:dA(Dmu,)B'P6*$$%@+!2UK+X/-U,UF``-RU;k.4Qhu/1iG+/h\n40etL?1c.'J2E*TT3BB2_4?Pbj
5!M:t5s[h)6UX@37Ros>8P)O'91qrQ9hnJ[:f1(f;c?Xp<E<.%=BJ^0>$G6:?!^iE?smDP@UiqZAS,Oe
B4u!nC25FU0etRC2E*WW4$>bl5sdq-7Rp$B92&)V:f:4k<``C,>?kH@?t!PUAS5[jCM[j*E,fo?F`r"T
H@1-iJ:W<)KnbA>MMmISO-,S]PE_B"R$sM7StD[MUSOcbW2Zi!Xfnt6Za@-L\@K2`]tV:u_SjF5aN;TK
c-FY_daQat[K(mZaT+dI)&X>3)]Th<*ZcCG+<_pQ,:"N\-71)g-n-Vq.kE5'/hSe10JP:;1G^jF2)[BP
3&ru[4$,Pf4[)(p5X@\&6:4./77M_q7n?0B8kM`M9MJ8W:Jakb;GpFm<)lq!='&L,=^#$6>[:WA?XI2L
@:E_VA7]=aB4kmkBkhBuCbRV#1c@9P3BK>d5<qM%6q'U:8P;`O:/Fec<)lt$=^#'9?=.,M@qB7bBkhF#
DJsN8F*)SLG^=^aIXcm"K7nr6Ll"3ON/`m[Ocu#pQ^F20S=Q7ETq\?ZVPpJoX0&P.Z*L^D[^WfY]=kqn
^r""-`lH0CbKS8Xd*^=le^rHf!5eeg!.FnJ)&aD4*#ot?*ZlIH+X&$S,:"Q]-7:/h.4H_s.kE8(/h\k3
0JP=<1GgpG2E!KR3&s#\4$5Vg5!D1r5X@_'6UO7177Kd;84cBF91qrQ9hnJ[:f1(f;c?Xq<E<.%=BJ^0
>$G6:?!^iE?smDP@UiqZAS,OeBP;*oC49r6Ci(pa2)[ES3]oPh5=%V'77Kd=8kVlR:Jaqf<*!(&>$G6<
?XR;PA7]CeBkqO%DfB];FEMbOH$XjdIXm!$KS>/9M2I4NNfT<cPEhH#R@9V8StD[MUSOcbW2co"Xfnt6
Za@-L\@K5a]t_A!_SjF5aN;TKc-F\`dKS+Mf%8U/L]E#,pAf:R)]Kb;*?H:E+<VgO+sS?Y,pjrd-n$Mo
.P!&$/M8Y/0JG4:1,C^C2)R9N2`NfX3]fDc4Zttn5<qM#6:4+.77B[87n?0B8kM`M9MJ8W:Jakb;GpFm
<)lt"='/R-=^#$6>[:WA?XI2L@:E_VA7]=aIV3;,Bk_<tCM[g(DDX713'',`5!M:u6UX@584cHJ9i"S_
;H-Xs=BSg4?!^oI@Us%^B5)*rD/O93EcZAHGBeF\I"$QqJqJ`2LPUhGN/`m[Ocu#pQ^F21S=Q7ETq\?Z
VPpJoXKAY0Z*L^D[^WfY]=kqn_8=+.`lH0C%Elu@cd:+heCN7(g"Y;D!.k4>!,NSo*$$(A+!;[L+X/-U
,UF``-RU;k.4Qhu/1iG+0/#"60etO@1c.'J2E*TT3BB2_4?Pbj5!M:t5sdn*6psI57Ros>8P)NI92&&S
:/=Y^;,L4i;cHas<``@)=]np3>?kE=?=$uH?t!Mn@UiqZAS,OeBP;*pC27X%D/F0/2E3]X4?Ykn5sdq-
7Rp$B92//W;,U=l<``C,>?kKA?t*VVAnPdkCM[j+E,fr@Fa&(UH@1-iJ:W<*KnbD?MN!OTO-,ThQ'Rc)
R[]k>T:hpRUo(&gWiN5(YHY==['dBQ\\#Mf^VIZ#_o0O6aN;TKc-F\`daZguf\,!5h;4M!JcOs6A/lU1
*ZlIH+X&$R,:"N\-71)g-n-Vq.kE5'/hSe20JP=<1GgpG2)[BP3&ru[4$,Pf4[)(p5X@\&6UO7177Kd;
84Z<E8kViO9hnGZ:f("e;H$Oo<E<.%=BJ^0>$G39?!Vnc?XI2L@:E_VA7]=aB4kmlBkhF!Ci+$,DJsJR
3]fGf5<qP&6q'U:8P;`O:Jane<)m"%=^#'9?=72NA7]@dBkhF#DJsN8F*2YMH$XgcIXcm"K7nu7Ll.+L
NfT9aPE_?!R$jG6SY)RKUSO``W2ZeuXfen5ZF%$J\%*Nj]=kqn_8=+/`lH0CbKS8Xd*gCmf%8R.gYCWB
i1L(%!8dc]*?H7D+<VgO+sS<X,palc-R^Dm.P!##/M/S.0/,+81,C^C2)R9M2`NcW3]]>b4?Ykl5<qJ"
6:+%-6q'R77n?0B8P2WK9MJ5V:JXea;,U=k<)lq!='&L,=ajOY>?kE=?=$uH?t!MR@q9+]AnG[hBPD3r
CM[g(DJjB2E,dp$4[)+s6:=737nH<G9hnJ];H$Rr='8^2>[CcF@Uiq\B4u$qCi+*0EH?5EGBeC[I!pKp
JV&Q/L5:\DN/`jZOckonQC"#.S"6.CTq\<YVPgAmX/rJ-YU-T]['mHR\\#Mf^VI\'`5Td<aihoQcHste
eCE.&g"P6;hV[;OVuVDLf)Sbk+!2UK+X/-U,UF``-7:2i.4Qet/1`A*/h\n40etL?1c.'J2E*TT3B9,^
4$5Yh5!M7s5s[h)6UX@37Ros>8P)NH92&#R:/4S]:f1+g;cH^rITBKN=BJ^0>$G6:?!UcD?XR;N@UinY
AS#IdB4u!nC27U$D/F0/DfBZ8E]cNM5XIh+7Rp!A92&&U:f1.j<EE:*>?kH??t!MTAS,UiC2@a)E,fo>
F`qtSH@('hIt<3(KSG8<MMmFRO-#NgPa.T&R@B_;T:hmQUnsuf/ZGbOXfen5ZF%$J\@K2_]tV7t_Sa@4
a2uKIc-FY^daQ^sf@\g3gtprHiT'"'!.k3s!)+IW+<_pQ,:"N\-71)f-n-Sp.k</&/M8\00JP:;1G^jF
2)[BP3&ru[3]fGd4[)%o5X7V%6:4./77Ka:84Z<E8kViO9heAY:Jao;;,U=k<)lq!='&L,=^#$6>[:WA
?XI2K@:E\UA7T7`AnPdjBkhBuCi!s+DJsK5EH6)@5!VD#6q'R98P2ZN:/=_b;cQk"=^#$8?=.)L@q91a
BPM=!DJsK7F*)PKG^4X`I=HcuK7nr5Ll%"JNK0*_P*D5tR$jD4SXuH2Tq\<YVPgDnX/rJ-Yd1UB[^WcX
]=bkm^qmq,`Q-'AbKS5Wd*^:ke^iC+g>(N@i8N\VjlX&QJcNgk6m*Wr+sS<X,palc-R^Al.Olr"/1iJ,
0/,(71,:XB1c70L2`NcW3]]>a4?Yhk5<hD!5sdq+6q'O67n6*A8P2WK9MKt1:/4S]:f1+g;cH^r<`W:(
=BSg2>?kE=?=$uH?t!JQ@q0%\AS,RfBPD0qCMRa'D/O91E,fl<F)uFg6:4.17n?6F9MSA[;,^Fo='/U0
>[:]E@:EbYAnYmnCi+'/EH6/DG'A4XH[U?mJV&N.L51SBMi<[WOHPflQBsb%R[]h<T:hmQUnsufWN3,&
Y->1:['d?P\[oGe^;.S%_o9X9ai_fOcHjnde'ut#f\5*8hV[8Nj5f@ck^ied!;unD+X/*T,U=Z_-7:2i
.4H_s.kE8(/h\k30ekF>1GgsH2E*QS3B9,^4$5Vg5!D1r5X@_'6UX=27Rfm=84cEG92&#R:/4S\:f1(f
;c?Xq<E<1&=BSd1>?b?<?!^lF?t!JQ@UiqZAS,OeBP;*pC27X%D/O60E,]fGEcQ5CFEKo<77Kg>8k_rS
:f1+h<E<1(>$G9=?X[DRAS,RgC27X'DfB`<FEVkQH$apeIt3*&KS>2;M2R=PNf]BdPa.Q%R@9Y:StD^N
USXicWN*#$Y-5+9Za@0M\@T;b^;%J#_o0O7aN;WLc-Obae'uq"f\,!6h;7&piSrq[k32'pM?&5.o`0"V
,9nH[,pjue-n-Sp.P!&$/M8Y/0JG4:1,CaD2)[?O3&ioZ3]fGd4Zttn5<qM#6:4+.77B[97n?3C8kVfN
9heAY:Jakb;GpFm<)lt"='/R->$>-8>[:ZB?XR8M@U`hWA7]=aB4kmlBkhF!Ci+W<DJsH4EH-#?F*)PI
G!nei84lNK:/=\a;cHau=BSj5?!guJ@q9.`BPD3tD/O<4EccGIG^4U^I=?ZsJqJc3LP^nHNK0']P*;,r
Q^F52S=Z@GTqeE[Vl6SqXKA\1Z*UgF[^`lZ]Y2%p_8=.0`lH3DbK\>YdF-Lof%1Gcg=tE>hr*MSjQ>Xh
lKdf"!.k4<!,<`(,UFca-R^Al.Olr"/1iG+0/#"60etO@1c7-K2`E]V3BB5`4?Yhk5<hCu5sdn*6psI5
7Rp!?8P2TJ9MA/U:/=\_;,U:j;cHas<``@)=]np4>?kH>?=.&I@:<VT@q9+]AnG[hBRXZ1C27X%D/O60
E,]f;EcZ>EF`qqP7S$*C9MJ8Y;,U@n<`iL.>?tQB@:E_XAnPgmCM[m,E,p#AG'A1WH[L9lJ:W?+KnkJ@
Mi<XVOHG]jQ'Rf*R[fq?TV8*UV5C/iWiN8)YHbC>[C3QS]">Vh^VI_(`5]j=aihoQcPOsUe'uq"f\,$7
h;7)KioK4`kiqC!mI$DCJcOm4@O*6G-7:/h.4H_s.kE8(/hSe20JP=<1GgpG2E!KR3&s#\4$5Vg5!D1r
5X@\&6UO7177Kd;84cBF91qrQ9hnJ[:f1(f;c?Xp<E<.%=BJ^0>$G6:?!^iE?smDP@UiqZIV!,'B4kml
BkhF!Ci+$,Df9T7EH6,AFEM_LGB\:&8kViQ:Jaqf<*!(&>$G6;?XR;PA7]CeBkqO%DK'T9FEMbOH$Xjd
IXm!$K8#&8M2I4NNfT<cPE_B"R$sM7StD[MUSOcbW2Zi!Xfnt6Za@-L\@K2`]tV:u_SjF5+3;RHbg"GZ
dF-Lof%8U/gYL`Di8WeXk3(snlg4'.n=fo7!8RWY,pjrd-n$Mo.P!&$/M8Y/0/,+81,C^C2)R9N2`NfX
3]fDc4Zttn5<qM#6:+%-6q'R77n?0B8kM`M9MJ8W:Jakb;GpFm<)lq!='&L,=^#$6>[:WA?XI2i@:<VT
@q9.^AnPaiBPD3rCM[g(DJjB3E,fo=F*)MHG'8(SG^2qU9hnM^;H-Xs=BSg4?!^lH@Uit]B5)*rD/O93
EcZ>GGBeF\I"$QqJqJ`1LPUeFN/`m[Ocu#pQ^F20S=Q7ETq\?ZVPpJoX0&P.Z*L^D[^WfY]=bj*^VI_(
`5]j=b0/#Scd:(geCE1'g"Y<<hr*JQjQ5Ofl0@X&mdTc;WW7VNeGrJo-RU;k.4Qhu/1iG+0/#"50etL?
1c.'J2E*TT3BB2_4?Pbj5!M:t5sdn*6UX@37Ros>8P)NI92&&S:/=Y^;,L4i;cHas<`W:(=BSg2>?lV^
?!^iE?smDP@UiqZAS,OeBP;*oC27U$D/F0/DfB]9EcZ;DF`hkOGBeCYH;..1:f:4k<``C,>?kKA?t!PU
AS5[jCM[j+E,fr@F`r"TH@1-iJ:W<*KnbA>MMmISO-,ThQ'Rc)R[]h=T:hpRUo(&gWiN5'YHY:<['_Qr
\@K5a]t_A!_SjF5aN;TKc-F\`daQatf@em4h;7&JioB._kNM3sm-a?3o(2LZ!.k3q!(nUe-n-Vq.kE5'
/hSe20JP=<1G^jF2)[BP3&ru[4$,Pf4[)(p5X@\&6UO7077Ka:84Z<E8kViO9hnGZ:f("e;H$Oo<E<.%
=+47S=^#$6>[:WA?XI2L@:E_VA7]=aB4kmlBkhBuCi!s+DJsK5EH6)@FEDYKG'A1UH$Xd`:Jand<)lt$
=^#'9?=72NA7]@cBkhF#DJsN8F*2YMG^=^aIXcm"K7nu7Ll%%KNK90`PE_?!R$jG6SXuLJU84W_W2Zeu
XZ*DdZ*L^D[^WfY]=kqn_8=+.`lH0CbKS8Xd*gCme^rI,gYCWBi8N_WjlbjllKmp+nF?)Ap%GrsJcNai
67=93.P!##/M/S.0/,+81,C^C1c70L2`NcW3]]>b4?Ykl5<qJ"6:+%-6q'R77n6*A8P2WK9MJ5V:JXea
;,U=k4]GE]<``@)=]np3>?kE=?=$uH?t!MR@q9+]AnG[hBPD3rCM[g(D/O91E,fl<F)uGGF`qtQG^4R\
H[C-h;,U=l<``C,>?kKA?t*VVAnPdkCM[j+E,fr@Fa&(UH@1-iJ:W<*KnbD?MN!OTO-,ThQ'Rc)R[]k>
T:hpRUo(&gWiN5(YHY==['dBQ\\#Mf^VI\'`5Ta;ai_iPcHsteeCE.&g"P3:hV[;Oj5oFdl0@U$mdKZ9
oCV_Wp\9CAJcPZJGUY*l.kE5'/hSe20JP=<1GgpG2)[BP3&ru[4$,Pf4[)(p5X@\&6UO7177Kd;84Z<E
8kViO9hnGZ:f("e;H$Oo<E<.%=BJ^0>$G39?!UcD?XR;N@UinYAS#IdB4u!nC27U$D/F0.DfBZ8EcQ5C
FEMbMGBeR]H$Xd`I!g?@<)lt$=^#'9?=72NA7]@dBkhF#DJsN8F*2YMH$XgbIXcm"K7nu7Ll.+LNfT9a
PE_?!R$jG6SY)RKU84W_W2ZeuXfen5ZF%$J\%0)^]tV7t_Sa@4a2lEHbg+P]daQ^sf@\g3gtglGiT'"\
kNM0rm-P,InF?)Ap%J1VqMYE+!:p1P.P!##/M/S.0/,+81,C^C2)R9M2`NcW3]]>b4?Ykl5<qJ"6:+%-
6q'R77n?0B8P2WK9MJ5V:/=\_r_YCJ;H$Op<`W:(=^#$6>[1Q@?=.)J@:E\UA7T7`AnPdjBkhBuCi!s+
DJsH4EH-#?F+/4RF`qtQG^4R\H[C-gI=>0s='8^2>[CcF@Uiq\B4u$qCi+*0EH?5EGBeC[I!pKpJV&Q/
L5:\DN/`jZOckonQC"#.S"6.CTq\<YVPgAmX/rJ-Yd1UB[^WcW]=bhl^qmq,`Q-'AbKS5Vd*^:ke^iC+
g>(N@hr3STjUpY<l0@U%mdKZ9oCVbNq"jmcPQ6:8lMr[j/1`A*/h\n40etL?1c.'J2E*QS3B9,^4$5Yh
5!M7s5s[h)6UX@37Ros>8P)NH92#7X1/1J<:/=Y^;,L4h;c?Xq<``C*=^#$7>[CcE?t!JQ@q0%\AS,Rf
BPD0qCMRa'D/O91IW07GEcQ5CFEMbMGBe@XH?spcI!pHmIof`T>?kH??t!MTAS,UiC2@a)DfKf=F`qtS
H@('hIt<3(KSG8<MMmFRO-#NgPa.T&R@B_;T:hmQUnsufWN*&%Y->1:['d?P\[oDd^;%M$_o9X9ai_fO
cHjkce'ut#f\5*8);a9/iT'"\kNM0rm-X92nalDGpA"I[r;HVb!.k42!%]ZQ/M8\00JP:;1G^jF2)[BP
3&ru[3]fGd4[)%o5X7V%6:4./77Ka:84Z>O8cq^Y92#7X!)<Gf,u7<5;,L4i;cH^r<``C*>$>-8?=$uH
@U`hXA7]@bB4tsmC2.N(Ci!s+DJsK5EH-#?F*)PIG'A.TH$O^_H[L6iIf=h'=^#$8?=.)L@q91aBPM=!
DJsK7F*)PKG^4X`I=HcuK7nr5Ll%"JNK0*_P*D5tR$jD4SXuIIU8+Q^Vl?\sXKJb2ZEppH\%'#]]Y2(q
_8F41a2lBGbg"J\dF-Mfe^iC+g>(N@i8N\UjlYajlKdj*n+#u?p%J.TqYU3is8SkpJcOO*.4m/)0/,(7
1,:XB1c70L2`NcW3]]>a4?Yhk5<hD!5sdq+6q'O67n6,L8I8!\8P2TJ8kVfNr_4G/:/=\_;,L4i;cH^r
='&L,>$>09?=%#J@Uit\AnN?$BPD0qCMRa'D/O91E,fl<F)uGFF`qqPG^+L[H@($eI=?YDIo]cY?!guJ
@Us%^BPD3tD/O<4EccGIGBnL]I=?ZsJqJc3LPUhGN/is\P*;,rQ^F52S=Q:FTqeE[Vl6SqXKAY0Z*LaE
[^`lZ]Y2%p_8=+/`lH3Db9kKZcdC1ieCN7(g=tE>hr*MSjQ>Xhl0I^'n*ol=o_%tRq>1$frr2r!!.k4"
!%'<O0/,+81,C^C2)R9N2`NfX3]fDc4?Ykl5<qJ"6:+%-6q'R78,GjV8c;9\9*.d\:&[ll:JXe`;,L9k
<!cQ+='/U/>?kH>.:6Ik@q9+^BP;*pC27X%D/O60E,]f;EcZ>EF`hkOGBeCYH@(!dI=6SAInj9U?X[DR
AS,RgC27X'DfB`<FEVkQH$apeIt3*&KS>2;M2R=PNf]BdPa.Q%R@9Y:StD^NUSXicWN*#$Y-5(8Za@0M
\@T;b^;%J#_^raFa2lBGbg"J\dF6Uqf%A[0gtgiFiSrq[k32'plg=-/nac;Ep@nCZqu$Hks0McX!6Y?e
0/,(71,:XB1c70L2`NcW3]]>b4?Yhk5<hD!5sdq+6q'O6r^R#\7n<MKr^d2a8P2VS9E.]b9aa]l:Jakb
;,U=l<E1_R='8[0>?kH@?XR>QA7fIfC27U$D/F0/DfB]9EcZ;DF`hkNGBe@XH?spcI!pHmqL:tA?t!PU
AS5[jC2@a)E,fo?F`r"TH@('hIt<3(KnbA>MMmISO-#NgPa7Z'R[]h=T:hmQUnsufWN3,&YHY:<['d?P
\[jQ/]tV:u_SjF5a2uKIc-FY_daQatf@em4gtprHioB+^kNM3sm-X92nalDGp\=R]r;HKl]E!N`_Z1l7
0ekF>1GgsH2E*QS3B9,^4$5Yh5!D1r5X@_'6UX=27RmAI!(QrX!D#`Z8H)3Z9)hQ`9KPsD:/=Y^:f1+g
;cHat='&L,>?b?=?=72N@qB7cBkqO%DJjB3E,fo=F*)MHG'8(RG^4R\H[C-gI=D$BH@LEQ@Uit]B5)*r
Ci401EcZ>GGBeF\I!pKpJV/W0LPUeFN/`m[OckroQC+)/S=Q7ETq\<YVPgDnX0&P.Z*L^D[^WcX]=bkm
^r""-`lH0BbKS5Wd*^=le^rI,gYCWAi8N\VjlYdklKmp+n+#u?p%J.UqYU6jrVuirL&cf*q#DKk1,:XB
1c70L2`NcW3]]>b4?Ykl5<qJ"5sdq+6q'QD7K>sX7f5dS8-;FT8kK"Sr_!Vm9MJ8W:JXe`;,U<k<%M'O
=BSg2>[1TB?t!MTAnPgmCMe!.E,fl<F)uGGF`qtQG^4R\H@($eI=?Y>Iro12AS5[jCM[j*E,fo?F`r"T
H@1-iJ:W<)KnbA>MMmISO-,ThPa7Z'R[]h=T:hpRUo(&gWN3,&YHY:<['dBQ\[oGe^;.S%`5Ta;ai_iP
cHjnde(*%$g"P3:hV[8Nj5f@ckj%L#mdKZ9oCV_Mq"adfr;HBiNW=Y2nGjRb1G^jF2)[BP3&ru[4$,Pf
4[)(p5X@\&6:4./7JB:L7fc.Nr(-fYr^o"?92&&R9hnGZ:f("d;c?Xq<`W=)>$G6;?=.)L@qB7cBPM@$
DfKf<F*)MHG'8(SG^4U]"abTDI=6S;Ir&\.B5)*rD/O92EcZ>GGBeF\I"$QqJqJ`1LPUeFN/`m[Ocu#p
QC+)/S=Q7ETq\?ZVPpJoX0&P.Z*L^D[^WfY]=bkm^r""-`lH0CbKS8Xd*^=le^rI,gYCWBi8N\VjlYdk
lKmp+nF?&To_%qPq>1!erq?AX!.k48!$!dO1c70L2`NcW3]]>b4?Ykl5<qJ"6:+%,6q'Q<7Kc4N7n,uI
7fc.NrCHoZs%<8`-qm</9hnJ\:f1(g;cHat='/U/>?kK@?t!PUAS,UiCMds.EcZ>FF`n1;GBeCYH@(!d
I!pHmoRCCaBPD6uD/XB5F*)PJG^4U_I=?]tJqSi4LP^nHNK0'^P*;/sQ^O;3S=Z@GU8+N]Vl6VrXKA\1
Z*UgF\%&u\]Y2(q_8=.0`lQ9Ebg"G[dF-Lof%8U/gYL`DiSrnYk3(sn%dWKLn*oo>o_/%Sq>:*go`(K_
JcOa0)Dj</2E*QS3B9,^4$5Yh5!M7s5s[h)6UX=2mm[@K7n3GIr^d#[r^n>,92&#R9hnJ\:f1+g;cHat
='/U/>?kKA?t*VVAS5[kC_CW(EH6/EG'A1UH$Xd`I!g?jIe%tnBkhF#DJsN8F*2YMG^=^aIXcm"K7nu7
Ll%%KNK90`PE_?!R$jG6SXuLJU84W_W2ZeuXfek4ZEpsI\%0)^]tV7t_Sa=3a2lEHbg+P]daQ^rf@\d2
gtglGi>(D6jlbjllKmp+nF?)Ap%J1VqYU6joDbZfJcOI((c=302`NcW3]]>b4?Ykl5<qJ"6:+%-6q-o@
#=V'N77B[77K,aV7K,aW7n3DHr^d#[!_Q'Xr_*u":/=Y^:f:1j<*!%$=BSj4?!^kU@:E_XAnPjoD/XB5
FEVkQH$O^_H[L6iIX^g:<,6;eDfB];FEMePH$XjdIXm!$KS>/:M2I7ONfT<cPEhH#R@9V9StD[MUSOcb
W2co"Y-5(7Za@-L\@K5a]t_A!_o0O6aN;TKc-F\`daZguf@_+sgYL`DiSrnZk3)!olg4'.nFH2Cp@n@Y
qu$E_s/l?R!7:c_2E*QS3B9,^4$5Yh5!M7s5s[h)6UX@3rC-cUrC6HK!_,XJr'pWT'hCne8P)NH91qrP
9hnGZ:f1+h;cQg><``F->?kH??t*SUAS,XkCi401F*2YOH?spcI!pHmmse#JDJsN8F*2YMH$XgbIXcm"
K7nu7Ll.+LNfT9aPE_?!R$jG6SY)RKU84W_W2ZeuXfen5ZF%$J\%0)^]tV7t_Sa@4a2lEHbg+P],1=ri
f%8R.gYCWBi8N_Wjlbjllg4$,nF?)Ap%J1VqY^<knGfosJcNmm'fS*33BB2_4?Pbj5!M:t5sdn*6psK@
7Kc.L77B]B70#aM70H(K7RorI8,l-Z8HMLW9E%Tb:*iY2:f1+g;cHdu=BSg3>[CcG@:Nh[BPM="DK'W<
Fa/4ZI!pElm=.NBE,fr@Fa&(UH[L6jJ:W<*KnbD?MN!OTOHG]iQ'Rc)R[]k>T:r!SUo(&gWiN5(YHY==
['mHR\\#Mf^VI\'`5Td<.*9WUc-F\`daZguf\,!6h;7&JioB._kNV9tmI'H4o(2MIp\=U^r;Q-a^&Z%N
JcHVf!&uu!3]fDc4Zttn5<qM#6:4+.77B[9qaUKP!CTBS7/o^T6j,qH6q'NC7JoV/7n6*@8P)NH91qrQ
:/4S]:f1+h<E3+&=^#$8?=72OA7]CfC2@a+EH?5GH$asgIdhjcIr'+FF*2YMH$XgcIXcp#K7nu7Ll.+L
NfT9bPE_?!R$jG6SY)RKUSO`aW2ZeuXfen5ZF%$J\@K2_]tV7t_Sa@4a2uKIc-FY^daQ^sf@\g3gtprH
iT'"\kNM0rm-X92nalDGpA"I[r;HWds82hP!.k4F!"q:Q3]fGd4[)%o5X7V%6:4./7K,dV8,c!R7JK7N
6i07P77@)CrC-iY7nEVN-;$m'9MJ5V:JXhb;cHat='/U/>[:]E@Uiq\BPD6uDfB`=G'J=\p4)abC3+K>
GBeC[I!pKpJV/W0L5:\DN/`jZOckroQC"#.S"6.CTq\<YVPgDnX/rJ-Yd1UB[^WcX]=bhl^qmq,`Q-'A
bKS5Wd*^:ke^iC+g>(N@i8N\UjlYajlKdj*n+#u?p%J.TqYU3iq>^'dO8sk4mf3t]4$,Pf4[)(p5X@\&
6UO7177R8Hr'pWR!CTBT7/fRR7/K=V6pj=06UX@2rC-`Us%!&Z.7m-(92&#R:/4V^;H$Op<``C+>?kKA
@:E_XB4u$rDJsQ:Fa/1ZI=Hb6Iqj+LGBnL]I=?ZsJqJc3LPUhGN/is\P*;,rQ^F52S=Q:FTqeE[Vl6Sq
XKAY0Z*LaE[^`lZ]Y2%p_8=+/`lH3DbK\>YdF-Lnf%8R.gYCZCi8WeXk3(smlg4$-nF?,Bp%S7WqY^<k
s6K]P!.k46!"h:T4?Ykl5<qJ"6:+%-6q'R7r^ZiTrC-TO!CK9Q6O#kE6UF.-6N0=Q6ppo@-q-Qo7Ros>
84cBF91qrQ9i"S_;H$Op<``C,>?tQC@:EbZB523uDK,o%FE_tUH[UA1Iq!VHH$apeIt3*&KS>2;M2I7O
Nf]BdPa.Q%R@9Y:StD^NUSXicWN*#$Y-5(8Za@0M\@T;b^;%J#_o0O7aN;WLc-Obae'uq!f\,!6h;7)K
ioK4`kiqBumI'H5o(2PJpB:<gqu$HWs.B@D!8dbe4?Yhk5<hD!5sdq+6q'O6r'piY7n,uG7K#XO6NKM@
og8XF"%5LE7/fXT7fQ!Y8H)3p92&&T:Jand;cHdu='8^3?!guJ&7]6`BkhF$E,fuBGBeF\I=CU6>'YF@
I=?ZsJqJc3LP^nHNK0']P*;,rQ^F52S=Z@GTqeE[Vl6SqXKA\1Z*UgF[^`lZ]Y2%p_8=.0`lH3DbK\>Y
dF-Lof%8R.gYCZCi8WeXk3(snlg4$-$h3]Xo_%tRq>:*groa<[!.k4&!"h@X5!M:t5sdn*6psI57Rp!?
rC6rZ7R]fG7K#XQ6i01S5sdn(5sdm663BSA6UUi@"[tjL7Rp#K8IJ0a9MJ8X:f1+h<E9u<=BSj5?=.)L
A7fLhCMe!0EcZAHG^4XaId_baH[L6kJ:W?+KnkJ@Mi<XVOHG]jQ'Rf*R[fq?TV8*TV5C/iWiN8)YHbC>
[C3QS]">Vh^VI_(`5]j=aihoQcd:(geCE1'g"Y<<hVdAPjQ5M9kiqC!mI'H5o(2PJp\F[_rVkpYYQ07T
cN"M?5<qJ"5sdq+6q'O67n6*@r^ZoVr^?oW779QC6i04F5la1H62a.L6OZ@N77B[97n?0C8kVi%9heD[
;,U@n<``C+>?kKB@Uit]BkhI%DfB`<F`r"TH[UA4InG-<J:W<)KnbA>MMmISO-,ThPa7Z'R[]h=T:hpR
UnsufWN3,&YHY:<['dBQ\[oGe^;.S%`5Ta;ai_fOcHjnde(*%$g"P3:hA>)-ioB+^kNM3sm-a?3nalDG
p\=R]r;G[U\,_*\`rH]95X@\&6:4./77Ka:84Z<C8H)-Y7f>dT7/fRQ6MWqA5QO/9rB^EL"@GOE6q&Uq
7Rp!@8P2TK9hnJ[;,U@n='/U0>[CcG@Uj"`BkhI$DfB`<F`r"TH[UA4ImJU:K7nr6Ll%%KNK90`PE_>u
R$jD5SXuLJU84W_W2ZetXfek4ZEpsI\%0)^]Y;.r_Sa=3a2lEHbg+P]dF6Uq*nT&tgYCWBi8N\VjlYdk
lKmp+nF?)Ap%J.UqYU6jir=T1JcP`L%R<<H6:4+.77B[97n?3Cr^d#Yr^QoVr^?`Qr'L<Ir]gTN5X.Iu
r]gBI"@#.:5sYE80LA)n6UX@37Ros?8P2WL9MSA[;,U@n='/X1>[CcG@qB7bBkhI$DK'W;F`r"TH[YX<
qgVt(JqSi4LP^nHNK0'^P*;/sQ^F52S=Z@GU8+N]Vl6VrXKA\1Z*UgF\%&u\]Y2%p_8=.0`lQ9Ebg"G[
dF-Lof%8U/gYL`DiSrnYk3(snlg4'.nFH2Cp@n@Xqu$EVs7u\P!.k4D!"2(Z6UO7077Ka:84`\Nr^d&Z
s$lrUs$ZiRs$HWLr]p?F"?o%65<es/2aBVo5X7V$6:4+.6q'R784Z<E92&&T:Jane<*!('>$G9=@:E_W
AnPgmCMds.EH?8GG^=^bJ+J.rK7nu7Ll%%KNK90`PE_?!R$jG6SXuLJU84W_W2ZeuXfek4ZEpsI\%0)^
]tV7t_Sa=3a2lEHbg+P]daQ^rf@\d2gtglGiT'"\kNM0qm-X61nac>FpA"I[qu-N_s7-,P!.k4<!#%[d
6psI47Ros>8P)NH8P)HD7n<PJr^HiTr^6ZOs$?WLrBC<H5Q!\H4[)%-4oml3r]gEJr^$NM,Xb$h7Rfm=
8P2WL9hnM^;,^Fp='8^3?=.)L@q91aBPM="DK#i$F*2\OH@1/4Ip@\^Ll%"INK0'^P*;/sQ^O;3SXuIH
U8+N]Vl6VrXKJb2Z*UgF\%&u\]Y2(q_8F41`lQ9Ebg"G[dF-Opf%8U/gYL`DiSrnZk3)!olg4'.nFH2C
p@n@Yqu$Ecs69QP!.k44!!u"\77B[97n?0BrC[)]r^[>c7n,p96q'L26iKFN5mBS>5<h=q5Q3hI4[/X(
r'(-Fr]gNN5skQ<)+?t`7n?0C92&&T:f1.j<EE:+>?kH@?t!OVA7]CeC27[(E,p#BGBeF]Ie8+oLPUhG
N/is\Ocu#pQ^F21S=Q:FTq\?ZVPpJoXKAY0Z*LaE[^WfY]=kqn_8=+/`lH0CbKS8Xd*gCmf%8R.gYCWB
i8N_Wjlbjllg4$,nF?)Ap%J1VqY^<kr;YaUU&]cFh#J*V77Ka:84Z<D8kVfL8kDTF84Q2L7fPpW7/fOT
6:+!;5lEqH55[PE4?`[+"$Jb04T%AA4rHRL5X@\&6:4.077Tj=84lNL9hnM^;cHe!)-C$G>[:ZD@:EbY
B4u$qD/XB6FEMeQH[L;8IoqPbN/`jZOckonQC"#.S"6.CTq\<XVPgAmX/rJ-Yd1UB[^WcW]=bhl^qmq,
`Q-'Ab08,Ud*^:ke^iC+g>(N@hr3STjlYajlKdj*n*oo>o_/%SqYU0jrn@CP!.k4$!"VLf7n6*A8P2TJ
91hiL8P/nP#"M0Q7R]^5r^6]Ps$?ZMs$-KHr]L<F4[&a+"?S_-4?NI'r]U6Er]^iW5sdn*6psI67n?3D
9-I#):/Fed<*!(&=^#$8?=.,MA7]CeC27[)E,p&DGBnO`om]erN/is\P*;,qQ^F21S=Q:FTqeE[Vl6Sp
XKAY0Z*LaE[^`lZ]=kqn_8=+/`lH3DbKS8Xd*gCmf%8R.gYCZCi8N_Wjlbjllg4$-nF?)A#PIfcq>1$f
rn7=W!.k3q!"27d84Z<E8kVfN92#7V!(m/\"%PgM7K,[T6iKFO62a%I55m_E497N+r&Y*D4$#Gb4?NO)
rB1BL5!M:t5sdmf6UX@57n?6E92//X;,U=l<E<1(>$G9=?X[DSAS5[kCi+*1EccJLH@()6In5QZOHG]j
Q'Rc)R[]k>T:r!SV5C/iWiN5(YHY==['mHR]">Vg^VI\'`5Td<aihoQcd:(feCE.&g"P6;hVdAPj5oFd
l0@RDmI'H5o(2PJp\=U^r;P=J\c@<^`;g?;84cBF91qrP9h\2Q9)_Bq84Q0>7R]a66pj:-5s[b$5<h=q
r]U6Cr&aU5r]C-Br]U6E0L%ff5sdn+6q'U984lNJ9hnJ\;,U@n<``C,>?kKA@:EbYB5)*sDJsN9Fa&(V
I"(g><KE6)PE_B"R$jG6SY)RKUSO`aW2Zi!Xfen5ZF%$J\@K2`]tV7t_Sa@4a2uKIc-FY_daQ^sf@\g3
gtprHioB+]kNM0rm-X92nalDGp\=R\r;HWIs8W+P!.k4J!"VUl8kM`M9MJ5T9M8#N8kK"Q$:dQT77BU4
6UF+*r]pKJr]UNL4?GYf4$3C%#<=h*3]T5^3Vtl;48q?!4[)%o5X7V%6:=417n6*B92&&T:Jand;cHe!
=B\p6?=.,MA7fIgCM[m-EcZAIH$ashJ,+RmOckroQC+)/S=Q7DTq\<YVPgDnX0&P.Yd1UB[^WcX]=bkm
^r""-`Q-'AbKS5Wd*^=le^iC+g>(N@i8N\VjlYdklKdj*n+#u?p%J.UqYU3ihZ*?MMu\G0o)K:m8kVfN
9heAW9h\2Q8kM\S8.S3[7R]^56UO1,5sR\"5<f'0s#g9BrAjs>3rV,>3;PZ73rV5>4T7PD5U8Z_6UaF5
84cBF92&&T:Jk"g<*!(&>$G6<?t!PUAnYmoD/O:sEccJLH@()8Io;JpQC!u-S"-(BTV8-VV5L8kX/rG,
Yd(L@[C3TU]"G_j^qmn+`Q#s?b0/&TcdC1ie^i@)g=tE>hr*MSjQ>XhlKdg(n*ol=o_%tRq>:*groO1K
s-*M8!:'Uf8kViO:&Rg)9h\2Q8kDWH84Q0>77BU36UF+*5sRY!5!Js/s#g<Cr]9s;r\t'A3&ioX3;tr;
3rV2B4?Pe+4rusS5sdq+77Ka:84cEH9MJ8X:f:4k<EE:+>?tQC@1QjZAnYppD/XE8F`r"UI"(m@:mI?6
R@9Y:StMdOUSXicWN*#$Y-5+9ZaI6N\@T;b^;%J#_o0R8aN;WLc-Obae'uq"f\,$7h;7)KioK4`kiqC!
mI'H5o(2PJp\F[_rVl-_kPq%PJcOg2.8*?/9hnJ[:/4MX9M7uM8P)HC7Rfg76pj:-5s[b#5<_7o4Zkhg
4$#G$3V5922uYf93?C4B4$5Vg4[)(p5X@\'6psI57n?0B8kVlR:Jane<#8P9=B\p7?=75PAS5[kCi433
F*2\PH[Y^>:7%?:S"-(BTVA3WV5L8kX/rG,Yd(OA[C<ZV]"G_j^qmn+`Q$!@b0/&TcdC1ie^i@*g=tH?
hr*JQioK4`kiqC!mI0Q9o_%tRq>:*gnc.MHU]>uHgAhFO9hnGZ:f.-d*)0+#91hcH84Q0=7R][36:*t(
5X.Fr4Ztni4$3F&"$&A$3W:u=2`U^o"u\Cu2E*NPr\jg:r]('B4$5_+579bC6:+%-77B[984apr92&)V
:f1.j<``F->[:]E@Us%_BkqR'E,p&DG^=adqL:>iR[fq?TV8*UV5C2jWiN8)YHbC>[C3QT]">Vh^VI_(
`5]j=b0/#Rcd:(geCE1'g"Y<<rSJ=IiSihXjlbjllg4'.o(2PLqYU6jq#AtGX8mhPdf:Ue:/=Y^:esh]
9h\8T91hcH7n?->77BR26:!n&5X.Fr4Zkk+3sdr/3B9&Y2`N`Ur\sj8r\Xd72)I/g2?#KB2`NcW4$,Pg
5<qJ"5q#&e6UX@47n?3D92&)V:f1.j<``F->[CcG@q91bC27[)EH?8HH$au9IkdF_StD[MUSOcbW2co"
Xfnt6Za@-L\@K5a]tV:u_SjF5aN;TKc-F\`daQatf@em4rn[V2s53h7''&'7kNM-plg=02o(;\Pqu6Wq
ci:?PblE7~>

%%EndBinary
grestore
np
12.459 43.9424 mo
11.3203 42.9131 10.1484 41.8564 8.91014 40.749 cv
3.84159 36.2141 1.02872 29.948 .992533 23.6878 cv
1.01181 27.0064 1.81499 30.3258 3.31962 33.3882 cv
4.66744 36.1454 6.56156 38.6461 8.91014 40.7481 cv
10.1419 41.8498 11.3254 42.9152 12.4594 43.9418 cv
12.459 43.9424 12.459 43.9424 12.459 43.9424 cv
.992518 23.6853 mo
.992453 23.6738 .992399 23.6629 .992353 23.6513 cv
.992399 23.6626 .992454 23.6741 .992518 23.6853 cv
.992322 23.6434 mo
.992312 23.6407 .992304 23.6386 .992295 23.6359 cv
.992303 23.6382 .992313 23.6411 .992322 23.6434 cv
.992263 23.6253 mo
.992257 23.6233 .992252 23.6216 .992247 23.6196 cv
.992252 23.6216 .992257 23.6233 .992263 23.6253 cv
.992213 23.6041 mo
.992209 23.6022 .992207 23.6006 .992204 23.5987 cv
.992207 23.6007 .992209 23.6022 .992213 23.6041 cv
.992189 23.5872 mo
.992187 23.5853 .992185 23.5837 .992184 23.5818 cv
.992185 23.5837 .992187 23.5853 .992189 23.5872 cv
32.0371 17.7471 mo
31.0742 14.21 li
31.0547 14.1416 li
30.6713 12.7325 29.7967 9.51713 26.2391 7.31514 cv
29.7982 9.51657 30.6733 12.7314 31.0566 14.1406 cv
32.0565 17.6761 li
32.0371 17.7471 li
62.0582 17.1185 mo
61.6116 15.774 61.012 14.476 60.2827 13.2606 cv
60.2894 13.2698 60.296 13.2789 60.3027 13.2881 cv
60.3027 13.2881 li
60.3027 13.2881 li
57.5665 8.6742 53.1136 5.50147 48.489 5.09903 cv
48.4697 5.09732 48.4504 5.09565 48.4311 5.09404 cv
54.2707 5.57173 59.8554 10.461 62.0582 17.1185 cv
gsave
[27.7617 42.6941 -42.6941 27.7617 15.3525 -1.83594 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~!!!!"!<N<)!sA`1"U5/9#7(SA#mq"I$OdFQ%1WjY%hK9a&J>]i',2/r()Ic((`=20)B0V8*$$%@*ZlIH
+<VgN+sJ6V,U=Z^-71)f-n$Mn.Olr!/1`A)/hSe10JG491,:XA1c.'I2E!KQ3&ioY3]]>a4?Pbi5!D1q
5<qJ"5sdn*6UX=277Ka:7n?0B8P2TJ92&#R9hnGZ:Jakb;,U:j;cH^r<E<.%='/R-=^#!5>?kE=?!^iE
?XI2K@:<VS@q0%[AS#IcB4kmkBkhBuCi!s*DJjB2E,]f:EcQ5BFEDYJG'8(RG^+LZH?spbI!g?jIXZcr
~>
<~!!!$$!sAc3#7(VC$OdIS%hK<c',2/s(Dn#.)]Tk>+!;^N,:"Q^-R^Dn/1iJ-0JP==1c70M3&s#]4?Ykm
5<qM$6UX@47n?3D92&&T:Jand;cHat='/U/>?kH??XR;O@q9._B4u!oCM[j*DfB]:F*)PJGBeCZH[L6j
It3*%K7nr5LPUeEMi<XUO-#KePE_>uQ^F20S"-%@T:hmPUSO``Vl6SpX/rG+YHY:;Za@-K\%&u[]=bhk
^;%J"_Sa=2`lH0Bb0/#RcHjkbdaZguf@\d1gYCWAhr*JQj5f=akNM0qlg4$,n*ol<oCV_Lp\=R\qu$El
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
np
15.6598 5.09313 mo
15.6598 5.09313 li
15.9673 5.06829 16.2756 5.05567 16.584 5.05567 cv
16.5913 5.05567 16.5987 5.05567 16.606 5.05568 cv
16.5988 5.05567 16.5912 5.05567 16.584 5.05567 cv
16.2756 5.05567 15.9673 5.06829 15.6598 5.09313 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[2.4 0 0 1.44 14.88 58.24 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 3 
/M[5 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!~>
<~$k3XU%h0!Y%hK3]%hK<~>
<~)&aG6*ZH(>*ZuIE+!Dg~>
<~!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
17.0962 5.05989 mo
17.0801 5.05962 17.0649 5.05938 17.0488 5.05914 cv
17.0646 5.05938 17.0805 5.05963 17.0962 5.05989 cv
17.0482 5.05913 mo
17.0407 5.05902 17.0329 5.05891 17.0253 5.0588 cv
17.0332 5.05891 17.0403 5.05901 17.0482 5.05913 cv
17.0239 5.05878 mo
17.0083 5.05855 16.9927 5.05835 16.977 5.05815 cv
16.9921 5.05834 17.0088 5.05856 17.0239 5.05878 cv
16.9747 5.05812 mo
16.9596 5.05793 16.9436 5.05774 16.9284 5.05757 cv
16.9435 5.05774 16.9596 5.05793 16.9747 5.05812 cv
16.9256 5.05754 mo
16.9185 5.05746 16.912 5.05739 16.9049 5.05732 cv
16.9121 5.05739 16.9184 5.05746 16.9256 5.05754 cv
16.9019 5.05729 mo
16.8943 5.05721 16.8863 5.05713 16.8787 5.05706 cv
16.8866 5.05713 16.894 5.05721 16.9019 5.05729 cv
16.8785 5.05706 mo
16.8714 5.05699 16.8641 5.05692 16.8569 5.05686 cv
16.8642 5.05692 16.8713 5.05699 16.8785 5.05706 cv
47.6708 5.05702 mo
47.666 5.05695 47.6612 5.05688 47.6563 5.05681 cv
47.6613 5.05688 47.6659 5.05695 47.6708 5.05702 cv
16.8518 5.05682 mo
16.8447 5.05676 16.837 5.05669 16.8298 5.05663 cv
16.8371 5.05669 16.8446 5.05675 16.8518 5.05682 cv
47.6563 5.05681 mo
47.6429 5.05662 47.6301 5.05646 47.6167 5.05632 cv
47.6297 5.05646 47.6432 5.05662 47.6563 5.05681 cv
16.8298 5.05663 mo
16.8222 5.05657 16.8146 5.05652 16.807 5.05646 cv
16.8149 5.05652 16.8218 5.05657 16.8298 5.05663 cv
16.8026 5.05643 mo
16.796 5.05639 16.7898 5.05634 16.7832 5.0563 cv
16.7897 5.05634 16.7961 5.05639 16.8026 5.05643 cv
16.7799 5.05628 mo
16.7727 5.05624 16.7644 5.05619 16.7572 5.05615 cv
16.7652 5.05619 16.7719 5.05623 16.7799 5.05628 cv
47.6107 5.05625 mo
47.6076 5.05622 47.6046 5.05619 47.6016 5.05616 cv
47.6046 5.05619 47.6076 5.05622 47.6107 5.05625 cv
16.754 5.05613 mo
16.7479 5.0561 16.7407 5.05606 16.7345 5.05603 cv
16.7411 5.05606 16.7475 5.0561 16.754 5.05613 cv
47.5932 5.05609 mo
47.5905 5.05607 47.588 5.05605 47.5853 5.05602 cv
47.588 5.05604 47.5906 5.05607 47.5932 5.05609 cv
16.7293 5.05601 mo
16.7227 5.05598 16.7151 5.05594 16.7084 5.05592 cv
16.715 5.05594 16.7228 5.05598 16.7293 5.05601 cv
47.5741 5.05594 mo
47.5723 5.05593 47.5708 5.05592 47.5689 5.05591 cv
47.5709 5.05592 47.5722 5.05593 47.5741 5.05594 cv
16.707 5.05591 mo
16.6993 5.05588 16.6925 5.05586 16.6848 5.05583 cv
16.6921 5.05586 16.6997 5.05588 16.707 5.05591 cv
16.6796 5.05582 mo
16.6735 5.0558 16.6677 5.05578 16.6615 5.05577 cv
16.6681 5.05578 16.6731 5.0558 16.6796 5.05582 cv
47.553 5.05581 mo
47.5509 5.0558 47.549 5.0558 47.5469 5.05579 cv
47.5492 5.0558 47.5507 5.0558 47.553 5.05581 cv
16.6565 5.05575 mo
16.6493 5.05574 16.6418 5.05572 16.6346 5.05571 cv
16.6419 5.05572 16.6492 5.05574 16.6565 5.05575 cv
47.5358 5.05574 mo
47.5337 5.05573 47.5318 5.05573 47.5297 5.05572 cv
47.532 5.05573 47.5335 5.05573 47.5358 5.05574 cv
16.6301 5.05571 mo
16.624 5.0557 16.6184 5.05569 16.6122 5.05568 cv
16.6181 5.05569 16.6243 5.0557 16.6301 5.05571 cv
47.5184 5.05569 mo
47.5166 5.05569 47.5145 5.05569 47.5127 5.05568 cv
47.5146 5.05569 47.5165 5.05569 47.5184 5.05569 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[32.64 0 0 1.44 15.84 58.24 ]ct
snap_to_device
<<
/T 1
/W 68 
/H 3 
/M[68 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!~>
<~%1WmZ&.oKe',)&p'c%T%(`4,/)B0Y9*?H7D+<VgO+sS?Y,pjrd-n$Mo.P!##/M/S.0/,+81,C^C2)R9N
2`NfX%M'*^&J>]i'GM8t()If))&X>3)]Tk=*ZlIH+X&$S,:"Q]-7:/h.4H_s.kE5'/hSe20JP=<1GgpG
2E!KR3&s#\%hK<b&ebom'bqK#(Dn#-)B'P7*$$(A+!;[L+sJ6W,UFca-R^Al.Olr"/1iG+0/#"60etO@
1c7-K2`E]V3BB5`~>
<~)]Tn@+<i$U-7:2k.kE;+0JP@?2)dKT4$5Yj5X@_)77Kg>8k_rS:f1+i<E<1(>$G9=?X[DRAS,RgC27X'
DfB`<*?H=H+s\H]-n-Vs/M8_31,CdG2`Wo\4[)(r6:4.17n?6F9MSA[;H$Oq='/U0>[:]E@:NhZB4u!o
Ci+'/EH6/D+!DgQ,UOle.P!&&0/,.;1c73O3BK>d5<qM%6q'U:8P2ZN:/Fec<)lt$=^#$8?=.,M@qB7b
BkhF#DJsK7F*)SL~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
32.338 16.6575 mo
32.3379 16.6572 li
33.0234 14.1396 li
32.338 16.6575 li
47.6709 5.05702 mo
47.6708 5.05702 li
47.6709 5.05702 li
47.6563 5.05681 mo
47.6563 5.05681 li
47.6563 5.05681 li
47.6167 5.05632 mo
47.6148 5.0563 47.6126 5.05627 47.6107 5.05625 cv
47.6125 5.05627 47.6149 5.0563 47.6167 5.05632 cv
47.6016 5.05616 mo
47.5989 5.05614 47.5959 5.05611 47.5932 5.05609 cv
47.596 5.05611 47.5988 5.05614 47.6016 5.05616 cv
47.5853 5.05602 mo
47.5815 5.05599 47.578 5.05597 47.5741 5.05594 cv
47.5778 5.05597 47.5817 5.05599 47.5853 5.05602 cv
47.5689 5.05591 mo
47.564 5.05587 47.558 5.05584 47.553 5.05581 cv
47.5582 5.05584 47.5638 5.05587 47.5689 5.05591 cv
47.5469 5.05579 mo
47.5434 5.05577 47.5392 5.05575 47.5358 5.05574 cv
47.5394 5.05575 47.5432 5.05577 47.5469 5.05579 cv
47.5297 5.05572 mo
47.5259 5.05571 47.5222 5.0557 47.5184 5.05569 cv
47.5223 5.0557 47.5258 5.05571 47.5297 5.05572 cv
47.5127 5.05568 mo
47.5073 5.05568 47.5014 5.05567 47.4961 5.05567 cv
47.5016 5.05567 47.5072 5.05568 47.5127 5.05568 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[16.8 0 0 12.96 31.68 46.72 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 35 
/H 27 
/M[35 0 0 -27 0 27 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 35 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 35 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 35 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 35 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
h>fto.k</&/h\n40etOA1c70M3&ru[4$5Yh5!M:u6:+%-77L6W='8a4?=72OAS,UiCMds.EcZAIG^=^b
It3-(KnkMBN9^Jk!(ACh/M8Y/0JP==1GgsI2`E]V3]fGd4[)(q5X@_(6q'O67orhs>[:]F@Us(`BkqO&
DfKi?G'J:ZI=?]tK8#&9MMmITp]/545qOZ@0/,+81,CaE2E!KR3BB2_4?Ykm5<qM$6UO717Rp!?>$G9>
?t*VWB4u$rD/XE7FEMeQH@10kJV/W1LP^okN/j!^])XZ?0/,(71,CaD2)[BQ3B9,^4?Yhk5<qM$6:4.0
7Rfm=8P35o?t!PVAnYmoD/O<5F*2\O&:/\OIt3-(KnkMBN/`m\P*EQY-SI/.1,C^C2)[BP3&s#]4?Pbj
5<qJ"6:4.077Kd<8P)NI?X[DSAfYMuCM[m,EH?5FG^4XaIXm!%KnbD@MiEdZP*;/t])Wa(1,:XB2)[?O
3&s#\4$5Yi5<hD!6:4+.77Jas84Z<E92&#gA7]CeC2@a*EH6/DGBnL^IXcp$KSG8=Mi<[XOcu&rR$kPd
%5K^r1c70M3&ru[4$5Yb4[)(q5sdn*6q'R77n?3D91qrQ:1\$NBkqR'E,p#BGBeF\I=Hd!KS>2<MN!OU
OckrpQ^O>5])Vge6o6bZ2`E]V3]fGd4[)(q5X@_(6q'O67n?3C8kViP:/4StBkqO&DfKi?G'J:ZI=?]t
K8#&9MMmITOHPfmQ^F53SY*q&o`.E<2E!KR3BB2_4?Ykm5<qM$6UO717Rp!?8P2WL9MJ8X:f1tDD/XE7
FEMeQH@10kJV/W1LP^qJNf]BeQ'Rf*S"6.DU=92,!(Ae)3&ru[4$5Yh5!M:u6:+%-77Ka:84cEH92&&T
:JXea;Jg;jEcZAIG^=^bIt3-(KnkMBN/`m\P*D9!R@B_<T:r$Ui;hU476!7e3]fGd4[)(q5X@_(6q'O6
7n?3C8kViP:/4S];,U:jE,fr@G'J:ZI=?]tK8#&9MMmITOHPfmQ^F53SY)UMUnt!W!6tR53BB5`4?Ykm
5<qM$6UO717Rp!?8P2WL9MJ8X:f1(f;cHb;FEVkRH@10kJV/W1LP^qJNf]BeQ'Rf*S"6.DU8+Q_W2f^p
_#QY[4$5Yi5!M:u6:+%-77Ka:84cEH92&&T:JXea;H$Oo<E=6dG^=acIt3-(KnkMBN/`m\P*D9!R@B_<
T:lIaUo()iX0&u60g%Q]5!M:u5sdq,77B[984cBF92&&T:/=\`;GpFm<E<1&G^4XaIXm$&KnbD@MiEc2
OHPfmQ^F53SY)UMUnsugWiWA,])X*>5!M7s5sdq,6q'R884Z<E92&#R:/=\`;,U=l<E3($=BTrt+F\fk
K7nu8M2R=QOHG`lQC+)0SXuLKUSXleWiN8*Yd1k@(Ht&K5sdn*6q'R87n?3D91qrQ:/=Y^;(Y[E<)cju
='/R->((mNJqSi5M2I7PO-,TiQC"#/S=Z@HUSOccWN3/(Yd(OB])W1'5s[h)6q'O67n>[48kM`M9hnGZ
:f1+g;cHat='&L,>$G3]JqJc3Ll.+MO-#NhQ'[l,S=Q:GU84W`WN*&&YHbF@[^WpM7fWNT6:4./77Kd<
84cEH9MJ5V:Janc;H$Op<E<1'=^#!5>[;u8L5:\EN/j!^PEhH$R[]k>TVA3XVl6VrXfnt7['dBR]#k$D
!(B4A6q'R87n?3D91qrQ:/=Y^;,U=l<)lt#=BJ^0>?kH>?A4/kMN!RVOckrpQ^O>5StD^OUo()iX0&P/
Z*UjH\@T;cf)Xn4779R57Rp!@8kM`M9hnGZ:f1+g;cHat='&L,>$G39?!^lGLl.+MO-#NhQ'[l,S=Q:G
U84W`WN*&&YHbF@[^WfZ]Y;2B!8%9?77Kd<84cEH9MJ5V:Janc;H$Op<E<1'=^#!5>[:ZB?XR<#N/j!^
PEhH$R[]k>TVA3XVl6VrXfnt7['dBR]"G_k_8>^Bb5at$7n?3D91qrQ:/=\_;,U=l<)lt#=BJ^0>?kH>
?=.)K@:G7XOckrpQ^O>5StMdPUo()iX0&P/Z*UjH\@T;c^VI_(`VokO!'<_C8kM`M9hnGZ:f1+h;cHat
='&L,>$G39?!^lG?t!MSA<;t=Q'[l,S=Q:GU84ZaWN*&&YHbF@[^QRR]=bkn_8F73aL_F)8P2WL9heAY
:f1(f;cHat<``C+>$>-8?!^iE?t!MS@q9/7Q'Rf+S"6.DU8+P#Vl6VsXfnt7['dBR]"G_k_8=.1a2uN:
!$P!.9MJ8X:f("e;cH^r<``C+=^#$7?!UcD?t!JQ@q9._,A*7.R@B_<TV8-VVPpJpXfen6ZaI6O]">Yj
^r"".a2lEIc+<ri9MJ8W:Jand;c?Xq<``@)=^#$7>VKGi?XR8M@UiqZAS,RgR$sP9T:r!TVPgDnXKJb3
Za@0N\\#Mg^qmq-`lQ9Fc-F\J!!c4n:Janc;H#_X<E<.%=BSg2>?kH??XI2L@UinYAS,RfBPEs,StMgQ
V5L8lXKA\1ZF%$K\[oGf^VRe*`lH3Ebg+P^e(t(T~>

%%EndBinary
grestore
np
33.0586 19.2021 mo
32.338 16.6575 li
33.0234 14.1396 li
33.6348 11.8936 35.498 5.05567 47.4961 5.05567 cv
47.4961 5.05567 li
47.5014 5.05567 47.5073 5.05568 47.5127 5.05568 cv
47.5145 5.05569 47.5166 5.05569 47.5184 5.05569 cv
47.5222 5.0557 47.5259 5.05571 47.5297 5.05572 cv
47.5318 5.05573 47.5337 5.05573 47.5358 5.05574 cv
47.5392 5.05575 47.5434 5.05577 47.5469 5.05579 cv
47.549 5.0558 47.5509 5.0558 47.553 5.05581 cv
47.558 5.05584 47.564 5.05587 47.5689 5.05591 cv
47.5708 5.05592 47.5723 5.05593 47.5741 5.05594 cv
47.578 5.05597 47.5815 5.05599 47.5853 5.05602 cv
47.588 5.05605 47.5905 5.05607 47.5932 5.05609 cv
47.5959 5.05611 47.5989 5.05614 47.6016 5.05616 cv
47.6046 5.05619 47.6076 5.05622 47.6107 5.05625 cv
47.6126 5.05627 47.6148 5.0563 47.6167 5.05632 cv
47.6301 5.05646 47.6429 5.05662 47.6563 5.05681 cv
47.6563 5.05681 li
47.6612 5.05688 47.666 5.05695 47.6708 5.05702 cv
47.6709 5.05702 li
47.944 5.06125 48.2168 5.07535 48.489 5.09903 cv
51.2275 5.34231 54.006 6.57917 56.4082 8.64257 cv
57.9211 9.94054 59.2355 11.5153 60.2827 13.2606 cv
57.3065 9.19051 52.9314 6.57519 48.4961 6.57519 cv
36.4981 6.57519 34.6348 13.4121 34.0234 15.6592 cv
33.0586 19.2021 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[29.28 0 0 15.84 31.68 43.84 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 61 
/H 33 
/M[61 0 0 -33 0 33 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
_uTcF!"Jo;":l"S&J>!T1(t<8'bqK#(Dn#-)B0V8*??1C+!;^N+sS?Z,pjuf.4Qet/1iJ-0/,.:1Gq$+
(`=522]NhZ+!;^N,:"Q^-RgMq/M8\10etRC2`NfZ4?btp6:=7484cHK:/Fhe<EE=,>[CcG@qB7dC:XDj
!)!_0%1WjY%hK9a&J>]i',2,q()@]'(`=51)]Th<*ZcCG+X&$S,UF``-RU>l.P!#$/hSe20etOA2)[?1
)B'P7*?H=H+sS?Z-7:An.4Zr$0/#%81Gq'L3BB8c5!VG%77Kd=92&)V;,^Fp='Ag6?X[DSAnYpqDQj,n
!!3T>%fQu7&.oKe&ebom'GV>u(Ddo+)&aG5*$$%@+!2UK+sS?Y,pjrd-n-Vq.kN>*0/#%81,LjG2E*T6
)]Tk>+!;^N,:+Z`-n-Vr/M8\11,CaF,<%SC4$5\k5sn%/7n?6G9i"S`<)m"&>$YHB@Uit_BkqO'EM``q
!!WoC%hB3_&cNDC',)&p'c%Q$(`4,/)B0Y9*?H7D+<_pQ,:"Q]-7:2j.4Qi!/M8Y/0JP==1c70M3&ru<
*?H7E+X/-V,pjuf.P!&%0/,+91c73O3BK>d5<qP&77J.c8P;cQ:f1.k<`iO0?!q)NAS,UjCi403F.<6s
!<*L@&.oKe&ebom'GVB!(Ddo+)&aG5*$$%@+!;^M+sS?Y,pjue.4H_r.kN>*0/,+91GgsH2E3ZV4$+H(
+!;aO,:+Za-n-Vs/M8\21,CdG2`Wo\4[)+s6UX@58P2ZO:Jk%i<``E7>?tQC@Us(aC27^*EH?8HOoY1U
Et8fn&J>]i',2,q'c%T%(`4,/)B0Y9*?H:E+<_pR,:"Q]-7:2j.Olr#/M8Y/0ekF?1c70M3&s#]4?Xc/
+X/-V,pk#h.P!&&0/,+:1c73O3BK>e5=%V'77Tm@92/2Y;H-Xt=^#'9?t!PVB4u'tD?Y$#FEVnTL]D`$
&.oKe&ebom'bqK"(Dmu,)&aG5*$$(A+!;^N+sS?Y,pjuf.4H_s/1iJ,0/,+91GgsH2`NcW4$,Pg4s2$o
,:+Za-n6\t/M8_31,CdG2`Wo]4[21u6UXC78P2]P:Jk%i<`iO0?!guLA7fLiCi402F*2\PI")"oMZ="p
&eYik'GM8sE#'6+(`=20)B0Y9*?H:F+X&$S,:"Q]-RU;k.Olr#/M8\10ekI@1c70M3&s#]4?Ykn5U%F!
,pt)i.P!&&0/,.;1c73O3BKAf5X@_)77TpA92/2Y;H-[u=^,-;?t!PWB5)-uDfKi@GBnL_It7+jPlMF0
',)&o'bqK"(Dmu,)B'P6*$&W4+!2UK+sJ6W,UFcb-n-Sp.kE8)/h\q61,CaE2E*TT3]fDd5!D4t66mj(
-RgMq/1iM/0etRC2E*WW4?btp6:41384cHK:/=bd<**1*>[:]F@qB7cC2@d,EHHAJH@10lJqW@gT)]iE
',2/r()@]&(`=20)]Kb;*ZcCG+X&$S,:"Q^>ULpJ.4Qeu/M/S.0JP==1c7-L2`NiZ4$5Yi5X7Y'6RF0/
.4Ql#/h\n61Gh!K3''/b5!VD$6q0[<8k_uU:f:7n='Ag6?XR>RAnYpqD/XE8Fa&+XIXcp%Ko"UdW;n7Z
'GV>u(Ddo+)&aD4*#ot?+!;[L+sJ6W,UFfc-n-Sp.kE8)0/-9Y0f(XC2)[BQ3BB5a4[)(q5sdq-749T7
.kE;+0JYC?2)[ES4$>bl5XIk-7n?3E9hnM_;cQn$>$PBA@:Nk]BkhL'E,p)EG^FgeJ:iQ2M2TmaZN)Zo
'c%Q$(Dn#-)B0V8*?H:E+<_mP,9nH[-7:2i.4Qi!/M/S.0JP==1c70M3&ir[838st5!VA"6UO:37k-#?
/MAb31,CdG2`Wo]4[21u6UaI78P2ZO:Jk%i<`iO0?!h#LAS,UjCi+-2F*2\PH[^KsKSG;@NK20^]`:)/
()Ic()&X>3)]Tk>*ZlLJ+X/*T,UFcb-R^Dn.P*,&/h\n50f(XC2)dHR3]]>b4[)(q6:+%.77TO48LuGG
0/54<1c@9P3]fJg5=%Y)77Tm@9MJ;Z;H-[u=^,0<?t*VWBPD7!DfKi@GBeI_IY!-*Ll.+NOHRE[`rJLD
(Dn#-)B0V8*$$(B+<VgO+sS?Y,pjuf-n-Vr/1iG,0JG4;1GgsI2`NfY4$5Yh5<qJ#6UX@47nH<F/h\n6
1,LjH1cRKW4?Yno6:=7384cHJ:/Fed<E<4*>@(]G@qB7cC2@d,EccJLH@(*kJq\r8MiEd\PErZXd/ZoX
(`=20)]Kb;*ZlIH+X&$S,:"Q^-RU;k.P!&$/M8\10etOA1c@9O3'')^4Ztto5XIe)77Kd<8P2ZM0/54<
2)[BR3]fJg5=._*7Rnq"8k_uU;,^Fp=BSj6?=@;RAnYmoD/XE8Fa&+XI=Qp%KntVFNf]HiQ^OrUgAk=n
)&aG5*$$(A+!;[L+sJ6W,pjue-n$Pp.kE8)0/,(71G^jF2E*TU3]fGe5!M;!6:4.07n6-C8k_rS1,CaF
2`NfZ4?Yno6:=7484lNL:Janf<EE=,+C&5\@:Nk]BPVI&EH?5GG^=deJ:iQ2M2R@SP*D9#S"6;SjT&a.
)]Kb:*?H:E+<_mP,:"N\-7:2i.4Qi!/1iM.0JP==1c.*L2`Wo[4?Yhl5X7Y'6q'R88P)NJ9MSA[1c70N
3BB8c5!VG%6q0^=92&)W;,^Fp=BSj6?X[GTAnYmpDJp;1FEMeRH[UErKSG;?N/s*bQC"#1StLi="</:"
*?K;D+!;[L+sJ6W,pjue-n-Vr.kE8)0/,(81G^jG2E*TU3]fGe5!M;!6:4127n6-C92&&T:Jk"J2`Ni[
4[)(r6:=:58P2WN:Jath<EE=->[CfHA7fIgCMe!0F*2\PH[UBpK8#)<N/`p_Pa7`,SY2^QpAg<U%NHK0
*ZlIH+X&$S,UFcaC*tDX.Olr"/M8\00JP==1c70M3&s#]4?Ykm5X@_(6q'U98P)NJ9hnJ\;,^CQ3BK>d
5<qP&6q9d>92&)W;,^Ir=B\s9?X[GTB4u$sDK'Z=G'A7[I=Qp&LP^nJO-,WlR$sS<TqnQam/WUU(`aY=
+!;[L+sJ9X,pjue-n-Vr/1`A+0/-cg1,C^C2E!KS3BB8b4[2.r6:+(/7Rp$A8k_oR:/Fec;cQgY4?Ykn
5sn%07nH<H:/=_c<)m%'>?tTD@Us(`BkqR(EH?8HH$ashJV8`4MN!RXPEhK&S=Q=JUo:;pirGnU+s%gJ
+<_mP,:"Q^-7:2j.P!##/M8\10JYC>1c70M3&s#]<]iN/5<qM$6UXC67nH<G9MJ8X:f:4k<EE6b4[25!
6UjR:8kVlR:f:4l='/[3?=72OAS5^mD/XB7F`r%WI"$WuKSPDBNKB<fQC455T:r'XW3!,*f`82U/0>uW
+X/-V,palc-n$Pp.kE5(0/#"61,C^D2E!NT3BK>c5!M7t6:4.07Rp-D8P2ZN:/=\`;H$Rr='8Zj5X@b*
7S$*D9MSD];cHe"=^,3>@:Nh[B527"E,p#CGBnRaJ:`H/Ll.1POcu&tR[g"DUSXohXKSn9cN(KU2BX.e
+s\E[-71)g.4Qhu/1iJ-0JP==1GgsI2`NfY4$5Yi5<qM$6psL784cEH9MS>Z;,U=l6<.)g=^,)r6:=:5
84lQM:Jk"h<``F.>[CfIA7fIgCMe!0F*2\PH[UBpK8#)<MiNm^Q'Ri.SY2aRVl?c#Yd:aH`;mdU5Tq<r
,UF``-R^Dn.P!&%/h\k31,:XB2)[BQ3BB5a4[)(q5sdq,7Rfm>8P;`O:/=\a;cHau='8[1>[9]c7S#L2
92//X;H$Rr=B\s9?X[GUAnc$sDfB`=G'J=\IXm$'L5ChJO-5]lR@9Y<TqeK`X0&V3[(!TX])^(U8g>T,
,pjre-n-Vr.kE;*0/,+91G^mH2E3]W4$,Pg5!M>!6UX=37n?3D92//W:f1+h<E<1(=^,*9?XH8m8P;`O
:f1+i<`iL//mVdl@Us(`Bl%X)EcZAIH$asiJqJf6MN*XXP*MB%S=ZCKV5L>pY-G@A\@]GiYlNAU<$Wb9
-7:2j.Olr"/M8\00etL?2)R9N3&s#]4?Ykm5X@_(6q0X:8P2WL9hnM];H$Op='&O/>?tQB@:;]!92/2Y
;H-Xt=^#':?X[JVB5)-uDfI%CFa&+WI=?^!KSPGCNKB<fQC454TVA3ZWN32+ZF.0Q]YD;$VZ>ZU?6ppF
-n-Sp.k<2(/h\n51,CaE2E*TU3]fGe5!D4t5sn%/7Rp!@91quS:Jaqe<)lt#=]ns6?!grI@q//*9i+\b
<E<4*>[:]F@Us(aC2@d,EccGKH@('jJqSl7)N'N8Ocu&tR[ftBUSXlhXKSq:[^j#a^r+14SH.sUBI5,U
.4Qet/1iJ-0JP=<1Gq$J3&io[4$5\j5<qM%6UXC584cEH9heD[:f:4k<``C+>?bB??X[AQAS"S3:f:7m
=BSj6?=75QAnPgnD/XE7Fa&+XI=Hg#KnkPENKB<fQ^O>7TV<!nVl?`"Yd:aI]"Pnq`5g!CP5t7UE[W@c
.P!&%/hSe30etOA2)[BQ3BB5a4[)(q5sdq,77Kg=8kVfO:/=\a;H-Xs='8^2?!^lH@:Nk[AnFk:;cQk#
>$P??@:Nk]BkhL&E,p&DH$XjfJ:`H0M2I:ROd),uS"-+FUSaujXfo%<[^s,c#/S6taihoQM#_l&!%BBJ
.kN>*0/,+91,LjG2`NcX4$,Sh5!VD"6UX@47S$*C92/,V:f1+i<*!(&=^,*9?XI5O@qB7aB4k+A<`iL/
?!guKA7fLiCMe$1F*2\PH[UBqKSG;?N/j$`Q'du/StMjTVlHf$Z*UmK]"Yts`lH6Gc-FZ7!/^a].P!&%
/hSh4EA94)1c70M3&s#]4?Ykm5X@b)6q0X:84lNK9i"P];GpIp<`iL.>?tQB@:<YWAS,RfBP:CI=Bf$9
?t*VXB5)-uDK0]=G'SF^It<3*LP^tMO-5`nR%'Y=U84ZcX0&V4[C<`[^VRk.aihoRcd:)3!0dHq/1iG+
0/,+91GgsI2`NcX4$.(<5!M:u5sn%/7S$'B8kVlQ:Jand<)cn"=B\p6?=.)K@q9._AnPdjBk^[P>?tTD
@q91cC2@d,EccJLH$k'jJqSl8MN!UYPEhN(S"HCLVPpMsYHbLD\\#Sk_oBd?bg"G[dF-M/!1j00/M8\1
0ekF?1c73N3'')^4Ztto5X@b)77Ka;>tIX]9heDZ;,U=l<`W=*>$G9=?X[DRAS#IdB4u!nC27$Y?XR>R
AnPgnD/XE8FE`"WI=Hg#L51VENf]EhQ^O>6T;/3ZWiN;-ZaI<S]t_G'`lcKKcHjkce'ut,!9F32~>

%%EndBinary
grestore
np
60.3027 13.2881 mo
60.296 13.2789 60.2894 13.2698 60.2827 13.2606 cv
59.2355 11.5153 57.9211 9.94054 56.4082 8.64257 cv
54.006 6.57917 51.2275 5.34231 48.489 5.09903 cv
53.1136 5.50147 57.5665 8.6742 60.3027 13.2881 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[12.96 0 0 9.6 48 50.08 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 27 
/H 20 
/M[27 0 0 -20 0 20 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 27 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 27 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 27 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 27 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
jo@7]+<_pQ,:"Q^-RU;k.P!&$/M8\10JYF?2)[Za6:=7484cHK:/Fhe<EE=,>[CcG@qB7dC=<1Y!&YoC
+sS?Z-71)g.4Qhu/1iJ-0JG4:1GgsI2aTl#7Rp$C9MSA\;cHe!>$G9>@:EbZBPM@$b5_kn,:"N\-7:/h
.4Qet/1iG,0/,+91GgsI2E*Wa77Tm@9MJ;Z;H-Xt=^#*;?t*VWBPD6uDfNr#*?ugU-71)g.4Qhu/1iJ-
0JG7<1Gq'K2`NfY7S$)e92//X;,^Iq=B\p7?t!PVAnYpqDJsQ:b5a4B,pjue.4Qet/1iJ-0/,+91GgsI
2`NfX4$6),9MSA\;cHe!=^,0<?t*YYBPM=#"E/:$Fa)"/2'sXt-n-Vr.kN>*0/,+91GgsI2E*WV3]fGe
92/2Y;H-Xt=^#'9?t!PVB4u'tDK0]=G'J?)!8.?0-R^Dn.P!&%/h\k31,:XC2)[BQ3BB5a4?bu):Jk%i
<`iO0?!guLA7fLiCi402F*2\PI"'uRli8ml.4Qhu/M8Y/0JP==1c70L3&ru\4?Pbk5XA4E<*!('>?kKB
@:Nn^BkqR(EH?8HH$XmgJB\'Q!!"Ju.kN>*0/#%81,LjG2E*TU3]fGe5!M>!6;pib=B\s8?X[GUAnYpq
DK'T;G'A7[IXm$'b5`)(/1iJ,0/,+91GgsI2`NfY,We+N5!M:u6:4.A='Ag6?XR>RAnYpqD/XE8Fa&+X
IXcp%Ko!nP,:tK"0/,+91GgsH2E3ZV4$,Pg5!VD"6UX@4=B\s9?t!PVB+\imD/XB6F`r"VI"$TuKnkMC
b5aFQ/h\q61,LgF2E*TU3]fGe5!M:u6:4.17RpZg?X[DTAnYpqD/aK9Fa&+XIXm$'L5:bINW@9'2(pX<
1,CaE2)dKS3]fDc5!D4t6:4.07Rp!@?=75PAS>dnD/XE8Fa&(WI=?a"KntVENf]Fk!8dc60ekI@1c70M
3&s#]4?Ykn5X@b)77Ka;8P2Wa@qB7cC2@d,EccJLH@(*kJq\r8MiEd\PEso&nc1O&1GgsI2`NcX4$,Sh
5!VD#6UX@47n?6F9MK&0BPD7!DfKi@GBnO`J:`E-Ll..OOHYrrREGR41c.'K0fM'Q3]fGe5!VA"6UO:3
7n?3D92/,VB4u'tDK0`>GBeF^IXm')LP^qKO-5`nR@Bbj!#@FM2`NfY4$5Yi5<qM$6UaF584cEH9HHo(
:JkhBDJsN:Fa&.YI=Qp&L5:_GO-,WlQ^OD9TZ[<a2`NcX3]fJf5!VA"6UO:37n?6E9MJ5W:f1/.DfKi@
GBnO`It<6+LPcIuNKB?gQC455TVA7*!&Z_s3]fGe5!M;!6:4117n?3D92&&U:Jk"g<,co#G'A7[I=Qp&
LP^nJO-,WlR$sS<TqnQaq>eqD2**f]4Zu"p5XIh+77Kd=8kMcO:/=_a;cHatF*2\PH[UBpKS>2=N/j$a
Q'[o/SY2aRW2cr^!!!"L~>

%%EndBinary
grestore
np
.992533 23.6878 mo
.992528 23.687 .992523 23.6862 .992518 23.6853 cv
.992523 23.6861 .992528 23.6871 .992533 23.6878 cv
.992353 23.6513 mo
.992341 23.6485 .992332 23.6462 .992322 23.6434 cv
.99233 23.6457 .992344 23.649 .992353 23.6513 cv
.992295 23.6359 mo
.992283 23.6323 .992273 23.6289 .992263 23.6253 cv
.992273 23.6287 .992284 23.6325 .992295 23.6359 cv
.992247 23.6196 mo
.992234 23.6146 .992222 23.6092 .992213 23.6041 cv
.992222 23.6091 .992234 23.6146 .992247 23.6196 cv
.992204 23.5987 mo
.992198 23.5951 .992193 23.5909 .992189 23.5872 cv
.992193 23.5911 .992198 23.5949 .992204 23.5987 cv
.992184 23.5818 mo
.99218 23.5764 .992177 23.5708 .992177 23.5654 cv
.992177 23.5654 li
.992177 23.5708 .99218 23.5764 .992184 23.5818 cv
gsave
[19.7691 33.0074 -33.0074 19.7691 6.11719 4.81836 ]ct
clp
/1 /Gradient get_res exec grestore
np
17.0975 5.05991 mo
17.0968 5.0599 17.0969 5.0599 17.0962 5.05989 cv
17.0975 5.05991 li
17.0488 5.05914 mo
17.0482 5.05913 li
17.0488 5.05914 li
17.0253 5.0588 mo
17.0246 5.05879 17.0246 5.05879 17.0239 5.05878 cv
17.0244 5.05878 17.0248 5.05879 17.0253 5.0588 cv
16.977 5.05815 mo
16.9756 5.05813 16.9762 5.05814 16.9747 5.05812 cv
16.9757 5.05813 16.976 5.05813 16.977 5.05815 cv
16.9284 5.05757 mo
16.9277 5.05756 16.9263 5.05755 16.9256 5.05754 cv
16.9266 5.05755 16.9274 5.05756 16.9284 5.05757 cv
16.9049 5.05732 mo
16.9042 5.05731 16.9027 5.05729 16.9019 5.05729 cv
16.9029 5.0573 16.9039 5.05731 16.9049 5.05732 cv
16.8787 5.05706 mo
16.8785 5.05706 li
16.8787 5.05706 li
16.8569 5.05686 mo
16.8555 5.05685 16.8533 5.05683 16.8518 5.05682 cv
16.8538 5.05683 16.8549 5.05684 16.8569 5.05686 cv
16.8298 5.05663 mo
16.8298 5.05663 li
16.8298 5.05663 li
16.807 5.05646 mo
16.8055 5.05645 16.8041 5.05644 16.8026 5.05643 cv
16.8042 5.05644 16.8054 5.05645 16.807 5.05646 cv
16.7832 5.0563 mo
16.7824 5.0563 16.7806 5.05629 16.7799 5.05628 cv
16.7809 5.05629 16.7821 5.0563 16.7832 5.0563 cv
16.7572 5.05615 mo
16.7565 5.05614 16.7548 5.05614 16.754 5.05613 cv
16.7556 5.05614 16.7557 5.05614 16.7572 5.05615 cv
16.7345 5.05603 mo
16.7324 5.05602 16.7315 5.05602 16.7293 5.05601 cv
16.7314 5.05602 16.7325 5.05602 16.7345 5.05603 cv
16.7084 5.05592 mo
16.7077 5.05591 16.7078 5.05591 16.707 5.05591 cv
16.7075 5.05591 16.7079 5.05591 16.7084 5.05592 cv
16.6848 5.05583 mo
16.6833 5.05583 16.6811 5.05582 16.6796 5.05582 cv
16.6812 5.05582 16.6832 5.05583 16.6848 5.05583 cv
16.6615 5.05577 mo
16.6601 5.05576 16.6579 5.05576 16.6565 5.05575 cv
16.658 5.05576 16.66 5.05576 16.6615 5.05577 cv
16.6346 5.05571 mo
16.6332 5.05571 16.6316 5.05571 16.6301 5.05571 cv
16.6317 5.05571 16.6331 5.05571 16.6346 5.05571 cv
16.6122 5.05568 mo
16.61 5.05568 16.6082 5.05568 16.606 5.05568 cv
16.6081 5.05568 16.6101 5.05568 16.6122 5.05568 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 1.44 15.84 58.24 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~%hK<b&.oNg&eYil~>
<~*ZuXO+X86Z,UFfe~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
5.3125 36.7236 mo
4.55174 35.6574 3.88599 34.541 3.31962 33.3882 cv
2.75187 32.2269 2.28107 31.02 1.91405 29.7783 cv
.831871 26.1188 .707505 22.3611 1.53969 18.8249 cv
1.54033 18.8222 1.54104 18.8192 1.54167 18.8165 cv
1.5419 18.8155 1.54212 18.8146 1.54235 18.8136 cv
1.64812 18.3662 1.76935 17.9213 1.90626 17.4795 cv
1.96407 17.2927 2.02456 17.1073 2.0876 16.9232 cv
3.1876 13.7242 5.15469 10.8006 7.67187 8.64257 cv
10.0943 6.5618 12.899 5.32158 15.6598 5.09313 cv
15.9673 5.06829 16.2756 5.05567 16.584 5.05567 cv
16.5912 5.05567 16.5988 5.05567 16.606 5.05568 cv
16.6082 5.05568 16.61 5.05568 16.6122 5.05568 cv
16.6184 5.05569 16.624 5.0557 16.6301 5.05571 cv
16.6316 5.05571 16.6332 5.05571 16.6346 5.05571 cv
16.6418 5.05572 16.6493 5.05574 16.6565 5.05575 cv
16.6579 5.05576 16.6601 5.05576 16.6615 5.05577 cv
16.6677 5.05578 16.6735 5.0558 16.6796 5.05582 cv
16.6811 5.05582 16.6833 5.05583 16.6848 5.05583 cv
16.6925 5.05586 16.6993 5.05588 16.707 5.05591 cv
16.7078 5.05591 16.7077 5.05591 16.7084 5.05592 cv
16.7151 5.05594 16.7227 5.05598 16.7293 5.05601 cv
16.7315 5.05602 16.7324 5.05602 16.7345 5.05603 cv
16.7407 5.05606 16.7479 5.0561 16.754 5.05613 cv
16.7548 5.05614 16.7565 5.05614 16.7572 5.05615 cv
16.7644 5.05619 16.7727 5.05624 16.7799 5.05628 cv
16.7806 5.05629 16.7824 5.0563 16.7832 5.0563 cv
16.7898 5.05634 16.796 5.05639 16.8026 5.05643 cv
16.8041 5.05644 16.8055 5.05645 16.807 5.05646 cv
16.8146 5.05652 16.8222 5.05657 16.8298 5.05663 cv
16.8298 5.05663 li
16.837 5.05669 16.8447 5.05676 16.8518 5.05682 cv
16.8533 5.05683 16.8555 5.05685 16.8569 5.05686 cv
16.8641 5.05692 16.8714 5.05699 16.8785 5.05706 cv
16.8787 5.05706 li
16.8863 5.05713 16.8943 5.05721 16.9019 5.05729 cv
16.9027 5.05729 16.9042 5.05731 16.9049 5.05732 cv
16.912 5.05739 16.9185 5.05746 16.9256 5.05754 cv
16.9263 5.05755 16.9277 5.05756 16.9284 5.05757 cv
16.9436 5.05774 16.9596 5.05793 16.9747 5.05812 cv
16.9762 5.05814 16.9756 5.05813 16.977 5.05815 cv
16.9927 5.05835 17.0083 5.05855 17.0239 5.05878 cv
17.0246 5.05879 17.0246 5.05879 17.0253 5.0588 cv
17.0329 5.05891 17.0407 5.05902 17.0482 5.05913 cv
17.0488 5.05914 li
17.0649 5.05938 17.0801 5.05962 17.0962 5.05989 cv
17.0969 5.0599 17.0968 5.0599 17.0975 5.05991 cv
25.1636 5.19418 28.4761 8.49568 29.9473 11.2275 cv
28.0703 8.86329 24.5254 6.57519 17.584 6.57519 cv
11.3066 6.57519 5.13475 11.7998 2.90626 18.9971 cv
2.29101 20.9834 1.99217 23.0322 1.99217 25.083 cv
1.99217 29.1113 3.14845 33.1455 5.3125 36.7236 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[30.72 0 0 33.12 0 26.56 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 64 
/H 69 
/M[64 0 0 -69 0 69 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 64 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 64 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 64 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 64 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
VuZVoquZcur<3'&rW`?,rs8W2rsA`5lN$e_rW<'$rWN3((Bt'K#7(SA$47.K$k*RT%M'*_&J>`k'Z0pL
!;QZm!rW6""T8N'#6"l,#Qb;=$3CPA$gdrk!W<*!"9/N'"W7LK#6tM?#mgqH$OdFQ%Ls!\&.oNg'GM8t
`;le9q#UBpqucm#rWW9*r<EH2#RLeE":>JD$OlJ(qZ6WsrWE-&rrrE,rWa2E#RLhF$OdFQ%1WmZ&.oKf
',2/s()Y'lVZ?MnqZ?]ur<3'&rW`?,rs8T1rX&W5rXA8rqZ6ZtrWE-&rWO8G"pYA=#RLeE$O[@O%1WjY
&.fEd',2,q()If*aT/4=q#U?oqucp$r<<0)rWiE.rsAZ3rsSi8rseN!qZ6WsrWE-&+9_oQ"pYA=#RLeE
$4@7N%1WjY&.fEd',)&p()If*)&gZuV?$DmqZ?]ur<3*'rW`<+rs8W2":5DB$OcqB!Y#SKo)S[hr;us#
rWN6)rWXAJ#7(SA$47.K$k3XU%hB3`&J>`k'c%Q$(`=52*6eJ\!;QZm!rW6""T8N'#6"l-#lb22$2t8;
$O[@O%1NdW&+or"!WE0!"9&EJ"U,)7#6tM?#mgqG$OdFQ%Ls!\&.oNg'GM8t(Dn#-)]Kb<cN'dAq>pHp
qucp$r<<0)rWiE.!!rW3rX/Z5rs\l9!"Su=pAk'kr;us#rWN6)rWXJM#RC_C$47.K$k3XU%hB3`&eYil
'c%T%(`=52*$$(Bd/^!Cq#U?or<*!$rWW9*r<EB0#RUM;rsJ`5rs\o:rso&>rt+r*qZ6ZtrWE*%-3XPW
"pYA=#RLhF$O[@O%1WjY&.oKe',2/s()If*)B0Y:*ZlLJdf?0Dq>pHpr<*!$r<<0)rW`K1#RUM;rX/Z5
rs\l9!Y,_OrX]&Aq>gBnr;us#rWFVQ"U5/9#7(SA#mq"I$k*RT%M'*^&J>]j'GVB"(`=20)]Tk>+!;^O
eGuBFq#UBpqucm#rWW9*rWiE.rX&T3rsSi8rXB,C%M'']&.oKequHTpr;us#rWN3(-O'b[#7(SA$47.K
$k*RT%M'*_&J>`k'c%Q$(`=52*$$(B+<_pR-.`-l!;Z`n!rW6""TAT(#5nf,#lY/1$N:DC$k*RS%Ls![
&.fEc&eYlV!;cfr!rW6#"=jWZ"pP;;#RC_C$4@4M$k3[V%hK<b&ebrn'c%T&)&aD5*??1D+<i$U,pq:F
UB()jquZg!qum!&rW`?,rs/T1rX&T3rsSi8rXAo=%hJXN#8%O\',)&[!;cfq!r`<$">'c\"pP;;#RC_C
$47.L$k3[V%hK9a&eYil'c%Q%)&X>3*$$(B+<_pR,pjregAmrJq>pKqqucm#rWW9*rWiH/!!rQ1rsJ`5
!"Ai9%LrsZ%hK9a&J>]i'GM8^quQ`tr<*'&rWOhW"pYA=#RLeE$O[@O%1WjY&.oKe',2,q()If*)B0Y:
*ZlLJ+sS?Z-7C8lh#O/Lq#UBpr<*!$rWW6)rW`E/rs8T1!"/]5rs\l9%Ls![&.fEc&eYik'GV>uquQcu
r<*$%0EhUa"pYA=#RLeE$4@7N%1WjY&.fEd',)&p()If*)&aG6*?H:F+sJ9Y-7:2j.P0HWU&auiquZg!
qum!&rW`?,!!rT1rX&T3rX/]7rXAo=%M/OM$5!j_',)&o'c%Q$rW2s!rWE-&rrrB+!XAr9rWsqZ$O[@P
%1WmZ&.oKe',2/s()If*)B0Y:*ZlLJ+sS?[-7C;m.kE=3!9!po!;QZo!rN0!"TAT(#5nf+#lb52$N:DJ
$k*RS%Ls![&.fEc&eYil'GV>u(Dd,i!<N0$r<*'&rWP"\"pYA=#RLeE$4@7N%1WjY&.fEd',2,q()If*
)B0Y9*ZcCH+sS?Z-7C8k.P*/(0Z*n*!;cfp!rW6!"TAT(#6"l,#lY/1$N:D5%/p\=%Ls!\&H37I&ebom
'bqK"(BPBi)>sX9"9&H'"oef+#65&/#q?8i$OdIR%M'']&J>]i'GVB"(E")/)]Tk>+!;^N,:"T`-n-Vr
/1rS01;s7,!;urr!rN0!"TAT(#6"l,#lY/1$N:DI$k*RS%Ls![&.fEc&eYil'GVB!(BtZm)&X=o!r`<$
"TAQ]"pP;;#RC_C$47.L$k3[V%hK<b&ebro'c%T&)&aG6*?H:F+X/-V,pk#h.4Zr$0/,+91rfU.!<*#s
!rW6!"TAT(#6"l,#lb51$NCM6%0$e9%Lip[&.oKe&ebom'bqK##8\3p)&aD4!r`<$"TJZ*#6"i^#RLeE
$4@4M%1NdX&.fEd',2,q()If*)&aJ7*?H:F+X86X-7:2j.P!)'0/54<2)`PV\GuU1quZcur<3*'rW`?,
rWrK0rsJ`5#Rh+N%1WjY%hS^P#8.X_'GM8t(((io(`=20)]Kb!"9&H&"ZHVi#6tM?#mgqH$OdIR%M'']
&J>]i'GV>u(Dn#.)]Tk>+!;^N,:"Q^-n-Vr/1rS00f(XD2E8k[[fH=-r<*!$r<<0)rWiH/rX&T3rX8`7
rser;$kEm\&J5Wg',)&p'c%5p(Dn#-)B0V8*$#+a"TAQb"pP;;#RC_C$47.L$k3XU%hK<b&ebrn'c%T&
)&aD5*??4E+<i$U,pjuf.4Zr$/hf"81Gq'L3BPIc[/g1-qucm#rWW9*rWiE.rsAZ3rsSi8rser;$kEj[
&J5Wg',)&o'c%>r(Dmu,)B'P7*$$%@"9\l3rWY=e#7(VB$47.K$k3XU%hK9a&eYil'c%T&(`=52*$$(B
+<_pS,UOle.4Qi"/h\q61Gq$K3'',acN(9O!!<'#r<3'&rW`?,rs8T1rsJc6rX9>I%1WjY%hK9a&J>]i
',2/r%Mfis(`=20)]Kb;*?H:ErWPCg"pYA=#RLeE$O[@P%1WmZ&.oKe',2/r()If*)B0Y:*ZlLJ+sS?Z
-7:5l.kE;*0JP=>2)[ET4$5Yjd/^EOr<*!$r<<0)rWiH/rX&Q2rsSi8rser;$P*aZ&J5Wg',)&o'i5Y]
(Dmu,)B'P7*$$(A+!;[0"pP;;#RC_C$47.K$k3XU%hK9a&ebom'c%T&(`F>4*??1C+<_sT,pjuf.4Zr$
/hf"81Gq'L3BB8c5!VE_!3ZD%"8rB%"oSZ*#Q>#/$2t;3$iUP7%K6hA%hB3_&J>`U'*/d^(DR]%(Dn#-
)B0V8*??1C+!;^N"pP;;#lY,h$4@4M%1NdX%hK<c&ebro()@]')&aG6*?H:F+X/-V-7:/i.P!)'0/51;
1c73O3]fGf5<qP'eGu]O!!E0&r<<0)rWiH/rX&Q2!"8c7rseu<rt#,@rt58DrtGDH<#$/a(Dmu,)B'P7
*$$(A+!;[L+sR<t#RC_C$47.L$k3[V%hK9a&ebro'c%T&)&aG6*?H:F+X/-V,pjuf.4Zr$/hf"81c70N
3BB8c5!VD$77Pl/WrW,%r<<-(rs/Q0rX&Q2rsSf7!"Jo;$4dXY&J5Wg',)&o<YZ>b(Ddo+)&aG5*$$%@
+!2UK+sS?Y#7(VB$47.K$k3XU%hB3`&ebom'c%T%(`=52*$$(B+<_sS,pjuf.4Qi"/h\q71Gq'L3'',`
5!M>"6q'U;f`7uOrri<)r<E9,rWrK0rsJc6rX9,C%1WjY%hK9a&eb0W!#/NM'c%Q$(`4,/)B0Y9*?H7D
+<_pQ,:"Q]#RLeE$O[@P%1WjY&.oNf',2/r()If*)B0Y:*ZlLJ+sS?Z-RU>m.kE8*0JP@?2)dKT3]oPi
5XIh,7S$-EgAn,Or<<0)rWiH/rX&Q2rsSf7!Y#VLrXT5F&J5Wg',)'`'GV>u(Ddo+)&aG5*$$%@+!;[L
+sS?Y,pjrF$47.L$k3[V%hK9a&ebom'c%T&)&XA5*$$+C+<i$U,pjuf.4Zo#/h\q71Gq'L3BB5a5!VD$
6q'X<8k_t8!2T\q"oSZ*#Q>#.$3(A4$iUPD%1NdW%hB3_&J>]i',4[c'bqK"(Dmu,)B'P7*$$(B+!;^N
,9nH[,pk#g$4@4M%1NdX%hK<c&ebro'c.Z')&aG6*?H:F+X/-V,pt)i.P!&%0/,+:1c73O3BK>e5=%V'
77Kg?92/2YhZ0DOr<E9,rWrK0rsJ`5$k*OR%1WjY%hK9a&JG'V?5++h()@]'(`=20)]Kb;*?H:F+X/*T
,U=Z_-R^Dm$OdFQ%Ls!\&J5Wh'GM8t(Dn#.)]Tk>+!;[M,:"Q^-RgMq/1iJ.0etOB2E*WW4$>en6:4.1
84cHJ:/Fedi;hg:_#XK>rWiH/rX&Q2rsSf7!Y#SKrXU=e&.oNf',)&o'bqK#(Dn#-)B'P7*$$(B+<VgO
,9nH[-71,h.4RS5$k3XU%hK9a&eYil'c%T%(`=52*$$(B+<_pS,UFfd.4Zo#/h\n61GgsJ3B9/`5!VD#
6q'U:8k_rT;,U@o_Z7FO!X8l7rWrK0rsJ`5/dr-t%1WjY%hK9a&J>`j'GM8s()@]'(`=51)]Th<*ZlIH
+X/*T,U=Z_-R^Dm67OK:%1WmZ&.oKe',2/r()If*)B0Y:*ZlLJ+sS?Z-7:5l.kE8*0JP@?2)[ES3]oSj
5XIh,7S$-E9hnM_;cQn$`;mRO!!iK/rX&T3rX8`7rXAo=%hJXN,7tP$',)&p'c%Q$(`4,.)B0Y9*??1C
+<_mP,9nH[-7:2i.7>X9/1iF`%hK9a&ebrn'c%T&(`F>4*?H7E+<_sT,pjuf.4Zr$/het71Gh!L3BB5b
5!VD$6q0[<92&)W;,UCp='8bJ!4r71#lY/1$NCM5$nDbr%Ls![&.fEc&ebom'GV>u(Ddo*)&aD4*#ot?
+!;[L+sJ6W,UOic-n.V7.k</&/h[_H&J>]i'GVB"(Dn#.)]Tk>+!;^N,:"Q_-n-Vr/M8\10f(XD2`Wl[
4?btp6:=7484lQM:/Onf<EE=,>[GMP\GuU8rX&T3rX1:d$k3XU%M'']&.oKe&ebrn'bqK"(Dmu,)&aG6
*$$(B+!;^M+sS<X,pjuf-qGd:.kE8(/hesj&J>`k'bqK#(`=52*$$(A+<_pR,UFcb-n6_u/MAe41G^mH
3&s#^4[21u6UaI78kViQ:f1.k<``I0?!h$`!4Mt.$3(A3$i^Y7%0@"M&,m+a&J5Wh',2/r()@]'(`=20
)]Th<*?H:F+X&$R,:"Q^-RU<7.4Qi!/1iJ-0JP9p',)&p()If))&jM7*ZcCG+X/-W-7:2j.P*/(0/,.;
1c@9Q3]fJg5=%Y)77Tm@9MJ;[;H-[u=^#*;?t*Zk!4;e.#mq%=$S2\p%1NdW%hB3_&J5Wg',2,q'c%T%
(`4,/)B0Y9*?H:F+<_pQ,:"N]-7:38-n-Ys/1iG,0JG4:1D:H;'c.Z')&aG6*?H:F+X/-V,pt&g.P!&&
0/,+:1c73O3BK>d5<qP'77Kg?92//X;,^Iq=^#'9?X[GUB?pRa!!!B*$S2\p%1NdW%hB3_&J5Wg',)&p
'c%Q$(`4,.)B0Y9*?H:E+<_mP,9nH[-7:09-n-Vr/1`A*0/,+91Ggs('c%T&)&aG5*$-.C+X/*T,pjuf
.4Ql#/hf"81Gq'L3BB5b5!VG%6q0[<8k_uU;,^Fp='8d6?X[DSAS>i+!3lP($i^Y7%0@"L&,m+`&J5Wg
',2,q()@]'(`=20)]Th<*?H:F+<_pQ,:"Q^-7;V<.4Qhu/1iJ-0JG4;1Gh!J()Ic()&aG6*?H:F+X/-V
,pt)i.P!&&0/,.;1c@9P3BK>e5=%V(77Tm@92/2Y;H-Xt=^#':?t*YXB4u'sdf?QO/.2jp%1NdW%hB3_
&J5Wg',2,q'c%T%(`4,/)B0Y9*?H:E+<_mP,:"N]-7;\>-n-Vr/1iG,0/,+91GgsI2`DNi)&aG5*$-.D
+X/-V,pjuf.Olu$/hf"81c70N3BB8c5<qP&6q0^=92//X;,^Fp=B\s8?X[GTB4u$rDK+,+XT/D2%1W:H
,S(Ft&J5Wg',)&p'c%Q$(`4,.)B0Y9*?H7D+<VgO+sS?Z-7;b?-n-Vr.kE8)0/,(81G^mH2E*TU)&aD4
*$$(B+<_pR,pjuf.4Qi!/h\n61Gh!K3'',a5!VD#6q'U;8k_uU;,^Fp='8a4?XR>RAnPjoD/XE8f)ViO
-k-Uq%M'']&.oKe&ebrn'c%Q$(Dn#-)B0V8*??1C+!;^M+sS?Z-72b@-n-Vr.kE8)0/#"61,CaE2E*TU
3]e6!*$$(B+<_pR,UFcc.4Qi!/MAe41,LjI3&s#^5!M>"6UaL98P;cQ:f:4l='8^3?!h&NAS5[kCi434
FEZ=;W;n7T%M'']&.oKe&ebom'bqK#(Dmu,)B'P7*$$(A+!;[L+sS?Y,pl_A-R^Dn.kE8(/h\n51,CaE
2E!KS3BB8b)]Tk>+<_mQ,:+Za-n6\t/M8\11,CaF2`Ni\4[21t6UXC68P2ZO:Jk%i<`iO0?!guKA7fLi
Ci434F*;eRgAn,O"V)%R&.oNR&fVJu'GVB!(Dmu,)&aG5*$$%@+!2UK+sJ6W,pleB-R^Dn.k</&/h\k3
1,:XC2)[BQ3BB5a4['l-+!;^N,:+W_-n-Vr/1rS01,CaE2`NfZ4[)(r6:=7484cKL:/Onf<``F.>[CfI
@qB:eC2Im.F*2YOH@4NKV#V\M&.fEc&eYik'GV>u(Ddo+)&aG5*#ot?*ZlLJ+X/-V,pceC-RU>m.P!&%
/h\k30etOA2)[?P3B9/`4?btp+!;^N,:"Q^-R^Gp/1iM.0etOB2`E`X4?Yno6:41284cEI:/=_c<*!.*
>?tTE@qB7cC2@d,EcZDKH@10lhZ0DO+:o+s&eYik'GM8t()If))&aD4*#ot>*ZlIH+X/-V,UHbD-7:2j
.P!#$/M8\10etOA2)R9N3&s#]4?Ykm5sZY;+s\H]-7C;m/1iJ-0JYF@2E*TV4$>bl5sn%07n?6G9i"Va
<*!('>?tQC@Uj"`BkqU)EH?8HH$ashJV2n]i;g[o!"o2C3YN2A'bqK#(Dn#-)B0V8*??1B+!;^N+sS?Z
,pjuf.4Qet/1iJ-0/,.:1Gq$J2`NfY4$5Yi5!VD#5XQ_?,UFcc.4Qi!/h\n61,LjI3&s&_4[25!6q'R9
8P;cQ:f:4l<`rU1?=72OAS,XkCi434FEVnTI"$TuKndJF^ApA/&ebom'GVB!(Dmu,)B'P7*$$(A+!2XL
+sS?Y,pjue.4H_s/1iJ,0/,+91GgsI2E3ZV3]fGd4[)(q6:!n),UFcb-n-Yt/M8\21,CdG2`Wo]4[)+t
6UXC68P2ZO:Jk%i<`iL/?!^rKA7fLiCi402F*2\QI!pNsK8,2>`;mRO2A6`<'GV>u(Ddo+)&aG5*$$%@
+!2UK+sS<X,palc-n-Vq.kN>*0/#%81,LjG2E*TU3]T8`r]L6G6pO%(6:3(H-n-Vr/M8\11,CaF2`Ni[
4?btq6UX@584lNL:Jaqg<EE=,>[CfH@qB:eCMe!0F*2\OH@:6mK8#)<MiGaW])XJu'GV>u()If))&aD4
*#ot?*ZlLJ+sJ6W,UFcb-n-Sp.kE8)/h\n51,CaE2E*So3!D?(4$,Pf7Qs%%5sdn+-n$Pq/1iM/0etRC
2E3]X4?Ynp6:41284cHK:/Fhe<E<4*>?tTE@q91bC2@d+EccGKH@10lJqSl7MN*[ZaT/jO.hi^6()Ic(
)&X>3)]Tk=*ZlII+X/-V,UF`a-R^Dn.P*/'/h\n51,CaE2?#K92`NfXr]:*B83K.#5<qM%6UW@Q/1iJ-
0etOB2E*TV4$>bm5sn%07nH<G:/=\b<)m%'>?tQC@Us(`C27[)EH?8HH$k$iJV/Z3MN!OVPEa5j[f@`i
()@]'(`=51)]Th<*ZcCG+X/-U,UF``-R^Dm.P!&%/h\k40f&_b"u\=s2`E]Ur]1$A8j#7"5<hD!5sn"-
.kE8*0JP@?2)dKT4$5\k5sdq-7n?6F9hnM_;cQn$>$PBA@:Nk]BPMC%E-$,EG^=adJ:iN1M2I:ROd)0!
blG-O1):ZB(`=20)]Kb;*ZcCG+X/*T,U=Z_-R^Al.Olu$/M8\10etOA1c7*I2E*TS3B9,]!]rM,r]We9
5X@_'6U`RZ0/54<2)[BR3]oPi5X@b+7S$*C9hnJ];cHb!>$G9>?t3_ZBPM="DfKi@GBnRbItE?-Ll..O
Ocu&sR[h\(ZN)0c(`4,/)B0Y:*?H7D+X&$S,:"Q]-RU;k.Olu#/M8\10erY`$8jXt2)[BP3&ioZ#s(.0
4?Ykl5<qL56:""-0/,+:1c73O3]fJg5=%V(7Rp!A92/2Y;H-Xt=Bf$:?t!PWB5)-uDfBc?G'SF^It<6+
LP^tLOHPioR@Bb>d/^EO,8_:9)B0V8*?H7D+<_pQ,:"N\-7:2j.4Qi!/M/V/0JP==1]B322?#K92`NfX
!]`>'r]Ee94[2.r5sdn*6q&gc1Gq'L3BK>e5<qM%77Kg>92//W;H$Or=B\p8?X[GTAnYpqDK'W;G'A4Z
IXm'(L5CeIO-,WkR$sP;Tqg':Y5fX^)B'P7*?H7D+<_mP,9nH[-7:2i.4Qeu/M/S.0JP?^1]K<32?,T7
2ubl:3DV[t4?Yej5!M7s5s[k*77B!i2)dKU4?Ykn5se"07n?6G9i"Va<)m"'>?kKB@Us(aBkqR(EH?8H
H$ashJV/Z4MN!RWPEhH%S=Q=JUo2`CXT0@[)]Tk=*ZcCG+X/*T,UF`a-R^Dm.P*,&/h\n41&a!/2#fH4
2?Gfr3"%]+3BB2_4?G\h5!Js277'=.6psI$2E3`Z4?btp6:=7484lNL:/Fhe<EE:+>[CcG@qB7dCM[p.
EclPMH[L9mK8#&:MiEg]PEqW*S=cLNVPpQI!36)@)]Tk>*ZlLJ+X/-U,UFcb-n$Mo.kE8(0/#"61,C`c
1^5fq2)[BO2uYc:3W;&G4$5Vh4[)(p5X><86:=412`Wo]4[)+s6:F@68P;`P:f1.j<`iO0?!h#LA7fLh
Ci+*2F*2\PH[^KsK8,2>NK0*aQ'[r0StMjTVlHi$f`7uO)BBk?+!;[L+sJ6W,pjue-n-Vr/1`A*0/,+9
r\OR2s#'a5!&js<2`Uds!]iA(r]C<H5!D1qr]rq=6UaC43]fGf5<qP'77Tm@9MJ;Z;H-Xt=^#':?XdPW
BPD7!DfKi@GBnO`IY!-*LPh"LOHPioR@Bb?U84]dX0/\4gAn,O(`j_?+<_mP,9nK\-7:2i.4Qi!/M8\1
0JWP_#W+@q1c@3L2`Laqs#C!<!]iA(r]En<4[)%o5<qP$6UO7176E^s5X@b+7S$-E9MSD];cQn$>$P??
@:Ee[BPVF%DfTrBG^=^cJ:`K0Ll.1QOcu)uR[ftCUnt#jXKSq:[bUq[!#Qe#+<_pQ,:"Q^-RU;k.P!&$
/MAb20etQ`1]TE22Z>Z73!)*#3rM,?4T7JH5<_:s5lO);6UO:25!M>"6q'U;8k_uU;,^Fp=BSj6?=75Q
AnYmoD/XE8Fa&+XI=Hj$KntVFNf]EgQ^O>7TVA9\WN<8-ZaRBUhZ0DO(a'tF+sS<Y-71)g-n6_t/1iJ-
0JG7<1Go%f"#`"p2Z>W:3&rtt3WD/=48qB:5!D1r5=%S%6:=4176j1,77Tm@92&,X;,gOs=^#':?X[GU
B5)-uDK0`>G'SC]IXm$(LP^qKO-5`nR%'V<U84ZcX0&V3[C3ZZ^>T(N!5SXN+X/-U,palc-R^Dn.kE5(
0/#"61,Ccc2>oH32uYf83<2,=3tFG94Zttm5<qG!6:+%,6ps:06UXC78P2ZO:Jk%i='/U1?!guKA7fLi
CMn*2FEMeRH[UBqKS>5>N/s*aQC+)1StMjTW2cr&Z*^sL]=u(t_Z7FO'd=kJ,pjrd-n-Vr.kE8)0/,+9
1G^le2?#N42uP`93W;&A4$#Gbr]L0C!^8h4r]gQP5sn"+6UX@37nH<G9i"S`<)m"&>?kKB@Uj"_BkqR(
EH?5GH$ashJV&T2M2[FTP*D9#S"61GUo(,mXg,4?\@]Dh_8O=3!5/@G,:+Z`-RU;l.P!&$/h\k31,:XB
r\a^6r&4^;3&rts3W;)=48h;A4oRYF5Q="K6:=..6UX=58P;`P:f1.k='/U1?=.,NA7oUkCi434FEVnT
I"$TtKSG>@N/s*bQC+,2T:r'XW2cu'Z*h$N]Y;2"`Q#s=!4r4D,pjue-n-Vr.kE;*0/,+91G^oe2Z,N5
3;kiC3]T5^4$#Da48q>G4[)"l5<f'3!'s(?6:+%+6UOI>:/=_b<*!('>?kNC@Us(`C27[)EH?5GH$ash
JV8c5M2[IVP*MB%S=Q=JUo:;pY-G=@\@]Gi_SjI7aN;O(\H!3g-R^Dn.k</&/h\k41,:XB2?#N42uP]G
3B0&[3]T5^3BB2_4$5V(4T@SC4oml5s$6QLrB`_C:/Fhe<EE:+>[CcH@qB:eCMe!/EccJLH[L9nJqSo9
Mi<^[PEqT)SY)UOVPpSuYd1[G]"Gen`5Ta;ai_fM!;?JD~>

%%EndBinary
grestore
np
3.31962 33.3882 mo
1.81499 30.3258 1.01181 27.0064 .992533 23.6878 cv
.992528 23.6871 .992523 23.6861 .992518 23.6853 cv
.992454 23.6741 .992399 23.6626 .992353 23.6513 cv
.992344 23.649 .99233 23.6457 .992322 23.6434 cv
.992313 23.6411 .992303 23.6382 .992295 23.6359 cv
.992284 23.6325 .992273 23.6287 .992263 23.6253 cv
.992257 23.6233 .992252 23.6216 .992247 23.6196 cv
.992234 23.6146 .992222 23.6091 .992213 23.6041 cv
.992209 23.6022 .992207 23.6007 .992204 23.5987 cv
.992198 23.5949 .992193 23.5911 .992189 23.5872 cv
.992187 23.5853 .992185 23.5837 .992184 23.5818 cv
.99218 23.5764 .992177 23.5708 .992177 23.5654 cv
.992177 21.974 1.17193 20.3845 1.53969 18.8249 cv
.707505 22.3611 .831871 26.1188 1.91405 29.7783 cv
2.28107 31.02 2.75187 32.2269 3.31962 33.3882 cv
1.54167 18.8165 mo
1.54191 18.8155 1.54212 18.8146 1.54235 18.8136 cv
1.54212 18.8146 1.5419 18.8155 1.54167 18.8165 cv
2.0876 16.9232 mo
4.33564 10.3613 9.8719 5.56074 15.6598 5.09313 cv
12.899 5.32158 10.0943 6.5618 7.67187 8.64257 cv
5.15469 10.8006 3.1876 13.7242 2.0876 16.9232 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[16.32 0 0 29.76 -9.53674e-07 29.92 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 34 
/H 62 
/M[34 0 0 -62 0 62 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
`rPl8!!;HdqZ6ZtrWD?a^B"'1rW;HeqZ6WsrW<-'nGp'!p]:<pmf<4cr;us#rWN&tYlOP"quQj#n,W=d
rW<'$rWN6)WrVqrquZj"nc8OfrrW3%rWE-&!X/`3XT8+squZg!o)S[hr;us#rWN6)rW]M*q#UBpquZp%
quHQnqZ6Ztr<*$%rrrE,rs,b.q#U?orW<-&rWMrqqZ6WsrWE-&rrrB+!XAu:YlOS#!!<*#qucm#p]10l
rW<'$r<*B0"U5/9#7(SAZN1"+qZ6Qqr<*!$rrr6!qZ6WsrWE-&$3^S;"pYA=#RLeE\cDX.q#U?oqucp$
r<<*!qZ6WsrWE-&rWNT4"pYA=#RLhF$c;u:!;QZm!rW6""TAT)#5nQ!!WE0!"9&E4"U,)7#6tM?#mgqH
$Ok5Zm/Zq_qZ?]ur<3'&rW`B&qZ6WsrWE-&%g<+@"pYA=#RLeE$4@7N%FkI?!;Z`n!rN0""T8N'"p,#7
!;llr!rW6$"TAQ7"pP;;#RC_C$4@4M$k3^'!8[_O!W)rs"8rB%"o\`)#Q+W%!rW6#";1kA"pP;;#RC_C
$47.L$k3[V&*ErD!;Z`n!rW6""T8N'#6"l-#lXl'!r`<$"TJZ)"p,#7#lY,:$4@4M%1NdX%hS41c2d\A
quZcur<3*'rW`?,rWiQ3!<N0$r<*'&rWNr>"pYA=#RLeE$4@7N%1WjY&.fHL!6"s9!W)rs"8rB%"o\`*
#Q>#.$2jr)"9&H'"oef+#65&/#n%(J$OdIR%M'']&J>'V]`A!3quZg!qum!&rW`?,rWrK0!X\u1rWE-&
rWN]7"pYA=#RLeE$4@7N#n7@S%hK<b&ebtm!<3)t!rN0!"TAT(#6"l,#lY,4$47.BrWE-&rrrE,rW`E/
&d\jO$4@4M%1NdX&.fEd',2,q]`8$5quZg!r<3*'r<E6+rWrK0!"/]5rr`6'!!O;F"U5/9#7(SA#mq%J
$k3XU%hB3`&eYil'bqLt!;uut"8i<$"o\`*#Q>#.#m(G@$O$nG$j-V8rWO5F"pYA=#RLeE$4@7N%1NdX
&.oKe',2,q()Ih$!<3,u"8rB%"o\`)#65&0#lb52$N:D;$k*RJ"9eu."r[^O#RLeE$4@4M%1NdX&.fEd
&ebro()If))8-"M!rW6!"TAT(#6"l,#lY/1$NCM6%/p_8"WdjP#6tM?#mgqH$OdIR%M'']&J5Wh'GV>u
(Dn#.)nc7M"8rB%"o\`*#Q>#.$3(A3$RZ>k%1NdW"U5/9#7(SA#mq"I$OdIR%M'*^&J>`j'GVB"(`4/1
)]ccqquHa!qum!&rW`?,rWrN1rX/Z5rs\o:rXK)B"pP;;#lY,J$4@4M%1NdX%hK<c&ebro()@]')&aG6
*?NB(o)Jamr<3*'rW`?,rWrK0rsJc6rX:1a%1WjY%hJsN#RC_C$47.L$k3[V%hK9a&ebro'c%T&)&aG6
*?H:Fe,\b6rWN0'rW`?,rs8T1rsJ`5rs\o:rXL4b&.fEY#RLeE$4@4M%1NdX%hK<c',)&p()Ic()&aG6
*?H:F+l*.W!<33$"o\`*#Q>#/$2t;3$iUP7%K6hb%hB3`&J>?U#mq%J$k3XU%M'*_&eYil'bqK#(`=52
*$$(B+<_pRjoF$6r<<0)rWiH/rX&T3rsSf7/I`.!%M'']&.oKe&d\mP$OdFQ%Ls!\&.oNg',2/s(Dn#-
)]Th<+!2UL,:"T(!:^'H!<36%#6"l-#lY/0$NCM6%0$e9%Oqu"&.oKe&eboc$O[@P%1WmZ&.oNf',2/r
(Ddo+)B0Y:*ZlLJ+sS?Z-g1Q]!<!-%#Q>#/$2t;3$iUP7%K6hA%hB3_&J>`U'-\+u$k*RT%M'*_&J>`k
'GVB"(`=52*$$(B+<VjQ,UFcb.IdD_!<39&#QG)/$2t83$iUPi%1NdW%hB3_&J5Wg',)&o'atN\%M'*^
&J>]i'GVB"(Dn#.)]Tk>+!;^N,U=Z`-n-\C!5nj?"pYA=#lY/0$NCM5$igb9%P82%&.oKe&ebom'GV>u
%1WmZ&.oKe',2/r()If*)B0Y:*ZlLJ+sS?Z-7:5l!@o_7!!!9'#lY/1$NCM5$jmFQ%Ls![&.fEd')iOa
'GV>u()IGk&.fEd',2,q()If))B0V9*ZcFH+UTG>,pjuf.4Zr$0"h8b#lY/0$NCM5$j$kJ%fQtY&.oKe
&ebom'GV>u(Ddo!&.oNf',2/s(Ddo+)A=&0*?H:F+X/-V,pt)i.P!)'0/1'>!!rQ1rsJc6rX9_T%1WjY
%hK9a&eYik'GM8s()@]'(`<ks&ebs!'bqK#(`=52*$$(A+<_pR,UFcb-n6_u/MAe41VEeg$3(A3$OdFP
%1NdW%hB3_&J5ZT'*]-c'c%Q$(aU":)&a,$',2/s(Dmu,)]Kb<*ZlLJ+sSB\-R^Dn/1iJ-0JYF@]`A$=
rsSf7!Y#SKrXT2E&.oNf',)u4'GV>u(Ddo*)&aD4',2/r(Ddo+)B0Y:*ZlLJ+sS?Z-RU;l.kE;+0JP@?
2)i2K!"/]5rs\o:rso&>2\6N4&J>`j'GM8s()@]'(`=51)]Th4'c%T&)&aG5*$-.C+X/*T,pjuf.4Ql#
/hf"81Gq'L3P>Co$O[@C%/p\;%M'*L&2k+5&ebom'bqK"(Dmu,)&aG6*$$%8(Ddo+)B0Y:*ZlLJ+sS?Z
-R^Dn.kE;+0JYF@2E*TU42V'q!<3K,%6b73%hB3_&J5Wh',2,q'c%T%(`4,/)B0Y9*?H:=(`=52)]Tn?
+<_pR,UFcb-n6\t/M8_31,LjH3&s#^4j3os!(./(%1WjY%hK9a&J>]i'GM8s()@]'(`=20)]Th<*ZlIH
)&aD4*$$(B+<_pR,pjuf.4Qi!/h\n61Gh!K3'',a5![Wukl:hq%1WmZrX_.'&J>`j'GV>u()If))&X>3
*#ot>*ZlLJ+W;:>*?H:F+X/-V,pk#h.P!&%0/,+91c73O3BB8d5=%Wm!8miE%Ls![&.fEc&eYil'GV>u
(Ddo*)&aD4*#ot?+!;[L+sIsG*?H=H+X83X-7:2k.P*/(0/,.;1c@9P3]oPi5X@b*k5a*66Os\=&.oKe
&ebom'bqK"(Dmu,)&aG6*$$(B+!;^M+sS<Q*ZlLJ+sSB[-7C;m.kE;+0JYF@2)dKT4$>bl5sdt.8+6N(
!<*Np&J5Wg',2,q()@]'(`=20)]Th<*?H:F+<_pQ,:"QW+<_pR,UFcb-n6_u/MAb31,CdH2`Wo]4[21u
6UaI88biA*!(%5/&J>]i',2/r()Ic((`=51)]Th<*ZlIH+X&$S,U=]`+X&$T,pjre.4Ql#/h\n61Gh!K
3'',a5!M>#6q0[;8cVPu!'(W(&ebom'bqK"(Dmu,)&aG6*$$(A+!;[L+sJ6W,pjue+sS?Z-7C;m.kE;+
0JYC?2)dKT4$5Yj#sgmG77Kg>92/0p!&,#u',2,q()@]&(`=20)]Kb;*?H:E+<_mP,:"Q^-7:2j,UFcb
-n-Yt/M8\21,Cd#2E*WW4?Ykn6:4.17nH<H:/=a#!%/En'GV>u(Ddo*)&aD4*#ot?*ZlLI+X/-V,UFcb
-R^Dn-71,i.OuGi/h\n61Gh!K3'',`5!M>#6q'U:8kVlS:f:9+!$2gg'c%Q$(`4,.)B0V8*??1C+!;^N
+sS?Z-71)g.3pAn.jueq.kE8*0JP=>2)[ES3]oPi5sdq-7S$*D9hnM_;cQl3!#64`()Ic()&X>3)]Th<
*ZcCG+X&$S/L2Vg-7:/i.Olr"/L`/#/M8\21,CdG2`Ni[4[)+s6UXC68P2WN:Jath<END;!"9VY(Dmu,
)B'P7*$$%X*ZlIH+X/-V,UFca-R^Dn.k<2'/h8J)0/,+:1c73O3BK>e5=%V'77Tm@92//X;H$Rs=B\tC
!!=#R(`>OU)B0V8*??1B+!;^N,9nH[,pjuf.4Qet/1iJ-0.ee00etOB2E*WW4?Yno5sn(184cEJ:/=_c
<)m%(>?tUQ!;lga(`4,/)B0Y9*?H7D+!DdO,:"N\-7:/i.4Qi!/M8Y/0JP470f(XD2`Ni[4[)(r6:=:5
84lNL:Jaqg<EE:,>[CfHb5h,66Q$a[)]Kb;*?H:E+<_pR,:"Q]-7:2j.Olr#/M8\00etL=1,CdG2`Wr^
5!M:u6UaI88P;cQ:Jt+j='/X1?=.,NACLVE!(.YC)]Th<*ZcCG+X/-U,U=Z_-R^Dm.P!&%/hSe20etOA
1Gq$K3''/b5!VD#77Kd<8k_rT;,U@n='Ag5?=75QAn^!#i;ar=)]Tk=*ZlII+X/-V,UF`a-R^Dn.P*/'
/h\n51,Ccd2'=e:3]fGf5<qP'77Tm@92//X;H$Rs=B\s9?X[GUAnc&C!8%9=*#ot?*ZlLJ+sS<X,palc
-n-Sp.kE8)0/#%71,LgF2E*QT3]oPh5X@_*7Rp$C9MSD];cHe">$G9>@:EbZBPD:"mf;kXhZ-"a*ZcCG
+X/*T,U=Z_-R^Al.P!&%/M8\10etOA2)R<P3'',`5!M;!6q'U:8k_rT:f:7m='8^3?=./PAS>dnD/XFX
!7h-;*ZcCH+X/-U,UF`a-R^Dm.P*,&/h\n50f(XC2)[BQ3BB8c5!VD$77Kg?92&)W;,^Ir=B\s8?X[DT
AnYsrDJsQ;nGr"XJ,~>

%%EndBinary
grestore
np
112 62.5332 mo
110.624 61.1512 107.408 57.9926 102.197 53.2867 cv
105.312 49.6622 109.805 46.4773 114.969 44.3096 cv
118.846 42.6807 122.887 41.7217 126.705 41.4775 cv
126.639 41.1982 126.57 40.9189 126.57 40.9189 cv
126.55 40.8519 126.528 40.7851 126.506 40.7188 cv
126.528 40.7849 126.55 40.8512 126.57 40.918 cv
127.764 44.7685 126.447 49.126 123.217 52.0166 cv
117.223 57.3789 113.512 61.0166 112 62.5332 cv
97.0195 44.5009 mo
96.9806 43.933 96.9892 43.3634 97.0471 42.7976 cv
97.0135 43.1284 96.9965 43.4622 96.9961 43.7981 cv
96.9961 43.8019 96.9961 43.8058 96.9961 43.8096 cv
96.9961 43.8096 li
96.9961 43.8096 li
96.9961 43.8096 li
96.9961 43.8154 96.9961 43.8213 96.9961 43.8272 cv
96.9965 44.0524 97.0043 44.2768 97.0195 44.5009 cv
112.018 42.7412 mo
112.016 42.7356 li
112.565 40.7297 li
112.018 42.7412 li
97.3707 41.1158 mo
97.3897 41.0497 97.4093 40.9838 97.4297 40.918 cv
97.4571 40.8296 97.4857 40.7421 97.5157 40.6549 cv
97.4858 40.7422 97.4571 40.8304 97.4297 40.9189 cv
97.4093 40.9843 97.3897 41.0499 97.3707 41.1158 cv
119.588 35.0679 mo
119.589 35.0679 119.59 35.0679 119.591 35.0679 cv
119.59 35.0679 119.589 35.0679 119.588 35.0679 cv
119.614 35.0677 mo
119.649 35.0675 119.684 35.0674 119.719 35.0674 cv
119.719 35.0674 li
119.719 35.0674 li
119.684 35.0674 119.649 35.0675 119.614 35.0677 cv
104.33 35.0675 mo
104.33 35.0675 104.33 35.0675 104.329 35.0675 cv
104.329 35.0675 104.329 35.0675 104.329 35.0675 cv
104.329 35.0675 104.33 35.0675 104.33 35.0675 cv
104.316 35.0674 mo
104.316 35.0674 li
104.315 35.0674 104.314 35.0674 104.313 35.0674 cv
104.313 35.0674 li
104.314 35.0674 104.315 35.0674 104.316 35.0674 cv
104.299 35.0674 mo
104.299 35.0674 li
104.298 35.0674 104.297 35.0674 104.296 35.0674 cv
104.296 35.0674 104.296 35.0674 104.296 35.0674 cv
104.297 35.0674 104.298 35.0674 104.299 35.0674 cv
gsave
[16.2766 0 0 16.2766 112 61.6416 ]ct
clp
/0 /Gradient get_res exec grestore
np
112 42.794 mo
112.965 39.2705 li
112.975 39.2334 li
113.285 38.0928 114.111 35.0674 119.719 35.0674 cv
122.592 35.0674 125.535 37.582 126.57 40.918 cv
127.764 44.7685 126.447 49.126 123.217 52.0166 cv
117.223 57.3789 113.512 61.0166 112 62.5332 cv
110.504 61.0303 106.832 57.4268 100.783 52.0166 cv
97.5527 49.125 96.2363 44.7685 97.4297 40.918 cv
98.4629 37.582 101.408 35.0674 104.281 35.0674 cv
109.889 35.0674 110.715 38.0928 111.025 39.2334 cv
111.035 39.2705 li
112 42.794 li
119.719 34.0674 mo
113.279 34.0674 112.303 37.8994 112 39.0059 cv
111.697 37.8994 110.721 34.0674 104.281 34.0674 cv
100.826 34.0674 97.6035 36.9795 96.4746 40.6221 cv
96.1523 41.6601 95.9961 42.7383 96 43.8223 cv
96.0078 47.0732 97.4453 50.3721 100.117 52.7617 cv
106.146 58.1553 109.83 61.7725 111.297 63.2451 cv
111.34 63.2881 li
111.641 63.5908 111.844 63.7978 111.947 63.9053 cv
111.947 63.9912 li
111.959 64 li
112 63.958 li
112.041 64 li
112.051 63.9912 li
112.051 63.9053 li
112.154 63.7978 112.357 63.5918 112.658 63.2881 cv
112.701 63.2451 li
114.168 61.7725 117.854 58.1562 123.883 52.7617 cv
126.555 50.3721 127.992 47.0732 128 43.8223 cv
128.002 42.7383 127.848 41.6601 127.525 40.6221 cv
126.396 36.9795 123.174 34.0674 119.719 34.0674 cv
0 .5 1 0 cmyk
f
102.197 53.2867 mo
101.741 52.875 101.27 52.4518 100.783 52.0166 cv
100.855 52.0811 li
99.0078 50.0127 97.9961 47.4072 97.9961 44.8096 cv
97.9961 43.835 98.1387 42.8604 98.4297 41.9189 cv
99.4629 38.583 102.408 36.0674 105.281 36.0674 cv
107.678 36.0674 109.195 36.6221 110.18 37.3428 cv
110.18 37.3428 li
110.18 37.3428 li
109.381 36.2433 107.832 35.1494 104.647 35.0718 cv
109.925 35.2005 110.722 38.118 111.025 39.2334 cv
111.035 39.2705 li
112 42.794 li
112.016 42.7356 li
112.018 42.7412 li
112.565 40.7297 li
112.904 39.491 li
112.367 41.4639 li
113.008 43.7764 li
113.975 40.2334 li
114.285 39.0947 115.109 36.0674 120.719 36.0674 cv
122.141 36.0674 123.58 36.6846 124.797 37.7119 cv
124.797 37.7119 li
124.797 37.7119 li
123.432 36.1145 121.591 35.0877 119.773 35.0677 cv
122.571 35.0984 125.424 37.5033 126.506 40.7188 cv
126.528 40.7851 126.55 40.8519 126.57 40.9189 cv
126.57 40.9189 126.639 41.1982 126.705 41.4775 cv
122.887 41.7217 118.846 42.6807 114.969 44.3096 cv
109.805 46.4773 105.312 49.6622 102.197 53.2867 cv
112.975 39.2334 mo
112.975 39.2334 li
113.164 38.5385 113.544 37.144 115.081 36.1603 cv
113.544 37.1444 113.164 38.5395 112.975 39.2334 cv
112.975 39.2334 li
115.081 36.1602 mo
115.083 36.1588 115.085 36.1574 115.088 36.156 cv
115.085 36.1574 115.083 36.1588 115.081 36.1602 cv
115.089 36.1554 mo
115.091 36.1541 115.092 36.153 115.094 36.1517 cv
115.092 36.153 115.091 36.1541 115.089 36.1554 cv
115.096 36.1506 mo
115.098 36.1496 115.099 36.1485 115.101 36.1475 cv
115.099 36.1486 115.098 36.1495 115.096 36.1506 cv
115.104 36.1458 mo
115.105 36.1449 115.107 36.144 115.108 36.1432 cv
115.107 36.144 115.105 36.1449 115.104 36.1458 cv
115.111 36.141 mo
115.112 36.1403 115.114 36.1396 115.115 36.1389 cv
115.114 36.1396 115.112 36.1403 115.111 36.141 cv
115.119 36.1363 mo
115.12 36.1357 115.121 36.1351 115.122 36.1345 cv
115.121 36.1351 115.12 36.1357 115.119 36.1363 cv
115.126 36.1315 mo
115.127 36.1312 115.128 36.1306 115.128 36.1304 cv
115.128 36.1307 115.127 36.1311 115.126 36.1315 cv
115.134 36.1268 mo
115.134 36.1265 115.135 36.1262 115.135 36.1259 cv
115.135 36.1262 115.134 36.1265 115.134 36.1268 cv
115.142 36.1221 mo
115.142 36.122 115.142 36.1218 115.142 36.1217 cv
115.142 36.1218 115.142 36.122 115.142 36.1221 cv
115.149 36.1173 mo
115.149 36.1173 li
115.149 36.1173 li
104.646 35.0718 mo
104.64 35.0716 104.634 35.0715 104.629 35.0714 cv
104.634 35.0715 104.64 35.0716 104.646 35.0718 cv
104.626 35.0713 mo
104.62 35.0712 104.614 35.071 104.608 35.0709 cv
104.614 35.071 104.62 35.0712 104.626 35.0713 cv
104.608 35.0709 mo
104.605 35.0708 104.602 35.0708 104.599 35.0707 cv
104.602 35.0708 104.605 35.0708 104.608 35.0709 cv
104.595 35.0706 mo
104.591 35.0705 104.587 35.0704 104.583 35.0704 cv
104.587 35.0705 104.591 35.0705 104.595 35.0706 cv
104.576 35.0702 mo
104.574 35.0702 104.572 35.0702 104.57 35.0701 cv
104.572 35.0702 104.574 35.0702 104.576 35.0702 cv
104.559 35.0699 mo
104.557 35.0699 104.555 35.0698 104.553 35.0698 cv
104.555 35.0698 104.557 35.0699 104.559 35.0699 cv
104.544 35.0697 mo
104.543 35.0696 104.541 35.0696 104.539 35.0696 cv
104.541 35.0696 104.543 35.0696 104.544 35.0697 cv
104.528 35.0694 mo
104.526 35.0693 104.524 35.0693 104.522 35.0693 cv
104.524 35.0693 104.526 35.0693 104.528 35.0694 cv
104.51 35.0691 mo
104.508 35.0691 104.507 35.0691 104.506 35.069 cv
104.507 35.0691 104.508 35.0691 104.51 35.0691 cv
119.588 35.0679 mo
119.588 35.0679 li
119.589 35.0679 119.59 35.0679 119.591 35.0679 cv
119.591 35.0679 li
119.59 35.0679 119.589 35.0679 119.588 35.0679 cv
119.614 35.0678 mo
119.614 35.0677 119.614 35.0678 119.614 35.0677 cv
119.649 35.0675 119.684 35.0674 119.719 35.0674 cv
119.719 35.0674 li
119.722 35.0674 119.725 35.0674 119.728 35.0674 cv
119.725 35.0674 119.722 35.0674 119.719 35.0674 cv
119.683 35.0674 119.648 35.0675 119.614 35.0678 cv
119.772 35.0677 mo
119.765 35.0676 119.758 35.0675 119.751 35.0675 cv
119.758 35.0675 119.765 35.0676 119.772 35.0677 cv
119.75 35.0675 mo
119.747 35.0675 119.744 35.0675 119.742 35.0674 cv
119.744 35.0675 119.747 35.0675 119.75 35.0675 cv
119.739 35.0674 mo
119.736 35.0674 119.734 35.0674 119.732 35.0674 cv
119.734 35.0674 119.736 35.0674 119.739 35.0674 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[29.76 0 0 19.68 97.44 9.76 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 62 
/H 41 
/M[62 0 0 -41 0 41 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
^Ap7p!sAc3#7(VC$OdIS%hK<c'GVB"(`=52*$$(B+<_pR,UOle.4Qi!/M8\10etOA2)dKT3]fGe55kOC
!<WN3$4ICU&el-")]^"D,:+`f/1rV31c@?U4[25"77TpC:/Fhf<`iO2?X[GUB5).!E,p&DG^=bN!6>./
!<N?+"U52;#mq%K%1Wm\&ebro()If*)B0Y:*ZlLK,:"Q^-R^Dn.kE8)0/,+91c70M3&s#]4?Ykm5QCig
"pbPE%M:N2'c.`,*?QIN-7C>p/hf(=2`Wr_5=%\,84lQN:f::p=^,0=@:Nk^C2@d,EccJMH[UBp[fF_S
9EG;!"U52;#mq%K%M'*_&ebro()If*)B0Y:+!;^N,:"Q^-R^Dn.kE8)0JP==1c70M3&s#]4?Ykm5XIg@
"pbSG%hTHi(E"26+<iE`-7C>q0/57?2`Wr`5XIk.84lQO;,^Ir=^,0>@Us(aC2@d,F*2\PH[UBpKSH`3
eGrJM"U52;#n%.N%M'*_&ebro()If*)B9b=+!;^N,:"Q^-R^Dn.kNA,0JP==1c70M3&s#]4?Yno5sdq,
70s>2%hTHj(`FA8+<i'Y.4Zu'0f(483''/c5XIk.8P;cR;,^Ir>$PBA@Us(aCMe!0F*2\PH[^KsKSG;?
WrUlS=9]$;$4@7O%M'*_&ebro()Ii,)]Tk>+!;^N,:"Q^-R^Gp/1iJ-0JP==1c70M3&s&_4[)(q5sdq,
77KcV&/#Zm(`FA8+X89\.4Zu'1,LmK3]oSk6U`1h8P;cR;,gRu>$PBA@V'1dCMe!0F*;eSI"$TtKSG>A
NK9n9i;d0j$4@7O%M'*_&ebrp(Dn#.)]Tk>+!;^N,:"Q_-n-Vr/1iJ-0JP==1c70N3BB5a4[)(q5sdq,
77Kd<8eMgR(`OJ;+X89\.4d)*1,LmK3^#\n6UaL:928;]<)su@>$PEC@qB:eCMe$2FEVnTI"$X!KnkMC
NK93dT)e$SA.&eT%M'*_',2/s(Dn#.)]Tk>+!;^N,UFcb-n-Vr/1iJ-0JP==2)[BQ3BB5a4[)(q5sdq,
7Rp!@8kVho)&jS<+X8<^.P*2+1,LpM4$>eo6UaO<9MSD^<*!.+?!h#MAS2cnCi434FEVnUI=Hg#KnkMD
Nf]EgQC+'?m/Ul1%hK<c',2/s(Dn#.)]Tk>+!DgQ,UFcb-n-Vr/1iJ-0JYF@2)[BQ3BB5a4[)(q5sn%/
7Rp!@8kViP:)b5s+s\K`.P*5-1Gq*O4$>ep6q0^>9MSD_<EE=-?!h#NAnYpqDK'W=GBjaHI=Hg#L5:_G
Nf]EgQ^O>6P5t1SE"ETo',2/s(Dn#.)]]tA+<_pR,UFcb-n-Vr/1iM/0etOA2)[BQ3BB5a4[)+s6:4.0
7Rp!@8kViP:/=_0+s\Ka.kND/1Gq*P4?c"s6q0^>9i"Vb<EE=-?=75QAnYpqDfKi@GBnO`J:`H/Ll)Ou
NffNjQ^O>6T;%;Fq#GRN',2/s(Dn&0*$$(B+<_pR,UFcb-n-Vs/M8\10etOA2)[BQ3BB5b5!M:u6:4.0
7Rp!@8kViQ:Jand;^Ee?.kND/1c@<S4?c"s77TpB9i"Vb<ENF0?=75QAnc$tDfKi@GC"XcJ:`H/Ll77R
Ocu&sR@FDOTVA6ZLB)c'!#-.a(`=52*$$(B+<_pR,UFcc.4Qi!/M8\10etOA2)[BQ3]fGe5!M:u6:4.0
7Rp!@92&&T:Jand;cHaG.kWM21c@<S4?l,!77TpB9i+_e<`iO1?=78SB5)-uDfKlBG^=adJ:`K1M2R@S
Ocu)uR[ftBU84]dWrRkS!uDdl)L!,?*?H:F+X/-W-7:2j.P!&%/h\n51,CaE2`NfY4$5Yi5<qM$6UX@4
84cEH9MJ8X:f1+h<)lt#/hf%;2E<i^5=%Y*7nQHM:f:7n=Bf'<@:Nk]BkqU*EccJLH@13nK8#);MiEg]
Pa7]*S=ZFLV5L;nXfqR$MuX/%)B0Y:*ZlLK,B4tT-7:2j.P!&%/h\n51GgsI2`NfY4$5Yi5<qM$6UaI7
84cEH9MJ8X:f1+h<*!(&=^!U=2`Wr_5=%\,84lQN:f::p=^,0=@:Nn_C2@d,EccMNH[UBpK8#)<N/j!_
Pa7]+SY)UNV5L;oY->4=oDk$S%iZK/+!;^N,:"Q^-R^Dn.r-[f/hf"81GgsI2`NfY4$5Yi5=%V'6q'R8
84cEH9MJ8X:f1.j<E<1'=^#$72`Wr`5XIk.84lQO;,^Ir=^,0>@Us(aC2@d-F*2\PH[UBqKSG;?N/j!_
Q'[o.SY)UNVPpMrY->4=\%1o,QiIjB+!;^N,:"Q^-R^Dn.kNA,0JP==1hAO&2`NfY4$5\k5X@_(6q'R8
84cEH9MJ8Y;,U=l<E<1'=^#$7?!]WW5XIk.8P;cR;,^Ir>$PBA@Us(aCMe!0F*2\PI"$TtKSG;?NK93c
Q'[o.SY2^QVPpMrY-G=@\%0,akQ%1S)^$:J,:"Q^-R^Gp/1iJ-0JP==1c70M3&s&_4^UB;5X@_(6q'R8
84cEI9hnJ\;,U=l<E<1'=^#$7?=.)K5XRt18P;cR;,gRu>$PBA@V'1dCMe!0F*;eSI"$TtKSPDBNK93c
Q'e#1StMgRVPpPtYHbFA\%0/c^r#(2U];P^,:"Q_-n-Vr/1iJ-0JP==1c70N3BB5a4[)(q5sdq,72n]d
8P2WL9hnJ\;,U=l<E<1'=^,-:?=.)K@UhPi7nH?K:f:7n=B\s:@:Nk]BkqR)EccJLH@10mK8#);MiEd\
Pa7]*S=ZCKV5L;nXfo"9[^`o]^;.V(a1q\p!(/%Z-R^Dn.kE8)0/,+91Gq'L3&s#]4?Ykm5X@_(6q0[;
8P2WL9hnJ\;,U=l<EE:*>$G6;?=.)K@Uiq[8k_uV;H,SU=^,0=@:Nk]C2@d,EccJLH[UBpK8#);N/j!_
Pa7]*SY)UNV5L;nY->4=[^`o]^;7_+a2uN9!6bF7-R^Dn.kE8)0/,.;1c70M3&s#]4?Ykm5X@b*77Kd<
8P2WL9hnJ\;,U@n<``C+>$G6;?=.)K@Uit]B4t%;;cQn%>?tTEA7dQ0C2@d,EclSOH[UBpK8,2>N/j!_
Pa@f-SY)UNV5UDqY->4=[^j#`^VRh,a3)WOd'Nf$!)G$n.kE;+0JP==1c70M3&s#]4?Ykn5sdq,77Kd<
8P2WL9hnJ];H$Op<``C+>$G6;?=.)L@q9._B4u!o;cQn%>[CfIA7fLiCi=<7Fa#?]H[UErKSG;?N/j$a
Q'[o.SY)XPVPpMrY->7?\%0,a^VRk.aND`Pd*gII!8%9O/1iJ-0JP==1c70M3&s#]4[)(q5sdq,77Kd<
8P2WL:/=\`;H$Op<``C+>$G6;?XR;O@q9._B4u!oCM[*V>[CfIA7oUlD/XE8Fa&.ZIXm$'L57.6NK93c
Q'[o/StMgRVPpMsYHbFA\%0,b^r"%0aND`QdF6Xtfr+o-!*_'/0JP==1c70M3BB5a4[)(q5sdq,77Kd<
8P;`O:/=\`;H$Op<``C+>$P?>?XR;O@q9._B4u!oCMds->[CiKAS5^mD/XH:G'J=\IXm$(LP^qKO-,Wl
R$o+eStMgRVl?`!YHbFA\@T>e^r"%0aihrTdF6Xtg>(PZ!9=,g0JP==1c@9P3BB5a4[)(q5sdq,77Kg>
8kViP:/=\`;H$Op<``F->?kH??XR;O@q9._B4u$qCi+'.E,f;rAS5^nDK'W<G'J=]It<6+LP^qKOHPio
R$sP:TqeH^WN-o=YHkOD\@T>e^r+.3aihrTdF?b"g>(QCig^#6!,")E2)[BQ3BB5a4[)(q5sdt.7Rp!@
8kViP:/=\_;,U=m<`iL.>?kH??XR;O@q9.`BPD3sCi+'.E,fo>AnYpqDK'W<GBnO`It<6+Ll..OOHPio
R@Bb>TqeH^WN<8,ZF%'M]"Jcl_8F74aihuVdaZk#g>(TEj5oHi!:Tu*2)[BQ3BB5a4[)(r6:4.07Rp!@
8kViN9MJ5V:Jand;cHat=B\s8?XR;OA7]@cBPD3sCi+'.E,fo>F`qM9DK0`?GBnO`ItE?.Ll..OOHYrr
R@Bb>TqnQaWiWA-ZF%*O]=ktq_o9^>bg$[EdaZk$gYLcGj5oIhm#V5@!"h.L3BB5a5!M:u6:4.07Rp!@
rCU?g92&#R9hnJ\;,U=l<``F.?!guLAS,RgBkhF"D/O92EcZ>FG'A1LEH?8HH$k'kJqSl7MN*[ZPEhK&
S"?:IUo()jXKSn8[C<]Y]t_G&`lQ<HcHt%jf@ep7hZr-$k32*smdQ)6qu@6f4$5Yi5<qM$6UX@47n?5J
8n(Fd9MA/U:/=Y^;H$Rr='8a5?XdPXBkhF"D/XB5EcZ>FG'A1VH?47SH@10lJqSo9MiEd[PEhN(S=ZCJ
Uo(,lXfo"9[C<`[^;.V(`lQ<IcdC4lf@ep8i8Wh[kj%O'nH&7SK`D*8$U$[<5X@_(6q'R88c;6_8P2SP
8n(Fd9MA/U:Jakc;cQn$>$PBA@V'4gDJsK6EcZ>FG'A1VH@('bH@10mK8#);MiEd\Pa7]*S=ZCKV5L;n
Xfo":[^`o]^;.V)a2uNLcdC4lf\5-;i8Wh[l0Ia*nalGJqY^DN!!YVO5X@_(6j?+N84cEH9E%Na8P8qQ
r(:<h9MJ8X:f1+i<EE=-?!h#NB5)4$EcZ>FG'A1WH[L6jIslftK8#);N/j!_Pa7]*SY)UNV5L;nY->4=
[^`o]^VRh,a2uNLd*gFpf\5-;iT'%_l0Ia*nauPMqY^?e!07*g5X@b*77Kd<8P2WL9*S!\8P)HE8c2-Y
8KLJs92&&T:Jk"h<``F.?=78SBPVO+G'A1VH@($fIf=gXJV/]5MN!RWP*D<$S"61FUSXohXKJe5['mNW
]t_D$`Q--FcHt"hf%Aa5hr3VWkNV@$nFH5Fq"jpfs7$)S!";4_77Kd<8P2WL9M8%X8chRU8-MOS84Z6@
r^\##8kM`M9hnJ];cHe">$YHCA7oXoEHHGOH[L6jr-p\\Ll..OOcu&sR@Bb>U84ZbWiWA-ZaI9Q]=ktq
`5]m@bg+S`e^rL/h;@2Ok32*smdTf>p\F^br;Z'_RfEmd7Rp!@8kViQ9h\5R9)_B^8H)-Y7K>sW7i=ig
8P;]M:/=_b<**4,?=75SBl%^/G'\RcqL:D]NK93cQ'[o/StMgRVPpMsYHbFA\%0,b^r"%0aND`QdF6Xt
g"Y?@ioK7clKms/oC_kRqu-BkjT(tS&P#Aa92&&T:JOVX91qlK84Q2L7f#OT7Rora84cEH9MSA\;H6e$
>[LoMB5;@(G'\T4Il*4KPa7]*S=ZCJUo12mXfo"9[CEf\^;.V(`lZEKcdC4lf@o$:i8Wh[kj.X)nalGJ
q>C6es5*h<!5edL8kViP:/=\^:/+DT8kDTF7n6&J7J]Ci77Ka:84cHJ9i"Yc<``I1?Xm\^D/jZAH@>X>
!gK"<0:JE'TqeH^WN3/)ZF%'M]"Gbm_o9[<bK\A\eCN:+gtpuKjlbmomI0T:pA"L^rq?B*!6G3V9MJ8X
:f1%b:/+DT8kDQD7Rfg76pj?@6N'7h6psI67nH?I:/=be<`r[6@:a+fDK'Z?H@>[?#aq0QT:r$VVlD,G
Y->4=[^`r_^VRh,a2uNMd*gFpf\5-<iT'%_l0Ia+o(;YNqY^?bs0i!S!#A=*:f:4i;,C"^91qlK7n,s:
6psC06Ms+h6:+%,6q'R884lQN:f:7o>$YNFAS>gqE-$5LIJeR)SY)UOVPpMrY->4>\%0*l]t_D$`lQ<H
cHt"hf%Jg6hr3VWkN_F%nFH5Fq"t$[s02RS!#/:.;cH[n;,C"^91hcH7n,p86UO3>62s1I5T2pT6UX@5
84lQN:fC@r>$YKEA7oXoEHHDOIf4a1U84ZbWiWD/ZaI9Q]=l"s`5]m@bSJLOe(*('gYLcGjQ>[km-aB6
p%S:ZrU9ce!8@Jh;cHas<)ZXi:/+AR8Ou<>6UO1+5sR[64s*!Q5!M7s5XIh+7Rp$B9hnPa<EE@/?X[JX
C2S$5G^KC=)Q'L7Xfo"9[C<`[^;.V(`lQ?JcdC4lf@es9%cH@-k32*sn+$#Bp\F^bmJj!_i;aWn<``:$
;c6Fe9hS)M7n#g56:!k%5<f!.*^2_N5!M:u6:=:58P2ZO:f:7o=^5<CAS>jsEclYTrdQ&kXfo":[^`o]
^;.V)a2uNLcdC4mf\5-;i8Wh\l0Ia*#4_<Xp\Ogeli3RWk5Z9"=]e^(;c-@d9M7rJ7R]^45sRXu4[&a+
8NT$s4[)%o5=%V(77Kg>92/2Z<*!.,?XdS[Ci=B<H@C?nYd1XE\@T>f_8F74aihrUdaZk#g>(QDj5oIg
lg=03o_/(Vr;Q`]s-WlS!#o*F=]\U%;G^+^8kDNA6pj7*5X%=n4?GVc4$3F&5s%1l5<qM#6:=7484lQO
;,gS!>[LuQBl.g2G^P!j['mNW]t_D$`Q--FcHt"hf%Aa5hr3VWkNV@#mdK];p%\IZs7$'+!.Y~>

%%EndBinary
grestore
np
102.195 53.2881 mo
101.68 52.8232 100.783 52.0166 100.783 52.0166 cv
100.783 52.0166 li
101.27 52.4518 101.741 52.875 102.197 53.2867 cv
102.196 53.2871 102.196 53.2877 102.195 53.2881 cv
112 42.794 mo
111.035 39.2705 li
111.025 39.2334 li
110.722 38.118 109.925 35.2005 104.647 35.0718 cv
104.646 35.0718 104.646 35.0718 104.646 35.0718 cv
104.64 35.0716 104.634 35.0715 104.629 35.0714 cv
104.628 35.0713 104.627 35.0713 104.626 35.0713 cv
104.62 35.0712 104.614 35.071 104.608 35.0709 cv
104.608 35.0709 li
104.605 35.0708 104.602 35.0708 104.599 35.0707 cv
104.598 35.0707 104.597 35.0707 104.595 35.0706 cv
104.591 35.0705 104.587 35.0705 104.583 35.0704 cv
104.581 35.0703 104.578 35.0703 104.576 35.0702 cv
104.574 35.0702 104.572 35.0702 104.57 35.0701 cv
104.566 35.07 104.562 35.07 104.559 35.0699 cv
104.557 35.0699 104.555 35.0698 104.553 35.0698 cv
104.55 35.0698 104.547 35.0697 104.544 35.0697 cv
104.543 35.0696 104.541 35.0696 104.539 35.0696 cv
104.535 35.0695 104.531 35.0694 104.528 35.0694 cv
104.526 35.0693 104.524 35.0693 104.522 35.0693 cv
104.518 35.0692 104.514 35.0692 104.51 35.0691 cv
104.508 35.0691 104.507 35.0691 104.506 35.069 cv
104.504 35.069 104.503 35.069 104.501 35.069 cv
109.914 35.1473 110.721 38.1099 111.027 39.2393 cv
112.016 42.7356 li
112 42.794 li
112.565 40.7297 mo
112.973 39.2334 li
113.281 38.1036 114.097 35.1146 119.588 35.0679 cv
119.588 35.0679 li
117.519 35.0855 116.113 35.521 115.149 36.1173 cv
115.149 36.1173 li
115.147 36.1188 115.145 36.1202 115.142 36.1217 cv
115.142 36.1218 115.142 36.122 115.142 36.1221 cv
115.139 36.1234 115.138 36.1245 115.135 36.1259 cv
115.135 36.1262 115.134 36.1265 115.134 36.1268 cv
115.132 36.128 115.13 36.1292 115.128 36.1304 cv
115.128 36.1306 115.127 36.1312 115.126 36.1315 cv
115.125 36.1325 115.123 36.1336 115.122 36.1345 cv
115.121 36.1351 115.12 36.1357 115.119 36.1363 cv
115.117 36.1372 115.116 36.138 115.115 36.1389 cv
115.114 36.1396 115.112 36.1403 115.111 36.141 cv
115.11 36.1417 115.109 36.1425 115.108 36.1432 cv
115.107 36.144 115.105 36.1449 115.104 36.1458 cv
115.103 36.1464 115.102 36.1469 115.101 36.1475 cv
115.099 36.1485 115.098 36.1496 115.096 36.1506 cv
115.096 36.1509 115.095 36.1514 115.094 36.1517 cv
115.092 36.153 115.091 36.1541 115.089 36.1554 cv
115.088 36.1556 115.088 36.1558 115.088 36.156 cv
115.085 36.1574 115.083 36.1588 115.081 36.1602 cv
115.081 36.1603 li
113.544 37.144 113.164 38.5385 112.975 39.2334 cv
112.975 39.2334 li
112.904 39.491 li
112.565 40.7297 li
126.506 40.7188 mo
125.424 37.5033 122.571 35.0984 119.773 35.0677 cv
119.773 35.0677 119.772 35.0677 119.772 35.0677 cv
119.765 35.0676 119.758 35.0675 119.751 35.0675 cv
119.751 35.0675 119.75 35.0675 119.75 35.0675 cv
119.747 35.0675 119.744 35.0675 119.742 35.0674 cv
119.741 35.0674 119.74 35.0674 119.739 35.0674 cv
119.736 35.0674 119.734 35.0674 119.732 35.0674 cv
119.731 35.0674 119.731 35.0674 119.73 35.0674 cv
122.588 35.0739 125.409 37.4363 126.506 40.7188 cv
119.591 35.0679 mo
119.599 35.0679 119.606 35.0678 119.614 35.0677 cv
119.614 35.0678 119.614 35.0677 119.614 35.0678 cv
119.606 35.0678 119.599 35.0679 119.591 35.0679 cv
119.591 35.0679 li
119.729 35.0674 mo
119.729 35.0674 119.729 35.0674 119.728 35.0674 cv
119.725 35.0674 119.722 35.0674 119.719 35.0674 cv
119.722 35.0674 119.726 35.0674 119.729 35.0674 cv
gsave
[9.99818 21.8296 -21.8296 9.99818 106.143 31.0967 ]ct
clp
/1 /Gradient get_res exec grestore
np
100.783 52.0166 mo
100.779 52.0127 100.775 52.009 100.77 52.0051 cv
100.775 52.0089 100.779 52.0127 100.783 52.0166 cv
100.768 52.0026 mo
100.759 51.9946 100.75 51.9869 100.741 51.9789 cv
100.75 51.9868 100.759 51.9947 100.768 52.0026 cv
100.74 51.9774 mo
100.731 51.9693 100.721 51.9608 100.712 51.9526 cv
100.721 51.9608 100.731 51.9693 100.74 51.9774 cv
100.712 51.9522 mo
98.5031 49.9428 97.2072 47.2436 97.0195 44.5009 cv
97.0043 44.2768 96.9965 44.0524 96.9961 43.8272 cv
97.0013 46.7958 98.3223 49.7781 100.712 51.9522 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[4.8 0 0 9.6 96.48 11.2 ]ct
snap_to_device
<<
/T 1
/W 10 
/H 20 
/M[10 0 0 -20 0 20 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!~>
<~,pjuf.4Qi!/M8D!.4Qi!/h\n5.4Zr$/h\n51,CI5/h\n51,CaE/h\n51,CaF2`NKG1GgsI2`NfY1GgsI
2`NfY4$5AY2`NfY4$5\k2`NfZ4?Ykm5X@Fm4?Ykm5X@_(4?Ykm5X@_(6q0@)5X@b*77Kd<5sdq,77Kd<
8P2?<77Kd<8P2WL77Kd<8kViP:/=DP8kViP:/=\^8kViP:/=\`:esbZ:/=\a;c6Ih:Jand;cH[n;,C+f
;cHas<)ZXi~>
<~8k_uW;cQn%>?t$%;cQn%>[CfI;c["(>[CfIA7o"J>[CiKAS5^m?!h#MAS5^nDK'#oAnYpqDK'W<AnYpq
DK0`?GBmt@DfKi@GBnRbDfKiAG^=adJ:_ldG^=adJV/Z3G^FjgJV/Z3M2Zk4JV/]5MN!RWJqSl7MN!RX
PEglZMiEd[PEhK&MiEd[Pa7]*S=Yh*Pa7]*S=cLMPa7`,SY)UNV5K`NSY)UOVPpMrStMgRVPpMrYHagt
VQ$VuYHbFA~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
100.783 52.0166 mo
98.5585 50.0266 97.2103 47.3185 97.0195 44.5009 cv
97.2072 47.2436 98.5031 49.9428 100.712 51.9522 cv
100.712 51.9524 100.712 51.9524 100.712 51.9526 cv
100.721 51.9608 100.731 51.9693 100.74 51.9774 cv
100.74 51.978 100.741 51.9784 100.741 51.9789 cv
100.75 51.9869 100.759 51.9946 100.768 52.0026 cv
100.768 52.0034 100.769 52.0043 100.77 52.0051 cv
100.775 52.009 100.779 52.0127 100.783 52.0166 cv
100.783 52.0166 li
gsave
[9.99818 21.8296 -21.8296 9.99818 106.143 31.0967 ]ct
clp
/1 /Gradient get_res exec grestore
np
96.9961 43.7981 mo
96.9965 43.4622 97.0135 43.1284 97.0471 42.7976 cv
97.1051 42.2312 97.2124 41.6686 97.3707 41.1158 cv
97.3897 41.0499 97.4093 40.9843 97.4297 40.9189 cv
97.4571 40.8304 97.4858 40.7422 97.5157 40.6549 cv
98.6188 37.4508 101.484 35.0674 104.281 35.0674 cv
104.281 35.0674 li
104.281 35.0674 li
104.281 35.0674 li
101.408 35.0674 98.4629 37.583 97.4297 40.9189 cv
97.1398 41.8567 96.9972 42.8273 96.9961 43.7981 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[8.64 0 0 10.08 96.48 19.36 ]ct
snap_to_device
<<
/T 1
/W 18 
/H 21 
/M[18 0 0 -21 0 21 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!$%"9eu7#RLhG$k31:!!*-'"9eu7#RLhG$k3[W!!*-'"9eu7#RLhG$k<dZ&J>-I"9eu7#RLkI
%1Wm[&J>`k"9eu8#mq%K%1Wm[&J>`k'c%#[#mq%K%1Wm[&J>`k()If*#mq%K%1Wm[&JGin()If*)B0%m
%1a!^&ebro()If*)B0Y:%M'*_&ebro()If*)B0\<+!;+,&ebro()If+)]Tk>+!;^N&ebro(Dn#.)]Tk>
+!;^N,:"!>(Dn#.)]Tk>+!;^N,:+Za(Dn#.)]Tk>+!;aP,UFcb-n-#P)]Tk?+<_pR,UFcb-n-Vr*$$(B
+<_pR,UFcb-n-Vr/M8(d+<_pR,UFcb-n6_u/M8\1+<_pR,UFfd.4Qi!/M8\10est!,pjuf.4Qi!/M8\1
0etOB,pjuf.4Qi!/M8\11,CaE2E*!3.4Qi!/h\n51,CaE2E*TU.4Zr$/h\n51,CaE2E*TU3]d~>
<~!!!!!!!*0+#RUtM&/#Zn)&iPU!!39-#RUtM&JGlq)&jS<!!39-#R_(P&JGlq)&s\?+s[<s#n%1Q&JGos
)B9e@+s\Nb#n%1R&el)u)B9eA,:+]d.kM5B&el)u)]^"D,:+]d/1rV3',;<$)]^"D,:4fg/1rV31cH3g
)]g+G,UOoh/2&_62)dNW*$-4H,UOrj/MAh72)dQY5!U58,pt,l/MAh82E3`[5!VG',pt,l/hf%;2E3`[
5=%Y*7nG0]/hf%;2E<i^5=%Y*7nQHM/hf(=2`Wr_5=%\,84lQN:f9),2`Wr`5XIk.84lQO;,^Ir3''/c
5XIk.8P;cR;,^Ir>$O0R5XRt18P;cR;,gRu>$PBA5sn(28P;fT;H-\!>$PEC@qA,#8k_uV;H-\">?tTE
@qB:f8k_uW;cQn%>?tTEA7fLiCi3$G;cQn%>[CfIA7fLiCi=<7;c["(>[CfIA7oUlD/XE8Fa!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
97.0471 42.7976 mo
97.1053 42.2259 97.2132 41.6634 97.3707 41.1158 cv
97.2124 41.6686 97.1051 42.2312 97.0471 42.7976 cv
97.5157 40.6549 mo
98.6293 37.4012 101.438 35.0674 104.281 35.0674 cv
101.484 35.0674 98.6188 37.4508 97.5157 40.6549 cv
gsave
[9.99818 21.8296 -21.8296 9.99818 106.143 31.0967 ]ct
clp
/1 /Gradient get_res exec grestore
np
104.496 35.0689 mo
104.494 35.0689 104.493 35.0688 104.491 35.0688 cv
104.493 35.0688 104.494 35.0689 104.496 35.0689 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 103.68 28 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~$OdIR%M'*_&c~>
<~(E"/2*?QCJ,Q~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
104.499 35.0689 mo
104.498 35.0689 104.497 35.0689 104.496 35.0689 cv
104.494 35.0689 104.493 35.0688 104.491 35.0688 cv
104.487 35.0688 104.484 35.0687 104.481 35.0687 cv
104.487 35.0688 104.493 35.0689 104.499 35.0689 cv
gsave
[9.99818 21.8296 -21.8296 9.99818 106.143 31.0967 ]ct
clp
/1 /Gradient get_res exec grestore
np
104.478 35.0687 mo
104.477 35.0686 104.475 35.0686 104.474 35.0686 cv
104.475 35.0686 104.477 35.0686 104.478 35.0687 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 103.68 28 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~$OdIR%M'*_&c~>
<~(E"/2*?QCJ,Q~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
104.48 35.0687 mo
104.48 35.0687 104.479 35.0687 104.478 35.0687 cv
104.477 35.0686 104.475 35.0686 104.474 35.0686 cv
104.473 35.0686 104.473 35.0686 104.472 35.0686 cv
104.475 35.0686 104.478 35.0686 104.48 35.0687 cv
gsave
[9.99818 21.8296 -21.8296 9.99818 106.143 31.0967 ]ct
clp
/1 /Gradient get_res exec grestore
np
104.462 35.0685 mo
104.461 35.0684 104.459 35.0684 104.458 35.0684 cv
104.459 35.0684 104.461 35.0684 104.462 35.0685 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 103.68 28 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~$OdIR%M'*_&c~>
<~(E"/2*?QCJ,Q~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
104.467 35.0685 mo
104.465 35.0685 104.464 35.0685 104.462 35.0685 cv
104.461 35.0684 104.459 35.0684 104.458 35.0684 cv
104.457 35.0684 104.456 35.0684 104.455 35.0684 cv
104.459 35.0684 104.463 35.0685 104.467 35.0685 cv
gsave
[9.99818 21.8296 -21.8296 9.99818 106.143 31.0967 ]ct
clp
/1 /Gradient get_res exec grestore
np
104.447 35.0683 mo
104.445 35.0683 104.444 35.0683 104.442 35.0682 cv
104.444 35.0683 104.445 35.0683 104.447 35.0683 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 103.68 28 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~$OdIR%M'*_&c~>
<~(E"/2*?QCJ,Q~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
104.449 35.0683 mo
104.448 35.0683 104.447 35.0683 104.447 35.0683 cv
104.445 35.0683 104.444 35.0683 104.442 35.0682 cv
104.442 35.0682 104.442 35.0682 104.441 35.0682 cv
104.444 35.0682 104.446 35.0683 104.449 35.0683 cv
gsave
[9.99818 21.8296 -21.8296 9.99818 106.143 31.0967 ]ct
clp
/1 /Gradient get_res exec grestore
np
104.429 35.0681 mo
104.428 35.0681 104.427 35.0681 104.426 35.0681 cv
104.427 35.0681 104.428 35.0681 104.429 35.0681 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 103.68 28 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~$OdIR%M'*_&c~>
<~(E"/2*?QCJ,Q~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
104.43 35.0681 mo
104.43 35.0681 104.43 35.0681 104.429 35.0681 cv
104.428 35.0681 104.427 35.0681 104.426 35.0681 cv
104.425 35.0681 104.425 35.0681 104.424 35.0681 cv
104.426 35.0681 104.428 35.0681 104.43 35.0681 cv
gsave
[9.99818 21.8296 -21.8296 9.99818 106.143 31.0967 ]ct
clp
/1 /Gradient get_res exec grestore
np
104.413 35.068 mo
104.412 35.068 104.412 35.0679 104.411 35.0679 cv
104.412 35.0679 104.413 35.068 104.413 35.068 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 103.68 28 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~$OdIR%M'*_&c~>
<~(E"/2*?QCJ,Q~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
104.415 35.068 mo
104.415 35.068 104.414 35.068 104.413 35.068 cv
104.413 35.068 104.412 35.0679 104.411 35.0679 cv
104.411 35.0679 104.411 35.0679 104.41 35.0679 cv
104.412 35.0679 104.414 35.068 104.415 35.068 cv
gsave
[9.99818 21.8296 -21.8296 9.99818 106.143 31.0967 ]ct
clp
/1 /Gradient get_res exec grestore
np
104.398 35.0678 mo
104.396 35.0678 104.395 35.0678 104.394 35.0678 cv
104.395 35.0678 104.396 35.0678 104.398 35.0678 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 103.68 28 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~$OdIR%M'*_&c~>
<~(E"/2*?QCJ,Q~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
104.398 35.0678 mo
104.398 35.0678 104.398 35.0678 104.398 35.0678 cv
104.396 35.0678 104.395 35.0678 104.394 35.0678 cv
104.393 35.0678 li
104.395 35.0678 104.397 35.0678 104.398 35.0678 cv
gsave
[9.99818 21.8296 -21.8296 9.99818 106.143 31.0967 ]ct
clp
/1 /Gradient get_res exec grestore
np
104.38 35.0677 mo
104.379 35.0677 104.378 35.0677 104.377 35.0677 cv
104.378 35.0677 104.379 35.0677 104.38 35.0677 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 103.68 28 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~$OdIR%M'*_&c~>
<~(E"/2*?QCJ,Q~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
104.381 35.0677 mo
104.38 35.0677 104.38 35.0677 104.38 35.0677 cv
104.379 35.0677 104.378 35.0677 104.377 35.0677 cv
104.377 35.0677 104.377 35.0677 104.377 35.0677 cv
104.378 35.0677 104.38 35.0677 104.381 35.0677 cv
gsave
[9.99818 21.8296 -21.8296 9.99818 106.143 31.0967 ]ct
clp
/1 /Gradient get_res exec grestore
np
104.365 35.0676 mo
104.364 35.0676 104.363 35.0676 104.362 35.0676 cv
104.363 35.0676 104.364 35.0676 104.365 35.0676 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 103.68 28 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~$OdIR%M'*_&c~>
<~(E"/2*?QCJ,Q~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
104.366 35.0676 mo
104.365 35.0676 li
104.364 35.0676 104.363 35.0676 104.362 35.0676 cv
104.362 35.0676 li
104.363 35.0676 104.364 35.0676 104.366 35.0676 cv
gsave
[9.99818 21.8296 -21.8296 9.99818 106.143 31.0967 ]ct
clp
/1 /Gradient get_res exec grestore
np
104.348 35.0675 mo
104.347 35.0675 104.346 35.0675 104.345 35.0675 cv
104.346 35.0675 104.347 35.0675 104.348 35.0675 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 103.68 28 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~$OdIR%M'*_&c~>
<~(E"/2*?QCJ,Q~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
104.348 35.0675 mo
104.348 35.0675 li
104.347 35.0675 104.346 35.0675 104.345 35.0675 cv
104.345 35.0675 li
104.346 35.0675 104.347 35.0675 104.348 35.0675 cv
gsave
[9.99818 21.8296 -21.8296 9.99818 106.143 31.0967 ]ct
clp
/1 /Gradient get_res exec grestore
np
104.331 35.0675 mo
104.33 35.0675 104.33 35.0675 104.329 35.0675 cv
104.33 35.0675 104.33 35.0675 104.33 35.0675 cv
104.331 35.0675 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 103.68 28 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~$OdIR%M'*_&c~>
<~(E"/2*?QCJ,Q~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
104.316 35.0674 mo
104.315 35.0674 104.314 35.0674 104.313 35.0674 cv
104.314 35.0674 104.315 35.0674 104.316 35.0674 cv
104.299 35.0674 mo
104.298 35.0674 104.297 35.0674 104.296 35.0674 cv
104.297 35.0674 104.298 35.0674 104.299 35.0674 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 103.68 28 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~$OdIR%M'*_&c~>
<~(E"/2*?QCJ,Q~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
119.73 35.0674 mo
119.73 35.0674 119.73 35.0674 119.729 35.0674 cv
119.729 35.0674 119.73 35.0674 119.73 35.0674 cv
gsave
[13.7484 21.1634 -21.1634 13.7484 107.923 23.8438 ]ct
clp
/1 /Gradient get_res exec grestore
np
113.008 43.7764 mo
112.367 41.4639 li
112.904 39.491 li
112.965 39.2705 li
112.975 39.2334 li
113.164 38.5395 113.544 37.1444 115.081 36.1603 cv
115.081 36.1602 li
115.083 36.1588 115.085 36.1574 115.088 36.156 cv
115.088 36.1558 115.088 36.1556 115.089 36.1554 cv
115.091 36.1541 115.092 36.153 115.094 36.1517 cv
115.095 36.1513 115.096 36.151 115.096 36.1506 cv
115.098 36.1495 115.099 36.1486 115.101 36.1475 cv
115.102 36.1469 115.103 36.1464 115.104 36.1458 cv
115.105 36.1449 115.107 36.144 115.108 36.1432 cv
115.109 36.1425 115.11 36.1417 115.111 36.141 cv
115.112 36.1403 115.114 36.1396 115.115 36.1389 cv
115.116 36.138 115.117 36.1372 115.119 36.1363 cv
115.12 36.1357 115.121 36.1351 115.122 36.1345 cv
115.123 36.1335 115.125 36.1326 115.126 36.1315 cv
115.127 36.1311 115.128 36.1307 115.128 36.1304 cv
115.13 36.1291 115.132 36.1281 115.134 36.1268 cv
115.134 36.1265 115.135 36.1262 115.135 36.1259 cv
115.137 36.1246 115.14 36.1233 115.142 36.1221 cv
115.142 36.122 115.142 36.1218 115.142 36.1217 cv
115.145 36.1202 115.147 36.1188 115.149 36.1173 cv
115.149 36.1173 li
116.114 35.5209 117.519 35.0855 119.588 35.0679 cv
119.589 35.0679 119.59 35.0679 119.591 35.0679 cv
119.599 35.0679 119.606 35.0678 119.614 35.0678 cv
119.648 35.0675 119.683 35.0674 119.719 35.0674 cv
119.722 35.0674 119.725 35.0674 119.728 35.0674 cv
119.729 35.0674 119.731 35.0674 119.732 35.0674 cv
119.734 35.0674 119.736 35.0674 119.739 35.0674 cv
119.74 35.0674 119.741 35.0674 119.742 35.0674 cv
119.744 35.0675 119.747 35.0675 119.75 35.0675 cv
119.75 35.0675 119.751 35.0675 119.751 35.0675 cv
119.758 35.0675 119.765 35.0676 119.772 35.0677 cv
119.772 35.0677 119.773 35.0677 119.773 35.0677 cv
121.591 35.0877 123.432 36.1145 124.797 37.7119 cv
123.58 36.6846 122.141 36.0674 120.719 36.0674 cv
115.109 36.0674 114.285 39.0947 113.975 40.2334 cv
113.008 43.7764 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[13.44 0 0 10.08 111.84 19.36 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 28 
/H 21 
/M[28 0 0 -21 0 21 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
jT%4K%Ls!\&J>]j'c%T&)&aG6*?H:F+sS?[-R^G_*$$+D+s\K`.P*/)1,CgK3^#\n6q0aA:/P!A!;$7M
%M'*_&ebro()If))B0Y:*ZlLK,:"T`-n-Yt*?H@J,UOlf.kNG01c@<S4?l,"7S-6J:fCCtaT)>Q&N(17
'GM8t(Dn#.)]]tA+X/-V,pt)i.kE8*+<i'W-RpVu0/57@2`a&c5sn+492/8^<`rX5aT)kb&ebro()If+
)]Tk>+!;^O-6sla-n-Vs/MAe5,UFfe.kND/1c76R4?c%u7S$0I:fC@r>@(`KaT*Cr'GVE#)&XA5*?H:F
+X86Y-7:5m/1iM/1,Cd8.4Ztd0/57?2`Wub5sn+48ki)[<ENI2?t3e_aT*q.()If*)B0Y;+!;^N,:+Zb
.4Ql#/hf"91c@9C/2&_52)mTY5!VJ(7nZQQ;H4!)>$YQHAnc("aT+79(`=52*$$(C+X86Y-7C;m/1iJ.
0etRC3&s&Q0f([G3BKAh6UaO<9M\Mb=B]!<@qKFjDfU!t!7(X()&aG6*ZlLJ+s\H]-R^Gp/1rS11Gh!K
3BB8d1,LmL4$Gnr77TpC:Jt.n>$YKEAnc("EclVRli>lB2]E_W+!;^N,:"T`-n6_u/hf"81c@9Q3]oPi
5W:\b4[28$7nQHM;,gS!?!h&PBPVL*Fa/7_K&$Fo!&ko>+!DgQ,UFfd.P!)'0/54=2)dKU4$>bm6UWsu
5=.b.8P;fU<**4-?XdPYCMn-6GC+diKo""SquAYt+<_sT-7:2k.kE;+0JYFA2E3]Y4[25!6q0[25t"16
9MSG`<`iR4@V'4fD/jW@H[^O!Ll7;8!!sho,UOle.4Zr$/MAe51Gh!L3]fJh5XIk-7nH<@7S$0I:fCCt
>[LoMB52:&FE`%ZJV8f;O-5dM!#Qt--7C;m/1iJ.0f([G3'',a5!VD$77Tli8k`#O92/5]<ENI2?t<nb
D/aQ>H$t3rLPh+TQ'e,a!%0*A.4Qi"0/,.;2)[ES4$5\k5sn%08P2ZO:f:"a;H6h'?=@>UBl";uF*;hW
J:iT6NKKKoS=l\"!&c8U/1iM/0f(XE2`Wo]4[25"77Tm@9MSA\;cQ^q=B]!<@qKFkDfTuGI"-d'MN*a_
Q^aVBVZ<d>!&lD[/hf"91c73O3]oSk5sn(184lNL:Jk%i<`iF,?!q/SBl%^.Fa/:`Jqf,@OHc-%T;&3_
Y-RX!f)R`^0/54=2)dNW4?btq6UXC78P;cQ:f::p=^,0:?XdS[CN"69G^FpkKo(bMPF%c1U8FrnZ*h1(
!9O8?0f(XD2`Wo]4[21u6q'U;92/2Z;cQn$>$PBA@V'4gDK0cBH[^R#Ll@CXQC=D>V5^T%[CNueeH#7B
2`*BN3'',a5!VG%77TpB9i"S`<*!+)>[CfI@q]UoE--;MIY!0.MiX'fR[p.JW3*>4\@fYra2n;_2E3]R
4$5\l6:=748P;`P:f:7n=BSj6?t*YXAo;R/GC"[fKSYPHP*MH+Tr"`iYd:jP^r4=:bfKhs3BB;f5XIk-
7n?6G:/Fhe<ECJM>[CfIA7]@cBQJ?CI=R!+MN3gaR@KqGVlR#.\@fSpa3)WPdH(@Y~>

%%EndBinary
grestore
np
112.904 39.491 mo
112.975 39.2334 li
112.965 39.2705 li
112.904 39.491 li
115.081 36.1603 mo
115.081 36.1602 li
115.081 36.1603 li
115.088 36.156 mo
115.088 36.1558 115.088 36.1556 115.089 36.1554 cv
115.088 36.1556 115.088 36.1558 115.088 36.156 cv
115.094 36.1517 mo
115.095 36.1514 115.096 36.1509 115.096 36.1506 cv
115.096 36.151 115.095 36.1513 115.094 36.1517 cv
115.101 36.1475 mo
115.102 36.1469 115.103 36.1464 115.104 36.1458 cv
115.103 36.1464 115.102 36.1469 115.101 36.1475 cv
115.108 36.1432 mo
115.109 36.1425 115.11 36.1417 115.111 36.141 cv
115.11 36.1417 115.109 36.1425 115.108 36.1432 cv
115.115 36.1389 mo
115.116 36.138 115.117 36.1372 115.119 36.1363 cv
115.117 36.1372 115.116 36.138 115.115 36.1389 cv
115.122 36.1345 mo
115.123 36.1336 115.125 36.1325 115.126 36.1315 cv
115.125 36.1326 115.123 36.1335 115.122 36.1345 cv
115.128 36.1304 mo
115.13 36.1292 115.132 36.128 115.134 36.1268 cv
115.132 36.1281 115.13 36.1291 115.128 36.1304 cv
115.135 36.1259 mo
115.138 36.1245 115.139 36.1234 115.142 36.1221 cv
115.14 36.1233 115.137 36.1246 115.135 36.1259 cv
115.142 36.1217 mo
115.145 36.1202 115.147 36.1188 115.149 36.1173 cv
115.147 36.1188 115.145 36.1202 115.142 36.1217 cv
115.149 36.1173 mo
116.113 35.521 117.519 35.0855 119.588 35.0679 cv
117.519 35.0855 116.114 35.5209 115.149 36.1173 cv
119.591 35.0679 mo
119.599 35.0679 119.606 35.0678 119.614 35.0678 cv
119.606 35.0678 119.599 35.0679 119.591 35.0679 cv
119.773 35.0677 mo
119.773 35.0677 119.772 35.0677 119.772 35.0677 cv
119.772 35.0677 119.773 35.0677 119.773 35.0677 cv
119.751 35.0675 mo
119.751 35.0675 119.75 35.0675 119.75 35.0675 cv
119.75 35.0675 119.751 35.0675 119.751 35.0675 cv
119.742 35.0674 mo
119.741 35.0674 119.74 35.0674 119.739 35.0674 cv
119.74 35.0674 119.741 35.0674 119.742 35.0674 cv
119.732 35.0674 mo
119.731 35.0674 119.729 35.0674 119.728 35.0674 cv
119.729 35.0674 119.729 35.0674 119.729 35.0674 cv
119.73 35.0674 119.73 35.0674 119.73 35.0674 cv
119.731 35.0674 119.731 35.0674 119.732 35.0674 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[8.16 0 0 5.76 112.32 23.68 ]ct
snap_to_device
<<
/T 1
/W 17 
/H 12 
/M[17 0 0 -12 0 12 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!~>
<~%M'*^&J>`k'c%T&)&aG7*Y/eo&ebro()If*)B0Y:+!;..',2/s(Dn#.)]Tk>+!DgA'GVB"(`=52*$$(B
+<_sT'c%T%)&XA5*?H=H+sS?[-PdL8)&aJ8*ZlLK,:"Q^-n-#P)]Tk>+!;^O,UFcc.4Qke)]]tA+<_pS
,pk#h.kE8**$$+D+X/0X-7C;m/1iJ.0chG\,:"Q^-RgMq/M8\21,L-u,:+Za-n6_u/h\q81c@9;,UOle
.4Zu&0JP=>2)dKU~>
<~*$$+D+s\K`.P*/)1,CgK3Z]Fg,UOlf.kNG01c@<S4?k#8,pt/m/MAh72E*ZZ5=%X_-RgPt0/5:@3''/c
5sn+4.4Zu'0f([G3BTMl6UjU=9e7qP1,V$O4?c"t77U!F:f9#(2)dNW4[;A'84lQO;,gXS2E<i_5XIn0
8PDoX<**7/3BKAg6:==99MSGa<`r^8@QcqB6q9gA:/Otl=^5<CA7n1r7S-9K;,^Lt>@(cMBPMBR84u]S
;c[%+?X[JXC2Ip3~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
96.9961 43.8272 mo
96.9961 43.8213 96.9961 43.8154 96.9961 43.8096 cv
96.9961 43.8096 li
96.9961 43.8154 96.9961 43.8214 96.9961 43.8272 cv
96.9961 43.8096 mo
96.9961 43.8058 96.9961 43.8019 96.9961 43.7981 cv
96.9961 43.8019 96.9961 43.8058 96.9961 43.8096 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 96.48 19.36 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~1,LjF2E*NR3<~>
<~AS>gmCi4*/EW~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
104.501 35.069 mo
104.5 35.069 104.5 35.069 104.499 35.0689 cv
104.5 35.069 104.5 35.069 104.501 35.069 cv
104.481 35.0687 mo
104.48 35.0687 li
104.481 35.0687 li
104.472 35.0686 mo
104.47 35.0686 104.469 35.0685 104.467 35.0685 cv
104.469 35.0685 104.47 35.0686 104.472 35.0686 cv
104.455 35.0684 mo
104.453 35.0683 104.451 35.0683 104.449 35.0683 cv
104.451 35.0683 104.453 35.0683 104.455 35.0684 cv
104.441 35.0682 mo
104.438 35.0682 104.434 35.0681 104.43 35.0681 cv
104.434 35.0681 104.438 35.0682 104.441 35.0682 cv
104.424 35.0681 mo
104.421 35.068 104.418 35.068 104.415 35.068 cv
104.418 35.068 104.421 35.068 104.424 35.0681 cv
104.41 35.0679 mo
104.406 35.0679 104.402 35.0679 104.398 35.0678 cv
104.402 35.0679 104.406 35.0679 104.41 35.0679 cv
104.393 35.0678 mo
104.389 35.0678 104.385 35.0677 104.381 35.0677 cv
104.385 35.0677 104.389 35.0678 104.393 35.0678 cv
104.377 35.0677 mo
104.373 35.0677 104.369 35.0676 104.366 35.0676 cv
104.369 35.0676 104.373 35.0677 104.377 35.0677 cv
104.362 35.0676 mo
104.357 35.0676 104.353 35.0676 104.348 35.0675 cv
104.353 35.0676 104.357 35.0676 104.362 35.0676 cv
104.345 35.0675 mo
104.34 35.0675 104.336 35.0675 104.331 35.0675 cv
104.336 35.0675 104.34 35.0675 104.345 35.0675 cv
gsave
[13.7485 21.1634 -21.1634 13.7485 96.5156 31.2529 ]ct
clp
/1 /Gradient get_res exec grestore
np
104.329 35.0675 mo
104.325 35.0675 104.32 35.0674 104.316 35.0674 cv
104.316 35.0674 li
104.32 35.0674 104.325 35.0675 104.329 35.0675 cv
104.329 35.0675 104.329 35.0675 104.329 35.0675 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 103.68 28 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~+X86X,pjrd-i~>
<~6UjX<8khuS;#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
104.329 35.0675 mo
104.325 35.0675 104.32 35.0674 104.316 35.0674 cv
104.32 35.0674 104.325 35.0675 104.329 35.0675 cv
gsave
[13.7485 21.1634 -21.1634 13.7485 96.5156 31.2529 ]ct
clp
/1 /Gradient get_res exec grestore
np
104.313 35.0674 mo
104.308 35.0674 104.304 35.0674 104.299 35.0674 cv
104.299 35.0674 li
104.304 35.0674 104.308 35.0674 104.313 35.0674 cv
104.313 35.0674 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 103.68 28 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~+X86X,pjrd-i~>
<~6UjX<8khuS;#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
104.313 35.0674 mo
104.308 35.0674 104.304 35.0674 104.299 35.0674 cv
104.304 35.0674 104.308 35.0674 104.313 35.0674 cv
gsave
[13.7485 21.1634 -21.1634 13.7485 96.5156 31.2529 ]ct
clp
/1 /Gradient get_res exec grestore
np
104.296 35.0674 mo
104.291 35.0674 104.286 35.0674 104.281 35.0674 cv
104.281 35.0674 li
104.286 35.0674 104.291 35.0674 104.296 35.0674 cv
104.296 35.0674 104.296 35.0674 104.296 35.0674 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.44 0 0 1.44 103.68 28 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~+X86X,pjrd-i~>
<~6UjX<8khuS;#~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
104.296 35.0674 mo
104.291 35.0674 104.286 35.0674 104.281 35.0674 cv
104.286 35.0674 104.291 35.0674 104.296 35.0674 cv
gsave
[13.7485 21.1634 -21.1634 13.7485 96.5156 31.2529 ]ct
clp
/1 /Gradient get_res exec grestore
np
100.855 52.0811 mo
100.783 52.0166 li
100.783 52.0166 li
100.783 52.0166 li
100.779 52.0127 100.775 52.0089 100.77 52.0051 cv
100.77 52.0044 100.768 52.0033 100.768 52.0026 cv
100.759 51.9947 100.75 51.9868 100.741 51.9789 cv
100.741 51.9784 100.74 51.978 100.74 51.9774 cv
100.731 51.9693 100.721 51.9608 100.712 51.9526 cv
100.712 51.9524 100.712 51.9524 100.712 51.9522 cv
98.3223 49.7781 97.0013 46.7958 96.9961 43.8272 cv
96.9961 43.8214 96.9961 43.8154 96.9961 43.8096 cv
96.9961 43.8096 li
96.9961 43.8058 96.9961 43.8019 96.9961 43.7981 cv
96.9972 42.8273 97.1398 41.8567 97.4297 40.9189 cv
98.4629 37.583 101.408 35.0674 104.281 35.0674 cv
104.281 35.0674 li
104.286 35.0674 104.291 35.0674 104.296 35.0674 cv
104.297 35.0674 104.298 35.0674 104.299 35.0674 cv
104.304 35.0674 104.308 35.0674 104.313 35.0674 cv
104.314 35.0674 104.315 35.0674 104.316 35.0674 cv
104.32 35.0674 104.325 35.0675 104.329 35.0675 cv
104.33 35.0675 104.33 35.0675 104.331 35.0675 cv
104.336 35.0675 104.34 35.0675 104.345 35.0675 cv
104.346 35.0675 104.347 35.0675 104.348 35.0675 cv
104.353 35.0676 104.357 35.0676 104.362 35.0676 cv
104.363 35.0676 104.364 35.0676 104.365 35.0676 cv
104.37 35.0676 104.373 35.0677 104.377 35.0677 cv
104.378 35.0677 104.379 35.0677 104.38 35.0677 cv
104.385 35.0677 104.39 35.0678 104.394 35.0678 cv
104.395 35.0678 104.396 35.0678 104.398 35.0678 cv
104.402 35.0679 104.407 35.0679 104.411 35.0679 cv
104.412 35.0679 104.412 35.068 104.413 35.068 cv
104.417 35.068 104.421 35.068 104.426 35.0681 cv
104.427 35.0681 104.428 35.0681 104.429 35.0681 cv
104.434 35.0681 104.438 35.0682 104.442 35.0682 cv
104.444 35.0683 104.445 35.0683 104.447 35.0683 cv
104.45 35.0683 104.454 35.0684 104.458 35.0684 cv
104.459 35.0684 104.461 35.0684 104.462 35.0685 cv
104.466 35.0685 104.47 35.0686 104.474 35.0686 cv
104.475 35.0686 104.477 35.0686 104.478 35.0687 cv
104.483 35.0687 104.487 35.0688 104.491 35.0688 cv
104.493 35.0688 104.494 35.0689 104.496 35.0689 cv
104.499 35.0689 104.502 35.069 104.506 35.069 cv
104.507 35.0691 104.508 35.0691 104.51 35.0691 cv
104.514 35.0692 104.518 35.0692 104.522 35.0693 cv
104.524 35.0693 104.526 35.0693 104.528 35.0694 cv
104.532 35.0694 104.535 35.0695 104.539 35.0696 cv
104.541 35.0696 104.543 35.0696 104.544 35.0697 cv
104.547 35.0697 104.55 35.0698 104.553 35.0698 cv
104.555 35.0698 104.557 35.0699 104.559 35.0699 cv
104.562 35.07 104.566 35.07 104.57 35.0701 cv
104.572 35.0702 104.574 35.0702 104.576 35.0702 cv
104.578 35.0703 104.581 35.0703 104.583 35.0704 cv
104.587 35.0704 104.591 35.0705 104.595 35.0706 cv
104.596 35.0707 104.598 35.0707 104.599 35.0707 cv
104.602 35.0708 104.605 35.0708 104.608 35.0709 cv
104.608 35.0709 104.608 35.0709 104.608 35.0709 cv
104.614 35.071 104.62 35.0712 104.626 35.0713 cv
104.627 35.0713 104.628 35.0713 104.629 35.0714 cv
104.634 35.0715 104.64 35.0716 104.646 35.0718 cv
104.646 35.0718 104.646 35.0718 104.647 35.0718 cv
107.832 35.1494 109.381 36.2433 110.18 37.3428 cv
109.195 36.6221 107.678 36.0674 105.281 36.0674 cv
102.408 36.0674 99.4629 38.583 98.4297 41.9189 cv
98.1387 42.8604 97.9961 43.835 97.9961 44.8096 cv
97.9961 47.4072 99.0078 50.0127 100.855 52.0811 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[14.4 0 0 18.24 96.48 11.2 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 30 
/H 38 
/M[30 0 0 -38 0 38 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 30 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 30 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 30 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 30 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
g]79RrW<'$$j6\:"U5/9#7(VB$4H_2(BFO<!WrN-"9eu7#RLeE$OdLU&.oQi(#/fN!;urt!r`93"9\l3
"pP;;#RLeE$O[CA!<3*!!Yb_>"U,)8#RC_E$k3[W&.oNh'c._;!:Bjb!WE-7!s8Z/"U,)7#6tM?#mq"I
$k3[H!<*!9!WrN-"9eu7#RLhF$OmOU&.oQi'c.]))pSHX!;llt!r`9U"9\l3"pP;;#RC_D$4@7O%1WmL
!<N<)!sA`1"pYD>#mq%L%M'*_&el&s(`F>6*le9\!<*#u!r`99"9\l3"pP;;#RC_D$O[@P%1Wm[&cMhM
!sA`1"pYA=#mq%K%M'*_&el&r(`=84*ZuZG!!!'!!WW?&"9/N'"YU&b#7(SA$47.L$k3[W&.fEd!s8Z/
"U52;#RLhG$k3^Y&J>cm()Ro.*?H=H,:1;/rrW0%rWE<,"pP;c#7(SA$47.L$k3[W%hTEe',1QQ"U52:
#RLhG$k3[X&J>`l()Ro.*$-1F,:+]c`;gMP!s8Z/"U,)7#6tM?#mgqH$OeEm%M'*_&J>`k'c$rW#7(SA
$4@7O%M03b',;9!)&aJ9+!DjS-7C>p`;gbX"9\l3"pP;;#RC_C$4@7O%1Wm[&.oNg'Hn2,(DmA^#RLhG
$k3[W&J>`k()Ro-*$-1F+seQa.P*2+`;h"`"9er5"pYA=#mq"I$k*RT%hB3`&ebro'c.]))@-WV)@Hr_
%M'-a',22u)&aJ8+!DgR-7C>o/hf%;`;h7h"U5/9#RC_D$4@7N%1WjY&.oNg'GVB"(`=52*"!&^%1Wm[
&ebrm()Ii,*$$+D+s\K`.P*2+0f1aI`;hLp"pYD>#mgqH$OdIR%M'*_&ebro()Ic))B0Y:*XiJf%hK?e
'G_K%)B0\=+X.=?-7C;n/MAk92E3`[`;hb##7(VB$47.L%1WmZ&.oNg'GM8t(Dn#.)]]tA+:\nn&ebro
(Dn#/*?H=I,:+]d.kND/1BfWq3]oVm`;i"+#RLhF$OdIS%M'*_&ebom'c%T&)B0Y:*ZlLJ+qP>"'GVE$
)B0\<+<`!V-RgPt0/57?2`a&b5XS!@`W/(,$4@4M%1NdX&.oKe',2/s(Dn#/)]]tA+<_pS,ngt-(Dn#/
*$-4H,:+]d.P3;.1Gq*O4?c%u77^&H!6kL*$4@7O%1Wm[&.oNg'GVB"(`=52*$$+D+X/-W-79ND(`=84
*ZlOM,pt,k/1rV31cIEV5!VG'7nQKOnc7/>3t)N,%M''^&J>`k'c%T&)&aG6*?H:G+sSB\-RgM^)&jP9
+!DjT-R^Gq/hf(<2`Wr_5=.e/8k_uW<9jP=!':W"%hK<b&ebro()If*)B0Y;+!;^N,:+Za-n6_u)]Tn@
+X86Z-n6c#0JYIC3'08f6:==892ADa='=SaiW)%N%hK<c',2/s(Ddo,)]Tk>+!DgQ,UFfd.4Zr%0-),W
,:"Ta.P*2*0f1dJ4$>eo6q9gA:/Fki=Bo4h!9jJF&.oNg'GM<!(`=52*$$(B+<i$U,pt)j.kE;+0JXdq
,UOog/1rS21c@<S4?l,"7S$0I:fCCt>@(`Kec>1>3t`2@'c%Q%)&XA5*?H:F+X/0Y-R^Do/1iM/1,Cd4
-7:5m/MAh72E3`[5=%Y*84uZR;cQq(?"%8VC<lnS!':i.'c%T&)&aG6*ZlLK,:"Q^-n-Vs/M8_31Gh!L
-RgPt0/57?2`Wua5sn(392/5\<ENI2?t3e_CiIGqrW#"p()If*)B0\<+!;^N,UFcc.4Qi"/h\q81c@<R
4"Dm90f([G3]oSk6:FF;9i+_f=B]!;@V0=jDfU!>!!=#S)&bFQ*?H:F+X/-W-7:2k.kND.0f(XE2`Wo]
4YAEE2)dNW4[;>&7nQHN;,gV#?!q/RBPVL+Fa/8P!"'S^)]Tk?+<_pR,VUPm.4Qi"/h\q71c73O3'',`
4u+rQ3'0;h6:FC99MSJb='Aj9@V'4hDK0cBH[^Rc!"g.i*?H:G+sSB\-RgMq/1rS0.5E_;2E*QT3]fGe
4uYG_4[28$7S-9K;,^Lu>@1iNBPMF)F*N%\JV8iu!#Q^t+!DgQ,UOle.4Zr$0/,.;2)R9N3&ioB4$,Sh
5<:nk5t"15928;^<`r[7@:X"cDK']AH@:?sLl7;4!$<:*+sS?Z-7C;m/1iJ.1,CaE2E!KQ3B9,^4?Ykn
5=$5U7S$0H:fC@r>?tWIB52:&F*;hWJ:r]8NffUG!"C(q,UFcc.4Qi"0/,.;r\YEK2`E`V3BB5a4[)(p
6UaO=9i+_f=;4tG@:Nn`Ci=B<H$t0pL5CqQQ'e)\!":(u-7:5l/1iJ.0f(Zc2Z5Q73W;&S4$5Vh5<qb3
9M\Pd=B]!<@V0=jDfQ;0H$b$nL5LtPPa@l4UW!3K-7:5l.kNA,0etRC2E!KQ3&rrY3BB5#4;p@H5<qn<
;,gV">[V&RBPVO+Fa/7_Jq]&?O9Ur9S"HFPWPniD-n6_u/h\q71H#.jrAXd;rAl5d4$5Vh5<hD1<**7.
?XdS[CMn-7GC+diKnt\LPEqZ.Tr+fkZGceL.kE8*0etRC2uYc;3B6psr]2>e4$5Yh5!M;5=^,3AAS>gr
EH?>MIY!3/MiX$eR\$4LWNED3\bZ<M!!k210JYIB2E3_k3rV5?4<cpP5!M;:?=@AWC2Is4GC"[gK85AF
P*VN,TqnWgYdCpQ_".Qr!94%`0JYFA2E*Ye48h8b4Zu"p?t3haD/aQ>H$k0rLPh+SPaJ#7Uo:>tZa[Q]
`5p^6l2UuD1c@9Q48h;D4?P_)4=`KT4?P\f4?Yhi4[)%oAnc("Ecu_VItNK4NKTQoS"HIRX08k=]>)8(
bKn]=nGi\M3&s&_r'('BpH0Z`4Zkkk5AY7YFa/7_Jqf,AOHc-%T;/<bY-PLI^;J"7cdUOl!;HNs3BB8c
5Q3qH5Q*bI4Zkh'4<cjL4[)&LFEi.^Jq]&?O->p"T;&3_Xg,=G^;7h3cI1A"i8Xff~>

%%EndBinary
grestore
np
100.783 52.0166 mo
100.783 52.0166 li
100.783 52.0166 li
100.783 52.0166 li
100.783 52.0166 li
100.783 52.0166 li
100.783 52.0166 li
100.77 52.0051 mo
100.769 52.0043 100.768 52.0034 100.768 52.0026 cv
100.768 52.0033 100.77 52.0044 100.77 52.0051 cv
100.741 51.9789 mo
100.741 51.9784 100.74 51.978 100.74 51.9774 cv
100.74 51.978 100.741 51.9784 100.741 51.9789 cv
100.712 51.9526 mo
100.712 51.9524 100.712 51.9524 100.712 51.9522 cv
100.712 51.9524 100.712 51.9524 100.712 51.9526 cv
104.647 35.0718 mo
104.646 35.0718 104.646 35.0718 104.646 35.0718 cv
104.646 35.0718 104.646 35.0718 104.647 35.0718 cv
104.629 35.0714 mo
104.628 35.0713 104.627 35.0713 104.626 35.0713 cv
104.627 35.0713 104.628 35.0713 104.629 35.0714 cv
104.608 35.0709 mo
104.608 35.0709 104.608 35.0709 104.608 35.0709 cv
104.608 35.0709 li
104.599 35.0707 mo
104.598 35.0707 104.596 35.0707 104.595 35.0706 cv
104.597 35.0707 104.598 35.0707 104.599 35.0707 cv
104.583 35.0704 mo
104.581 35.0703 104.578 35.0703 104.576 35.0702 cv
104.578 35.0703 104.581 35.0703 104.583 35.0704 cv
104.57 35.0701 mo
104.566 35.07 104.562 35.07 104.559 35.0699 cv
104.562 35.07 104.566 35.07 104.57 35.0701 cv
104.553 35.0698 mo
104.55 35.0698 104.547 35.0697 104.544 35.0697 cv
104.547 35.0697 104.55 35.0698 104.553 35.0698 cv
104.539 35.0696 mo
104.535 35.0695 104.532 35.0694 104.528 35.0694 cv
104.531 35.0694 104.535 35.0695 104.539 35.0696 cv
104.522 35.0693 mo
104.518 35.0692 104.514 35.0692 104.51 35.0691 cv
104.514 35.0692 104.518 35.0692 104.522 35.0693 cv
104.506 35.069 mo
104.502 35.069 104.499 35.0689 104.496 35.0689 cv
104.497 35.0689 104.498 35.0689 104.499 35.0689 cv
104.5 35.069 104.5 35.069 104.501 35.069 cv
104.503 35.069 104.504 35.069 104.506 35.069 cv
104.491 35.0688 mo
104.487 35.0688 104.483 35.0687 104.478 35.0687 cv
104.479 35.0687 104.48 35.0687 104.48 35.0687 cv
104.481 35.0687 li
104.484 35.0687 104.487 35.0688 104.491 35.0688 cv
104.474 35.0686 mo
104.47 35.0686 104.466 35.0685 104.462 35.0685 cv
104.464 35.0685 104.465 35.0685 104.467 35.0685 cv
104.469 35.0685 104.47 35.0686 104.472 35.0686 cv
104.473 35.0686 104.473 35.0686 104.474 35.0686 cv
104.458 35.0684 mo
104.454 35.0684 104.45 35.0683 104.447 35.0683 cv
104.447 35.0683 104.448 35.0683 104.449 35.0683 cv
104.451 35.0683 104.453 35.0683 104.455 35.0684 cv
104.456 35.0684 104.457 35.0684 104.458 35.0684 cv
104.442 35.0682 mo
104.438 35.0682 104.434 35.0681 104.429 35.0681 cv
104.43 35.0681 104.43 35.0681 104.43 35.0681 cv
104.434 35.0681 104.438 35.0682 104.441 35.0682 cv
104.442 35.0682 104.442 35.0682 104.442 35.0682 cv
104.426 35.0681 mo
104.421 35.068 104.417 35.068 104.413 35.068 cv
104.414 35.068 104.415 35.068 104.415 35.068 cv
104.418 35.068 104.421 35.068 104.424 35.0681 cv
104.425 35.0681 104.425 35.0681 104.426 35.0681 cv
104.411 35.0679 mo
104.407 35.0679 104.402 35.0679 104.398 35.0678 cv
104.398 35.0678 104.398 35.0678 104.398 35.0678 cv
104.402 35.0679 104.406 35.0679 104.41 35.0679 cv
104.411 35.0679 104.411 35.0679 104.411 35.0679 cv
104.394 35.0678 mo
104.39 35.0678 104.385 35.0677 104.38 35.0677 cv
104.38 35.0677 104.38 35.0677 104.381 35.0677 cv
104.385 35.0677 104.389 35.0678 104.393 35.0678 cv
104.394 35.0678 li
104.377 35.0677 mo
104.373 35.0677 104.37 35.0676 104.365 35.0676 cv
104.366 35.0676 li
104.369 35.0676 104.373 35.0677 104.377 35.0677 cv
104.377 35.0677 104.377 35.0677 104.377 35.0677 cv
104.362 35.0676 mo
104.357 35.0676 104.353 35.0676 104.348 35.0675 cv
104.348 35.0675 li
104.353 35.0676 104.357 35.0676 104.362 35.0676 cv
104.362 35.0676 li
104.345 35.0675 mo
104.34 35.0675 104.336 35.0675 104.331 35.0675 cv
104.331 35.0675 li
104.336 35.0675 104.34 35.0675 104.345 35.0675 cv
104.345 35.0675 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[5.76 0 0 18.24 99.84 11.2 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 38 
/M[12 0 0 -38 0 38 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!~>
<~!<E3%!WiE*!sA`0!<E6'!WrN-"9\l3!WiE*!s8Z/"U,)7!WrN,"9\l3"pP;<!s8Z/"U,)7#6tM@"9\l3
"pP;;#RC_D"U,)7#6tM?#mq%J"pP;;#RLeE$O[@P#6tM@#mq"I$k3XU#RC_D$4@7N%1Wm[#mq"I$k3XU
%hK9a$4@7N%1Wm[&.oNg$k*RT%hB3`&ebro%1WjY&.oNg'GVB"%M'*_&ebro'c%T&&.oNf',2/s(Dn#.
&J>`k'c%T&)B'S9',2/s(Dn#.)]Tn@'c%T&)&aG6*?H:G(Dn#.)]Tk>+<_pR)&XA5*?H=H+sS?[)]Tk>
+!;aP,UFcc*?H:F+X/0X-R^Do+!;^O,UFfd.4Ql#+X86Y-7:5l.kNA,,:+Za.4Qi!/hf"9-7:2j.kNA-
0etRC-n6_u/h\q71Gq*N.kE8*0JYFA2E3`Z/M8_31Gq'M3BKAf0JYF@2E3]Y4?btq1Gh!K3BB8c5=%V)
2)dKU4$>eo6UXC73BB8c5=%V(7Rp$C4$>en6:=748P2ZP5!VD$77TpB9hnM_5sn(284lQN:f:4l77Kg?
92/2Z;cQn%~>
<~!<N<)!sA`1"pYD?!WiH,"U,)8#RC_E!sA`1"pYD?$47.M"9eu7#RC_D$OmRV"pYA=#mq%K%M'*_#RC_D
$OdIT&.oNh#mq%K%1Wp]&ebuq$OdIS&.oNg'c%T'%1Wm\&ebrp(`=53%hTEf'G_K&)B9b>&ebrp(E",2
*?QCJ'G_K%)B0\=+X/0Y(Dn#/*?H=I,:+]d)B0\<+<`!V-RgPt*$-4H,:+]d.P3;.+!DjT-RgMr/hf%;
,:+]c.P*2+1Gh$N-7C>p/hf%;2E3c].P*2*0f1dJ4$>eo/h\t:2E3`[5=%\,0f(^I3]oVm6UaO=2)dNX
5!_P)84uZR3]oSk6:FF;9i+_f4[;>&7nQHN;,gV#6:FC99MSJb='Aj97S-9K;,^Lu>@1iN928;^<`r[7
@:X"c:fC@r>?tWIB52:&<ENI3@:Nn`Ci=B<>$YNFAnc("EclYS?t3e^CN"38G^FplAS>jsEHQJPIY!3/
C2S$4GC"^hKntYJEHHDNI=[$+MiNsdG'SIdKSPGFOd)6(I=Hm(M2d[`R%'_CJqf,AOHc-%T;/<bM2[LZ
Q^aVAVQ-c'~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 9.0%%AI8_CreatorVersion: 14.0.0%%For: (Nick La) ()%%Title: (favorite.eps)%%CreationDate: 2/26/10 7:09 AM%%Canvassize: 16383%AI9_DataStream%Gb"/LB6W@XddHkA(B6ZA&'eSEi.qGT*p5Wq(^.i*RBZFRoAT]B>?.d2,'^lkLU6D0Sft%4h3FS3Y&5E(B!(d"<N3HB<r65C>YYnl%Shj>@Pr%+[If7.L9fVUKbCc\DlCW4RAZs^lgPpBc\&$aI8hKJ,<.ctQmbV_9g4+0EUK%5OFh&K63fU^P!=%pW(OC"=*>kX9of9A,%Ie-kahHsSVHnc-G:<3N9kdqaqm%(fUF\@u\N!-'SiR9UbM0%#H3FEO9aJ;e@K19@tlZZ##G1YoC:06ksK,u3jdo4QchFhN-(dSZ8%K#(dKHGagYh.EY4.=#ZlQsA6+O:+a9mof6JX5"Ok]JD7+=!=hqGX?bNpQo4$&*&;1"Q40ig`OLp%^#`FV8itI<[W=\mFK`A&;0P4%kG?cZZ$$tDF]h&S3*s!LB_7]H>XSa6qo]s.HeQ;j*d(?]!K7obs7;ZE@70N;-fG#\D"Ja^(HI>9M9X_AK.KE6?KF1MJ[;(H08pcu%$&(b\??sdjUX]#DWfi`N3(^o`i13XI5%.h72&Qt-b+'aAS1NslI"Z8'YIaK&#!f_(DtVkuG@nk$HC6eFm.N*urrt+`U.t`?N>I5%%f=c(Pqd:reRgdm6Ug<L/IM6jH)^TT=g`ZAC0S6?'\*!?<3Z8)Wr<B1k5,Nc<R`D6h?C,($)4Yl_elDU%K[$JWkb?/Z.2AG!n;H`R%YU55G\]c--qd])&=:Ld?#,"'Fenas0"pI0-ia0*#M4gf(SBd]srk';!(r:i]#ho"L?HX-f&7=dfBH3ViT3O,U=7:e(>H:_A"BM@4%ZN/H+VpmAN)-!0ip:Yrqet5,q#S2EJK[6ZUc\@"s[N2_I'#$sNSs:Q`.nT*/lXFe`93%*H<UiU[O\/W98l].U(t11#`\<LoJ3WC;%(eA3T8;6O%)6%EkWGEN#g,>P-D5;/W4R9SYMS3:3catgq_^&jb13j^,Fr#E/k9VR@`Fku5Sa[Mr:o?QWFq-CHB;@hQn/:m//A_1W%:ABc<W"D5R8BahFACLmW;/^j$<n%G$12AZE8;2BK1X`cc[KZXradJ-V'q(?VRIt*Z1[1=o9K'm2,nGA;:p<0[6N-Bk7q*NM>-i:o%A,(p\W*eIkAeil5ottE)6LC0?nX2t//bk9(W#n2Z0/AbG]/'B,0u*c]*oJF8)3^+a*N>F^!kU/2RIhmfPDesB,7"3W'Ytm>TQU>k%;*4-hZt<rJ5C>pML2YS&fnB%;B;@i\1>)Z\60p;K0b+WJ!JU]X"DC0E),_:eK"))6b3[EL@od5iRGC^1^a"DJ9Qm3=\?jRcIs.F^%1!*R/1,LeZ1Y],G>l%t*NM<!:a^g$;N?TmW;hTRRmJutnrigU"Tchc.0*bO<r.#C`QGhXB2$-n_Gltcs>h2gbGl#<ZQ5'T':DDKM%k`u+g1-:M&fj?),.'+_@AUg/gNh]\LVsE\Of)sm@s(@ee9_?L,/;kN=YO!p+FWAsF]s>C^OW?rqm#M\W=?]74iA:'U3t@;'/*JA'%[]I!!MtZe8"[o8()n',^Q5)SO3&YRdc3l7rL"U-m_JgMaU#'b.ens#_'><*Hr"J<'d"-kYlZ7VXk_l4R_khS(66cOr7I]R"4g22s%&/E.(AT@reBIk.@UiBXh9^F4WW,Nf'b=.Ra0RZRo"m][<qU0`1)sA7_0k_E&[m@U0YmlnpOb6`+??KHP4?Be.\g1Wr"mG@-8R;^P%b_j("lV+FpoX^#B6tb;l=8#rj>2X$I]hiUD=.BNcNi[&O%l9<pG/<H5bR:Z\nRb;dWfpE?-(h4TC7/g0T6HeirY)48+Y2&`=?DWj%pUU,2n0IMRTJ%:Ei>MJ5Y\%@uA/lulNCFCa%>HI]gMe$JA41qZpi;<0NMN.r<2NZG9Z,J"e;jq%ZA3@>_S.RbV9FU"NDY`<5EfM=%PI26&j0mH-//_VJnISN;=X%23LrQ2Ek5'InT$1[hISAiV7/R(6LglLP4sA)3R&6Rq0]`*ArFRg7;M7g7BZdA@GX<Y^@;_M"fuVH.%BOO'R44TfTI:IFINVP9+]'a+4->dM9H2)'@jOK&:ZaSia-HY(`^(%U<8R:A>N'ulcDau&aIGP#pM9doqZDmXWiE]gZ8cC#r#+KJn%29ssIk2Qd<3^I[k=.D:&3KeBiJo#"[hW):2-":Qm:=p:=6V[i)LY,D8+r?)I>Baa=)!Bc_Eff-ts"Y&.Z*,e?:6U@'O_=E-8k':R%MRlN/+O1)FLM!:F4s&6Y+0'^c4TaG^at<Y7f1^,23Q8Ik?3@r@D_oVdhse%ujq;I0O&K@&ifQ1h<W8E4)9umfp$`(1U5/9Aa(D?>%Amsb[g3hB0re#JIbjXQd$7F*m@;]NDoaRNL]n]cFf*a,6U5C]0"68qjg48oL@?/(AIF!/9Tn4a3J^*WC:k8AspV.ceJNb%LdH8n3%6+@UB54R#3cJPUGJCT]Ac/8N%$6_pIoOK$kX:)^eho7)UZ8FjQF,'9?gUhq-`[]i5.S\:8*$<L?.8_>9L$eln9;OYuTSaqLQ=*E6%UdTG%8mW57O-+V).BiTP("3!h1TVg1[;K/!a%%XV+^F?#L>g0T\<\r+5U50,'<o8QOuTr*RU8pO]Y[4Y&Y,M1\4SY-/&p/\ri<d`%,4tYQ8Vkbb\mY4RMl''JZ?b^uJKb8/U+a"!p2jd0OJl%dC'%mUh8*.L&R'cds+p<K?6U>c5"K]GB&*HZXtO/Y)MqL$Q:\cL`*+sA%YZac=qCJ.dI"V\>-*3(lAn\`[#S([BLf5N`")pi_rh_ni$3odHBLuF/MR^[t1#^QP8J27l(8:J)MiN/24R)$M4,>:J>a60M2UuJI%:WYFZXlrt*n`*7kN$)+>I3m#2`$8#3Os;R-\#RFtXq7:=9[_<.34r_;HH#B9.^7\=hY<B?LM\*7":2%Z48S7aba(id-"c)/$6),q%4/QgW1Q"S[k)s/bNO<8D"BIUG^NCVs6d_'cc%Y,6.sO<dbOt2o$.dOVf?e9d,hr0%5s(Nd*Ed9bLY&D3r2.fnd*).EMeC"+H_niH%T^dAEIZ.dNZmhJ4]09pH:Dd$6Ks)Vmj8/GpYRGKr9uEF'0;)A<pE7N/Km$X&SN:3I7m9@"2h=AlHDgOXS<\\0<.scQ3TRH-b_@qD%3.&Rb,42SEiD)/7#YM&m1-#96:=0le%IHJT]T8YXR3#3[MAFqGB!o9:F%HcXJL<dT;-mLOZ>+SCdg2.Li5?$),7C6\Y8_GDM0GVj%'78rWXpS)'CX8[J:ph,%Z_1>rr@I6SKcgVh`pDteK^&l%$>^38AFc[\W7T)9K!C2n+[V!f*G?[dl0O]-NpH!!TLimS!BneCHq'u\%k$p['(fu@WBIBpMYU\u+gJe]Y@=6'cGSG.X'fP%\,;U=qn[3EN*6IZ4Q,)+`S/HSaYMWI+gP-d/h]\%,m"dgo$AIOdoGGhp_-DR+%34_K.@WOJ3b_SjV%\o7k/O6'qn'O1d/>/&;cW83j)oj`4$9O&UJXmUR?j&fhA,B+IZR]+OD]=G\KKZ<_&jsk+0qM"Q1L[\aT,,T9%q##+*&i"oPSqQa1_0G`P_F?J4^(HW!,F\U&[Qcr[AN@,-Jce#TV2F,<rl+SIYuSV9J?X6@]87WWklm[g3U=*mm2A&&^8EcR?@U=1%+*4.9QX=U&Y.*nq-^e=`7XmF6%,fWA[lrpp[&WN;&q-^:]B\B'Iqmd'gP8ku069d86hKee;"&c,;SBD!E?M_fl?XF3$(^<7Gb*^G%nZ(to1[<7hMljb,7_9<Q2JahM.bnm?gR17t=ejIrFZF1I7m=*U"_UG8UM0"mD2(>LrHHP%GcaRk*0VBia(&u8a1En_B8='geK+;=%\Z9nc&It9m'oq]@;_-;rBCImU%^"1q1XINtT4"%Mg$Sg[E<5@p*8on-o&t7rdAY[.V9XG$SAl]5I)q/8q[Tk01uI#HHES4F.FrN?%lLsQ*L3NHkfCt_t7RLrjl`CKoOciHbD7eK;O6CVNn"l%7A+necU:^m><*g\%``$4sQOu6Y'haM%k@llbV<_0_eFY4q/c:FlE[IoN%'0(iT.[e<cT@qBF7o";kQf+L[/%j#?]FOrMhW-9Fk+S7,MnCRuk>F_C-OI)O#caQ65@#rG;m9YeJ=0Fd$EhI.6A@\#,)NV(LoRDi%5@$*6;m`KhKL/jaJJX7iM39.+Os6lg#6/eeOA*cZD#!0a7ELhjbRV^,8X=0AQ>1-"DAeaS_8KhD<mbr)<kV)5Cb%E5GB#:QZ>Gu>%MDd(T"IPc+7s5S:FYlU4%*-RO(<h8g;fpe=?PJB,;(B^WV5P0;U0][6B$i*^7Aj7@)%?.\6!RK7'j#N8=*G,*FFgb+SRHj!!=K6>%p;Q<[.:o`V%/,fLGo9SFAQaS6WiX$$>rH4,r`QNYK1'_l#3?T(V'7B%OPuh3BSrr0MQ)-GMOdTaV$NT:<DZ+a;ILhN;,pUpFk';_%eP^87;2ZP7&+1"FMR'*m.Xn`p1GfdE=\p/!TGO%pLkGrXdjI@;qFIRe:I6+Kk]leVPC4<if'6\Y]Vr&q]Q/mu(I2IUM)qN*p3VO,%KKMLpjodlq1[R$k[%&fc!jp8j!-26CaNM@eA-!6oIg#`Vq@W3AfZ-;H6U$P)9FU>$f],ehJF:=F!5lUHL-T0$!K^gt,lpKp#dHnX%0bZN%5!"(-!31<Mcp_6gAR3\`?.3rPcqW>JP1S*>J9fu_%+1.Ffh`+-cj\_a%+DFg+m^%7_p+R].@?hY!PB.G"l/@>JY*^1Fd?MQ%+^fOfYf,2s3AXkbcQ:/q)'\mk;"u[XrX4G[6K,[Upb*=ZTb,dM_+e-2KbLLsdSI1Fa1m<u_3]DC't$f=G#J$"dM<-&3uI;mh?VU2%e*q[OoqPRbmhQp_)k!Nms3@pJAT%G_e5"e&B)T$lm(dqf-fMVb:nLO.GEE3=36FWJI,4aPK0snT!DS&b13^Su54Mk]>44)bMKb?0%3npplb])m`(1'QtcmTNFWfC_gL'NWH'&r701[_,$'WIE:\^g,LS2moB-G`gAZ/@>F(H:*)%R`!W%=bnG%Q:b&p9G_ZK>I)V?:KK=%h*6#*X^Ce6\BD9j*XDf`daH,QkMN`PX3S&SLUT@>+.'g+fb[Y>9YmhQ!%i:M3*=>;[7f<_=/Pj#"n&KIn4@nCh1F1_c_;&Vph[@]%TC"od8o!(0RQt'F[IMO+(t57l;+'=NYLHtX:HVaX?^+qAh6$^Hh7sl`5KDt&aIW0PO[Ti"o4FidHBf0n:'^_-BJ`j%0fCZBVq(*t%\mDH8#Pcn$>d+-FDakTg'2S9j9XUk,TkZp2)[(`[?QOFQrN"6Z/+nAUXkp#Ns+GRbLE+:\EN)qWP\M7`f'W[D*_'T]&kLCj@c-LY%qlEBK"#cE>4[4Uf;PW(fC20&\T70Qnn5H5anb(X)BfU7]DhfAQKri+58f`_<?G/@4PThaf@nl0Z=():CB``q>V:K"MhIXcAfF$qV%[p*<[6+T^mZ!Zc`?PpcJ*]Q;Dlh=)N4DpKY%1L]FD4KOa"AshWI?4VEfk[tP8rX4^1MHDI-0:MWIPS]LEBYeEj1/[49m\^;H*/&4%%LDPn^#a6^!6o>EOAjo+?>fsHES<%U/,,B3mK6ucmS^+PNIj(FV%^YRrKl.'@,`.1b><t7UYZ$,ie6tXLl!&,!mQ$B$$)W`o?1#%%r%nr>6),$:q8V`p%H2,2IkYoRh5tpe;6Rn(f^:+^$ZYgHg6'<Y]gWRAHaF#KZ94_'Q27-kb;)l:M6&=M!:gGa4DljI[8Cqu=8X8F%\/+087`rS[rJ(-a9)(]/AO]-0hR&?1-s4>-8rXPBa\Km4$/G3m:6^'Z4&%Yb^_P0JB=.ab*cH^/g/B*(QZ;*+D8jS.2ARP;Y-hB8%l/mjNY+[u6.CFbPSc[:^0%[q8h>5m!n+G6nSSl/(kk3]T,bne:$7g)nfa,7WlS)$,GJ2FSpPimGV0_n$[<I,)-)dA"rsJMoLNC%L%#b)Y@L-)h1n+17'Q\Rt"e?`k!6LJc:A?uEA7SM1p2ZaXh:j[YS808SGIBlE%$)F+a'>J=U27!RZb-Wmk:IDuuCSA#upf/()L0*cg%7+cF%VF#f1Fs@Mn!!8pDC\L0r:@N&2>4$U!j<V&*+gM\II^J"JOM,tB<>r".L'bt]Dg8[e2r6D8@Co]]G`t-$?)dR!ml*n1aeXlm%4-U*#W65X+icY]=ViPt%D_bl`28.sM]M,!c<q>W1VR+\bp-;`6h##srr]@2X;Q4=FN/s7`7-"[f2G0P<qi#WHNL-bGCOYEZ()B^[%K8/Sle3m'%5RJ"dfDD8Nn^9oG`fUt0(8mU'?5b>-#K!1kWj\geF^rVI.ATr!^6Q:C8b%dn?m)WSYqn6T,`'?k0EZ/C--SUp:C?Ah%nn+lufh4q#"*'RFVUNP\Sq/pTFm<5#cuIG(?oGL`E'hcL>Q&rGdHO]dX\#5Bl/f1qKRD1:%#\F5nfu`0/Kc'?UW"\^e]E#jdgoGA%Bp?#.&f&dhGq*!%UmW[+@k3K-,BbTn?8B6K1bTGDYYOCVaQ;Mq5$2rlRsubra,$tUIh)m<$1j=HJH+hX846YiPB%2Z$]-&U28`oa%0eINkCX^`_d.jS?i5\ag@.ELc@niehOK'0qVc!FL_*(1bDY5>Z&nq.77XWN24UuhK5rXLP@Wbk7m0<A39k5$R$(%I9oEK5b<`47r%2A/[W1lAb'(B5%>>$_[#NP?h)NJRdqRFYo;L4JNc']8"Dac;I!hFeTelh)SmB8=H<'U`-.!<Gc#Gh4&qEBkg*0a"gFjTuSO&bIEK%:'?iu9^C?)IZl"CjetJG4=L:B;5r(QG1S';9j?48#)c<gFIg1jF1:!F/>,Xa=H<>d]"C0hqn:5P-&u1l@0V[U]P05[d,6qj*jP)o%g6fg\&MkQjU<Th/mR[b*H<Su4m1j?(&aei!ZK8=h(481b(N&Gsm&6^t&Fe_YY/9F>as)4\>0#>-dXQ*8\t]EsUG81:pK?rMH/G&E%JK\/41.o%=Tm5DHfEU*-;eN([0W*8X.<$#.$9#qf#Q\SsVs.[c=L[RHD9Y`Ni':?`Y\s[u<Ft:JdtPimXkW6^c-kG%TsSd-ZO5O%%k5.WM20\90XXu-YohrNu;n_$@Wq.0`lb/i&H$A<DpYnc<4"+l^;*<74Jh57>I*_V-C2<an_WGogV6IAYknSM7id)qUfK>bk#"45p%X1!M,>hG4Q9=qpO;g.a-`S(Tuj2sOSdi:<YTfqc8SW>-kI`SXZc1Z/'4LjamYO8@\"4rZbhHD"\`S4);WUbg_WIt0!N2h&BrqP6\%ZL^$8RE"JLSdJ\omSdPhQZ'#fCY=9NZra5=Z=GN\p#U;R<1e%cX&3QcD,dY3^AY2t#RPRb/i[G$poCX,]6MN=!Kha&F7$LImhWX-%K?D$#Q.%sHR[:S\(6d^[<#K5P`lHMB\QDnXQgAqlATQ&=8dh]NYI3!4K"ZErg>64KkN6a_IC!02IH%m8C9`*_c8Z40H:dGRJ%fgM%T+<GQ,J1RTl`U4.R)bO$?RYqp@Irt/^[,h/k,Dasb)=Npm?>e;Xnd=UY%d48Wap:r#K#chL(KAIFq/jX?oDlLdr$JGZ;J*_9Aj19%A:#c7k#i/\XN<</5L(&2K<=t(igQS5^b5qRlMQZS\"?a2DCU\dinOAE%D1*3JjMQaaum8r;8#uU>A0oTlZ64Rq9ZdR*:q%rr/%ad%g0/IY<Zeoo7E#qd1^]@UZM`I<".A#Lm^QL#]<0iI&L4d:MQ^hMnQn<Xkhbj14$1D=dFkX=qr?ILDf&N=IQ`lB6\/[Y;bQYk!0MC@%$Le`9+=qA:+H\$MRkeV:04\h<lg;j[KDJG'YFLYRVn.?L<@jCNIp2-loso(.]t60uD<oEF?Ilju?V_WK9\,BqY?mSN+4SG#nO6Qn%Z/e"<e9*rm?gRWE]"V<aAo"PT>nOl&40P)r;/&PuoZOH#Oa28cEo]:)Pp9n1^sEMei;J*PJ%iL@;u0r1mAP?1Y^+e!@9suJ#G\:.%=Z0lI^_(eH\R;@/Ln%DUT?.ij.bU9c]!^knmdG`q&D2<bEZIEcb1`lG2P,\PQ*bA_Z%4,:Ed$>e"0rR''"??KnXfPs-kKjr<]ceS%mS`^+Dt7+6&*!0+k:J#OdN%Q1_XQ?WL!I"&Y$QJk=-)rjKN&5-q_i&Rb@1Ve>(E8\/q@^.bBE9df[Db%f,(=X+PmV*i,$/JP8O2;%?88q_Au)uUq"0U59\-j;WN8F@feFK4q#3'D>,$u'mG2PX#b%L/MgP$:.!#/smdaLjdrgl[EHPp_24)ESH@],YW`sQZbu/V\2jA:P%_Z%du0m2&S4"JlP^XBJ-XdcbEomZWKL,`?G#NulRg:p%"+f@Jl(Y/7Kkk;AkWN4)./6a_ge\uqOUi!lQ/6KQqgCI1A0K=BiP2&B@%q[O;;X7I[QhjW0ME\C"n?s[)$2Y<&"DMp8R1_B_Sk^<8hhm,G43d#X^:KWM9p4nQk;VWTQQc,&p^qU>99A<g_d7c?<(6H2Yf4lG"%G<'\MIpLkmkZ&d9Qff)V(c3;YbL],95AQXiKrobb%j\>;O9LX\/E(%,@U9PIjQJ-,6QUl7At`Gc=CC!Ca63<tf']NndOqQ--/n7e%g6<B8IMNOE[]jBd(\$5jJ%-kBoA86AY->?FmtP[@;3+C/U81gPZnN6Ke<(6kb@C&^cYg)G!<X:q/2im+Q#ef/k?Nfr&"Oo-C_8BC%i[pOKGSUqjMT0(0OC*$a67Db,fOL+9:ms0Q.9+nE5r)S@P:;GWBkR;j=4jrQK10$YLg^r#+qHK+_f37]T1dh+qJ>/:;I_X@-'=C9%b_iOVk':Wl9<r3OAS]A0i;KIH;I')0*&6LYT*st;`eqb_298NaF)7%@d3/r7Eo'HOToc:tc?,C,Om-.2,%I'(A?^U.57SN?@=cA;%TiMb);N4*m!6M"Ug1Iooj94VtNc[bMdkmg07;?MOD.^$r29@0aaWYhkdb#^UL?TkY6l\W9+?B!n_Q,a1C5Eo^@A\_#AglV@Qol3V%l%C/U2!js24W,n`Ej?mKlshRu!Kq2+BRUJHbU$[+Z"uue?DtH>HqNjpq,%S6*hOL:V;I/UF`Z&Q$]EjV<;KTL5%,:?$g,UcZ28if%^Z!J?jC&fk^%>^@ci&O>`VD(?c<o2iqX[@R=T85%?rL40S5B&pj-MRlZ=EQnQ8>`\9.jmK:oBU`hIWP@ftm7JBT>`e[eT[8c/Omp%^CMq<S>2i4/$>!,igCT7kHo4(gjOe^[S^]F8M7'NG1cT/2dWq5YAS^^m.ue)7p(H$FGf1fX*%'@'6CF$UL:dc*,h[`+4XCo.3/nW%a=r&Xp00b@/`#DT">!8eD/1u`G*S>*,6Q`Ccn3jU5IpQ+U0LMD6+*jXr(e(U1Fu8);YhIf:1dUspf1[WclB(*QHY2nn+12!6I?bJ%m_8.Blg1NV+5Ir@<5qCNMMD!-CLod>l!QZ^s4]Q>e4!cLr+;K9*`oH7lr0P!@8%D>MOiaB&VBtAHB`U`5."3u2HX+TiI(6dXaTT6%EI;>h?694'+Z^K#,=0=$.[WAC<-9JqJ3Bs,efLgea4p9>qL;I@n'p%fb^'h,k?GHq;20:1rOpL;2oAbRP^b!74W^q#fiho(B$\,+%'NUoOm7Sj7m%0)glT)jiWEu]O@'!.Lb+`6jpmehNJ'Vt^^b7?lpRh#LDB<9EqE.o7KudCs%Kg5D(C&4:Vmnl+SI!'WDcE/7*o1q*%=<jl4]2ed"%nG%&kGOSj\(DTa</OhRWAA(erEOj%[IWj]FadAAg#BaAb858>T/FrE?/FLC4#h6W+o+$60C[]Yi9cIfmc5=6]i2*r%`7^3o+l<7RS28h0P&?uJID;(,:2Y94_'Zq/q2247S$*b(6#>o:NjWfI",duHY'Y3r+$;`V`o^,N4E2Zsjm+7q`JSGbmZ586G@c%o%L3.PGl^P:S$YH:Ef6penHUgf,_UdI_X)NF"]!1_=H<H$FchJWQa0P<X#0),;3UEo]15q2:B!/Y].)YgS$oV>^MQ43P1Ec,'9T*7,%g2ri)]eMf,H=88TY1iPT?,^*'guAQf=T#I[7\!nP*ujp$%VG,OH6jtHNZ(<k+m<uDo=N3?B79C8?DoP:DBJhW30gAG(4^>f#HZBu%H,nd6B9Q2q4h$Vf)ZadLlulUdn6QnnhbO&]lW,6[+i'b;/Lih;=iU!`[Jj-QH-SU*n?ogDQhA!*c<0NYmNChq5I4`(irJ84>4HJ.%Tq8>o-t>Kig>/C)O)%Q@Bt#I\bN.I'.((Y+kS9^chd2s6fu/PB>qVFEq;8'^A=Q$`]@C%9i3Sd4$X:6p$dM&Erb*`>GBre-jfE'#%>cklc@P>@fUfj<VV&M'ffS$QDmMn>1Y@+VT5pVP_[k?-_f<5s=?Fhf]$hmC2lt&'HT52a2dde"c2du&O,uMj7![`jJS(4-tmjUqA%Qp`TR`RP^2)P>m5=.L/n\T%/Hh[_^hK8XMdCB)r"!$j'rq-;q/iZ*I;\@:Q1&^ISe6[SB$X_uW)cVL40>;KRJIX`Y<[03&+R`TG2%[3'lo,.^q)I[)ifLIa>:kN,Ln8)*f=gT24Cg(+6q7R]!a(&)FGfj@lM\rRuON1aju#BS#/4"Fibe[n!AQ[Q2%KFRtH7<e/3b3#l8%E,snf<ZV$(nTchWD'tOD$Qpl^a?t=rWTpqh[D1f[Ng6OKp7:t@5Nc!!?e]c&a%lkh/YAK6SV))(L<qRZ]$ki5A"6NM"nQi2GZ<>&%3q:AIQY^H:d*3F1bfL#eH`I!aWlF@Nn\ONE%,',)kUp2X]`3@t[bjk^^g]m>K]Ngerf2X:TlprU.,!9SV)3]>T4[W9e;Obb)df-#%Gn4LtQ7@8rpZGi:I&a`#Tm!^@F'CUXNV-('S]"e/.,8&JPh[jg+-QmanbeHb`iW;mkah,Lm7WI[JHaj:q$Kr?p-,OSXNX=tZF/:D%Bs-l;Hi#M3Hp)<&LQ7N?;&4Mg9n*Z:pfJs"<3HM2Z$4^8JWmjIj9cj@5!EJq3BUTH5MVRl?[<$rouk;(X4;mV04Fk!`qm=Ar#1sV%PN1fX592`\cb5pVp?!."Q@EMM!K6\Z<qCE')9'ep&"('p+0\Ys'UBlfa]U%BY1B0/<>QEtI'jiM^k:LmlX&/54">@8TDMBkh9Dht%eppo0[Z&g]mTdB8.n/FWY@"Lncu:4qQ!!J#]8o!+.\H1ThG2XS'#RQ!*c1Z7Tbe3Nkq3uUDK0[l)frrgj)$s>;IQdJ/HCF(4OVC#%ZEA:.DkSZ7q_1eL97gaKmUosDV_]EU`LmWkGEqig(&?_?K=Z+U(JQ3"FH22E)!+(P,j;Qb?DYq=5MY:"Z)k<_F"Y4t@]W!s]0()L%#PVkCgT3$(ErjH+l/RM#K'J2rD4I\"0U#fpbfpj$$.q&KN!"O=q9J^XLp'u/0CHF7!30,7=MF5R:1:p/'bIRVZ(P#5OS8)M%D$NB%<u7plLC].plbKUnA2Ua2:KgBc(G]"'\=fr40OJ($jJlG?:t,1T`6&!6D`&H(f:`@qKX'1:rDn=+[he!=]K`.5:7.$(LK>eanR;rG%?F5djcJ%Ma-)d%l#GKZ;q1Z=0'[&_j-WnL7Fkrd@Ys2K0I-k8\dmA>dg0@a1Ac%6$eNt]"^^4Q<@\0)!>UIr7S%$Aee&><@i,`cK%h9H=[iR(HZm,lbVB<i]LgVR"/?&mOp_h26TO#md/0DehuGbk^XFf4tA7*-%H-*">cFM<-`/!OE,p%aS!^Ru$lgm?$l$9;"$'XYJU%dF@o:ID#3CF-dAX2n!\]ltq%f$Vf"D@QD_ZkGq0S,j+1DZBre$"&j^8e7)>X-/=:IdQZ0,D18fPn@HN:\%Ue&a*NCTL']])XSO4[%QV_U-\o+2G+MSn$<MneXV+!&j!S7?"!2!I-lB/1^o5^r5I]9HVi`lbZ`U_s-MlGn15Hl80LYr?b;9Q<,cUpX>\UM-;[9\.:IXeHs%^_PF]_Uc9ill7$_r<P%l%sNYPbUkC\$_'rD:j-U:X1Yt9<JE()n-O/R[:<N"PhSS=0&77gbBH1@UI,>q5At\-ZO.)%E&"#[WUT6?%0M/6*?Rpn,fe.\6/+rT+8BqRk<LBc&,kX7h@=YZhmHSi.M[Q\Q_WEZSWdaKO3cOmCjRq/[TQmoL\nr35&Ed-WX](FU5/Btl6>TS`%Odn$f'm$BULU=M\KC+0laf;jJWKaSEIQbFTgt/I?4+:5(Ej1?[lSk&1p[ct6ZhRCF.).p@N7\@+n)msI@]hf9B.-m>qQl0nURnlu%fDhk`R7Fa;8c3tFEmA8EW@pDNXkb(%VS75XmF3CCb!/SfXgN^Y.B`Y2?f6V_ZP%/PP$dVg@q6EFrF('h5)p$)O65gopWN@CQkI'P%c-gJ+_c\XAA18f+QUn&Yb:9!Z8,IP%[<<(CF"M.9d['<##)+"d"4^i>Z[)3jplJ)KP1@mE)N>aL;`.m_i3iInpLVBm`3#QCZor=E%Coq;U3P?/hTu0(5Ph6%$LN;@l?%aV.<%+oX9%Bq3CWV5^iAd9ThS+(AkGio=1HZR'pAgD>2/nno#CC.e5i?NI3bg5,+W9J2PF4Y&%V_Ak82n\PRAuP`!*:2k'kM;sZ9/k0<%t>D=]*erKBsm)1[9jS+,L2e/`a0,*qrYG;&+Fo!n66-1+6M+]rA_H40+RhT#$Aj:`TL%U%*TrSSa)/NF3D[%14qqms7bP),qkeF2?<R\XJNUF&XP[<g&rXmgFQeM?\^FARdsFbY-dd^<gkEH%cDilhpF\K3dY[2cI,*Yn\[--a%c<_*UWn[!i((t2G]2dQQ.eXYg[W1^/,kpBnSa5niI_qmepp*)MSmHn=s*#jg5[<l$MtfF9,9MDG+%RCJoOIA*Jr]0S6&Bfg[+R.N%pRK5`r/,u'Fj.O_1OnUCm6cT6ge"#bZN82LqQO>kFkV>SH6p5cF5/pBBjFNgX`jNRgMV=7s.an@1@_]p1OiOml?siWlVkAXblus9%\,UZaqe8d8ARsq-SC9]\M4Q$-,WX_G:-\c<+5;e2o/P.EHem,BnTL3Gp-hVEIHd*'c+!CRZeYqY2ILW"42Z.+lRfh^p>bXsTip_o%[p'TYF7#V%p8_9\_<5C[B`PQ9HZC<`NUa=ll\0Pt@&L>SUE82&nN@=7U)Qj:pF6[uHA4*3QkW-.2b]V#DYpQcB0SrS"(S2.r3h$$%nC"MD%i\%Rdr$-ra71i!;suaAeoqtT$j?UB(oHU[->7$nGpl/ml^WF]f;'tn*GhC^a(bK8-sm-:fIT0,1r/L'misgMTA86c;<,j9%)_u<?qA0tU^4hhD6&nRs&(F+Y&raF?2!Ar0XZ'$Jh9Xj.*FY-s!/p`'S_^B;E;W,/aRMW<9d%4?C+.LhAs+hm:*1I*RJn>AX*&0M%UeSsp-&Pjhf9@6BK.d-^62gU:nWo\u>ZQ(cm531fBeUk7ZVGTMBY4mY\pB.Eb2J\KpYS-Z^[[ouE8l(3oshco]b]3MrIt*5=r[ac%13O$L"#C*^lJ]:P!"?T2.F2;oBO#fM;7FKJJ(b"-".>.$WPCkC!tQ)tNEId^>?nj1h7-Q@Y&V68m,%km\:,C;.=5<j^'1@O2+lBc%%t9.1WRCl!ZO*Ng.)2Oa#;(^Kb`BbQHl4jsh>eg==!MGE4`8XC`31l<O"VFRLm5OEc>8#R+jJnjD`;h-n*.bV3)@-'3oT8^p^Pf\%f#<jAQOU=7m$Cn@;KoteMZMp>(E="Aff1RuV9[K;'touT_fp_-C=580iPZ;/DIuHd9P0YXAdDSIFfFh8]apQMX\uhEg_W,-!PgY]%qm=cZ-2Kq>7*=&PcK(K_*eG6*5$([#AK<7ZY@?Ba2I1;,aEhftfIW:o/EVjA44pA>qc^7NY],4P.s,2'\fK)5,O<IpdU1i;jL%$Z%8i(a&fg#6a)pk>,lf[4q`#G[;rOA7cd2.oQq,3tpDKM`F7ZNPshjNm[C+.9J!&O$G-Fjnpb#?bcS69qMW&dq_C=i>$7'<%W&U>-\%KRCHL]>Zq:V3YY3H<C%96EEu7'>KDM\t,,4$W@mu8I!Y>:V&Lp\I%O,%!a`'-KKuO:C<8.?gFp=Yra?]bKZ)7F#*EI)Y2c#,D"ig%`3Ggo"bMmJ61J1/nk_#Cm$h^d5YV#D..Q1',q55qdak]fEOe4<kG,[JD:ELCO>IqEZcOcBi`%?Er_mjo&FJO4*mUXh:^c0T(5&`e%W<R(e)RE->r-*0/ruHa]h[0\h>NXt\j)SQVN[Ku:o#%iuP(o_^N+Df]WAQPpq.X4&2MqK[I"<%LCXtm(I4$+/EB?qI/K)I"Aa[6$%U]'pdgPGZ>h]Wf6:%F_g++-17-DWV5b4!P-da0g09bK05aY^A]s0+$eB>KNdXQ\a0?^r!Ci\tIH+W8k[X=(rg(OUeN60j`PDkBf'%D@K@&g"0fpoc.)3#N+)D$o(Y!8)MU_r2sf4rO1ZlCnj__n@Q3`[tF:BAoN@#F/#DE!Ia)*nQTU^B^qFGNa!CtK&$@P\*HKtZ&;UI%(2_iWBJ16p1G]..a1e0n`pY'Po!/;8TOQtn=dHR07`l*j-5^0LO;B`JP;l"T9+io9&(S`&%u%*$j:+Hj3BP.AH2Q6AR?R<V-l<kH%SB:;H=lg)a-SjM>YYE41L8Lt-Pc+sp:<N0k+=\P<*/Xhc#KPq":)*7'Y=]C`#X%VB9GBM5CB?=`+HaZ:S?1jQeM+4k,ihC#&33n=%X-0Q*fV%^P#UAIH8JP\D+K#A1@%F5fP!CZh+ASrT)k<jXb&AcjA^HGN`Or?.5"8l,"J?>$]HltRaIh(+"V_M6'U9KN=M1F8M@+9D%*bY^h/_1<a'NLF71sj7$MJXJh!,VeA5r+SP&ih2?#b%J$1Y!$rO@K<eOZ4I:lTk$83cK\MUC#m6Brn#J@1+!-;2DgE>><L)0W_:1%^0u/VK7n[`ClclhAN@WM&=U`ZlRi%7I-Vg4+nZY^!%^5c+u2DA;*sLI^Nl66,UF3h0LQA(edR?X4Nms60Rt:fU8Dp&?8Q1HQIX2Y%J[8oR4KJsAYnR!@VU%6g%9Z!LK9^_(<6t]XbO?u(=@H4kad!9k#^9,J:BFaSW'[3uQr4UuEPX=`7+3l4&i#I^,9fFgJNpuLJfmX\%'eel6g0GLO)>c[_W_4hQ7ahKoBFIi?I&G+*2MgR"7Gp`k8^-dXUlk7K^iW=.cpBd&6P9fad&\Z'Tip>S*BO;+'YkppMuX+*(`J><%)1e"TF]DFPa9BK_GaT"q)_(V`N,UVKVXY!h/lFD>d#a\IL_'o,5"ubK$kkmiXp-d)C8CAF=]6c0A0%KiQXa?bTh45eMJ,,D\HC+p%]I^>H_DY`I'u^uMQUO8!0EKW7b=f*RomI9f+L+3J]>5'/$1'Ar6'QU3IjjY):(+A+J>m%+@Vnf1fpcB,!61.=(`3VBL!Tf:S=kNN%2r83eNhu"B)oB'G:ME/D,Nli]8Jc+5d'9?_a"TIA/4G`CP_rEH\.E+k&Q=i&*f2QSYS.2f#[rLu7*YfcnQ:Q<-%[bXBW;mN)adj6%,R;DGA!fTB=E$P#k\;YtJ9sE<L-sc<$3"F,'i(!\@;JdAWLK!%GsHt3P8GQ;bfRLG!=%Ia=*^3;@"uM9,N].p)ONu@@k%6cHTboC%6[FLV%U(!3C6UK\]W,E:Q6GjN0bjkT/^mMu&F5Ei_>]l)Aqj\/i"`.j8Q@HA$^sHi"0rFu&$.&@\jf`]7C!iJ6%T4Li_U-c]HlZ/%;:([B%J6TP7Y"_f_GE@l#;Ci7NW[T7i)+_"bFfJ%!0>eNjq,<J9N&/Gl_m"k26%]d&=aO^(>4fD0In7T,Z_u6#4_m2^`YDP+!r9B%ZA;3bpetK0jM5<*UV05qW'51s`u'g#K#nVB-Ie>=5^Epa6(Nsf`@sZRqa7,&CVtZ/2R%K;*(+:1j;=snW5&[dQNQEnC<X4srX[fq%71V65\020T?(!uLU""fE^d8;_7@.-u1KX\aTK%PSe>?tmjZ7HWF7<H]UN0#Ngth@2"."mT]OX^I6@_lt?!2"H@`f=0$_gs[A-43p%\>[&k[36pW"KA@WV+>kHOU;@@JT<Ld9:,^$"0ARj"XQIEJ?((!PVW@D\gWcGGf2!S&$7$C%h7hBa@Du-?pXj;A!4Y0&<$`$<0+m>%e5?hu$=jWD91B/IKb$^AQ3Y`N!`OVi$[G,]MHME=&lD@lEAHg7o0U):"r.:ko#S!kooi_lRFT65,(oE;Oco3qLCb0N`2Wi`2C&<W%F=>[+Kp)5n=a:Bu6YOP;llhh&b4&&5=]_G%!u?^N!*0_2'>tYs<h5s\0OW^i$jFBoNl-MW^9f@cVCE++.L\e$b"[HFK"?NNOqSMX%:mD:G@hA]cJVZ1&DMRS]astQ9J-)*`TN$Y^YCjt[E5$+"^_BVM/#\B+6hC_qef*qCP@YG8KIj#>]ReOf_-,lL^sea?-c4Vg8jNZ6%!XZ.?bL=C-9jk3!l-@Wa.SP8(@5<JGqA;k*#!UnIhZIh4O=MIl$*"MCrtn^&jFQ';((i<h#kBE.(Tcqr!65[[NFLgnT]Bgt!kAej%GR%_>b%q#m+TeLSNjC68#PacSa!9jk:Vr;\"#Do&o%"D>R-0TW&l+OU1e^`-FTB`#j`UYT:f'N5M%NeME'iK)>&uDP5nV0"clA9.%!..Q`m?WqZZN(`=WU[")(0]YNn+*esjG1^9L.HiFeRK_rGc*e1irat(;%#d5\,r>uQWRFfq2S@+Jr;9cc2p(n7US(UD(NS'U@E5e%KB,_:-q%)GhJ%!=CllC?.]i_32"AJjO38hQ,AEUFYURppH4V,I/nZ:G:jN'_Q1Pb]&fAPp.2h^XY)`a,MQ0$TMK>5`Z8+[X;^8Nq%("ocDr5>Ru:PToH/Pgt)$!`,NWl0so8VT#E!1HT"TM2#XfDn<JN?sDc7$NSsL,/sL%E`]3AnZ^`#'6JK-n.:[Oc\:9-)SL&#8]O4%K^E^JZtADKTGQO>Uk7;SV+1g+:6m7Poo.kE9ATWr@9BT>TRbK#n6?W2@*M3j(9JpD1E[_jD#tVj&U?s`dZYJ4-k/,,!3?G2aI\n+%;1_Hri4,9XI0D0RK,,2J@UY%3--@ptaAhu`A-iIW*\qRg?qhs,mr#*[9<07'%Ee51(tXM:b^**D!$79M`_)g<NDO?R:f23^'VGfW%0Mk]K!foK$KrqTo[LbhiE0j(F0ERi9:-WpHQCE%%16MW:Ga9gU?1rJeo(X`sS:Tc/YK'*kADG\`6N.1B1mIu551p4&8HXNi">.?J%#+!_1A-4fgm>o=\#36I).aGhi#4GWf^7BD6\HV=3H32Th+u,n/74_@3^)TUq4kiF@RS&lW!I$7X>.!LgF,cW$>?MfX_#YAjVC&BB%Vef&G<&%5=-E9E0SO&1ZZah";#+fHpA*#6$hBH>C_Fk53K!.$Dnj^tdL06RG1Op:aE^:)k$28-f]CD7V&T<chd2N^ah_l[?8pK(1%Jf%B3[M=Mq`;0c@cSfDQ1$(PPKH\4D&;I+=(gIo.=pS11;[`Y`S.@*bn1q'R+T';:Vuk(-a*hT^>h#G-`3?&>)ZVJ*6t0=IRj`Mq%B,NWkYjT;E<:\u4!Pkj9",bDs*kW8M)/5gb<10Y4-QZ/"p4E,B8ar'`ASNnq9UpH?NOB"#9t[V4f``$5n%V;Dnh^lp/5$#bb5uRl%h,%\r'fg^]:XU9t^1H%ViP;]F`r6oO:r#_d,)@aSeag*E^e<=Q._6HUcq"h0UZ1Bed&u#Odpm':N'5sTO#_$P$-!S1#(uAU.#)jA%]gkHkmKZ,=d</<Ii<0c('G4N),Y/l]r!SSj\L<''Tjj,t6I\ia-:.]@9M&pi#im\NK^7)0$k.\=,/YfKMGnjIEe@XDN).)+TaGVm%0iXQQ)%CX+foP'A/ZO]a0]7(Y1Lk$Pcp5b[(pj&MCHZ&7q+s@r"tboiWSG>7'50j.i<9itX5U4=Ts-[;R!(n)]EeWSC/EaNJ,fZb%ZV%YaE'"SP;nssb)lS-tX&m>I*O)<[#]r[n.dd!s`aRO`Dbqd4E5pQ88hs+m#n5g!UY."7)`!"sgZcYHnr5'V^6(&f-4J\W%#'I.%'p_liTH)1dZs+=0*bMq/3g`1:"q)l%[bhkQ(BTaD0(8iE0NC2S083.@3r#Tl/ED"Kj$$OFP6au-iRj$jZW+bNj\.Kn7P2`bqQ_V&%3<IpTC/6^DUrHTbHlC:hpkm`cDI3EGnB`@eb/8WK=M.P^iobMOkI'N@m8pW_,gk$G>G)<7.*^d9&,B>C.n_<>0\B]pJ8kc#C,cpQ%'E3m]-A)[X]Z(.c5V6B*lF?X"//5_t6q>1Hf`[fH8Ltn)"^.Pd*SPn\Z2s\<YgCb$d#cp9*k/1=>*p.Oj\$s.W0i;`#E3_bV$LoT%#3I^d^W2`"/5p#1X;b%3=4mWk%KjP=Z8@)R.,lP.*;E+B[=j'3":T:[%`-\o0&XSW;Q!'tTU9UCNE1&3%Mb=jqfP`18N8dtm(qBU%fAUZKf#_X16@sG@N0Ko1\O.`IJ7;PXE3C,M##spgJ>kC^;Zh@J,]nd?Z$Rn1^OQDGMNCJ5%;#<'9TWdR5KV'^(F7m2RdVQYpS/N!%dGXu-n6<+2`j2$cD*[qO@!RZ!#jt[X3Yl3jJJeeVn;tagELa8I#o."W.^?O9-;mrUdm[ZUY'iF,r59TiN,VK%2rkB<m81f\RQQ0K%Qt8-[g7VpZ'ge4'"lOtS'9%mV!3W.,>&<L;OOB./#Y5boE[oSlH)a"sHfe_`Vm.aC.P+3-Sno5)q`M!KGsXqbgW9F%'tD3/KI\Op%>mAJac*0X4PrU0IJRT\=OpmXS.><Xf$J#&7$?n4DDoeQGI-<gF@p(hq(Tc"`XAhLnNMSiB(J5!Z?_FNE#S'9:frRYE;fUD%GKO:r%2QKQ@#nf%*@NlgO&bt%@ko#rr<+Wp/J6?5lL6AcC`jDq0B)OJ:54H,l[a<G[3%a`$.aW<;4;N$BH"d1d!`g:%b_r0m+9CHA!/<Wq%AX>i?Y`sf#p]\;Y!NY$Un1/K$K(X9A&BB+H^apn=Kr*jK&eOiSCNp/NJ;@FLGb';ZB24b<"g<l94pG?EB;t8?n?cfi#ru$bU!u=t%nc*9pjk+#aFt0pMo\lScrVuuUjEB'*eJhgR;sT_Jni6K2VGc<h+83MmF78eV?'"<b\,XG`kRs!+*Ek,$q^Po[FDee\FdmVW)g(fM%SG+\?r-oP0rh<H,<<F_!!YsOt7Q5\rTpe`dGOcCGAF]GWasck7oCTY*i`Mn\g#B!#q0s<K*kq~>%AI9_PrivateDataEnd