%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: cut.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Nick La
%%CreationDate: 2/26/10
%%BoundingBox: 0 0 128 64
%%HiResBoundingBox: 0 0 128 64
%%CropBox: 0 0 128 64
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 64 8%%BeginData: 7198 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD0FFF84FD14FFA8FD69FF7DA8A8FD12FFAF7DA8AFFD66FF84FFAF%A8FD12FFA8FFA8A8FD65FF7EA8A8FF7EFD11FFA8A8AFFFA8A8FD63FFA8AF%FFFFFFA9A8FD10FFAFA8FFFFFFA8AFFD61FFA8A8FFFFAFFFA884FD10FF7D%FFA8FFAFFF84FD61FFA8FD04FFA8FFA8FD0FFFA8A8A8FD05FF84FD5FFFA8%A8FFA8FFA8FFA8A884FD0EFFA8A8FFA8FFA8FFA8AFA8FD5EFFA8FD05FFA8%FFAFA8FD0EFF84FFA8FD06FFA8FD5DFF84FFFFFFA8FFA8FFA8FFA8A8FD0C%FFA8A8A8FFA8FFA8FFFFFFA8A8FD5CFFA8FD04FFA8FFA9FFA8FF84FD0CFF%A8A8FFA8FFA8FD05FF84FD5CFFA8FFFFFFA8FFA8FFA8A9A8A8A8FD0BFF7E%A8A8FFA8FFA8FFA8FFFFA8FD5CFFA8FD04FFA8FFA9FFA8FFA8A8FD0AFFA8%A8A8FFA8FFA8FFAFFFFFFF84FD5CFFA8FFFFFFA8FFA8FFA8A9A8AF7DFD09%FFAFFD04A8FFA8AFA8FFA8FFA8A8FD5DFFA8FFFFFFA8FFA8FFA8FFA8A8A8%FD09FF7DA9A8FFA8FFA8FFA8FFFFA8A8FD5DFFA8FFFFA8FFA8A9A8A9A8A8%7DA8FD08FF7D847DFD04A8AFA8AFA8FF7DFD5EFFA8FFFFFFA8FFA8FFA8FF%7EA884FD08FFA87EA8A8FFA8FFA8FFA9FFA8AFFD5FFF7EFFA8FFA8A8A8AF%A8847DA8A8FD06FFA87D847DFD04A8FFA8FFA8A8AFFD5FFFA8FFFFA8FFA8%AFA8A87EA87DA8FD06FF7DA87EA884AFA8AFA8FFFFFF84FD60FFA8A8AFFF%A8A9A8A87DA87D847DAFFD04FFA8847DA87DFD06A8FFA8A9FD61FF84FFFF%FFA8AFA8A884A884A8A8FD04FFA87EA884A87EFFA8AFA8FFFFA8FD62FFA8%A8FFA8A9A8A87DA87EA87DA8A8FFFFFF7D847DA87D84A8A8A8A9A8AFA8FD%63FFA8FFFFA8AFA8A884A8A8A87EA9FFFFA8A884A87DA87EA8A8AFA9FF84%FD64FF7DFFFD04A87EA87DA884A87DFFFF847DA87D847DA884A8A8FFA8A8%FD65FFA8FFA8FFFD09A8FF7EA8A8A884A884A8A8FFFFA8A8FD64FFAFA8A8%FFA8A884A884A8A8A87DA884A884A884A87DA884A8A8FF7DFD66FFA8FFFF%FFFD05A8AFA8A87DFD07A884A8A8FFA8A9FD67FF7DFFA8A884FD07A87DA8%A8A884A884A87EA9A8A8A8FD67FFA8A8FFA8AFA8AFA8FFA8FFA8A8A8AFA8%AFA8A8A8A9A8AF84FD68FFFD09A8FFA8A87DFD08A8FF84AFFD69FF7EFFA8%A9A8FFA8FFA8FFA9A884FFA8A9A8A9A8AFA8A8FD6AFFA8A8FFA8A8A8AFA8%AFA8FFA884A8A9FD06A884FD6AFFA8A8A9FFA8FFA8FFA8FFFFFF84AFA8FF%A8FFA8FF84FD47FFA8A8FD0AFF84FD18FF7DA9A8A9A8FFA8FFA8FFFFA87D%FFA8A8A8A9A8A8FD46FFA8A87DFD09FFA8A87DFD18FF84FFA8FFA8FD06FF%A8A8FFA8AFA8A8A8FD45FFA9A8AFA9A8FD08FFA8A8FF7EFD17FF84A8FFA8%FFA8FFAFFFFFFF84A8A8AFA8A87DFD46FFA8A8FFA884A8FD07FF7DFFA8A8%7DFD16FFA8A9FFFFAFFD07FF7EFFA8FFA8AFFD45FFAFA8FFFFFFA8FD07FF%A8A9FFFFA8A8A8FD16FF7DA9A8FFA8FD06FFA87EFFA884A8FD45FF84FFA8%FFA8A87DFD06FFA8A8FFA8A9A8A8FD17FF7DA8A8FFA9FD05FFA8A87DA8A8%FD46FFA8A8FFA8FFA8A8A8FD05FFA8FFA8FFA8A8A8FD0FFFCACAFD07FF7D%A87D847DA884A87EA87DA8A8FD07FFC9FD3FFFA8A8A8AFA8A984A8FD04FF%7DA8A8A9A8A87DAFFD0BFFC9C2FD04C1BBC1C2FD04FFA8A8AF7EFFA8A8A8%AFA8A8A8FFFFFFCAC9C1C1BBC2BBC1C1C9FD3CFF84FFA8FFA8A87EFD04FF%A8A8FFA8FFA8A8FD0AFFC9BBC2C9FFFFFFCAFFCAC999C2CAFF7DFFFFA8A8%FFA8A8A8FFA884A8CFC1C1C9FFFFFFCAFFCAC9C1C1C9FD3AFFAF84A9A8A9%7D84A8FFFFA87DFD06A8FD09FFC8C1FFFFFFCFFFCACFCACFCACFC8C1A7A8%FFFFA8A8A8FFA8FFA8FF84C9BBCAFFFFCFFFCACFCACFCACFC9C2C2FD3AFF%A8A8A9A8A884A8FFFF84A87DAFA8A87DFD08FFCAC1C2FFCAFFCACAC9CAFD%05C9CAC9C1A0FFA8FF7DFD06A8A7BBCFCAFFCACFC9CFC9CAFD05C9C8BBFD%39FF84A8A8A87DA87DA8A8A87D847EA87EA8FD08FFC8C8FFFFFFCACFC9CF%C9CFC9CFFD05C9C1A7FFAFA8A8FFA8A8A8CAC1FFFFFFCACFCACFC9CFC9CF%FD05C9C8C2FD39FF84A9FD04A884A884A884A8A8A8FD08FFC9C1FFCFCFC9%CFC9CAC9CAFD06C9C2C9C2C1A8FFA8A8A8AF7EA899CFCFCFC9CFC9CAC9CA%FD06C9C2C9C2C1C9FD38FFA8A8A884A8A8847DA8A8A884A884FD08FFC1CF%CFCFCACFC9CFC9CAFD08C9C2C9C1C9A8FF84AFA8A8A0C8CFFFCACFC9CFC9%CAFD08C9C2C9C2C1FD38FFFD05A8FFA8A8A8AFA8A87EFD08FFC9C2CACFC9%CAFD04C9C1C199C2C2C9A0C9C2C299C199A8A8A884FFA8C1CAFFC9CAFD04%C9C1C199C1C2C9A0C9C2C299C198C9FD38FF7DFD05A87DA8A8A884A8FD08%FFC8C9FFC9CFC9CAC9C9C1C9C9CFC2C1C2C2C1C1BBC1BBC1A7FF84A8A8CF%C1FFCACFC9CAC9C9C1C8C9CFC9C1C2C8C1C1BBC1BBC1C2FD39FF84FFA8FF%FFA8A8FFA8A8A8FD08FF99CFCAFD04C9C899FD05FFC9C199C1BAC198C1BA%C9FD04A8A0C9CACAFD04C999C9FD04FFCFC1C1C1BAC198C1BAC1FD38FFAF%A8A8FFA8FFA884A8A87DFD09FFC1CACFFD04C9C1C9FD06FFC1C2BBC1BBC1%BAC1C2A8A9FF84C8C9FFFD04C9C2C1FD06FFC9C1C1C1BBC1BAC1BBFD39FF%A8A8A8FFFFFF7EA87DA9FD09FFC1CFFD04C9A0C1FD07FFC9C1C298C198C1%98C17DFFFFA89FFD05C9A0C2C2FD07FF98C298C198C198C1FD36FFCAFFFF%FF84A87D847DA87DA8A8FFFFCFFD06FFC2CACAFD04C9BBFD07FFC2C2C1C1%BBC1BBC1C1FFFFFFA8C2C9CFFD04C9C2C9FD07FFC1C2C1BBC1BBC1BBFD33%FFC2C1BBC1BBC1C9FF84A8A8AFA8A8A8C9FD05C1C9CFFFFFBACFC9C9C8C9%C2C1C9FD06FFC1C1C298C1BAC198A0FD04FFA0C9C9C9C8C9C2C8C1FD06FF%C9BBC299C1BAC198C1FD31FFCF98C2FD04C9C2C199FD04A8AF7DC1C1FD05%C9C1C1C9FFC1C9C9C8C9C8C9C1C1FD05FFC9BBC8C1C1BAC1BBC1A0FD04FF%C9C2CAC8C9C8C9C2C1C9FD05FFBBC8C2C1BAC1BBC1BBFD31FFC1C8FD04C9%C8C9C8C29FFFA8FFA8C2C2CAFD06C9C2C1CF9FC9C9C9C2C9C1C198C1C9CA%C9C2BAC2C1C1BAC198C198CAFD04FFA7C1C9C9A0C9C2C198C1C1CAC9C9BB%C1C1C7C0C198C198C2FD30FF9FC2C2C9A0C1BBC1A0C8C2C1A1A8A8A798C9%C9C99FC1C1C2A0C8BBC2CFC1C9C8C9C8C7C1C7FD05C1C8C8C8FD04C1BBC1%FD06FFC1C9C8C9C8C1C1C7C1C2C1C1C1C8C8C8FD06C1C9FD30FFC1C2C9C2%C1C9C9FD04C1BBC8A8A8C2C8C9C9C1C8C9C2BBC1BBC1BBFFC1C2C8C2C1C0%C7C0C7C7C8C7C8C7C7C0C1C0C198C1C9FD06FFC9C1C9C2C2C0C1C0C7C1C8%C8C8C7C7C0C7C0C1BAC1BBFD31FF98C8C2C1C2FFFFFF99C1BAC199A8A8C1%C2C9C2C1FFFFFFC898C1BAC1FFC9C2C8C8C1C7C1FD07C7C1C7C1C7C1C1BB%FD08FFC1C2C8C1C1C1C7C1FD07C7C1C7C1C1BACAFD31FFC1C1C8C1C8FFFF%FFC1C1C1BBC1FFFFC1C2C2C8C1FFFFFFC8C1C1C1BBFFFF9FC2C1C1C0FD04%C7C8C7C7C1C7C0C19EC198CAFD08FFC9C1C1C19EC1C0C7C1FD05C7C1C7C0%C198C2FD32FF98C19FC198C1C9C298C19EC19FFFFFC2C1C8C1C1BBC9C2C1%C0C198C1FFFFFFC1C1C1C7C7C8C7CDCDCDC7CDC7C7C1C1BBC9FD0AFFC9C1%C1C7C1C7C7CDC7CDC8CDFD04C7C1C1FD33FFC8C1C8C1C1BBC1C1C7C1C1BB%CFFFFFC9C1C1C7C1C1BBC1C1C7C1C1C2FD04FFC1C1C0C7C7CDC8CDC8CDC7%C7C1C198C9FD0CFFC9C198C1C1C7C7CDCDCDC7CDC7C198C8CFFD33FFCFC1%98C7C1FD04C7C198C2FD04FFC1C1C0C7C7CDC7C8C7C198FD06FFC9C1BAC1%C7C8C7CDC7C1BBC1C2CFFD0EFFCFC8BAC1C1C7C7CDC7C8C1C1C1C9FD36FF%CAC1BBC7C7C8C1C1BBC2CFFD05FFC1C1C1C8C7C8C1C1C1CFFD08FFC99FC1%98C198C1C1C2CAFD12FFCFA0C198C198C1BAC2A0FD39FFCAC898C198C19F%C9FD08FFC9C198C198C1A0FFFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">cut</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2010-02-26T07:04:03-05:00</xmp:CreateDate>
         <xmp:ModifyDate>2010-02-26T07:04:03-05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2010-02-26T07:04:03-05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>128</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAgAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYqxvVJrzWvXtb&#xA;BzHZ24Iecf7tmXdUU/yg9TkhsxO6caPfi+02C5/bZaSDwddmH3jAQkFGYEuxV2KoPWL8WOmz3P7a&#xA;rSMeLtso+84QEEpPpc95o3oWt+5ks7gARzn/AHVKwq0bH+UnocJ3QNmSZFk7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUo1q5nmmj0izbjPcKWuJR/uqDoT826DCEHuV&#xA;xHBZ2yW1uvBIxRVHYePzOKpdoMv1bVbzTztHN/pVv8ztIPvwlAZDkWTsVdirHtfm+s6rZ6eN44f9&#xA;KuPCo2jB+nJBiUeY4L22e2uF5o4owPh4/MYEqWi3U8M0mk3jcp7dQ1vKf92wdAfmvQ4lA7k3wMnY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUk8v0ktZ9Wl3mvnZ9+qxoSq&#xA;J9AGEsR3rp5SxJPU4qlGozNbTW2oJu1pIC9Opjb4XH3ZIILL0dXRXU8lYAqR0IOQZt4q07qiM7Hi&#xA;qgliegAxVh+nzNcz3OoOPiu5CUB6iNfhQfdkywCbQSlWBHUZFLtfpHawatFtLYur7dTG5Cun0g4Q&#xA;p707yLJ2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVItJU24vtIO31Vy&#xA;9uPGKU81+41rkixHcpSyYql1/Ki20pfdeJqPHbCEFNvJuo/W9HWJjWW1PpN/q9UP3bfRgkN0xOye&#xA;5FkkXnLUfqmjtEppLdH0l/1ern7tvpyURuxkdkosJUa2iKbLxFB4bYSgJhFJgVW1VTcCx0gb/WXD&#xA;3A8Iojzb7zSmISe5PsiydirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVS&#xA;XWx9U1Gy1MbJX6rdH/iuQ1Un2VskGJQuor6c7Ds3xD6cQpY/rs9LYIOsjAH5DfJBiW/JmoG01dYX&#xA;NIrsemf9Ybofv2+nGSxO70PK2x535z1H61q7QqaxWo9Mf63Vz9+30ZZENcju1oc9bYof2GIHyO+J&#xA;QGQacvqTqOy/EfoyJZBFaIPreoXupndK/VbU/wDFcZqxHszYlITvIsnYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUNqVkl7YT2rdJUKg+DdVP0HCEEMcWd7rSopJNri3Jiu&#xA;AeoZPhav4HCxSLVVLyRr4An7/wDayQYlCGF0USR1WSMh0I6grvhV6D+m4v0B+ldv7rnx7ep04/8A&#xA;B7ZXW7ZezzSVZXYyuSzuSzE9STvljUjtFfjJKviAfu/28SkMiM722lySR73FwRFbgdSzfCtP15Fk&#xA;yXTbJLKwgtV6RIFJ8W6sfpORLIBE4EuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxVjV3CLTXJojtBqSeqg7eqmzj6RvkujHqkt7ARc8T+yKficLEtx2/tiqEeW6ER0X/j&#xA;39b1wf8AJp9n5V/HD5o8ls1t7Yqt0+Ai7oO60/EYlQyXT4Rea1DGN4NOT1X8PVfZB9A3yJ5MhzZR&#xA;kWbsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqT+aLV5NO+tRD9&#xA;/ZMJ09wv2x/wOGLGSTXKpO0VxHukqAj9eSQqw2/tiqE1q1Nu1vfgfDG3pzf6jf0xCC1PAKbbg9MV&#xA;UbREhkknfZY0JP68VZN5WtGi036zKKT3rGd/ZT9gf8DkZMopxgZOxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KtMqspVhVWFCD3BxViFlCYJrnTHrytHJiJ7xP8S5Ms&#xA;Am1vD0yKUTdaYl3ZTWz7CVSoPgex+g42mmL6dI8tkYpdp7ZjFKD1+Hp/TJFgGntzc3Fvpydbpx6p&#xA;HURr8TYqzlVVVCqKKooAOwGQbG8VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqS61qNzJcDS&#xA;rBuNw45XM/8AvqM/8bHtkgGJLvK9w/1abT5m5T2DmOp6tG26N92MlinWRZJL5nuJDbQ6fC3Ge/fh&#xA;yHVY13kb7sMWMluh6pOtw2lXzc7mMcref/fsY8f8od8JCgp5kWTsVdirmZVBZiAB1J2GAmlAt2FU&#xA;j13Sr1ruLUtPVXuI19OaAmnqJWoofEZIFiQgbTzVpqSGK8WS1lQlZFZSwBGxHw7/AIY8KBJN4/Mu&#xA;gvQLexj/AFqr+sDBRZcQYxqd5bQ67JJYMt3HfKtYoiD+9rT36/xyQGzA8078vaPdw3Mmo36hLiRf&#xA;TihBrwStTU+JwEsgE/yLJysrAMpBB6EbjADakU7CrsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;FtMk9KbUUlH+mfWWM7dyp3Qj/Jp0yRYBRS9Wz163uiaRXH+jz/TujfQcNbLe7L8gzYr9aW81i7vq&#xA;gxW3+i2/0bu30n8Mkw6oK5kkm1KxWH/en11MZ8ADVifanXChm+QbFG8vLaytpLq6kEUEQ5O7dAMr&#xA;y5Y44mUjQDZixSySEYiyWOC68wa6PVgkOj6QfsSkA3Uy/wAwrtGD27/PNV4mbUbg+Fi/2R/V+Obt&#xA;PDwafYjxcv8AsR+tQk8r+WKhrmKa+mG5nuJpCxPiaMo/DKpaLT9QZnvJLZHX6j+EiA7gAh20DQYT&#xA;ysRcadKNxLbTvWvycsMqOlwj6OKB8pFtGrzS+vhmPOI/QqR+ZtW0dSNSI1KxAol7GoSVDT4RMnSl&#xA;duQy7Fr8mE1kPHD+d1HvDVk0OPMLxjgn/N6H3FX0/SbO78vSSTqj396HnE5ALBn+JKN1A6VzfCYO&#xA;45OhMCNjzQUS2s1jDcvChZfgnBUfaGxrt45Jiu1L6iNP9a2iigubZlmSVFVT8G5qRT54DIAWTsyE&#xA;SdhzRsWsa75gQNpg/Rmm0o9/KoaVzT4hCh24g7cj/ZmlOoy6gnwvRj/nHmfcHcjT4tOP3vryfzRy&#xA;H9Y/oU5fK/l473zXGpTdTLcTSE1/2JQfhlUtFg/j4pnzJbY6/P8AwcMB5AftQ7+XvLaEtawTWUvU&#xA;TW88isD7ciRlJ0uAbxBie8SLYNZnP1ESHcYhfDrmsaMeVxKdW0sfbcgLdRL4mm0gHf8Ahk4azLh+&#xA;o+Jj/wBkP1/jkxlpMWf6R4eT/Yn9TLrO8tr22jurWQSwSjkjr0IzeYssckRKJsF0uXFLHIxkKIVs&#xA;sa3Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FWMeZYTaajBqCbRXI+r3H+sN0b+GSDCTGtZMkssaL0ALf&#xA;Sf8AayQYllP+I/8AnVPrvL/SuP1f39bpX7viyNbs72Yroly0XrxE7MA1PcbfxyRYBkPlK1NxfT6i&#xA;4qkI9GD/AFju5+7bIyZRZZkWbFL4rrfmB7aXfSNHo06fsy3JFQG8VjHbxzS5iM+YxP8Ad4+fnL9j&#xA;ucI/L4RIf3mXl5R/airq+aRjvRR0GTy5raseGknv9csLRuNxOqOd+PVvuFTmDl1MI8y52LSzn9IU&#xA;IdWs7oE28yyU6gHcfQd8qjqIy5Fslp5Q+oUo3V9BEp9aRVUgghyKEHqKHrlc8oHMs8eInkEF5b1k&#xA;RXMmlwS+rbk8rTr8NT8Sb/OuZvYurHEcN2Ocf0hx+2tIeEZqo8pfoKeLHEmpXmnhvhuEEqDwcj4v&#xA;pP2s6R5pJ9Psp9W1f9GT1W0tv3l/Qkcgposdf8o/hmn18vGyjCPoHqn+gO40MfBxHMfrPph+kswu&#xA;bxABFEAkMYCoi7Cg2GwwZM3QcgjHi6nmUov9YsrQA3Myxk9ATufkBvmDl1EY8y5uLTSn9ItCQ61Y&#xA;3ZIt51dhvx3B+40OUx1MZ8i3S0s4fUFlxexxDnJIEH8zGmRnlA5llDETsAt8l6/bWmutpsUoaxvi&#xA;WiQV4xz+C9qP7d6ZPsrWCGbwwfRP7D+1e1NHKeHxCPXD7R+x6NnUvLuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KoPWNPW/02e1P2nWsZ8HG6n78IKCGE2kZugrMP3ijhIO4ZTvk2ClPp8keox27MRbzEzIn&#xA;YuBQ/TjaKU7mA27MVH7xxwQDqSSKYqz/AEfT10/TYLUfaRayHxc7sfvyBLYAjMCWC6BcH/D63LbT&#xA;ahPNcTE9SWciv3KM5vSz/c8XWciT83otXD9/w9IRAHyUNX1JrWxmnTd1FEH+Ux4j8TlOozcMSQ2a&#xA;fCJzALJvL/lex020Rpoln1CQB7q5kAdy53YAnoB7ZutH2fDFEWLmeZPe6nWa+eWWxqA5AdyC85eW&#xA;rSfTptRs41t9QtEaVZYxw5qoq6vxpWq9Mx+09BCWMziKnHfbr3t/ZmulHIISNwltv07nk97Gyyhi&#xA;xdZVEiMxqaN4n2zj8g3972OI2Pcr6FcC21mymJoqzIHPgrGjfgcyNBk4M8D/AEg0doYxPBMf0T9m&#xA;70X6jL+iP09wP1r1/rNO/wBX+xw/4HfPQ76PndbWo6DNH6Wr3ykFrq8eNHHeOMAJ+BOc3iyb5Z9Z&#xA;TI+A5PQ5obYodIwB+J5tXt8ILeWY7iNWanjQVynJl4QS24sXFIDvTTyj5dtVsItTvo1udRvVEzSS&#xA;ANwVxVEQH7NFObDs3QxEBkmOKct9+nucPtHWyMzjgeGEdtuvvRnmHyvYanZuY4lhv4wWtrmMBXDj&#xA;oCRSqn3y/W9nwywNCpjkQ0aLXzxS3NwPMPHL4SN6dwzM3rA/aJJDKaMN84jJex73t8RAuPcp2lxJ&#xA;bXUNzGaSQusiH3Ugj9WDHMxkJDmCzyQEomJ5EU+gs9IfNXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;VFQK7noPlja0xLVIf0TrE148Ttp91R3dBUJLWhr8+uTG7A7FQ13VNEu9OSS0uQL22cSRAq4J7Mu4&#xA;p74gFSQu0S2fVdWgvTCyWVsOYZxQNL2APfif1YnZRuzKorSu43IyDN2KvN9Ld4tHjs3r6tlNNbyg&#xA;9mVyafcc5LFIxxiJ5xJH2vVZwDlMhymAfsQ2t8W06WMk83p6YHUspDD9WYerzAR3btKKmCzTy35r&#xA;07VrGMvMkV8igXNu5CsHA3IB6qfbOo0PaOPNAbgS6h0Gu7PnhmaFw6FBecvM1lDp02m2cq3GoXiG&#xA;FY4yG4K4ozOR9n4TtmP2p2hCOMwibnLb3N/ZmgnLIJyFQjvv19zzPV4eDRRrv6SBSc5DJIWB3PWa&#xA;eV2e8qeiWL3+r2lolazSqCR2FasfoArmRoIcWeA/pD7N2HaE+HBM/wBE/bs92+rQ/Vvq3Eehw9Ph&#xA;24040+7PQHz553pyNYxalpjn95aXjHwqjj4G+mmcuTwyyR7pk/A8npa4o4598APiOahqU8Zs5lkN&#xA;EdSnuSRTbMPUZQIm3JwQPEKZJ5J81WF3pcFhcyrBf2iLEY5CF5qgorLXrt1zddldownjEZGpRFe9&#xA;1XanZ84ZDOIuEt/cj/MPmrT9Ms5PSmSa/cFba3jIdi52BIFaAe+ZOt7Rx4oGiDPoHG0XZ88sxYqH&#xA;U+TynUbVorW3hJrIgLP82Nc4jJMAAPZYZ3Inol9pbSXN3DbIKyTOsaj3YgD9eDHAykIjmW/JMRiZ&#xA;HkBb6Cz0l82dirsVdirsVdirsVdirsVdirsVdirBdf8AMd9qGoT6fp9wbWwtm9O4uo9pJJB9pUb9&#xA;kDxznNbrp5JmEDwwjzI5kvRaPQwxwE5jinLcA8gPNjcsXlZZSkp5z1+KRpJC1fEsDSuaqQwXR5+8&#xA;u0jLUVY5e4Kk+pXVnFHbveSXGjvIhmgduTqoP7DHentmZptfLTyG/Fj7j09ziajQR1MTtw5O8cj7&#xA;2QzTWsZmniiQxKBcRrQEejIfip7Bt/lnW8Y4eK9nkuA3VbpPYS3t7ZlJLyW10YO5ht424M6k9Xbr&#xA;x9s5fUauWoJNmOLoB18y9Pg0sdMAKEsvUnevIIX0/KRlCW54T1+GRZJAa+IYmlc19ae6HP3lz+LU&#xA;1cuXuCe+XPNV1Y6lDpmoXJurO4PC3uJDWWNz9lXP7QPSubLQ9oyhMY5niieRPMOv1vZ8cmM5IDhl&#xA;HmByPuX+abM6Vq73tKadqRHrP2iuVFAT4Bx+ODtPCcWQzH0T+yX7WPZ+XxsXB/HDl5x/Yx92a6nL&#xA;n7I2QeAzj9TmM5O1iOAItdFtpwDNAstO+4P3imDHllHbmGg6ox5GmmsYLNSLaBYierdT953yUtSe&#xA;gSMpn9RtJL6IUZmPuScjCRJc/GWU/lj5fcPJrc6FVIMdmD3rs7/8aj6c7DsHRn+9l7h+k/odL27r&#xA;BQxD3y/QP0vQ86d5lhfnawezu11qJSbaVBb6iBvxAP7uWnsdjmg7WwGEvFH0naX6C77srMJx8I/U&#xA;N4/pDDrmY3NxQGsSbJToffOR1mYylXQO9xx4Y+aNt9MhuFCyxLIvgdj9BG+YePNIe5pyZzHkaRi6&#xA;RbWil7e2WNz+0SWP3nLpag9A0fmJT2kbSi/hJLM537k5RGZJ3c3FLuTP8u9AN5qp1WRf9EtCRCT0&#xA;eX2/1Rv86Z1XYWjM5+JL6Y/f+xwu2tZwY/DH1S5+79r1DOweRdirsVdirsVdirsVdirsVdirsVca&#xA;0269sVeK20s40uUKSJh6nPx5VNfpzzzxeGNdXvpxHiDu2eh6D/hP/C0Nfq/1X0R9b9Thy50+PnXf&#xA;ly/szrNJ+W/Lj6eGt7+2/wAe55jV/mfzB+rivavsp5TcQRkyyw8vq/NvR5dfTB+Gv0Zxc5jjIHJ7&#xA;CEjsDz6+9nY0u6HkH6/Rvrf1fp3+rceHH5U+POzuX5Dz4Ps/seQqP5/y8T8fakFzNGdLtgxP1SsQ&#xA;n49fS25UzmZZhQieW3yeghA+Ia+revezrXv8J/4Wmp9X+q+ifqnp8OXOnwcKb8uX9udPq/y35c/T&#xA;w1tX2V+Pe89pPzP5gfVxXvf228qe2lRIpRUSsRx8anp9OcRCdyoPYCYNjo92vLO2vbaS1uoxLBKO&#xA;Lo3QjPSsuKOSJjIWC+eYssschKJohgOoeTtZ0eYy6Yv6RsK1EBNJkHgP5vo+7OO7Q9n5xPFj9Q+3&#xA;9vwekw9qYswrJ6J9/Qug80aTbr6d7FPaTDYxyxMDt8q5o5aeUDRFFZ6HJLeBEh5FDXeu2l63p6Zb&#xA;z3kh2Cxxt198Y6SeQ1EW3Y9LLGLyGMR5lGaP5Cv76ZLnXKQWoPJbFDV27jmw6D5b/LOj7O9nyDxZ&#xA;dh3df2fe4+q7YhAcOHeX879X4+bP4444o1jjUJGgCoiigAGwAAzrYxAFDk81KRJs812FC2SOOWNo&#xA;5FDxuCrowqCDsQQcEogijyTGRBsc3n+teQb6yme60Sk9sfiaxc0df9Rj1Hz3+ecl2j7Pk3LFuO7r&#xA;+373pdL2xCY4c20v536/x8kDZ61bWD8NSt57SRdiskbD7s5uWknjNSFOVl00sgvGYyHkUbP5q0q4&#xA;T0rKKa7mOyxxRMTv86YY4JT2AsuPDQZIm5kRHmVth5N1jWJhNqa/o/T61NuDWZx4H+X6fuzedn+z&#xA;85Hiyekfb+z4rm7UxYRWP1z7+g/Wz+zs7aztY7W1jEUEQ4xovQDOxxYo44iMRQDzWXJKcjKRslWy&#xA;xg7FXYq7FXYq7FXYq7FXYq7FXYq7FXnvmnynf2eoS6npkJubO4b1Lm1j+2jn7TIvcHrtnI9sdjzM&#xA;jPGLB6d37Hpuz+0YTgMeQ8MhyPQsf5eU92njeO4H2omRwa+BUHjnN8GQbOz/AMI6EGPwTHSPK97r&#xA;l1GWt3s9HQhneQcHkUfsovv49P1ZtuzOxsmSXFPaHf8Aq/W4up7Qhp4miJZfLp73p3oQ+h6HAejx&#xA;9P06fDxpTjTwpndcA4eGtuTyXGb4r3eZ6t5av9DuHpA97orElHQc3jU/suvt49P1Zw3afY+THK42&#xA;Yfjn+t6zTa+GojzEcv3+5BrL5KUBoYJJLv8AZiCyE8vAKTxzU8Ezs3mOq6kCPwTryz5Uvr3UotU1&#xA;OA2tpAedtav9t3G4Zx2A6750XY/Y0hITyCgOnf8AscDX9owhjOPGeKR5no//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:4D6B230F0C2068118F62AD85486E0984</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:4D6B230F0C2068118F62AD85486E0984</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:919b6c6d-0112-1c4b-bcec-0e9544a32c5f</stRef:instanceID>
            <stRef:documentID>uuid:62351D7124EEDD11AF8BBF931F055AD6</stRef:documentID>
            <stRef:originalDocumentID>uuid:62351D7124EEDD11AF8BBF931F055AD6</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:OriginalDocumentID>uuid:62351D7124EEDD11AF8BBF931F055AD6</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4D6B230F0C2068118F62AD85486E0984</stEvt:instanceID>
                  <stEvt:when>2010-02-26T07:04:03-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>128.000000</stDim:w>
            <stDim:h>64.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 8.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -64 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 64 li
128 64 li
128 0 li
cp
clp
[1 0 0 1 0 0 ]ct
112.436 56.361 mo
112.378 56.1657 112.308 55.9711 112.227 55.7783 cv
111.987 55.2088 111.666 54.6934 111.28 54.2391 cv
112.131 52.2166 li
112.148 52.2168 li
112.211 52.2168 li
112.274 52.2168 112.339 52.2166 112.405 52.2162 cv
113.293 54.3256 li
113.01 54.9973 112.716 55.6963 112.436 56.361 cv
false sop
/0 
[/DeviceCMYK] /CSA add_res
gsave
[-4.43348 0 0 4.19758 111.928 52.1904 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%!<E3%!WiE)!WiE)!WiE)!WiE)!s8W-!s8W-!s8W-!s8W.
"9\i1"9\i1"9\i1"9\i2"U,&5"U,&5"U,&5"U,&6"pP89"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ>#RC\A
#RC\A#RC\A#RC\B#mgnE#mgnE#mgnE#mgnF$47+I$47+I$47+I$47.K$O[=M$O[=M$O[=M$O[@O$k*OQ
~>
0 0 <~zzzzzzzzzzzzzzz!!**$!WiE*!s8W."9\l3"U5/8#6tJ>#RC_C#mgqG$4@4L$k*OR%1NdW%M''\&.fBa
&J5Tf&eYik',2,p'bqH!()@]&(Ddo*(`=2/)B'M5)]Kb:*$$%?*?H7C+!2RI+<VgN+X/*S,9nEY,U=W]
,palb-7:/g-n$Jm.4H_r.kE5&/1iG*/hSb00/#"50JP::1,:U?1G^gD1c.'I2)[?N2`EZT3&ioY3B9,]
3]fDb4?P_h4Zttm5!M7r~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
np
109.789 57.7812 mo
113.15 49.7959 li
115.201 50.5693 li
111.84 58.5566 li
109.789 57.7812 li
112.602 48.5195 mo
108.465 58.3506 li
109.4 58.7041 li
112.389 59.833 li
116.137 50.9229 li
116.139 50.9229 li
116.525 50.001 li
112.602 48.5195 li
.05 0 0 .25 cmyk
f
112.56 56.8463 mo
112.526 56.6842 112.485 56.5223 112.436 56.361 cv
112.716 55.6963 113.01 54.9973 113.293 54.3256 cv
113.457 54.715 li
112.56 56.8463 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[2.4 0 0 3.84 111.84 6.4 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 8 
/M[5 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<N<(!WrK+!s/T-!s8T-"9\f."U"o0!X/]/!s/W/!s/K+!s/K'~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~#RC_D$P!UT$k*d]%h9$a'+k``)&3bo$Q9cn%LF!e%grRW&I\mG~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
112.675 57.8032 mo
112.664 57.485 112.626 57.1652 112.56 56.8463 cv
113.457 54.715 li
113.715 55.3305 li
113.334 56.2372 112.966 57.1112 112.675 57.8032 cv
gsave
[-4.28923 -2.95468 -2.95468 4.28923 115.039 55.584 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzz!!**$!<E3%!<E3%!<E3%!<E3%!<N<(!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8W-!s8W-!s8
Z/"9\i1"9\i1"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,&5"U,)7"pP89"pP89"pP89"pP89"pP8:#6t
J=#6tJ=#6tJ=#6tJ=#6tJ>#RC\A#RC\A#RC\A#RC\A#RC\B#mgnE#mgnE#mgnE#mgnE$47+I$47+I$47
+I$47+I$47+I$O[=M$O[=M$O[=M$O[=M$O[=M$k*OQ$k*OQ$k*OQ~>
0 0 <~z!!**$!<N<(!WrN,!sA`0"9er4"U5/8"pYA<#7(S@#RLeD#mq"H$4@4L$OdFP$k3XT%1WjX%M''\%hB3
_&.fEc&J5Wg&eYik',)&o'GM8s'bqK"()@]&(Ddo*(`4,.)&X>2)B'P6)]Kb:*#ot>*??1B*ZcCF+!;[
L+X&!Q+sJ3U,9nEY,U=W],paia-71&e-RU8i-n$Jm.4H\q.Olnu.k<,$/1`>(/M/P,/hSb00/"t40JG1
70ekC;1,:U?1G^gC1c.$G2)R6K2E!HO2`EZS3&ilW3B9)[3]];_4$,Mc4?P_g4Ztqk5!D.o5<h@s~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
np
116.361 50.8077 mo
115.398 48.5195 li
115.379 48.527 li
114.542 46.5441 li
118.065 38.1979 li
117.896 38.5986 117.721 39.0139 117.541 39.4394 cv
118.221 41.2607 118.627 43.3623 118.627 45.625 cv
118.627 46.3851 118.582 47.1288 118.499 47.8511 cv
118.043 48.9289 117.674 49.8007 117.479 50.2646 cv
117.438 50.364 117.139 50.597 116.361 50.8077 cv
121.733 40.2055 mo
122.564 38.2414 li
122.369 38.7026 122.079 39.3888 121.733 40.2055 cv
122.68 37.9651 mo
122.691 37.8966 li
122.69 37.9264 122.686 37.9492 122.68 37.9651 cv
122.388 36.9826 mo
121.945 36.1643 121.06 34.9857 119.93 33.7803 cv
119.896 33.8591 119.857 33.9513 119.813 34.056 cv
119.936 33.7656 li
120.297 34.1504 120.713 34.6152 121.113 35.1094 cv
121.763 35.9109 122.156 36.5285 122.388 36.9826 cv
gsave
[-9.51632 0 0 9.00996 111.886 50.8164 ]ct
clp
/0 /Gradient get_res exec grestore
np
112.57 51.2149 mo
119.936 33.7656 li
120.297 34.1504 120.713 34.6152 121.113 35.1094 cv
122.592 36.9336 122.742 37.8047 122.68 37.9658 cv
122.305 38.8574 121.271 41.2949 120.215 43.7959 cv
119.068 46.5049 117.891 49.2881 117.479 50.2646 cv
117.398 50.46 116.32 51.1719 112.57 51.2149 cv
119.596 32 mo
111.072 52.1934 li
111.072 52.1934 111.467 52.2138 112.072 52.2158 cv
112.148 52.2168 li
112.211 52.2168 li
114.119 52.2168 117.818 52.0342 118.4 50.6523 cv
119.191 48.7754 122.818 40.2129 123.602 38.3535 cv
123.658 38.2158 123.686 38.0635 123.687 37.8994 cv
123.699 35.8535 119.596 32 119.596 32 cv
.05 0 0 .25 cmyk
f
118.499 47.8511 mo
118.582 47.1288 118.627 46.3851 118.627 45.625 cv
118.627 43.3623 118.221 41.2607 117.541 39.4394 cv
117.721 39.0139 117.896 38.5986 118.065 38.1979 cv
119.813 34.056 li
119.857 33.9513 119.896 33.8591 119.93 33.7803 cv
121.06 34.9857 121.945 36.1643 122.388 36.9826 cv
122.631 37.4594 122.695 37.7561 122.691 37.8966 cv
122.68 37.9651 li
122.68 37.9654 122.68 37.9656 122.68 37.9658 cv
122.646 38.0457 122.607 38.1378 122.564 38.2414 cv
121.733 40.2055 li
121.29 41.2533 120.755 42.5163 120.215 43.7959 cv
119.613 45.2178 119.003 46.6603 118.499 47.8511 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[6.72 0 0 15.36 116.64 15.52 ]ct
snap_to_device
<<
/T 1
/W 14 
/H 32 
/M[14 0 0 -32 0 32 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!$#!WiH+"9\])!!!!"!<N<)!sA`1!!!!!!!**%!WrN-"9ec*!!!$#!WiH+"9\l3!!!!"!<N<)
!sA`1"U4r,!<E6'!s8Z/"U,)7!!!$#!WiH+"9\l4"pP&.!<N<)!sA`1"U5/9!<E6'!s8Z/"U,)7#6t82
!WrN-"9er5"pYA=!<N<)!sA`1"pP;;#7(A4!s8Z/"U,)7#6tM?!WrN-"9er5"pYA=#RLS8"9\l3"pP;;
#RC_C!s8Z/"U5/9#7(SA#mpb;"9er5"pYA=#RLeE"9\l3"pP;;#RC_C$46n>"U5/9#7(SA#mq"I"9eu6
#6tM?#mgqG$O[+A"pP;;#RC_C$47.K"U5/9#7(SA#mq"I$Od1C#6tM?#mgqG$O[@O"pP;<#RLeE$4@4M
$k3@E#7(SA#mq"I$OdFQ"U52;#RLhF$O[@O%1NLG#6tM@$4@4M$k3XT"U52;#RLkH$k*RS%1NIF"pYD?
$4@7N%1NaU"U,)9#RLhG$k3XT%1NIF"pYD?$4@:P%1NaU"9eu7#RLhH$k3XT%1NFD"pYD?$4@7O%1NaU
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
<~!!!!!!!*0+#R_(Q&etBH!!!!$"UGGE%h]Qm!!!!!!X/f9$kEpa()R#O!!*3,#n%4S',;?&!!!$%"pbSG
&/#]o)B8_W!sJr;%1a'c(E"26!!3</$4IFW'G_Q**?YCd"pkYI&/,cq)BBnD!sT#=%1j-e(E+88+X@3s
$4RLY'GhW,*[)aT#7:kM&JPuu)]g+H,ps!-%M09g(`FD:+s\Nb$OmX['c.c.+!DmV.4Yi<&el-"*$-7J
-7CAr%hTKk)&jV>,:+`f/2%SK'c7i0+!MsX.4d)+&eu3$*$6=L-7LGt0JaCZ)&s\@,:4fh/MJq;()\&4
+<r0\.P3;.1c?0h*?QIN-RgT!0f(^I)B9hB,UOrj/hf(=3'&!"+X8<^.kNG12)dQY)]p7M-n6f%1,LpM
4$FT)+sn`i/ho.?3'08g)]g1M.P<D22)mW[5<p/.+XJTj1,V!O4?l(r)BBtI.5*J93BTJj5X62,+=&Bg
1H7HZ5X7S"(`XYD.5!D:4[21s5X6,)+!W0c1H7Q`5X7S"()n;>-nR265!V@u5X6)'*[<'b1,qB]5X7S"
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
118.498 47.8584 mo
118.498 47.856 118.499 47.8535 118.499 47.8511 cv
119.003 46.6603 119.613 45.2178 120.215 43.7959 cv
120.755 42.5163 121.29 41.2533 121.733 40.2055 cv
118.498 47.8584 li
122.564 38.2414 mo
122.607 38.1378 122.646 38.0457 122.68 37.9658 cv
122.68 37.9656 122.68 37.9654 122.68 37.9651 cv
122.68 37.9668 li
122.564 38.2414 li
118.065 38.1979 mo
118.834 36.3742 119.476 34.8536 119.813 34.056 cv
118.065 38.1979 li
122.691 37.8966 mo
122.695 37.7561 122.631 37.4594 122.388 36.9826 cv
122.589 37.3551 122.699 37.6529 122.699 37.8447 cv
122.691 37.8966 li
gsave
[7.84798 5.91205 -5.91205 7.84798 115.314 37.8818 ]ct
clp
/1 /Gradient get_res exec grestore
np
115.564 56.3619 mo
114.951 54.9036 114.267 53.2778 113.791 52.1457 cv
114.527 52.2014 115.232 52.2168 115.787 52.2168 cv
115.85 52.2168 li
115.869 52.2165 li
116.72 54.2402 li
116.188 54.8685 115.796 55.5915 115.564 56.3619 cv
gsave
[3.72952 0 0 3.53107 116.451 51.5801 ]ct
clp
/0 /Gradient get_res exec grestore
np
112.799 50.5693 mo
114.85 49.7959 li
118.211 57.7812 li
116.158 58.5566 li
112.799 50.5693 li
115.398 48.5195 mo
111.475 50.001 li
111.861 50.9229 li
115.609 59.833 li
118.6 58.7041 li
119.535 58.3506 li
115.398 48.5195 li
.05 0 0 .25 cmyk
f
115.44 56.8499 mo
113.45 52.1171 li
113.564 52.1276 113.678 52.1371 113.791 52.1457 cv
114.267 53.2778 114.951 54.9036 115.564 56.3619 cv
115.516 56.5228 115.474 56.6853 115.44 56.8499 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[3.36 0 0 6.24 112.8 6.4 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 13 
/M[7 0 0 -13 0 13 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&4!s/H+"U"r1!WW?+"9\f.!<`N."9S`-!sA`0"9\f.!sA`0"9\c."9\l3"T\Z,"9er5!!*-'"9eu0
!<N<)"9ec*!<N?+"TSN&!<N?+!!!!!!<N?~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~)]KV/%gW.P(`!bp#QPST'bV#a"VML`'+k]^%MKNj'G:uc&/5ip()@/b&eu3#)[$HW',VZ0!<roC'cA%m
!sf;I()m5R":5PO(]XO:"q(qU!!!!##7M1~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
115.325 57.8037 mo
114.669 56.2436 113.623 53.7585 112.908 52.0588 cv
113.088 52.0811 113.269 52.1004 113.45 52.1171 cv
115.44 56.8499 li
115.376 57.1629 115.337 57.4818 115.325 57.8037 cv
gsave
[4.28923 -2.95468 2.95468 4.28923 112.961 55.583 ]ct
clp
/1 /Gradient get_res exec grestore
np
115.428 51.2149 mo
111.678 51.1719 110.602 50.46 110.52 50.2646 cv
110.325 49.8008 109.957 48.9294 109.501 47.852 cv
109.418 47.1294 109.373 46.3854 109.373 45.625 cv
109.373 43.3623 109.779 41.2607 110.459 39.4404 cv
110.386 39.2682 110.314 39.0977 110.243 38.9291 cv
115.428 51.2149 li
107.255 42.5426 mo
106.48 40.711 105.78 39.0565 105.422 38.2081 cv
107.255 42.5426 li
105.32 37.9652 mo
105.314 37.9486 105.309 37.9247 105.309 37.8932 cv
105.32 37.9652 li
105.59 37.0239 mo
105.82 36.5636 106.22 35.9285 106.896 35.0957 cv
107.295 34.6055 107.707 34.1465 108.064 33.7656 cv
109.236 36.5416 li
108.695 35.2603 108.275 34.266 108.07 33.7803 cv
106.921 35.0061 106.025 36.2042 105.59 37.0239 cv
gsave
[11.2192 0 0 10.6223 115.262 51.457 ]ct
clp
/0 /Gradient get_res exec grestore
np
115.428 51.2149 mo
111.678 51.1719 110.602 50.46 110.52 50.2646 cv
110.109 49.2881 108.932 46.5049 107.785 43.7959 cv
106.727 41.2949 105.695 38.8574 105.32 37.9658 cv
105.256 37.8037 105.408 36.9287 106.896 35.0957 cv
107.295 34.6055 107.707 34.1465 108.064 33.7656 cv
115.428 51.2149 li
108.404 32 mo
108.404 32 104.301 35.8535 104.312 37.8994 cv
104.312 38.0635 104.34 38.2158 104.398 38.3535 cv
105.182 40.2129 108.809 48.7754 109.598 50.6523 cv
110.18 52.0342 113.877 52.2168 115.787 52.2168 cv
115.85 52.2168 li
115.926 52.2158 li
116.531 52.2138 116.926 52.1934 116.926 52.1934 cv
108.404 32 li
.05 0 0 .25 cmyk
f
109.501 47.852 mo
108.998 46.661 108.387 45.2182 107.785 43.7959 cv
107.607 43.374 107.429 42.9538 107.255 42.5426 cv
105.422 38.2081 li
105.384 38.118 105.35 38.037 105.32 37.9658 cv
105.32 37.9656 105.32 37.9654 105.32 37.9652 cv
105.309 37.8932 li
105.305 37.7555 105.366 37.4728 105.59 37.0239 cv
106.025 36.2042 106.921 35.0061 108.07 33.7803 cv
108.275 34.266 108.695 35.2603 109.236 36.5416 cv
110.243 38.9291 li
110.314 39.0977 110.386 39.2682 110.459 39.4404 cv
109.779 41.2607 109.373 43.3623 109.373 45.625 cv
109.373 46.3854 109.418 47.1294 109.501 47.852 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[6.72 0 0 15.36 104.64 15.52 ]ct
snap_to_device
<<
/T 1
/W 14 
/H 32 
/M[14 0 0 -32 0 32 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!**$!WiE*!sAT(!!!!"!<N<(!s8W.!!!!!!<E3&!WrN,"9\])!!**$!WiH+!sA`0!!!$#!<N<(
!s8Z/"9ec*!<E6'!WrN-"9\l3!!**$!WiH+!sA`1"U+o-!<N<)!s8Z/"9er5!<E6'!WrN-"9\l3"pP)0
!WiH+"9\i2"U,)7!<N<)!s8Z/"U,&6"pP,1!s8W."9\l3"pP8:!WiH+"9\i2"U5/8#6t;4!sA`0"U,&6
"pYA<!s8W."9er4"pP8:#7(D6"9\i2"U5/8#6tJ>!sA`0"U,)7"pYA<#RCP9"9er4"pP;;#7(S@"9\l3
"U5/8#6tM?#RLV:"U,)7"pYA<#RC\A"9er5"pP;;#7(S@#RCS;"U5/9#6tM>#RC\A"U,)7"pYA<#6tJ>
#7(J;"pP;;#6tJ=#6tM>"pP8:#6tJ=#6tJ=#6tG;#6tJ=#6tJ=#6tG<"pP;;#6tJ=#6tJ<#6kA;#6tJ=
#6tJ="pP89#6tJ=#6tJ<#6kA:"pG5:#6tJ=#6tG;"pP58#6tJ=#6tJ="pP88"U,/:#6tJ=#6kD;"U,&5
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
<~!!!!!!<WK0#RUtM&/"sC!!!''"pbPE%M'-b!!!!#"9o);$OmUY',:KI!<WK1#n%1P&/#Zm!!*0*#7(YF
%M06e'c-iO"9o,=$k<d[',;<$!X&]4#n%1Q&JGlp(`EJ[#71bI%M06e()Rr0"U>;?$k<g]'GVE%)]]+g
$4ICT&JGlq)&jS;#71bI%hTHi()Rr0*Ztas%1a!_'G_N(*$$+E$4ICU&el)t)&jS<+X7C*%hTHi(E"/4
*ZuXP%1a$a'c%W)*$-4H,UEs4&el)u)B9b>+X89\&/#Zm(E"/4+!DjS-7BH>'c.`,*?H=I,UOoh',;9"
)B9e@+s\H^.4Q#I(`FA8+!DjT-R^Dn()Ii-*?QFL,pjuf-n#lL)]]tB+s\H\-71)f(`FA8+<i'V,pai`
,pjNM*ZlOM,U=W],U=W\)]^"D,9nEX,U=TZ,9n3M+<i$T,U4NY,9e<T*ZuXO,9nEW+sJ0Q+<M[K,9nEX
,9e9S+<V^H+X83V,9nEW+WqmK*?67K,U=TZ+sA'N*ZQ+;,U=W\,9e<T+<DOB)&OYF,U=WZ+WqjJ*#]Y0
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
109.502 47.8584 mo
107.255 42.5426 li
107.429 42.9538 107.607 43.374 107.785 43.7959 cv
108.387 45.2182 108.998 46.661 109.501 47.852 cv
109.501 47.8541 109.502 47.8562 109.502 47.8584 cv
110.243 38.9291 mo
109.236 36.5416 li
109.539 37.2602 109.881 38.0691 110.243 38.9291 cv
105.422 38.2081 mo
105.32 37.9668 li
105.32 37.9652 li
105.32 37.9654 105.32 37.9656 105.32 37.9658 cv
105.35 38.037 105.384 38.118 105.422 38.2081 cv
105.309 37.8932 mo
105.301 37.8447 li
105.301 37.6601 105.403 37.3771 105.59 37.0239 cv
105.366 37.4728 105.305 37.7555 105.309 37.8932 cv
gsave
[10.4441 7.86776 -7.86776 10.4441 103.541 36.8682 ]ct
clp
/1 /Gradient get_res exec grestore
np
121.662 63 mo
119.455 63 117.505 61.7569 116.695 59.832 cv
116.406 59.1461 116.285 58.4209 116.332 57.7022 cv
116.325 57.8007 116.322 57.8994 116.322 57.9981 cv
116.322 58.6181 116.447 59.2392 116.695 59.8311 cv
116.92 60.3643 117.246 60.8232 117.623 61.2354 cv
117.99 60.6088 118.433 60.0178 118.947 59.4673 cv
119.493 60.4086 120.522 60.9981 121.664 60.9981 cv
122.053 60.9981 122.434 60.9287 122.797 60.792 cv
123.592 60.4922 124.209 59.9072 124.536 59.1455 cv
124.852 58.4121 124.854 57.6045 124.545 56.8721 cv
124.438 56.6175 124.299 56.383 124.132 56.1724 cv
124.827 55.9258 125.55 55.7265 126.303 55.5771 cv
125.345 53.9656 123.543 52.9992 121.645 52.9992 cv
121.21 52.9992 120.771 53.0497 120.336 53.1546 cv
120.768 53.0499 121.211 52.9971 121.659 52.9971 cv
123.866 52.9971 125.816 54.2412 126.627 56.166 cv
127.13 57.3603 127.124 58.6738 126.613 59.8642 cv
126.064 61.1387 125.014 62.123 123.652 62.6367 cv
123.014 62.8779 122.344 63 121.662 63 cv
118.783 59.1403 mo
118.781 59.1362 118.779 59.1321 118.777 59.1279 cv
118.777 59.1279 li
118.779 59.1321 118.781 59.1362 118.783 59.1403 cv
118.662 58.8028 mo
118.474 58.1576 118.516 57.475 118.787 56.8467 cv
119.115 56.0859 119.734 55.5029 120.527 55.2041 cv
120.652 55.1569 120.779 55.1183 120.906 55.0878 cv
120.777 55.119 120.65 55.1581 120.525 55.2051 cv
119.731 55.5049 119.113 56.0889 118.786 56.8506 cv
118.517 57.4773 118.476 58.1589 118.662 58.8028 cv
gsave
[7.25376 0 0 7.25376 121.683 62.4541 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~zzzzzzzz!<E6(!sAc2"pP;<#RLhF$OdFQ%Ls![&.oKe',)&p'c%T%(`4,/)B0Y9*?H7D+<VgO+sS<X,p
alc-R^Dm.P*,&/M8\00JP:;1G^jF2)[?O3&ioZ3]fGd4[)%o5<h@t5X7S#5sdn*6UO4/6q'O67Ros=7n
?0B8P2TJ92&#R9hnGZ:Jakb;,U:j;cH^r<E<.%='/R-=^#!5>?b?;?!UcC?XI2K@:<VTA7T7_AnG[gBP
;*oC2.O#D/F0.Df9T6EH-#?FEDYJG'8(RG^+L[H[C-fI=6Qn~>
<~Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR?['[6L[^WfX]"5Md]Y;.q^qmk(_o0O5`lH-Ab0%oO
bg"GZd*U1gdaQ^rf%8O+g"P39gtgfChr*JQioB+\jlbgjkiqBum-X3.n*fc:o(2JFp%A(Sq"ad_qu-Km
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /2 /Gradient get_res exec grestore
np
121.664 59.998 mo
120.824 59.998 120.029 59.5215 119.699 58.7393 cv
119.268 57.7139 119.797 56.5488 120.879 56.1406 cv
121.135 56.0439 121.398 55.998 121.658 55.998 cv
122.499 55.998 123.295 56.4756 123.623 57.2588 cv
124.055 58.2822 123.525 59.4483 122.443 59.8564 cv
122.187 59.9531 121.924 59.998 121.664 59.998 cv
121.659 51.9971 mo
120.879 51.9971 120.086 52.1348 119.316 52.4248 cv
116.064 53.6514 114.479 57.1416 115.773 60.2197 cv
116.762 62.5693 119.145 64 121.662 64 cv
122.443 64 123.236 63.8623 124.006 63.5723 cv
127.258 62.3457 128.844 58.8564 127.549 55.7783 cv
126.559 53.4287 124.177 51.9971 121.659 51.9971 cv
121.664 60.9981 mo
122.053 60.9981 122.434 60.9287 122.797 60.792 cv
123.592 60.4922 124.209 59.9072 124.536 59.1455 cv
124.852 58.4121 124.854 57.6045 124.545 56.8721 cv
124.068 55.7344 122.936 54.998 121.658 54.998 cv
121.271 54.998 120.889 55.0684 120.525 55.2051 cv
119.731 55.5049 119.113 56.0889 118.786 56.8506 cv
118.472 57.584 118.469 58.3926 118.777 59.1279 cv
119.257 60.2647 120.391 60.9981 121.664 60.9981 cv
121.659 52.9971 mo
123.866 52.9971 125.816 54.2412 126.627 56.166 cv
127.13 57.3603 127.124 58.6738 126.613 59.8642 cv
126.064 61.1387 125.014 62.123 123.652 62.6367 cv
123.014 62.8779 122.344 63 121.662 63 cv
119.455 63 117.505 61.7569 116.695 59.832 cv
116.192 58.6377 116.198 57.3242 116.71 56.1338 cv
117.258 54.8584 118.309 53.874 119.67 53.3603 cv
120.309 53.1191 120.978 52.9971 121.659 52.9971 cv
0 .5 1 0 cmyk
f
117.623 61.2354 mo
117.246 60.8232 116.92 60.3643 116.695 59.8311 cv
116.447 59.2392 116.322 58.6181 116.322 57.9981 cv
116.322 57.8994 116.325 57.8007 116.332 57.7022 cv
116.366 57.1696 116.492 56.6405 116.71 56.1338 cv
117.258 54.8584 118.309 53.874 119.67 53.3603 cv
119.889 53.2778 120.111 53.2091 120.336 53.1546 cv
120.771 53.0497 121.21 52.9992 121.645 52.9992 cv
123.543 52.9992 125.345 53.9656 126.303 55.5771 cv
125.55 55.7265 124.827 55.9258 124.132 56.1724 cv
123.554 55.4417 122.65 54.998 121.658 54.998 cv
121.404 54.998 121.152 55.0283 120.906 55.0878 cv
120.779 55.1183 120.652 55.1569 120.527 55.2041 cv
119.734 55.5029 119.115 56.0859 118.787 56.8467 cv
118.516 57.475 118.474 58.1576 118.662 58.8028 cv
118.694 58.9124 118.732 59.0209 118.777 59.1279 cv
118.777 59.1279 li
118.779 59.1321 118.781 59.1362 118.783 59.1403 cv
118.831 59.2534 118.886 59.3626 118.947 59.4673 cv
118.433 60.0178 117.99 60.6088 117.623 61.2354 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[11.52 0 0 9.6 115.68 2.08 ]ct
snap_to_device
<<
/T 1
/W 24 
/H 20 
/M[24 0 0 -20 0 20 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~#RUtM%hTHh()Ro.*?QCJ,UFfe.kE;,%M03c'c%W)*$$+E+s\K_.4Zu&0JYFA',;<#)B9e?+X86Z-n6`!
0/,.<2)dNW)&jP:+<_sU-7C>p/MAh61c@<R4$>bm*ZuXO,pt,k/1rS11Gh!L3]fJh5XIk.,UFfe.kE;,
0f([G3''/b5=%V(7S$*D.4Zu&0JYFA2`Wo]5!M>#77Kg?92/2Y0/,.<2)dNW4$5Vg5!VG&7nQKO;,^Fp
1c@<R4$>\g4?GYg5!M>#7S6BQ<`iO03]fJh5<_4m4$,Mc4[)+t77^*L<a/p>5=%V&5X.Co4$#D`4$5Yk
6Uj[E<E`gC77K^55sILo3]T2[3BB5c5t":>;d!L@8kDK>5s@Cl3B&lT2E*WY5!qh5;HR:<:.n)F5X%7i
2`3EK2)[?Q4?u;+:f^n7:eXDJ5Wq.e2)@$D0etRF3B]]!:/kM2;GKeP5Wq+c1b^L3.P!))2EX5n9N,/*
<)6+T5s..b0InIp+sJ<^0/l*_8P`Dp<_uFX5s.+^.jZ;W)&XG<-nmVG78-Wa=]8!`5s7.[-Qa-;%hB9i
+=T'.6V1*V>ZFNi6U!CZ,8h%!"9]#B)'^^m5t=[N~>
<~&JZ-&+!N$\/MJt>3^,ht84u`V<`r[8*$?IQ.P3A33'0;j77g0K;c[(-?t<nc-S$f(2)m]_6:OO@:fLM"
?=@DYCN"6:1,_-T5XS%69i4kl>@(cMBl%a0G'\Rf4[;D*928Ab=Bo3CAnc+$FE`%[JVAo=84u`V<`r[8
@qTOoEHHGPItEB2N0'6h;c[(-@:X"dDK9lEI"-d'MN*^^Q^aS??=@DYCN"6:H$t3qLPh+SPaIr4U8Fok
Bl%a0G'\RfKSPJGP*MH*T;/9`Xg#1AFE`(\JVAo=O-5fsSY2dVWiiV7\@]MmItEB2N0'6iR[p.JW2m),
[CNrc_oBjDMN*^^Q^aS?V5UK!ZaREX^r4:9cI(1pQ'e&5U8FokYd:gM]tqY.bKnVeg"bNGT;/9`Xg,7B
]=u/$aNVuZf%Jm;jQGjsWiiV7\@]Mm`lZKMcI1>$iT04gn+-2J[CNrc_oBjDdE]t[c-b+uk3qp8qYgHo
^r4::cI(1oe'H7^bg4enk4&?Ls8W-!bKnVeg"bN?f$DR^air2eip?C=s8W-!f%Ss<jQG[_f?h[\`PosG
g#MPts8W-!iT9:hn+,i+g<mpR\@B5ldG='[s8W-!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
118.947 59.4673 mo
118.886 59.3626 118.831 59.2534 118.783 59.1403 cv
118.831 59.2524 118.897 59.3524 118.957 59.4561 cv
118.954 59.4598 118.95 59.4636 118.947 59.4673 cv
118.777 59.1279 mo
118.777 59.1279 li
118.732 59.0209 118.694 58.9124 118.662 58.8028 cv
118.694 58.9117 118.732 59.0196 118.777 59.126 cv
118.777 59.1279 li
116.332 57.7022 mo
116.366 57.1697 116.491 56.6406 116.709 56.1338 cv
117.258 54.8584 118.309 53.874 119.668 53.3603 cv
119.889 53.277 120.112 53.2086 120.336 53.1546 cv
120.111 53.2091 119.889 53.2778 119.67 53.3603 cv
118.309 53.874 117.258 54.8584 116.71 56.1338 cv
116.492 56.6405 116.366 57.1696 116.332 57.7022 cv
124.117 56.1777 mo
123.523 55.4368 122.6 55.0012 121.64 55.0012 cv
121.396 55.0012 121.15 55.0294 120.906 55.0878 cv
121.152 55.0283 121.404 54.998 121.658 54.998 cv
122.65 54.998 123.554 55.4417 124.132 56.1724 cv
124.127 56.1742 124.122 56.1759 124.117 56.1777 cv
gsave
[3.18262 10.1973 -10.1973 3.18262 119.227 50.4551 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~!!!!"!<N<)!sA`1"U5/9#7(SA#mq"I$OdFQ%1WjY%hK9a&J>]i',2/r()Ic((`=20)B0V8*$$%@*ZlIH
+<VgN+sJ6V,U=Z^-71)f-n$Mn.Olr!/1`A)/hSe10JG491,:XA1c.'I2E!KQ3&ioY3]]>a4?Pbi5!D1q
5<qJ"5sdn*6UX=277Ka:7n?0B8P2TJ92&#R9hnGZ:Jakb;,U:j;cH^r<E<.%='/R-=^#!5>?kE=?!^iE
?XI2K@:<VS@q0%[AS#IcB4kmkBkhBuCi!s*DJjB2E,]f:EcQ5BFEDYJG'8(RG^+LZH?spbI!g?jIXZcr
~>
<~!!!$$!sAc3#7(VC$OdIS%hK<c',2/s(Dn#.)]Tk>+!;^N,:"Q^-R^Dn/1iJ-0JP==1c70M3&s#]4?Ykm
5<qM$6UX@47n?3D92&&T:Jand;cHat='/U/>?kH??XR;O@q9._B4u!oCM[j*DfB]:F*)PJGBeCZH[L6j
It3*%K7nr5LPUeEMi<XUO-#KePE_>uQ^F20S"-%@T:hmPUSO``Vl6SpX/rG+YHY:;Za@-K\%&u[]=bhk
^;%J"_Sa=2`lH0Bb0/#RcHjkbdaZguf@\d1gYCWAhr*JQj5f=akNM0qlg4$,n*ol<oCV_Lp\=R\qu$El
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
np
106.341 63 mo
104.133 63 102.183 61.7569 101.373 59.832 cv
101.075 59.1236 100.955 58.3732 101.015 57.6315 cv
101.005 57.7538 101 57.8764 101 57.999 cv
101 58.6191 101.125 59.2392 101.373 59.8311 cv
101.598 60.3643 101.924 60.8242 102.301 61.2354 cv
102.667 60.6089 103.113 60.0171 103.624 59.4667 cv
104.17 60.4083 105.2 60.9981 106.342 60.9981 cv
106.73 60.9981 107.111 60.9287 107.475 60.792 cv
108.27 60.4922 108.887 59.9072 109.214 59.1455 cv
109.529 58.4121 109.531 57.6045 109.223 56.8721 cv
109.116 56.6178 108.977 56.3836 108.811 56.1732 cv
109.505 55.9257 110.228 55.7264 110.98 55.5771 cv
110.025 53.9656 108.223 52.9992 106.323 52.9992 cv
105.861 52.9992 105.394 53.0564 104.931 53.1754 cv
105.389 53.0568 105.86 52.9971 106.337 52.9971 cv
108.545 52.9971 110.495 54.2412 111.305 56.166 cv
111.808 57.3603 111.802 58.6738 111.291 59.8642 cv
110.743 61.1387 109.692 62.123 108.333 62.6367 cv
107.693 62.8779 107.023 63 106.341 63 cv
gsave
[7.71098 0 0 7.71098 106.174 63.5264 ]ct
clp
/2 /Gradient get_res exec grestore
np
106.342 59.998 mo
105.502 59.998 104.707 59.5215 104.377 58.7393 cv
103.945 57.7139 104.475 56.5488 105.557 56.1406 cv
105.812 56.0439 106.076 55.998 106.336 55.998 cv
107.177 55.998 107.973 56.4756 108.301 57.2588 cv
108.732 58.2822 108.203 59.4483 107.121 59.8564 cv
106.865 59.9531 106.602 59.998 106.342 59.998 cv
106.337 51.9971 mo
105.557 51.9971 104.764 52.1348 103.994 52.4248 cv
100.742 53.6514 99.1563 57.1416 100.451 60.2197 cv
101.439 62.5693 103.822 64 106.341 64 cv
107.122 64 107.916 63.8623 108.686 63.5723 cv
111.936 62.3457 113.521 58.8564 112.227 55.7783 cv
111.238 53.4287 108.854 51.9971 106.337 51.9971 cv
106.342 60.9981 mo
106.73 60.9981 107.111 60.9287 107.475 60.792 cv
108.27 60.4922 108.887 59.9072 109.214 59.1455 cv
109.529 58.4121 109.531 57.6045 109.223 56.8721 cv
108.746 55.7344 107.613 54.998 106.336 54.998 cv
105.948 54.998 105.566 55.0684 105.203 55.2051 cv
104.409 55.5049 103.791 56.0889 103.464 56.8506 cv
103.149 57.584 103.146 58.3926 103.455 59.1279 cv
103.935 60.2647 105.068 60.9981 106.342 60.9981 cv
106.337 52.9971 mo
108.545 52.9971 110.495 54.2412 111.305 56.166 cv
111.808 57.3603 111.802 58.6738 111.291 59.8642 cv
110.743 61.1387 109.692 62.123 108.333 62.6367 cv
107.693 62.8779 107.023 63 106.341 63 cv
104.133 63 102.183 61.7569 101.373 59.832 cv
100.87 58.6377 100.876 57.3242 101.388 56.1338 cv
101.936 54.8584 102.986 53.874 104.348 53.3603 cv
104.986 53.1191 105.655 52.9971 106.337 52.9971 cv
0 .5 1 0 cmyk
f
102.301 61.2354 mo
101.924 60.8242 101.598 60.3643 101.373 59.8311 cv
101.125 59.2392 101 58.6191 101 57.999 cv
101 57.8764 101.005 57.7538 101.015 57.6315 cv
101.055 57.1227 101.179 56.6181 101.388 56.1338 cv
101.936 54.8584 102.986 53.874 104.348 53.3603 cv
104.539 53.2879 104.734 53.2262 104.931 53.1754 cv
105.394 53.0564 105.861 52.9992 106.323 52.9992 cv
108.223 52.9992 110.025 53.9656 110.98 55.5771 cv
110.228 55.7264 109.505 55.9257 108.811 56.1732 cv
108.233 55.4421 107.328 54.998 106.336 54.998 cv
105.948 54.998 105.566 55.0684 105.203 55.2051 cv
104.409 55.5049 103.791 56.0889 103.464 56.8506 cv
103.149 57.584 103.146 58.3926 103.455 59.1279 cv
103.455 59.1279 li
103.455 59.1279 li
103.505 59.2453 103.561 59.3584 103.624 59.4667 cv
103.113 60.0171 102.667 60.6089 102.301 61.2354 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[11.52 0 0 9.6 100.32 2.08 ]ct
snap_to_device
<<
/T 1
/W 24 
/H 20 
/M[24 0 0 -20 0 20 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~)B0Y:*ZlLI+X/-V,palc-n-Vr.kE8)+<VgO,:"Q]-7:2j.P!##/M8\10ekF>,palc-n-Vr.kE8)0/,+8
1,CaE2E!KR.P!##/M8\10ekF>1c70L2`NfY4$5Vg0/,+81,CaE2E!KR3BB5a4?Ykm5X@_'1c70L2`NfY
4$5Vg5!M:u6:+%-77Kd;3BB5a4?Ykm5X@_'6UX@47n6*A8kViP5!M:u6:+%-77Kd;84cEH9MJ5V:Jand
6UX@47n6*A8P)KF8kMcO:Jt(h<)lt#84cEH9MJ/P8OuBC84cHJ:/Otl=^#$79hnJ\:JFGQ84Q-=7n6-D
9M\Pe>$kZG;H$Ol:/"8M7R]a677B[;928>a=^GWN=BAI!9hIrG6pj:,6:4.185)cW=']9L?!('&9M%`B
6:!k%5<qM%77g0L<EimE?!1-&9LqT=5<_4n4?Ykn6:ORB<*<R??!($$8k)-34Zb_c3]]Ae5XS(9;-.+9
?!($"8OYp/4?>DY2)R?T5!VP/:KCb3?<C*!7mfL'3&<6?/M8_53Boi#9N"u#?W^3"7m]C"1+Xh",UFfg
0fM9`85<,h?s-B$7mT3m.jQ2U)&aM>-nmVG6qU<Y~>
<~2)dNW4?c"r6UaI88kVlS;,U@o='8a45X@b+7S$-E9i"Va<*!('>?kKB@Uit^8kVlS;,U@o='8a4?=75P
AS5[kCi+*1<*!('>?kKB@Uit^BPM@#DfKi?G'J:Z?=75PAS5[kCi+*1F*)SMH$asgJ:`H.BPM@#DfKi?
G'J:ZI=?]uKS>2<MN!RVF*)SMH$asgJ:`H.LP^nINfT<dPa7]*I=?]uKS>2<MN!RVOcu#qR$sM8T:hpS
LP^nINfT<dPa7]*S"61EU84W`WN3,'Ocu#qR$sM8T:hpSV5L;nXKJe4ZaI6OS"61EU84W`WN3,'Yd(OB
[^`o]]t_D#V5L;nXKJe4ZaI6O]"G_k_8=.1a2uNLYd(OB[^`o]]t_D#`5]j>bK\>ZdaQau]"G_k_8=.1
a2uNLcHt"ge^rI-gtglH`5]j>bK\>ZdaQauf\5-:hr3VVk32'qcHt"ge^rI-gtglHj5f@dl0Ia)nFH5E
f\5-:hr3VVk31mfk3)%!o_%tSqY^?mj5f@dl0Ia)lf[Bhj5oLmpAY*ls8W-!mI'K7o_%tLlfR3ahVR5R
mI^AWs8W-!p\F[`rr;f_k2+b>dF-V#j6ZI=s8W-!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
103.624 59.4667 mo
103.561 59.3584 103.505 59.2453 103.455 59.1279 cv
103.506 59.2441 103.572 59.3477 103.635 59.4551 cv
103.631 59.459 103.628 59.4628 103.624 59.4667 cv
103.455 59.1279 mo
103.455 59.1279 li
103.146 58.3926 103.149 57.584 103.464 56.8506 cv
103.791 56.0889 104.409 55.5049 105.203 55.2051 cv
105.566 55.0684 105.948 54.998 106.336 54.998 cv
107.328 54.998 108.233 55.4421 108.811 56.1732 cv
108.805 56.175 108.8 56.1769 108.795 56.1787 cv
108.199 55.4379 107.277 55.0017 106.318 55.0017 cv
105.947 55.0017 105.571 55.067 105.205 55.2051 cv
104.41 55.5049 103.791 56.0889 103.465 56.8506 cv
103.15 57.583 103.146 58.3916 103.455 59.126 cv
103.455 59.1279 li
101.015 57.6315 mo
101.055 57.1225 101.179 56.618 101.387 56.1338 cv
101.936 54.8584 102.986 53.874 104.346 53.3603 cv
104.539 53.2873 104.734 53.2258 104.931 53.1754 cv
104.734 53.2262 104.539 53.2879 104.348 53.3603 cv
102.986 53.874 101.936 54.8584 101.388 56.1338 cv
101.179 56.6181 101.055 57.1227 101.015 57.6315 cv
gsave
[1.94873 11.6919 -11.6919 1.94873 104.674 49.0771 ]ct
clp
/3 /Gradient get_res exec grestore
np
23.095 48.7232 mo
22.9856 48.3317 22.8556 47.9419 22.7046 47.5557 cv
22.1315 46.0886 21.3062 44.8005 20.2999 43.7228 cv
21.5897 40.4227 li
21.6245 40.4238 li
21.9253 40.4297 22.2827 40.4346 22.6792 40.4346 cv
22.796 40.4346 22.9164 40.4342 23.04 40.4333 cv
24.687 44.6492 li
24.1617 45.9934 23.6148 47.3929 23.095 48.7232 cv
gsave
[-8.77633 0 0 8.94813 22.0518 40.1338 ]ct
clp
/0 /Gradient get_res exec grestore
np
17.0073 52.1475 mo
23.9644 34.3467 li
29.4019 36.5547 li
22.4448 54.3574 li
17.0073 52.1475 li
23.4019 33.0391 mo
15.7183 52.7022 li
22.0816 55.2881 li
23.0073 55.6641 li
23.3706 54.7334 li
30.6909 36 li
23.4019 33.0391 li
.05 0 0 .25 cmyk
f
23.5362 51.5647 mo
23.5028 50.6185 23.3584 49.6656 23.095 48.7232 cv
23.6148 47.3929 24.1617 45.9934 24.687 44.6492 cv
25.4627 46.6348 li
23.5362 51.5647 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[3.84 0 0 8.16 22.56 11.68 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 17 
/M[8 0 0 -17 0 17 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!WiE*!WiE)!s8W,!s/Q+!s8W-!s8T+!sA].!s8W,"9Sc/!s8W,"9\f/!s8W,"9\f/!s8T+"9\i0!s8T+
"9\i0!s8T+"U"r1!s8T+"U"r1!s/N)"9\f/!WiB'"9S`-!WiB'"9S`-!W`<%!s8T+!<E0#!s/N)!<E0#
!s/N)!<<*"~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!~>
<~$k*LP$k*OQ%LijV%1N^S&.]6\%LigT&J5Qb%LrpV&eYcf%h9$W'G:uh%h9$V'b_2l%h9!U().An%h9!T
().An%h/mQ().Am%L`[M().Am%1<IH'b_,g$jd.A'G1ia$4$e;&eGK[#R1D4&.T*T#6Y).%h&dM"Tn`)
%1<FG!s&B%~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
23.5377 51.6094 mo
23.5372 51.5945 23.5367 51.5796 23.5362 51.5647 cv
25.4627 46.6348 li
25.4719 46.6584 li
24.7625 48.4742 24.0789 50.224 23.5377 51.6094 cv
gsave
[-8.65857 -5.96454 -5.96454 8.65857 28.2871 47.2725 ]ct
clp
/1 /Gradient get_res exec grestore
np
30.7439 38.5364 mo
28.5952 33.0391 li
28.5607 33.0531 li
26.5365 27.8872 li
32.1407 13.5866 li
33.6902 17.4944 34.5932 22.1929 34.5932 27.25 cv
34.5932 28.0921 34.5679 28.924 34.5187 29.7442 cv
31.3022 37.9385 li
31.2264 38.1347 31.0861 38.3145 30.91 38.4847 cv
30.8554 38.5022 30.8001 38.5194 30.7439 38.5364 cv
gsave
[-18.3163 0 0 18.6749 21.417 38.0645 ]ct
clp
/0 /Gradient get_res exec grestore
np
22.0132 39.4297 mo
36.7456 1.83594 li
37.5679 2.73829 38.7515 4.09276 39.8667 5.57716 cv
43.2378 10.0615 43.1089 11.8047 42.898 12.3457 cv
42.1694 14.2061 40.0815 19.5225 38.062 24.6631 cv
36.0523 29.7783 33.9761 35.0674 33.2436 36.9414 cv
32.6519 38.4551 28.5034 39.4346 22.6792 39.4346 cv
22.4429 39.4346 22.2183 39.4326 22.0132 39.4297 cv
36.3901 -.000967641 mo
20.564 40.3887 li
20.564 40.3887 20.939 40.4082 21.564 40.4219 cv
21.6245 40.4238 li
21.9253 40.4297 22.2827 40.4346 22.6792 40.4346 cv
26.228 40.4346 33.0933 40.0703 34.1734 37.3057 cv
35.6421 33.5508 42.3765 16.4258 43.8296 12.709 cv
43.937 12.4336 43.9878 12.1289 43.9897 11.8008 cv
44.0112 7.708 36.3901 -.000967641 36.3901 -.000967641 cv
.05 0 0 .25 cmyk
f
33.6558 35.9375 mo
33.6561 35.936 33.6564 35.9346 33.6567 35.9332 cv
42.9194 12.3398 li
33.6558 35.9375 li
gsave
[-24.8953 18.7542 18.7542 24.8953 47.666 9.47949 ]ct
clp
/1 /Gradient get_res exec grestore
np
34.5187 29.7442 mo
34.5679 28.924 34.5932 28.0921 34.5932 27.25 cv
34.5932 22.1929 33.6902 17.4944 32.1407 13.5866 cv
35.8801 4.04451 li
38.5243 7.11016 41.0561 10.7861 41.0561 12.7481 cv
41.0561 12.9687 41.0249 13.168 40.9565 13.3428 cv
34.5187 29.7442 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[10.56 0 0 26.88 31.2 33.76 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 22 
/H 56 
/M[22 0 0 -56 0 56 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 22 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 22 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 22 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 22 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
rWN*#q?$NpeGp<t'+tlg&.]6[$k*LN#mgkB"pG/5"8rB""8W)s!Up*O!#$%['+tlg%hB-Z$k!FM#m^eA
"pOi+qZH]squP=J$Pa?h&eYcf%h9'Y$j[4J$4-tC#6kA."T&;u!rW/M!#64_'GD)k&J,H_%1N^R$47(F
#6kA9qZQcuq?$Wsq>f:N()@W!'GD)k&.f?^%1EXQ$4."E#6k>8qZQcuq?$ZteH#Ub'bqDr'+tlg%hB-Z
$k!FM#m^eA"pG2-"T&;u!ri;O!#HFe'bqDr&eYcf%h9'Y$k!CL#m^b@"U4`*qZHcu!WiE(eGp=$(D[`"
'GD)k&J,H_%1N^R$47(F#Q=o("T&;t!o3kP!#6=e(D[`"'GD)k&.f?^%1EXQ$4."Er<<'$qZH]seGp=%
(`*r''bh;p&ePZc%h9$W$O[:J#lFl)"TJW%"8i5N!#6@h(`*r&'bh;o&ePZc%LrpV$O[:Jquup"qZHcu
k5arN'cIr,(`*r&'bh;o&J5Qb%LijU$OR7<"oAH""8r;O!#-@j)&O/+()7Mt'+tlg&.]6[$k*LE$3pA2
qZQcurW:UM()n/1)&O/*()7Ms'+tlg%hB-Z$k!FIq??a!qZHj"nGqYN(E=A4)&X8-()7Pu'+toi&.]6\
%1EUK#5\T#"T&9$!n@8X*#on9)&O2,()7Pk'GD)k&J,H_%1NaF#5\T$"T&9$!n@8c*?6";)AsA.(D[`"
'GD)k&.f?^%1N1>qZZj"qZH]qgAhs0*?6":)AsA.()@W!',(uj&.]9]%K-M-"oAH#"4[AO*Y]V8*#fe6
)&O/*()7Ms&eYcf%h9*I#5\T#"T8GQ!#6Rs*?6%<)AsA/(D[`#'GD)k&J,H_qZcp$qZQj"eGp=++!)FB
)]K\5(`*u('bh>q&ePZd&,HM-"oAH%"5X%Q!#?\!*Zc=A)]BV4(`*r''bh;p&ePZc#PnZ%"oAH&"4[Af
+<VaI*??+=)AsD0(D[c$'GD)l&J,0PqZcp$q?-d#eGp=-+<VaI*?6%<)AsA/(D[`#'GD)k&cN%4#5\T$
"98Pf!:Bh%+sA'N+!)FB)]K\5(`*u('bh>q&eY*Jq?Hg#qZPFL'-\SC+<MXG*?6":)AsA.()@W!'*/aZ
r<N0'qZZm#eGp=/+sA'O+!)FC*#fe6)&O/*()7Ms')W"3#5\T%"S)QR!#6_'+sA'O+!)FB*#fe6(`4&)
'bqDrqZm!&qZZp$eGon$,9e<T+<M[H*=Ei+)]BS2(Ddi%'GUELq?Hg#rWLaO(*t4N+sA*P+!)ID*#fe7
)&O/+()7MhqZls%qZ[!&quGFN(F:=P,9e9S+<MXF*?6":)&X8-()@Vj#l=l(#5\T("P!Jg-7'o^,9e9R
+<MXF*#on9)&O2,()7)\q?Qm%qZQs&eGp=2-7'o^+sJ0Q+!2OE*#fh8)&O/+(B+U:#PnW)"oJPS!#6k.
,paf]+sA*P+!)ID*#fe7)&O/+r<W9*q?Hj$hZ3BN'dtFV,pX`\+sA*P+!)FC*#fe6)&O1f#l=l(#5eYT
!#6n0-RL,b,9nBU+<VaI*?6%<)AsA/r!<<-r!3*'r<:^O'e(OY-71#a,9e<T+<M[H*?6";)AsCh#l=l'
#6"ej!:9b%.4HYm-7'r`,9e<T+<MXG*?6":)ArkY#l=l'#6+kW!"pb1-n$Gi,pX`\+sA*P+!)FC*!7,u
)%$-FqZm!&rrppQ(Fpsa-mpAh,pX][+sA'O+!)FB*#fe&$2Y#)#Q"]*"nM`S!<+G_.4?Pj-7'o^+sJ0Q
+!2OE*#fh&#RUA6qZls%eH#Ru"XtlK-RL,J,pX]Z+sA'N*Zc=A)u^*C$2Y#*#Q"_U!;n8W-n$Gi,pX`\
+sA*P+!)FC*;p-C$2Y#*#Q+f)!8.>P./YM)-mpAh,pX][+sA'O+!)FBp'CL"r<CgQ!!)pF&1K%V-RL/d
,U4NX+WqjK*ZanZqZm'(eH#Usr?r4+.4?Pj,paf]+sJ0Q+!)I.oa(O%rWiE,lN$5N(FCLW-n$Gk.4?Sl
-7'o_,9e9S+<MX0#PAB"#QG"Y!<4DE-iGFt-RU5e,U4N:+sA'O+8uN=#l4c+#1W\R-2f1j-iGG#-RL/d
,U4NX+Wqm*#PJH##64u$!9!nZ,UFc9-N>Il-j_7J,paf]+sJ0Qr!2p$qZkXO"sY?<,palb![fBDr[8%"
-7'o_,9e9SqZd0.#RC/2r!1aP"sP9:,UF``r[7[n#U^uH,pX`\+sHggp'CR$rrCXN"X5-8,U=]8-3,Fl
-jV1I-7'o^,9d?h#PJH%#M9%U!!sem,9nH[,pjrdr[8+&-mp>f,pX]Z"pXr0p'CX&eGo[o+X/01,Q]8=
-iPM".4?Sl-7'o_,Q7oF#Q"f(#lb.[!!j\i+X/-U,UFf:-OD1M.4?Pk-7'o_J,~>

%%EndBinary
grestore
np
32.1407 13.5866 mo
32.1379 13.5794 32.1352 13.5726 32.1323 13.5654 cv
33.84 9.20518 35.3232 5.42152 36.1375 3.34383 cv
36.0546 3.55578 35.9648 3.7853 35.8687 4.03125 cv
35.8725 4.03575 35.8762 4.04001 35.8801 4.04451 cv
32.1407 13.5866 li
gsave
[-24.8953 18.7542 18.7542 24.8953 47.666 9.47949 ]ct
clp
/1 /Gradient get_res exec grestore
np
30.91 38.4847 mo
31.0861 38.3145 31.2264 38.1347 31.3022 37.9385 cv
34.5187 29.7442 li
34.3914 31.8615 34.1044 33.8995 33.6808 35.8245 cv
33.5058 36.2713 33.3583 36.6481 33.2436 36.9414 cv
33.0046 37.5527 32.1853 38.077 30.91 38.4847 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[4.8 0 0 10.56 30.24 24.64 ]ct
snap_to_device
<<
/T 1
/W 10 
/H 22 
/M[10 0 0 -22 0 22 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~#RC\A#RC\A#7(P?#R:V@#7(P>#6tM>#7(P>#6tJ=#6tJ>#6tJ=#6tJ=#6tJ=#6tG<#6tJ=#6tJ="pP;;
"pYA<#6kA:#6tG<#6kD;"pP8:"pP;:#6k>9"pP89#6kA:"U5/8"pP;:"pP57"pP89"pP89"U,)7"U5/8
"pP57"U5,7"pP89"U,&6"U5/7"pP26"U5,7"pG28"9er5"U,)6"pP26"U5,6"pG28"9er5"U,)6"pP26
"U5,6"pG28"9er5"U,)6"pP26"U5,6"pG28~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~-7C8j-mpAi-7'rb-RU5f-71#a,:+Z_-71&b,U=QZ,U=Z^,U=TZ+X/-U,U4NY,9e3Q+sS9U+sJ3T*ZuUL
+X&!P+X%jJ+<VdL+X%sN*$-1D+!;[K+<MOC*Zc@E+!2RH)B9b=*ZlIG+!2@>*$$(A*Zc@D(`F>5*??.A
*?H"7)B9b<*?H4A(E",1*#ot>*?>n4)&aJ7*??.@()Ro-)]Kb;*?>k3)&aG5*#ot>'c.`+)]Kb:*$#b1
(`F>4*#oq='c.]*)]Kb:*$#b1)&aG5*#oq=~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
30.8941 38.5 mo
30.8994 38.4949 30.9047 38.4898 30.91 38.4847 cv
32.1853 38.077 33.0046 37.5527 33.2436 36.9414 cv
33.3583 36.6481 33.5058 36.2713 33.6808 35.8245 cv
33.6728 35.8607 33.6648 35.897 33.6567 35.9332 cv
33.2632 36.9355 li
33.0015 37.6045 32.1187 38.1162 30.8941 38.5 cv
36.1375 3.34383 mo
36.4336 2.58717 36.6421 2.05534 36.7397 1.80665 cv
36.6422 2.056 36.4342 2.58667 36.1375 3.34383 cv
gsave
[-12.125 0 0 12.125 43.0195 20.1533 ]ct
clp
/1 /Gradient get_res exec grestore
np
33.6808 35.8245 mo
34.1044 33.8995 34.3914 31.8615 34.5187 29.7442 cv
40.9565 13.3428 li
41.0249 13.168 41.0561 12.9687 41.0561 12.7481 cv
41.0561 10.7861 38.5243 7.11016 35.8801 4.04451 cv
36.7456 1.83594 li
37.5679 2.73829 38.7515 4.09276 39.8667 5.57716 cv
43.2378 10.0615 43.1089 11.8047 42.898 12.3457 cv
42.1694 14.2061 40.0815 19.5225 38.062 24.6631 cv
36.3668 28.9778 34.6242 33.4163 33.6808 35.8245 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[11.04 0 0 35.52 33.12 27.52 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 23 
/H 74 
/M[23 0 0 -74 0 74 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
rrW&u_uL#M$4-tC"pG//!rrE%!Vl`q!r;r\!8dbd$OR1G#6k>8"9S`-!W`>t!<*&r!QG*>$k!FM#R:S=
"U"r1!Wr?%q>gHqqZ4\:%1EUO#m^b?"U"r1!s/Q'!W)lp!rE#u!6G3M%1ERM#mUY<"9\f/!Wr?%qZ-Nq
q>oCPli7J($k!CK#6tG:"9\f.!r`5t!;cio!Qb<N%L`^P#m^b?"U,#2!s/H(rW2os!!E*"qZ4e=%M'!W
$4."E"pG/5!s8T+rW2osrr`-"qZ6?iec60j%1N[P#m^b?"U"r1!Wr?%quHa!qZ?TpdfB1D%hB-Z$O[7H
#6kA9"9S`-!r`6!!<*)u!r;r@!"TSN%1EUN#m^_>"U"o0!Wr?%r;ccur;ufrb5`%a%h/sU$4-tC"pG,3
!s/Q'!W<#r"9&Au!U0UE!"TVP%LidR#m^b?"U,#2!s8H&r;c`trW;osb5_YW&.]3Y%1<IK#6k>8"9S`-
!W`?#!;lru!r;r@!"onU%h/sU$4-qB"pG,3!s/N)!W;uu"T8H%!r;rt!6kKV&eGQ`%1<LL#R:P;"9\f.
!W`?#!!!0#"9&Au!Sd\E!"]eU%hB*X$4-tC"pG,4!s/Q'!WE*!"TAN&!r;r@!"fkW&.]3Y$OR.E#6k>7
!s8T*rrN*!rWN6'r;uisb5`1i&eGQ`$k!CK#R:P;"9S`-!W`?$!<*-$"8i5t!V6<F!#$%[&J#?\$jm:H
#6k>7"9S],!<N0"rWN6'qZ?Wqd/a+F',2)m&.T-X$OI(D"pG/5!s/N)!WE)u"TJT$!rE#C!#$(\&eGQ`
$k!CK#R1G9"9S],!<N0"rWN3&rrW-#quP%B',;2o&J#?\$OR1G#6k>7!s8T*!WE)u"T8H#!rN)^!9X=q
().An&.T-X$4-tC"pG,3!s/K(rW!!'"9eZ*quZcsblA"c'b_/j%h/pS$47%D"pG,4!s/K(rW!!'"U+`*
r;ultblACn'bh8l%h/pT$4$nA"U"r1!W`?$!!3<-"T/B#!rN)t!7:c[(`!eu&J#?[$OR1G"pP56!s/N)
rW)s%rri9&r;ultg&UaF',VN#'+k`c%1<LL#R:P;"9S],!WE*!"oe`("8r<!!R1TZ(`*o$&eGQ_$k!@I
#6k>7!s/N)!!!'#"U4l.rWE*#quP%B',_T$'G:ug%L`^P#R:P;"9S],!WE*!"oST("8r;u!V$0H!#$4d
().An%h9!U$4$nA"U"r1!Wi9#rrr?(rr`0#quP(C',h]''GD&i%L`^P#m^b?"9\f.!WE'""pOr.rr`0#
quP(C',h`)'b_/j%h/mR#m^b?"U"o/!WE'""pOr.rr`3$rrW-"c2\Ls)&F&&&eGQ_$jm:H#6k>7!s/N&
!!*9-r<3*%quZftj8eKG',qi,().Do%h/pT$4$k@"U"o/!WE'#"pG20"T8H$!rW/F!"9hc(`!f!&J,E\
$OR1E#6k>7!s/N&!!!6&"oe`("8r<"!R:ZY*?#b1'b_/j%LidQ#mUY<"9S]+rVup&r<30(qucp"r;l`p
eGp7')As>+'+tid%1<LL#R1G8!s/N&!!!6%"TS]'"9&B#!S7>H!#$@l)&F&&&eGQ_$jm:H#6b54!Wi9#
!!`B*!!N3%rW;uucN"V!*#]Y0'GD&h%1EUN#R:P:!s/N&!!3B/"oec+"T8H%!rN)F!#$Cn)Aj5('+k`b
$k!CJ#6k;5!Wi9#!!iH+rWN3&rW;uumJu5H(`sb;(`!i"&J#?\$OR.E"pG)1!<E0##6t/2rWN3&r;uou
cN"%h*?,k4(DRVs&.T-W$4$k@"U"l-!<<*)"pP57rWN3&r;uoucN"b(*ZGt6().Am%h/mR#mUY<"9S]+
!!!9'"oni+"TAN%!WW9#!TjCI!#Hb!*#]Y0'G:rf%1ERM#6k>7!s/K'!!iK-!!W?)rWE*#r;k4E$R$Q2
)]0>)&ePW`$k!FL#R1G8!s/K'!!iK-!!W?)rWE*#r;k4E(Ejk@)]0A+'+kcc$k!@I"pG,3!W`9$#Q=r-
"oe`("9&B#!W2rI!#He#*?,k4'b_/j%LidP#R1G8!s/K'!!iK-rWN9)r<*$#r;kROpAc!Q+<;C>(_m\r
&.T-W$4$k?"9S]+!!!9'#6"c+"T8H%!rW/G!#Qk%*ZQ(8().Am%h/mR#R:P:!s/K'!!``.#6"c+"T8H%
!rW/G!#He#*ZZ.9().An%h/pS#R:P:!s/K'!!iK-rWW<)rWE-$r;l?ei;aZ;*ZZ7>)&F##&J#<Z$4-qA
"9S]+!!!9'#6"f*"TJT&!r`5H!!48a*>BJ3)&F#$&J#<Z$4-qA"9S]+!!!9'#6"f*"TJT&!r`5H!#H^u
*?5t8(DRSq&.T*V#mUY;!s/K'!!iK-rWW9(rr`6%!!<-#cN"_&*ZZ1<)&F&%&J,E\$OI(C"Tnf,!!)s%
rWW9(rr`3$rW2!YmJn.H*ZQ+;(`*r%&eGN]$OI(C"Tnf,!!!3,"pY&1rWN3&rW<'"cN"Is*?6":(`*r%
&eGN^$OI(G"pG)1!<<*("U521"o\Z("9&B$!RC`a*??+=)&O/*'G:re%1<IJ"pG)1!<<*("U,,0"o\Z(
"9&B$!VcZI!#HXr)]KY3(D[\u&J#<Y$4$h>!s/K'!!`<(rWN3&rW<'"eH#IH(EFJ7)AsA.().Do%h/mR
#R:M8!W`9$#5\T'"TAN&!r`5H!#HXp)]BS2(DRVt&J#<Z$4$k?"9JT(!!`?)!!W?)rWE-$rW1=F(E=A5
)AsA.'bh8m&.T*U#R:M9!W`9$#5\T'"TAN&!r`5d!9F1r*#fh8(`4&('G:uh%L`[M#6b53!<<-!"Tnr4
"9nc-rWE-$rW1=F"reI!)&O2,%i,im&eGN]$OI%A"9JT(!;m!$"9nc-rWE-$rW1=F()n/1)&O2,'bh;n
&.T*V#mUY;!W`9$r!!!$rWE-$rW1=FrYcIg(`*r&'G:uh%LidP#6k;4!<<*(r!!$%r<*'$r;kdUnc0OG
)AsA/(D[`"&ePZb%1<II"p=u.!!!3,"T8N'"T8H&!rW/H!!4#V)?(H^(DRVt&eGQ_$OI%B"9JZ+!!!6#
"oST'"9/H$!RLf^)B'J1(`*r&'GD&i%h/mQ#R1D5!<<,t"T\`0r<3*%rrW-"o`3bI()\#.(`4&)'bh;o
&.]3X#m^_<!W`9$qum*("o\Z'"9&B$!R^uJ!<3r9(_IQ"'bh;o&.]6Z$4$h=!s&B%qum*("o\Z'"9&B$
!RLiG)&!i((D[`"'+tie%1ERL"p>#/!!)p#!<`T*"T8H%!r`5I!<3r8(_@Gt'GD)k%h9!T#R1D6!<<,t
"T\`0rWN0%rW<'"kQ'iIru(eQ&Jl6!'GD)j%h9!T#R1D6!<<+M~>

%%EndBinary
grestore
np
33.6567 35.9332 mo
33.6648 35.897 33.6728 35.8607 33.6808 35.8245 cv
34.6242 33.4163 36.3668 28.9778 38.062 24.6631 cv
40.0815 19.5225 42.1694 14.2061 42.898 12.3457 cv
43.1089 11.8047 43.2378 10.0615 39.8667 5.57716 cv
38.7515 4.09276 37.5679 2.73829 36.7456 1.83594 cv
35.8801 4.04451 li
35.8762 4.04001 35.8725 4.03575 35.8687 4.03125 cv
35.9648 3.7853 36.0546 3.55578 36.1375 3.34383 cv
36.4342 2.58667 36.6422 2.056 36.7397 1.80665 cv
36.7397 1.80665 li
39.7339 5.05273 43.019 9.51171 43.019 11.7442 cv
43.019 11.9668 42.9878 12.166 42.9194 12.3398 cv
42.9194 12.3398 li
33.6567 35.9332 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[11.04 0 0 35.52 33.12 27.52 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 23 
/H 74 
/M[23 0 0 -74 0 74 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
rrW&u_uL#M$4-tC"pG//!rrE%!Vl`q!r;r\!8dbd$OR1G#6k>8"9S`-!W`>t!<*&r!QG*>$k!FM#R:S=
"U"r1!Wr?%q>gHqqZ4\:%1EUO#m^b?"U"r1!s/Q'!W)lp!rE#u!6G3M%1ERM#mUY<"9\f/!Wr?%qZ-Nq
q>oCPli7J($k!CK#6tG:"9\f.!r`5t!;cio!Qb<N%L`^P#m^b?"U,#2!s/H(rW2os!!E*"qZ4e=%M'!W
$4."E"pG/5!s8T+rW2osrr`-"qZ6?iec60j%1N[P#m^b?"U"r1!Wr?%quHa!qZ?TpdfB1D%hB-Z$O[7H
#6kA9"9S`-!r`6!!<*)u!r;r@!"TSN%1EUN#m^_>"U"o0!Wr?%r;ccur;ufrb5`%a%h/sU$4-tC"pG,3
!s/Q'!W<#r"9&Au!U0UE!"TVP%LidR#m^b?"U,#2!s8H&r;c`trW;osb5_YW&.]3Y%1<IK#6k>8"9S`-
!W`?#!;lru!r;r@!"onU%h/sU$4-qB"pG,3!s/N)!W;uu"T8H%!r;rt!6kKV&eGQ`%1<LL#R:P;"9\f.
!W`?#!!!0#"9&Au!Sd\E!"]eU%hB*X$4-tC"pG,4!s/Q'!WE*!"TAN&!r;r@!"fkW&.]3Y$OR.E#6k>7
!s8T*rrN*!rWN6'r;uisb5`1i&eGQ`$k!CK#R:P;"9S`-!W`?$!<*-$"8i5t!V6<F!#$%[&J#?\$jm:H
#6k>7"9S],!<N0"rWN6'qZ?Wqd/a+F',2)m&.T-X$OI(D"pG/5!s/N)!WE)u"TJT$!rE#C!#$(\&eGQ`
$k!CK#R1G9"9S],!<N0"rWN3&rrW-#quP%B',;2o&J#?\$OR1G#6k>7!s8T*!WE)u"T8H#!rN)^!9X=q
().An&.T-X$4-tC"pG,3!s/K(rW!!'"9eZ*quZcsblA"c'b_/j%h/pS$47%D"pG,4!s/K(rW!!'"U+`*
r;ultblACn'bh8l%h/pT$4$nA"U"r1!W`?$!!3<-"T/B#!rN)t!7:c[(`!eu&J#?[$OR1G"pP56!s/N)
rW)s%rri9&r;ultg&UaF',VN#'+k`c%1<LL#R:P;"9S],!WE*!"oe`("8r<!!R1TZ(`*o$&eGQ_$k!@I
#6k>7!s/N)!!!'#"U4l.rWE*#quP%B',_T$'G:ug%L`^P#R:P;"9S],!WE*!"oST("8r;u!V$0H!#$4d
().An%h9!U$4$nA"U"r1!Wi9#rrr?(rr`0#quP(C',h]''GD&i%L`^P#m^b?"9\f.!WE'""pOr.rr`0#
quP(C',h`)'b_/j%h/mR#m^b?"U"o/!WE'""pOr.rr`3$rrW-"c2\Ls)&F&&&eGQ_$jm:H#6k>7!s/N&
!!*9-r<3*%quZftj8eKG',qi,().Do%h/pT$4$k@"U"o/!WE'#"pG20"T8H$!rW/F!"9hc(`!f!&J,E\
$OR1E#6k>7!s/N&!!!6&"oe`("8r<"!R:ZY*?#b1'b_/j%LidQ#mUY<"9S]+rVup&r<30(qucp"r;l`p
eGp7')As>+'+tid%1<LL#R1G8!s/N&!!!6%"TS]'"9&B#!S7>H!#$@l)&F&&&eGQ_$jm:H#6b54!Wi9#
!!`B*!!N3%rW;uucN"V!*#]Y0'GD&h%1EUN#R:P:!s/N&!!3B/"oec+"T8H%!rN)F!#$Cn)Aj5('+k`b
$k!CJ#6k;5!Wi9#!!iH+rWN3&rW;uumJu5H(`sb;(`!i"&J#?\$OR.E"pG)1!<E0##6t/2rWN3&r;uou
cN"%h*?,k4(DRVs&.T-W$4$k@"U"l-!<<*)"pP57rWN3&r;uoucN"b(*ZGt6().Am%h/mR#mUY<"9S]+
!!!9'"oni+"TAN%!WW9#!TjCI!#Hb!*#]Y0'G:rf%1ERM#6k>7!s/K'!!iK-!!W?)rWE*#r;k4E$R$Q2
)]0>)&ePW`$k!FL#R1G8!s/K'!!iK-!!W?)rWE*#r;k4E(Ejk@)]0A+'+kcc$k!@I"pG,3!W`9$#Q=r-
"oe`("9&B#!W2rI!#He#*?,k4'b_/j%LidP#R1G8!s/K'!!iK-rWN9)r<*$#r;kROpAc!R+<;C>(_m\r
&.T-W$4$k?"9S]+!!!9'#6"c+"T8H%!rW/G!#Qn'*ZQ(8().Am%h/mR#R:P:!s/K'!!`c/#6"c+"T8H%
!rW/G!#?e&*ZZ.9().An%h/pS#R:P:!s/K'!<*3'#6"f+"TAN&!rW/g!9!nn,U"6M)As>+&ePW`$jm:G
"p>#0!<<-!#64u-"o\Z)"8r<#!RC`I,U"9D*?,k4'b_/i%1ERM#6k;5!W`9$rW`E-rWW9(rr`3$rW1=F
(*t.I*?5q5'b_/j%L`^O#6k;5!W`9$rWiH-rrrB)rr`6%!!<-#cN"_,,9S$I)&O,&&J,E\$OI(C"Tnf,
!!*!'rWW?+rWN6'r;us!iW/BH(+(7K*ul19().Am%L`^O#R1G7!W`9$rWiE,!!W?)rWE-$rW1=F%jiPF
*ul4:().Am%LidP#RL\=!s/K'!!if7rWW?+rWN3&rW<'"cN"h0,U+<N)]0A*&eGN^$OI(C"Tnf,!!!91
#Q=r-"oe`)"9&B$!VcZI!#[.0+s.jF)&Eu#&J#<Y$4$h>!s/K'!!ii8rW`B+rri<'rW<'"eH#IH)(-[S
+<DI?(DRSq%h/mR#R:M8!W`9$#RC\7#6+l,"TAN&!r`5H!$!C5,9S$I)Aa,%&J#<Z$4$k?"9JT(!!ii8
#6kD4"oe`)"9&B$!RC`_-mg/^*ZZ.9'b_2k%L`[M#6b53!<<**#lY&1"pG20"TJT'!r`5d!9F1t.4-8`
*uu7:().Am%L`[M#6b53!<<**#lY&1"pG20"TJT'!r`5H!!Xo#,U+<N)\Eo&'G:re$k!@H"U"l-!!!91
rW`K/"U4l.rr`6%rW1=F(b-mZ+s7mF)&<o!&.T*V#mUY;!W`9$#mgM8!X8i4rWN6'rW<'"cN"e3-m^&[
*ZGt5'bV&f%1<II"p=u.!!!<3rW`K/"pOu/rWE0%r;kdUnc0LV-mg/]*ZQ%6'b_/i%1<II"p=u.!!!<3
rW`K/"pOu/rWE0%r;k7F'.YIX,U"3K)&F#$&J#<Y#mUY;!Y#/1!!rr;#6tG;"U,#3rWE0%r;k7F*@rWd
,U"6L)Aa/&&J#<Y#m^_<!W`9$#mgkC#6kD3"TS])"9/H$!VHHJ!$*U>-R9lX*#f_1'+k`a$OI(C"9JT(
!!rr;#R:P<rWN9)rWE-$rW1FI*rl9m.OQJc+<;C<().>k%L`[M"p>#/!!!<3#RCY>#6"c+"TAN&!r`5I
!$*XA-m^&[*ZGq3'G:re$jm7E"9SZ)!!rr;#R:S=rWW<)rr`6%rW1@G*A/ij-6jWS)]9D*&eGN]$4$h=
!s&B%$4-tD#6tJ4"oe`*"9&B$!U'OJ!#@1;.4-8_*ZQ%5'bV&f$jm7E"9SZ)!.Y~>

%%EndBinary
grestore
np
28.9043 48.7237 mo
27.7648 45.8079 26.4943 42.5565 25.6095 40.2924 cv
26.9768 40.4038 28.2876 40.4346 29.3179 40.4346 cv
29.7163 40.4346 30.0718 40.4297 30.3745 40.4238 cv
30.4087 40.4227 li
31.6987 43.7244 li
30.3779 45.1418 29.423 46.8638 28.9043 48.7237 cv
gsave
[7.37321 0 0 7.51755 30.7114 38.8389 ]ct
clp
/0 /Gradient get_res exec grestore
np
22.5972 36.5547 mo
28.0347 34.3467 li
34.9897 52.1475 li
29.5542 54.3574 li
22.5972 36.5547 li
28.5952 33.0391 mo
21.3081 36 li
28.6265 54.7334 li
28.9917 55.6641 li
29.9175 55.2881 li
36.2807 52.7022 li
28.5952 33.0391 li
.05 0 0 .25 cmyk
f
28.4631 51.5654 mo
23.9911 40.1216 li
24.5304 40.1929 25.0742 40.2488 25.6095 40.2924 cv
26.4943 42.5565 27.7648 45.8079 28.9043 48.7237 cv
28.6476 49.644 28.4978 50.5976 28.4631 51.5654 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[6.72 0 0 12.96 23.04 11.68 ]ct
snap_to_device
<<
/T 1
/W 14 
/H 27 
/M[14 0 0 -27 0 27 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U"r2!s8T+!<<9,"U,#3"9\f/!WiB&"9er4"U,#3!s8T+!W`E,"9\i1"9\i0!s/K)"9\i1"9\i1
!s8W-!WiH,"9\i1"9\i1!s8W,!s8Z/"9\i1"9\i0!s8T,!sA`0"9\i1"9\i0!WrN-"9\i1"9\i1"9\c-
!s8Z/"9\i1"U"u3!<N<)!sA`0"U,&5"U+o.!WrN-"9\l3"U,&5!<E6'!s8Z/"9er4"pP)/!<N<)!sA`1
"U,)7!!**%!WrN-"9er5"pP&-!<E6'!s8Z/"U,)7!!!!"!<N<)!sA`1"U4r,!!**%!WrN-"9er5!!!!!
!<E6'!s8Z/"U+l+!!!!"!<N<)!sA`1!!!!!!!**%!WrN-"9\])!!!!!!<E6'!s8Z/!!!!!!!!!"!<N<)
!sAT(!!!!!!!**%!WiH+!!!!!!!!!!!<E6'!s8N'!!!!!!!!!"!<N<)!!!!!!!!!!!!**$!Wi~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~(`F;1(`*o#&Io-Q!rs)R(`4&)'b_/h$O?n:'c.Z&(D[\u&J#9W"p5MR()@Z#'GD&i%1<IH&JPrq'bqDs
&eGQ_$jmOY'GV>t'bh;o&J#?[%M09f'bqGt'GD)k&.f6\&JGin'bqGt'GD,m$OmX[',2/r'bqGu'bq#`
%M09f'bqK"()Ic'#7:kM&JGio()If))&WVa$OmUZ'G_K%)&X>3":#5@%M09g(Dn#.)]]"a#7:kM&JGos
)B0Y;!<WN3$4RLY'G_Q**Zk@`"9o/?%M06f(E+87!!!'(#7:kL&JGos)BAeX!<WN3$4RLX'G_Q*!!!!"
"9o/?%1j-e(E!2Q!!!'(#71eK&JGlr!!!!!!<WK2$4RLX'G^ZK!!!!""9o,>%1j-d!!!!!!!!''#71eK
&/,$D!!!!!!!<B1$4IFW!!!!!!!!!""9o,>%1iL>!!!!!!!!''#71bJ!!!!!!!!!!!!<B0$4H~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
28.4616 51.61 mo
27.2428 48.4904 25.3009 43.5195 23.9724 40.1191 cv
23.9787 40.12 23.9847 40.1207 23.9911 40.1216 cv
28.4631 51.5654 li
28.4626 51.5802 28.4621 51.5952 28.4616 51.61 cv
gsave
[8.6594 -5.96511 5.96511 8.6594 23.7109 47.2715 ]ct
clp
/1 /Gradient get_res exec grestore
np
29.3179 39.4346 mo
25.8469 39.4346 22.972 39.0871 21.0901 38.4857 cv
20.9136 38.3151 20.7747 38.1351 20.6968 37.9385 cv
17.4804 29.7442 li
17.4311 28.924 17.4058 28.0921 17.4058 27.25 cv
17.4058 22.1932 18.3087 17.495 19.858 13.5873 cv
29.9839 39.4297 li
29.7788 39.4326 29.5562 39.4346 29.3179 39.4346 cv
gsave
[21.8893 0 0 22.3178 28.915 39.3906 ]ct
clp
/0 /Gradient get_res exec grestore
np
29.3179 39.4346 mo
23.4937 39.4346 19.3472 38.4561 18.7554 36.9414 cv
18.0229 35.0674 15.9448 29.7783 13.937 24.6631 cv
11.9155 19.5225 9.82765 14.2061 9.10108 12.3457 cv
8.89013 11.8047 8.76124 10.0615 12.1304 5.57716 cv
13.2475 4.09276 14.4312 2.73829 15.2534 1.83594 cv
29.9839 39.4297 li
29.7788 39.4326 29.5562 39.4346 29.3179 39.4346 cv
15.6089 -.000967641 mo
15.6089 -.000967641 7.98781 7.708 8.00929 11.8008 cv
8.01122 12.1289 8.06203 12.4336 8.16943 12.709 cv
9.6206 16.4258 16.3569 33.5508 17.8237 37.3057 cv
18.9038 40.0703 25.771 40.4346 29.3179 40.4346 cv
29.7163 40.4346 30.0718 40.4297 30.3745 40.4238 cv
30.4351 40.4219 li
31.0601 40.4082 31.4351 40.3887 31.4351 40.3887 cv
15.6089 -.000967641 li
.05 0 0 .25 cmyk
f
17.4804 29.7442 mo
11.0425 13.3428 li
10.9741 13.168 10.9429 12.9687 10.9429 12.7481 cv
10.9429 10.7861 13.4746 7.11026 16.1189 4.0446 cv
19.858 13.5873 li
18.3087 17.495 17.4058 22.1932 17.4058 27.25 cv
17.4058 28.0921 17.4311 28.924 17.4804 29.7442 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[10.56 0 0 26.88 10.08 33.76 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 22 
/H 56 
/M[22 0 0 -56 0 56 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 22 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 22 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 22 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 22 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
!!)irqZ?WsrrgjP'`nI?"9eu7#7(VC$O[@P%M'']&J>`Q!W)rq"9&Gm!9O7r!s8Z0"pP;<#mq"I$k3[V
%hK<b&ek-CqZ?Wsr<1XN$NgM8"pP;<#mgqH$jd@P%M'*^&J>`kquQWqqZHd"eGp<e"U,)8#RC_D$OdFQ
%M'*^&J>`j'`8"/!rE)t"Sr,R!#5V?"pYA=#mq%J$k3[W%hK<c&ebror;lcsqZH]ueGoUR"qq4H#RLhF
$OdIS%M'*_&J>`k'c$]KqZ?Wsq?5=K(Bt'K#RLeE$OdIR%M'*_&J>`k'GVAa!Vulp"8r?("9\nY!#GhE
#RC_D$OdFQ%M'*^&J>`j'GVB"!<N'!qZH]urrq3Yq#D08#7(VC$O[@P%M'']&J>]i'GVB!(BOC7qZHZt
rrppQ'aG!N$47.L%1WjY&.oKe',2/r()Ihb!r`<$"8W0""k<Sf#RLeE$OdIR%M'*_&J>`k'GVB"(`<,O
qZH]ur<;?amf4(.#mq%K$k3[W&.fEd',)&p()Ic()>jR5"8`6!"k<Se#mq%J$k3[W%hK<c&ebro()@]'
)#tTR!rE)r"T/GR!#5hJ$OdIS%M'*_&eYil'bqK#(`=20rW;s!q?6[!nGqYN'ab<W%1NdX&.oKe',2,q
()If))&aIn!rE)s"T&?&#1W\\$OdFQ%M'*^&J>`c',2/s(Ddo+)B0Us!rE)s"T&B&#1W\h$OdIS%hB3`
&eYil'c%Q$(`=51)]SqV"8W/t"oef(!8@Jg$k3[V%hK<c&ebro'c%T&)&X>3*$"hXq?6[!rW^mQ!"BVO
%M'*_&J>`k'GVB"(`4,/)]Th<qZH]uqZZp&eGp<n%M'*^&J>`j'GVB"(Dn#.)]Kb;*rH-;"T&?&#5nbV
!#5tS%hK<c',)&p()@]')&aD4*$$%@r<)m!qZZm%h>m<N'b1`c&J>]i'GV>u(Dn#-)B0Y:*?H=%"8W/t
"oAMS!#6"U&J5Wh'GM8t(Dmu,)B0Y9*?H:ErWE'$!!N0&qZ[$*eGpBs&.oNg',2/s(Ddo+)B0V8*?H7D
+9M`C"T&B!"onnl!:Bh&&.oNg',2/s()If*)B'P7*??1C+<^j`"T&B"#6+qY!##qW&ebro'c%T&)&X>3
*$$%@+!:S,+o2?="oAN'#Lreh&J>`k'GVB"(`4,/)]Th<*ZlIH+X6ddqZZj$r<Mlnj8]o-',2,q()Ic(
)&aG5*$$(A+!;^N,5_T@"o8H%#Lre\',)&p()@]')&`l$)]Tk>*ZlLJ+X/00"Sr<!#5e_V!#6.]'bqK#
(`=20)]Tk=*ZlLI+X/-Vr<3!$qZcp&quGFN'bh>s()If))&aG6*$$(B+!;^N,9nK5"T&B"#5SST!#H=a
()Ic()&aG5*$$(A+!;^N+sS?Z"9eT*q?Hg%!!q*T()7T#(Dn#.)B0Y:*ZcCG+X&$S,UF`>q??a#rWiE-
rs7-T()7T$(`=20)]Tk=*ZlLI+X/-V,UF`>qZZj$p]o[VpAbpD(Dmu,)B0Y9*?H:E+<_pR,:"N\-2RlC
#58AQ!"g"`(`=52)]Tk>+!2UK+sJ6VrZhIir!!*)r!)m#eGp'q(`=51)]Tk>*ZlLJ+X6k0rZqCFqZca!
klC)N%N$'$)B0Y:*?H:F+<_pQqBPqBqZd$)!!`6(eGp!p)&aG6*$$(B+!;^Mq]c"arWW0'rW`E-p]o=L
#oOX#)]Tk>+!2X(+o*>^"o8E)#6tJ4#64u*#P.rU!!jJ])]Tk>*ZlO!+oW\c"oAK*#6tJ4#64u,#6G)7
#Lre[)B0Y:*?H:F+S6fW"oAK.#6tG;#6tJ4#QG#-#Lre])]Th<*ZlIH+X&!%+o;KD#QG#.#QG#.#Q=o/
#6tJ3!8.>U)]Tk>+!:D'ruq.[qZ[<2"pP;;"pP;;rWW?-rW^pR"TTM_*ZcF$+93S[+9<Q,r!!E3"pP;;
"pP;;rWW?-r<CdP"!&C'+7p]R+8lBD#Q=o1#6kA;#Q=o-#Q+el!:'Ud*?H<s+S[&X"ono-"ono-"ono-
"ono*#1W\T*ZlL!+T3A^*rI)Y"p5)7"pb,3!!i3%eGoUk+8[/^+!;^)+8[)`*<l]Q"pP>3"ono$#5%uT
!!",;+9EW,+T<J]*X*Q)*#o.frWWH0"pP>*"onhW!;[f<+T*>[*rd8[*!?KO"pP>'#6+kW!;Rc:+8d/[
*W@#^)]K"d"pb,3!!i6&r<<3$f)YUhru_1\!$2%Y$6'p&)?pBN#6kA;pBLO!fDtmN!?`Qa+9ru2+!2OF
*?G,!ru:qU"U5/9"pP>+#5eYT!!"2?+T3D^*rd8[*!R?#)As@r#Q=o-#Q"]+"U=u2qZYLMruq=`%j)l7
+!)ID*?6";)B'J1(k;~>

%%EndBinary
grestore
np
18.3433 35.9375 mo
9.0796 12.3398 li
18.3423 35.9332 li
18.3426 35.9346 18.3429 35.936 18.3433 35.9375 cv
19.858 13.5873 mo
16.1189 4.0446 li
16.1227 4.0401 16.1265 4.03575 16.1304 4.03125 cv
16.0355 3.78859 15.9468 3.56186 15.8648 3.35229 cv
16.6798 5.43175 18.1612 9.21099 19.8667 13.5654 cv
19.8638 13.5728 19.8609 13.5799 19.858 13.5873 cv
gsave
[24.8953 18.7542 -18.7542 24.8953 4.33252 9.479 ]ct
clp
/1 /Gradient get_res exec grestore
np
21.0901 38.4857 mo
19.8141 38.0779 18.9945 37.5534 18.7554 36.9414 cv
18.6408 36.6484 18.4933 36.2717 18.3184 35.8253 cv
17.8947 33.9001 17.6076 31.8619 17.4804 29.7442 cv
20.6968 37.9385 li
20.7747 38.1351 20.9136 38.3151 21.0901 38.4857 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[4.8 0 0 10.56 16.8 24.64 ]ct
snap_to_device
<<
/T 1
/W 10 
/H 22 
/M[10 0 0 -22 0 22 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,)6"pP89"pP57"pG28"U5/8"U,&5"pG/7"pP57"U,)6"U5,6"U,&5"U,&5"U,&5"U,&5"9er4"U,#4
"U,#4"U"u4"9er3"9eo2"U"r3"9\i2"9\l2"9eo2"9\i1"9\i1"9\i1"9\i1"9\i1"9\i0"9\i1"9Sc0
!s8Z/"9\i0"9\f/"9Sc0!s8Z.!s8Z."9\f/"9S`."9Sc0!s8Z.!s8Z."9\f/!s8W,"9Sc/!s8W-!s/Q,
"9S`.!s8W,!s8Z.!s8W-!s/Q,"9S`.!s8W,~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~)B0Y9*?H7C*Zc4=*#oq=*$$%?)&aD4)]K_9*#oe5)&aG4)B0S5(`=2/)&X>1)&X5-(`4),(`4),(Ddl)
(Dmr)(D[c&()Ic'()@W"'c%Q#()@W"'GM8s'bqGu'GM2o'bqGu'GM2o&eYlm'GM5p'+tlh',2,o',)#l
&.fKg',(uk&ePWb',)#l&eYcf%h96d&eYfh&.f<\&eblj&J5Qb%1Np_&J>Ze%hB*X&eYcg&.f?^$k*^\
&J5Qb%h9!U&J5Te&.]6\$k!XZ&J5Qb%LigS~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
21.105 38.5 mo
19.8804 38.1162 18.9976 37.6045 18.7358 36.9355 cv
18.3423 35.9332 li
18.3343 35.8974 18.3263 35.8612 18.3184 35.8253 cv
18.4933 36.2717 18.6408 36.6484 18.7554 36.9414 cv
18.9945 37.5534 19.8141 38.0779 21.0901 38.4857 cv
21.095 38.4905 21.1 38.4952 21.105 38.5 cv
15.8648 3.35229 mo
15.5663 2.5907 15.3572 2.05691 15.2593 1.80665 cv
15.3573 2.05628 15.567 2.59109 15.8648 3.35229 cv
gsave
[12.125 0 0 12.125 8.97998 20.1533 ]ct
clp
/1 /Gradient get_res exec grestore
np
18.3184 35.8253 mo
17.3747 33.4174 15.6309 28.9785 13.937 24.6631 cv
11.9155 19.5225 9.82765 14.2061 9.10108 12.3457 cv
8.89013 11.8047 8.76124 10.0615 12.1304 5.57716 cv
13.2475 4.09276 14.4312 2.73829 15.2534 1.83594 cv
16.1189 4.0446 li
13.4746 7.11026 10.9429 10.7861 10.9429 12.7481 cv
10.9429 12.9687 10.9741 13.168 11.0425 13.3428 cv
17.4804 29.7442 li
17.6076 31.8619 17.8947 33.9001 18.3184 35.8253 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[11.04 0 0 35.52 8.16 27.52 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 23 
/H 74 
/M[23 0 0 -74 0 74 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
nc8OfrrU@DrW*B.!WrN-"U,)9#mgt0!;cfs!qcQF!<*!,!WiH+"9eu7#RLhGo)SXgrW:LJqZ-TrrW3B.
"9eu6#7(VD$hOGr!W<)D!<*!-!WiH,"9eu7#RLeF%.sT#!W)or!mL`D!=T#3!sA`1"pYD?$4@=9!;cfp
!pBXH!<*!.!WiH+"9eu6#7(YE$Oue0qZ6QqblIbErW3-'"9\u6"pYD?$4@7PpAk'kqZ6a"c2dhE%KZ\6
!sA`1"pYD?$4I=Qp]1-kqZ6a"rW(=GrW*K1!WrN-"U5/9#RUqJ%1`.5qZ6Qqrr_!UoDnjk%KZ\6"9\l4
#7(VC$OdLTq#L6lquZj"c2dhE%KZ_7"9\l4#7(VC$k*UVr;ccrq>pNrr<(@GrW*N2!WrN-"U5/9#RUqJ
%1a$G!;Z`p!rW5k!8deU!=o55!sA`1"pYD?$4@7P%hSO:q>pQsqub7F!!*Z4!<N?*"9\l4#7(VC$k*UV
&buG'!WE/u"4$r[!<E6'!s8Z0"pP;<$471N%hK?K!;Z`r!WW<""4$r[!<E6'!s8Z0"pYD?$4@7P%hKBL
!;Z`q!rW3$"QTRL!"o;5!WiH+"9eu7#RLhG$k<d[');P(!WE0""9/MM!"Ar0!WiH,"U5/9#RLhG":YhP
&JFm>qZ6WsrWE0'cN"RY!<N<)"9eu7#RLeF$k<aY&ek*AqZ6Trrr`6'q>f(H&ci"7!s8Z0"pYD?$4@7P
%hTEfq>gBnquZm#rWLgQq>_00!<N<)"9\l4#7(VC$OmRW&J>fT!;cfo!riB%"OI,^!<E6'!sA`1"pYD?
$OdIS&.oQjqZ-Wsr;lcsrr`6'ci=^[!<N<)"9eu7#7(YE$k3^Y&ec#W!;cfp!r`<$"RQ3M!##A6!WiH,
"U52;#mq%K%M'*`'GgQGqZ6Wsr<!*("9m-P"T\W*!s8Z8"U52;#mq(M%M'-b'c-ZHqZ6Ztqu[!'"U36Q
'*/+8!s8Z0"pYD?$OdIS&/#Wk(]+40!WE/u!rrK("jd5_!<E6("9er5#71\E$k<dZ&el&sqZ-KorW<!"
!X&Z1huN9I'*/+8!sAc3#6tPB$OmRV&JGin(]+40!WE0!"9/N("jd5^!<E6("9eu7#RLhG%1Wp]',22^
)#F=1!WE0""9&H'"jd5_!<E6("9eu7#RLhH%1a!^',;9"quHQorW<'$rWN6)p&NhI'*/.9!sAc3#7(VD
$k3^Y&el&s)>jL3!W<*""8rB&"k*JN!##A7!WrQ/"pYD@$OdLU&J>cn(`E5OquQ]srr`3&!<i\S!##A7
!WrQ/"pbJA$OmRV&JGlp(`N;PquQg!rW<*%r<*-)#1*>`!<N<)"9o&9#mq(M%M06d'c%W*quHWqquZm#
r<*-)#3c-O!##A7!sA`2#7(VC$k3^Y&ebur(`WAQquQ`trWE-&!X/`3ci=@Q!WrQ/"pYD?$OI4O%hK?f
'c.`,quHWqrW<$#rri<)!!^dM'*/.:"9eu7#RUqJ%M'-a'G_N()uK^6!WE0!"9/N'"Tel.!7Ci\!<N?+
"U52<$4@:Q&.oQj(Dn&1quHWqrW<$#!!N6(!!_3Yo`,X+!WrQ/"pYGA$OmRW&ebur)&jUo!;lls!rW3$
"T8K(#1*>`!<N?+"U55=$4@:R&/#Wk(E"/4rW)ruquQcurWE0'r<30*ci=^[!WrQ/#7(VC$k3^Y&el)t
)&jUo!;urs!r`<%"T8K(#4_cO!##A7!sAc4#RLkI%1a$a'G_N')]\bUr;liurr`6'r<30*ci=%H&cr.<
"U>;?$OdLV&JGlp(`=84quH]squZm#rWN0'!!^dM'*/.:"9o):$4@:Q&.oQj()Ii,)uK^8!W3!#!s8Z,
!sJQ+!!_]gk5Z.r!WrT1#7(YE%1Wp]',22u)&aIl!<*#s!r`9+"9\l2"U,+W!!iT,!sJl6#mq%I%1a!^
',2/t(`=:j!<*#t!r`<#"TAQ)#1*>`!<N?,"pYGA$k3^Y&JGin(Dn#/quH]srW<$#rWN-&!!(CH'*/.;
"U55=$4I@S&.oQi'c.]))uTd8!WE-.!s/Q,"9Sc1"U"u4h#R'I'*/.;"U55=$OdIS&.oQh'c%T&)Z9[7
!W3#t!sJf2"9\l4ci=d]!sAc3#RLkI%1Wp]&ebuq(Dn%j!<3&t!W<)u"8i<%"jd5_!<WH."pbMC$k3[X
&J>`l()If*r;ccsr;us#qum!&o)RVI'*/1<"U>;>$OdIS&.oNg'GVB#)>sR6!WE-.!s/Q,"9Sc0"U"u4
ci=^[!sAc4#RLkI%1Wp]&ebro()Ihd!;urr!rW6""TJYP!##D9"9f#9#n%.N%M00a',2/s(E!)Nr;lft
rr`9'r<3-(ci=^\!sAc4#RLkI%1Wp\&ebon()Iec!;urs!rN0!"TJYf!:'Uu!WrQ/#7(VD$k3[W&/#Th
'c%Q$r;ccsquZg!r<3-(ci=IU!sAc4#RLkI%1Wm[!YH%YrY5DLr;ccsrW3*&!rW6""9AZ/ci=^\!sAc4
#RLkI%1Wm[&J>`j'GVD^!;urr!rW5u"T/8M!##D9"9f#9#mq(M%M'*^&eYil'c-`Jr;lftr<)p"f`:dI
'*87="U>;>$4@:Q%hK9b&ebro(&\.2!W3#t"8`5J!##D9"9f#9#mq%K%M'*^&eYil'G^QHrrN-#quZg!
!X&W.rWLRJ'*87="pYD?$4@7O%hB3`&JGfl'`A%1!W3#t!s/T-"9&Gl!9*th!WrQ0#7(VC$OdIS%hK<b
r=f,0r;lftr<!*(!sAN*ci=.L!sAf=#7(VC$OdIS%hK<b&eYikr;ccsquZ]srWLRJ%fuh9"U>;>$4@7O
%M'']&cE@@!;urr!rE'""9&GM!"K&4"9o):#mq%K%1WmZ&H3:A')_h/!W3#q!s/T."6'=L!##D9"9o):
#mq%K%1WmZ&.fEc&eb-Cr;lftq?$d%"9[!N&-;q:"pYD?$4@7O%Ls!\&J,!U&eY'Br;lftq?$d%!s?mM
$N^D5"pYD?$4@7O%fR"=&H3:?!;urr!r<!#"9Sc$!8.>]!WrQ0#7(VC$OdIS%M/OMrXo)/r;lft!<WE!
"4[DL!"8o2"9o):#mq%K%1WmI&,d(<!;urr!W`B)q#etD$j$M6"pYD?$4@7O%M&IKr=Jo-r;lp"rW3*&
!r<!!!mgoU!WrQ0#7(VC$OdIS%fR"<&-*7>!;urp!r2ra!9O7i!WrT1#7(VD$OdIS%fQt@&.]<_J,~>

%%EndBinary
grestore
np
18.3423 35.9332 mo
9.0796 12.3398 li
9.01318 12.166 8.97999 11.9668 8.97999 11.7442 cv
8.97999 9.51171 12.2651 5.05273 15.2593 1.80665 cv
15.2593 1.80665 li
15.3572 2.05691 15.5663 2.5907 15.8648 3.35229 cv
15.9468 3.56186 16.0355 3.78859 16.1304 4.03125 cv
16.1265 4.03575 16.1227 4.0401 16.1189 4.0446 cv
15.2534 1.83594 li
14.4312 2.73829 13.2475 4.09276 12.1304 5.57716 cv
8.76124 10.0615 8.89013 11.8047 9.10108 12.3457 cv
9.82765 14.2061 11.9155 19.5225 13.937 24.6631 cv
15.6309 28.9785 17.3747 33.4174 18.3184 35.8253 cv
18.3263 35.8612 18.3343 35.8974 18.3423 35.9332 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[11.04 0 0 35.52 8.16 27.52 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 23 
/H 74 
/M[23 0 0 -74 0 74 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
nc8OfrrU@DrW*B.!WrN-"U,)9#mgt0!;cfs!qcQF!<*!,!WiH+"9eu7#RLhGo)SXgrW:LJqZ-TrrW3B.
"9eu6#7(VD$hOGr!W<)D!<*!-!WiH,"9eu7#RLeF%.sT#!W)or!mL`D!=T#3!sA`1"pYD?$4@=9!;cfp
!pBXH!<*!.!WiH+"9eu6#7(YE$Oue0qZ6QqblIbErW3-'"9\u6"pYD?$4@7PpAk'kqZ6a"c2dhE%KZ\6
!sA`1"pYD?$4I=Qp]1-kqZ6a"rW(=GrW*K1!WrN-"U5/9#RUqJ%1`.5qZ6Qqrr_!UoDnjk%KZ\6"9\l4
#7(VC$OdLTq#L6lquZj"c2dhE%KZ_7"9\l4#7(VC$k*UVr;ccrq>pNrr<(@GrW*N2!WrN-"U5/9#RUqJ
%1a$G!;Z`p!rW5k!8deU!=o55!sA`1"pYD?$4@7P%hSO:q>pQsqub7F!!*Z4!<N?*"9\l4#7(VC$k*UV
&buG'!WE/u"4$r[!<E6'!s8Z0"pP;<$471N%hK?K!;Z`r!WW<""4$r[!<E6'!s8Z0"pYD?$4@7P%hKBL
!;Z`q!rW3$"QTRL!"o;5!WiH+"9eu7#RLhG$k<d[');P(!WE0""9/MM!"Ar0!WiH,"U5/9#RLhG":YhP
&JFm>qZ6WsrWE0'cN"RY!<N<)"9eu7#RLeF$k<aY&ek*AqZ6Trrr`6'q>f(H&ci"7!s8Z0"pYD?$4@7P
%hTEfq>gBnquZm#rWLgQq>_00!<N<)"9\l4#7(VC$OmRW&J>fT!;cfo!riB%"OI,^!<E6'!sA`1"pYD?
$OdIS&.oQjqZ-Wsr;lcsrr`6'ci=^[!<N<)"9eu7#7(YE$k3^Y&ec#W!;cfp!r`<$"RQ3M!##A6!WiH,
"U52;#mq%K%M'*`'GgQGqZ6Wsr<!*("9m-P"T\W*!s8Z8"U52;#mq(M%M'-b'c-ZHqZ6Ztqu[!'"U36Q
'*/+8!s8Z0"pYD?$OdIS&/#Wk(]+40!WE/u!rrK("jd5_!<E6("9er5#71\E$k<dZ&el&sqZ-KorW<!"
!X&Z1huN9I'*/+8!sAc3#6tPB$OmRV&JGin(]+40!WE0!"9/N("jd5^!<E6("9eu7#RLhG%1Wp]',22^
)#F=1!WE0""9&H'"jd5_!<E6("9eu7#RLhH%1a!^',;9"quHQorW<'$rWN6)p&NhI'*/.9!sAc3#7(VD
$k3^Y&el&s)>jL3!W<*""8rB&"k*JN!##A7!WrQ/"pYD@$OdLU&J>cn(`E5OquQ]srr`3&!<i\S!##A7
!WrQ/"pbJA$OmRV&JGlp(`N;PquQg!rW<*%r<*-)#1*>`!<N<)"9o&9#mq(M%M06d'c%W*quHWqquZm#
r<*-)#3c-O!##A7!sA`2#7(VC$k3^Y&ebur(`WAQquQ`trWE-&!X/`3ci=@Q!WrQ/"pYD?$OI4O%hK?f
'c.`,quHWqrW<$#rri<)!!^dM'*/.:"9eu7#RUqJ%M'-a'G_N()uK^6!WE0!"9/N'"Tel.!7Ci\!<N?+
"U52<$4@:Q&.oQj(Dn&1quHWqrW<$#!!N6(!!_3Yo`,X+!WrQ/"pYGA$OmRW&ebur)&jUo!;lls!rW3$
"T8K(#1*>`!<N?+"U55=$4@:R&/#Wk(E"/4rW)ruquQcurWE0'r<30*ci=^[!WrQ/#7(VC$k3^Y&el)t
)&s^q!;urs!r`<%"T8K(#4_cO!##A7!sAc4#RLkI%1a$a'G_N(*$5"Xr;liurr`6'rWW<+ci=%H&cr.<
"U>;?$OdLV&JGlq)&aJ:quH]squZm#rWN3(rs$gM'*/.:"9o):$4@:Q&.oQj(E"/4+8c-<!W3!#!s8]+
"TJZ)#3l3O!##A7!sJl6#RUqK%M06d'c.`-*?Y1ZrW2ourr`6'rrrB+ci==P!WrT1#71_F$4RLW&el)u
)&s\?quH]sr;us#rWN6)rW^^L'*/.:"U52<$4I@S&J>cn(`FA9+T)6=!WE0!"9&H'"o\]+!7:c[!<NB-
"pbMB$k3^Z&el)u)]TqCr;ccsrW<$#rri<)rW_0YoDfO*!X&Z2#RLkI%M'-b'c.]+*?QI'!;urt!rW3$
"T8K*"pP=Z!#5M:"9eu8#n%.O&/#Wk(E"/5+!L[brrDuurW<$#!!N6(!X8l7ci=^[!sAc3#RLkJ%M06d
'c7i.*Zu^+!;urt!rW3$"T8K*"pYD)!8[\h!<WH.#7(YE%1Wp^'G_N(*$-4Ir;ccsrW<'$rri9(rWgdM
'*/1<"U>;?$OmUY&el)u)BBkB,Q.W@!WE0#"9&H&"TSc+#LEGa!WrQ/#7(YF%1a$`'GhW**?QIMr;ccs
rW<*%rr`H-"U,)7rWgdM'*87="U>>@$k3^Z',;<$)]g(F,lI`A!WE0#"9&H'"oef+#Nc$P!##D9"9o);
$4ICT&JGlq)&jV>+sm0fr;lm!rr`6'rrrE,rWgdM$j$M6"pYGA$k<d[',Cch)&s\@+sm0fr;lp"rWE-&
"pG/7"pYA=ci=^\!sAf5#n%.O&/#Zm(`FA8+X8?4!;uru!r`<%"TAQ-"pP;;#lF\Q!##D9"9o);$OmRW
&el)u)B9hB,UWHir;lp"rWE0'rWNE/"pYD>f`:dI'*87>"pYGB%1Wp^'GhT**?ZLN-iF&D!WN6#"9/N'
"U##6#7(U^!##D9"U55>$OmUY',26#)]^%F,q&WkrrE*#rW<'$rri<)"9o)9#RJcW'*87>"pbPD%1a$a
'c.`,*Zu[R-iF&E!WE0#"9&H&"U##7#7(V(!9*tl!WrT1#RUtL%hTHi(E"26+<r0\r;cftrW<*%rWN3(
"9o)9#RJcW!s/Q."qLtH$k<d\',;?&*$-7K-7JfmrW3!"rr`6'rrrE,rs/Q0ci=^\!sJl7$4ICT&el)u
)B9hC,UOu=!<*#u!riB%"98W)"p5)8#RSiX'*87>#7(YF%M06e()Ru2+!MsX.fBAH!WN6#"9&E'"o\].
#6tM@iW/EI'*87>#7(YF%M06e()\&3+<i*Z.fBAH!WN6#"9&E'"o\].#6tM@ci=UY"9f#:$OdLV&eu0"
)]g+G![T6Fr;cftrrW0%rri?*rWWH0#RCa`!##D:"U>>A$k<j^'c.`-*Zu[S.4b>srW3$#rWE0'rrrB+
rWiK1p]/tI'*8:?#71bI%M9?h(E"26+XAB`/,]JJ!WE0""9/N("o\`*#QP1]!;lg1!X&Z3#n%1Q&JGlq
)B9hB,UOrjr;ciurW<'$"p>&4"U5/9rWiK1ci=^\"9f#:$OmUY',;?&*$6=L-RgVF!<3*!!WW<&"9&E+
"U,)8#Q=u/$.&Yc!X&Z3#n%1Q&JPut)BBnD,UY&nr;ciurW<*%rWE?-"U52:rWiK1lN$&I'*8:@#71bI
%h]Ql(`OJ;+seWe/V!~>

%%EndBinary
grestore
np
40.2309 63 mo
36.8647 63 33.7907 61.4337 31.7864 58.8387 cv
32.1871 59.349 32.6285 59.8175 33.103 60.2422 cv
32.8261 59.9208 32.5649 59.582 32.3223 59.2258 cv
33.207 57.4107 34.3873 55.7272 35.8158 54.2165 cv
36.1814 54.9688 36.7159 55.5993 37.3623 56.0687 cv
38.2978 57.285 39.7339 57.9972 41.2318 57.9974 cv
41.8283 57.9974 42.4343 57.8845 43.0229 57.6455 cv
44.2378 57.1523 45.1929 56.2051 45.7104 54.9785 cv
46.23 53.749 46.2476 52.3896 45.7651 51.1504 cv
45.4393 50.3171 44.9039 49.6134 44.2267 49.0757 cv
44.1273 48.9345 44.021 48.7993 43.9087 48.6706 cv
45.7478 47.8903 47.7198 47.2978 49.7878 46.9332 cv
49.9487 47.252 50.0958 47.5811 50.228 47.9199 cv
52.4321 53.5596 49.7319 59.9736 44.2075 62.2178 cv
42.9302 62.7373 41.5923 63 40.2309 63 cv
39.4502 47.0591 mo
39.7077 47.0165 39.9673 46.9951 40.2269 46.9951 cv
40.4687 46.9951 40.7104 47.0136 40.9505 47.0506 cv
40.7124 47.0152 40.4696 46.9971 40.2231 46.9971 cv
39.963 46.9971 39.7049 47.0178 39.4502 47.0591 cv
48.002 44.3724 mo
45.9693 42.2228 43.1425 40.9965 40.2119 40.9965 cv
39.5576 40.9965 38.8985 41.0575 38.2414 41.1831 cv
38.8935 41.0574 39.5557 40.9942 40.2231 40.9942 cv
43.2359 40.9942 46.0147 42.2485 48.002 44.3724 cv
gsave
[10.2918 0 0 10.2918 40.7539 61.6826 ]ct
clp
/2 /Gradient get_res exec grestore
np
40.2319 55.9971 mo
38.6724 55.9971 37.1948 55.042 36.5835 53.4775 cv
35.7827 51.4277 36.7651 49.0977 38.7749 48.2813 cv
39.2495 48.0879 39.7407 47.9971 40.2231 47.9971 cv
41.7827 47.9971 43.2612 48.9512 43.8726 50.5166 cv
44.6734 52.5654 43.6909 54.8965 41.6792 55.7129 cv
41.2046 55.9053 40.7143 55.9971 40.2319 55.9971 cv
40.2231 39.9941 mo
38.7739 39.9941 37.3003 40.2686 35.8726 40.8486 cv
29.8335 43.3027 26.8882 50.2822 29.2944 56.4385 cv
31.1294 61.1377 35.5532 64 40.2309 64 cv
41.6802 64 43.1548 63.7246 44.5835 63.1445 cv
50.6206 60.6914 53.5659 53.7119 51.1597 47.5557 cv
49.3237 42.8555 44.8999 39.9941 40.2231 39.9941 cv
40.2319 56.9971 mo
40.8579 56.9971 41.4712 56.8769 42.0552 56.6396 cv
44.5698 55.6191 45.8032 52.709 44.8042 50.1524 cv
44.0552 48.2354 42.2573 46.9971 40.2231 46.9971 cv
39.5972 46.9971 38.9829 47.1172 38.3989 47.3545 cv
35.8852 48.376 34.6538 51.2851 35.6518 53.8418 cv
36.4019 55.7588 38.1987 56.9971 40.2319 56.9971 cv
40.2231 40.9942 mo
44.6577 40.9942 48.5855 43.7119 50.228 47.9199 cv
52.4321 53.5596 49.7319 59.9736 44.2075 62.2178 cv
42.9302 62.7373 41.5923 63 40.2309 63 cv
35.7964 63 31.8687 60.2813 30.2261 56.0742 cv
28.022 50.4356 30.7241 44.0205 36.2485 41.7754 cv
37.5249 41.2568 38.8628 40.9942 40.2231 40.9942 cv
0 .5 1 0 cmyk
f
32.3223 59.2258 mo
31.8734 58.5668 31.4881 57.8484 31.1851 57.0713 cv
30.6655 55.7402 30.4194 54.3662 30.4194 53.0137 cv
30.4194 48.6406 32.9936 44.4961 37.2163 42.7803 cv
38.5171 42.2516 39.8604 42.0014 41.182 42.0014 cv
43.8152 42.0014 46.364 42.9937 48.3315 44.7539 cv
48.3315 44.7539 li
48.3315 44.7539 li
46.2784 42.3716 43.2993 40.9983 40.2022 40.9983 cv
39.4766 40.9983 38.7451 41.0735 38.0169 41.2289 cv
38.0916 41.2128 38.1664 41.1976 38.2414 41.1831 cv
38.8985 41.0575 39.5576 40.9965 40.2119 40.9965 cv
43.1425 40.9965 45.9693 42.2228 48.002 44.3724 cv
48.7043 45.1231 49.3078 45.9823 49.7878 46.9332 cv
47.7198 47.2978 45.7478 47.8903 43.9087 48.6706 cv
43.1496 47.8006 42.1081 47.2225 40.9505 47.0506 cv
40.7104 47.0136 40.4687 46.9951 40.2269 46.9951 cv
39.9673 46.9951 39.7077 47.0165 39.4502 47.0591 cv
39.0919 47.1171 38.7402 47.2158 38.3989 47.3545 cv
35.8852 48.376 34.6538 51.2851 35.6518 53.8418 cv
35.7019 53.9698 35.7567 54.0948 35.8158 54.2165 cv
34.3873 55.7272 33.207 57.4107 32.3223 59.2258 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[20.64 0 0 19.68 29.76 4 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 43 
/H 41 
/M[43 0 0 -41 0 41 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 43 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 43 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 43 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 43 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
d/YHn!WrT1#7(VC$OdIS%hK<d'GVB"(`=52*$$(C+X/-V,pjuf.K'5l!<WK1$4ICU&el-")]^"D,:4fg
/1rV42)dNW4[;>%7S$-F:B=<kVuS%C!WrQ/#7(VC$OdIS%hK<c',;9!(`=52*$$(B+<i$U,pjul-n-Vr
!!!$%"U>>A%M06e()Ru2+!DjT-RpZ"0JYID3BKAg5t"158k_uV;cQo(!;Z[p!<N?+"U52<$4@7O%M'*_
&ebro(Dn#.)]Tk>+!;^N,UFcb-n-Vr/1gi'"U>>A%1a'c()Rr0+!DjT-RgPu0JYIC3'08f5sn(38k_uV
;H-_#>M]A*!)!@q"9eu7#RLkI%1Wm[&J>`k'c%T')B0Y:*ZlLJ+sS?[-R^Dn.kE8)0*DIc$OmUY',DE'
*$-4I,pt,l/MAk92E3`[5=%Y*7nF"\:/Fhf<`iR3?`O/J"9eu7#RLhG%1Wm[&J>`k'c%T&)B0Y:*ZlLJ
+sS?k,pk#h.P!&%/h\n5#R_(P&JGlq)B9e@+s\Nb.kND/1c@<S4?c"t77TpB9i+_e<`iO1?X[HT!:p1j
"pYD?$4@7O%hK<c',2/s(Dn#.*$$(B+<_pR,UFcb-n6_u/M8\10etNn%hTHi(E"/5+<i'X-n?l&0f([H
3]oSk6:==892/2Z<*!+)>[CiKAS:-*`W/@3#mq%K%1Wm\&ebro()If*)B0Y;+!;^N,:"Q^-R^Dn/1iJ-
0JP==1c5gX'c.`,*?QIN-7C>p0/57?2`Wua5XIjN7S$0H:Jk%j=B\s9?t*\[BksaL(((EX%1Wm[&JGin
()If*)B0Y:*ZuUM4sM=!-7:2j.P!&&0/,+91GgsI2\[&G)]^"D,:4fg/1rV42)dNW4[;>%7S$-F:Jk%j
='8d7?t*YYBkqR(_#Wd$<=B<H%hK<c'GVB"(`=52*$$(B+<i$U,pjuf.4Qi!/M8_31,CaE2E*TU(`OJ;
+X89].P*2+1,LpM4$>eo6q0^>9MSD_<EE=-?!q,PAnYprDfKjd!58Fp%M'*_&ebrp(Dn#.)]Tk>+!;^N
,UFcb-n-Vr/1iJ-0JYF@2)[BQ3BB5A+!DjT-RgT!0JYIC3'08f)*pVY84lQN:f::p=^,0=@:Wt`C2@d-
F*2]-!"KPP&ebro()Ro-)]Tk>+%@@r+sS?[-R^Dn.kE8)0/,+91c70M3&s#]4?Xf3,pt,l/MJq:2E3`[
5=%Y*7nHBL:f:7n=^,0=@:Nk^C2@d,EclSOHcZ9J!*'XF'GVB"(`F>5*?H:F+X/-V,pk#h.P!&%/h\n5
1,CaF2`NfY4$5Yi59qU*.kND/1c@<S4?c"t77TpB9i+_e<`iO2?X[GUB5)1"E,p&DH$ashp&MN$1DCQ>
(Dn#.*$$(B+<_pR,UFcb-n6_u/M8\10etOA2)[ES3]fGe5!M:u-n?l&0f([H3[$UL5XIk/8P;cR;,gRu
>$PBB@qB:eCMe$2FEVnTI=Hg#WrN>>(Dn#.)]VTo+!;^N,:"Q^-R^Dn/1iJ-0JP==1c70M3BB5a4[)(q
5sdpi0/57?2`Wua5XIk.8P;cR;,^Is>$PBA@V'1dCMe!1FEVnTI"$X!Knn%UgAk4j)&aG6*?H=H+sS?Z
-7:2j.P!&&0/,+91GgsI2`NfZ4?Ykm5X@_(6q&dc2)dNW4[;>%7S$-G:Jk%j='8d7?t*YYBkqR(EH?;J
H@10lJq\u:MuE^Z!%Ss,*$$(B+<i$U,pjuf.4Qi!/M8_31,CaE2E*TU3]fJg5<qM$6UX@47l2YR3BKAg
5t"158k_uW;cQn%>?tWGA7fLiD/XE8Fa&.ZIXm$'L5ChJO/r=^!$!"#+!;^N,UFcb-n-Vr/1iJ-0JYF@
2)[BQ3BB5a4[21t6:4.07Rp!@3'08f5sn(38k_uV;H6e$>?tTEA7fLiCi466Fa&+XIXm$'L5:_HO-,XZ
!7LpE*ZlLJ+sS?[-R^Dn.kE8)0/,+:1c70M3&s#]4?Ykm5sdq,77Kd<8P2W=5=%Y*7nHBL:f:7n=^,0=
@:Nn_C2@d,EclSOH[UBqKSG;?N!,3(PEhK8!$`U0+sS?Z-7C;m.kE8)0/,+91Gq'L3&s#]4?Ykm5X@b*
77K"%84cEH9MIf?77TpB9i+_e<`iO2?X[GUB527#E,p&DH$ashJV/]5MN!RWPEhK&S$W1j!*(3f,UFcb
-n6_u/M8\10etOA2)dKT3]fGe5!M:u6:4127n?3D92&&T:IRcF92/2Z<*!+)>[CiKAS5^mDK'W<G'J=]
It<6+LPh%NOHPipR@Bb>i;h%$80fK.-R^Dn/1iJ-0JP==1c70M3BB5a4[)(q5sdq,77Tm?8kViP:/=\`
8P;cR;,^Is>$PBA@V'1dCMe!1FEVnTI"$X!Kng(nMiNm^Pa7]+SY)UNWrO(c-R^Dn.kNA,0JP==1c70M
3&s&_4[)(q5sdq!6q'R88P2WL9hnJ\;,U=e:Jk%j='Aj8?t*YYBkqR(EH?;JH@10lK8#);MiEd\Pa7]*
S=cLMV5Ls+n,QH:.4Qi!/MAe41,CaE2E*TU3]fJg5<qM$6UX@47n?3E9MJ8X:f1+h<)ldo<EE=-?=75Q
AnYprDfKi@GC"XcJ:`H0M2R@SOcu)uR[ftBUSXlfX6BW%!'i"a/1iJ-0etOA2)[BQ3BB5a4[21t6:4.0
7Rp!@8kVlR:Jand;cHat=&i=)>?tTFA7fLiCi466Fa&+XIXm"aKSG;@NK93cQ'[r0StMgRVl?`!YH%XO
/1iJ-0JP@?2)[BQ3BB5a4[)%o5<qM#6:=:58P;`O:Jand;cHat="IHV=^,0=@:Nn_C2@d,EclSOH[UBq
KSG;?N/s*bQ'[o.StMgRVPpPtYHbF;!;um,/h\n51,CdG2`NfY4$<@&5X%Cs5XIk-7nHBL;,U=l<E<1'
=^#$8?X[GUB527#E,p&EH$ashJV/]5MN!RWPEhK&S"64HUo()jXKSn8[C=okci=M/0etOA2)dKT3]fGe
4oRSD48h9"4[)+s6UaL:9i"Ye<``C+>$G6;@:Nk]BkqU*EccJLH[UBpK8#)<N/j!_Pa@f-SY)UOVPpL"
XKJe6[C<]YWrNG]1GgsI2`Wo\4T7JG4?GSbr](BJ3]fDc4[25!6q9jD1f.+P=^#$7?!^lLB5)-uDfTrC
G^=aeJV/Z3M2RCUP*D9"S"61FUSXohXKJe5[(!TX]t_#Vo`,LZ2)[BQ3BK>d5!;"j3]]:t3'K>`4$>bm
6:FC::/Y(p>[:ZC?t!bbD/XE8G'J=\IXm')LP^qKO-5`nR$sP;TqeH^WN<8,ZF%'M]=ktq_rLg=!"UtH
3&s#]4[)(o4Zb\b3&g[l/iP^L3]oSk6:FI>:K(>"?XR;O@r6.(F*2\QI"$TtKSPDBNK93dQC+,2StMjT
&#ZD-Xg#+<[^`o^^VRh,a/]1N3&s#]4?Yno5<V(h3B/oSr\XR0!AlYr2E3]Y4[;A(8ki/_>$k`KA7]b%
Fa&+XIXm$'L5:bIO-,WkR$sP:TVA6[WN3/)Z*^sL]"Gbn_o9[<bJ+&E!"q=S4?Ykm5sRUr3]T/Y2)I*E
1B'!m1,1RA2)dNW4[;D*92AJg?".AWB6AEDH[UBqKSG;?N/s*bQ'[o/StMgRVPpPtYHbFA\@T>e^r"(2
aihrTli=g$&j/<@5<qM$5<_.i3&`]O1,1I:r%B?M0f([F3BKDk77^-N<a9$EBPDa=I=Hg#L5:_GNf]Hi
Q^O>6TGO>uVPpMrYHbFA\%0/c^r"%0aihrTdF5,r&3`<D5sdq)5<V(g2`3EI0e`PZr%1&b0/,.<2E3f`
6UsdF<*<R>C286IJV/Z4MN!RWP*D<$S"61FUo()jXKJh7[C<]Y]thM'`lQ<IcdC4lf>dmQ!"qO_6:4./
5sIIm3&WTK0eY+1/Gq"]/M8Y01,LmM4[;G-:/b8$@qok3K8#);N/j!_Pa7]+SY)UNV5UDqY-5+;\%0,a
^VRk.aND`PdF6Xtg"Z-!\,[406UX@36U<mu3B&fO0eY+1.k<%sr[/^7.4[#)1,V$Q5!qh6;-."3BQ&T[
M2R@TP*D9"RKo@TTqeH^WN?*"'WeIB[(*fc_o9^>bg+S`e^rL/h;>75#Xh*N7n#d25!'-42`*9D/hAM%
-RC#:,!@.s-RgW$1H%6V5t4LD<EimEDMa:2O-,ZmR$sP:TVJ?]WN3)"WMuhrX0/b9]"l;,bg+S`eCN=-
h;@2OcN)c$5"8%58Oc'55!(_]1bgX8.k)ei+WhaG*?H:H,q(?"2)m]`6qL0R>$tu\NK93cQ'e#1StMgS
Vl?`!XJr1srh^@-X0/b;]u/%?daZk#g>1ZFj5oJ%!3cGT84cEF7RTO*4#f)R0J4q,-6jWQ)]9G/)&jP<
,Uk<$2`a,i85<,f?tO;=PEdM^R@KkAU84ZcX0&S.X/MqmUS=NZVlR#/]>;Y<f%A^3hVmMVkNV<5!!#Vj
92%rJ6pX!u3&NHF/hA@p*ul.6'G;#l'c.i4,UtK+3Bfc"9i>,%Ao<m#R@Bb?U84ZbWi`J0ZEC4*V4sWT
T:hsWXKo@OajA_rhVdDTkNV="n(.Qi!)cKb:.n)G5s@@i2)6j;.O?5X(_mVm%1E[V',MW3-S7,74[DP3
;HR==DOHubT:r'XW2cr%Z*UjDY,\@oTq7dDS=cRUYI;3dd+[F;jQ>^mm/lbHo@<nl~>

%%EndBinary
grestore
np
30.234 56.1428 mo
30.2337 56.1421 30.2335 56.1414 30.2331 56.1407 cv
30.2334 56.1414 30.2337 56.1421 30.234 56.1428 cv
30.2286 56.1292 mo
30.2281 56.1281 30.2277 56.127 30.2273 56.1259 cv
30.2277 56.127 30.2281 56.1281 30.2286 56.1292 cv
30.223 56.1152 mo
30.2222 56.1131 30.2215 56.1113 30.2206 56.1092 cv
30.2214 56.1112 30.2222 56.1132 30.223 56.1152 cv
30.2181 56.1026 mo
30.2169 56.0997 30.2157 56.0966 30.2145 56.0936 cv
30.2157 56.0967 30.2169 56.0996 30.2181 56.1026 cv
30.2114 56.0858 mo
30.2107 56.084 30.2101 56.0824 30.2094 56.0806 cv
30.2101 56.0823 30.2107 56.0841 30.2114 56.0858 cv
35.8158 54.2165 mo
35.7567 54.0948 35.7019 53.9698 35.6518 53.8418 cv
34.6538 51.2851 35.8852 48.376 38.3989 47.3545 cv
38.7402 47.2158 39.0919 47.1171 39.4502 47.0591 cv
39.099 47.1172 38.7516 47.2151 38.4136 47.3526 cv
35.8999 48.375 34.6733 51.2871 35.6733 53.8476 cv
35.7202 53.9688 35.7905 54.0713 35.8452 54.1855 cv
35.8354 54.1958 35.8256 54.2062 35.8158 54.2165 cv
29.439 52.0107 mo
29.439 52.0107 li
29.439 47.6377 32.0132 43.4932 36.2339 41.7773 cv
36.8949 41.5089 37.5669 41.312 38.2414 41.1831 cv
38.1664 41.1976 38.0916 41.2128 38.0169 41.2289 cv
37.4181 41.3567 36.8216 41.5387 36.2339 41.7773 cv
32.0132 43.4932 29.439 47.6377 29.439 52.0107 cv
43.8804 48.6826 mo
43.4097 48.1436 42.8374 47.7002 42.1675 47.4063 cv
41.7727 47.2329 41.3642 47.1143 40.9505 47.0506 cv
42.1081 47.2225 43.1496 47.8006 43.9087 48.6706 cv
43.8992 48.6746 43.8899 48.6786 43.8804 48.6826 cv
49.7878 46.9332 mo
49.3078 45.9823 48.7043 45.1231 48.002 44.3724 cv
48.7072 45.1183 49.3168 45.9751 49.8022 46.9307 cv
49.7974 46.9315 49.7926 46.9324 49.7878 46.9332 cv
gsave
[12.7226 23.6603 -23.6603 12.7226 33.3936 39.2881 ]ct
clp
/3 /Gradient get_res exec grestore
np
41.2318 57.9974 mo
39.7339 57.9972 38.2978 57.285 37.3623 56.0687 cv
38.1785 56.6613 39.1731 56.9971 40.2319 56.9971 cv
40.8579 56.9971 41.4712 56.8769 42.0552 56.6396 cv
44.5698 55.6191 45.8032 52.709 44.8042 50.1524 cv
44.6525 49.764 44.4578 49.4036 44.2267 49.0757 cv
44.9039 49.6134 45.4393 50.3171 45.7651 51.1504 cv
46.2476 52.3896 46.23 53.749 45.7104 54.9785 cv
45.1929 56.2051 44.2378 57.1523 43.0229 57.6455 cv
42.4343 57.8845 41.8283 57.9974 41.2318 57.9974 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[10.56 0 0 10.08 36.48 5.44 ]ct
snap_to_device
<<
/T 1
/W 22 
/H 21 
/M[22 0 0 -21 0 21 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!~>
<~2)R9N2`NcW3]]>b4?Ykl5<qJ"6:*Rh3&ioZ3]fGd4[)%o5<qM#6:4+.3&ru[4$,Pf4[)(p5X@\&6UO71
77K="4$5Yh5!M7s5X@_'6UX=27Rfm=4?Pbj5!M:t5sdn*6psI57Ros>8P)*05<qJ"5sdq+6q'O67n6*A
8P2WK5<qM#6:4+.77B[97n?0B8kM`M9MIf>6UO4-6UF..6q'U:8P;`N9hnGZ6UO1+5s[b%5s[h)6q'U:
92/2X:f0MD5X.Fs5!D1q5<qP&77TmA:/Fhd5X.Fq4Zkhh4?Yhk5=%V(7S$-G:fKVA4?GVc3]T5^3]oPh
5X@e,84u]U4?GSa3&`cT2`NcW3]fJh5sn+59M[]02`EWP2)R3J2)[BR3]oSl6q9jE3&``P1GU^@1,:XB
2)[ET4?c)"7nbj!1GU[=0JG.60JP=>2)dNX5=.e11c$j?0.nk//hJ\/0JP@@2`a)e6Urpe0.nh-/1W5%
/1iJ.0f([H4$Gu"1+t73/1N%r-RU;k.P3;.1H%3T5X[:Y/1W+q,U+EV+s\K`/2&b82`j2j0.e\%,U"6N
*??.B+XAEc0JbUI4[8~>
<~C27X'DfB];FEMePH$XjdIXm!$KS=8]E,fo?F`r"TH@1-iIt<3(KnbA=EH6,CG'A4XH[U?mJ:`E,L51SB
Mi;b$GBeF\I"$QqJV/W0LPUeFN/`jZG^4X`I=HcuJqSi4Ll%"JNK0'^P*:9AIXm!$K8#&8M2I4NNfT9b
PE_B"It<3(KnbA=MMmFRO-#KfPa.T&R@Ah^L51SAMi<XVOHG`kQ'Rf*R[fq?LPUeEN/`jZOckroQC"#.
S"6.CTq[F&NK0'^P*;/sQ^F52S=Z@GU8+N\NfT9bPE_B"R$jG6SY)RKUSO``W2YoCPa.T&R@9Y:StMdO
UnsrdWN*#$Q'Rf*R[]k>T:r!SV5C/hWiN5(YHXF`S"6.CTVA3WVPgAmX/rG,Yd(OAS=Z@GTqeE[Vl6Sq
XKAY0Z*LaE[^`!(U84W_W2ZeuXfek4ZEpsI\%0)^USXicWN*#$Y-5(8Za@0M\@T;b]t^JDWiN5(YHY7:
ZaI9P\\#Mf^;.S%X/rG,Ycb+1Xfen6[CX&c^VRe)`Q#'bZ*:C4X/W,"XK]"=]>2>&`lH0CZEpg=XJr.q
VPpJqYdCpR`5p'Dbfp~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
40.2319 56.9971 mo
39.1731 56.9971 38.1785 56.6613 37.3623 56.0687 cv
37.3414 56.0415 37.3207 56.014 37.3003 55.9863 cv
38.1494 56.6316 39.1867 56.9934 40.255 56.9934 cv
40.8503 56.9933 41.4554 56.8809 42.0425 56.6426 cv
43.2573 56.1494 44.2124 55.2021 44.73 53.9756 cv
45.2495 52.7461 45.2671 51.3867 44.7847 50.1475 cv
44.6186 49.7266 44.3862 49.3506 44.1265 48.9981 cv
44.1602 49.0235 44.1936 49.0494 44.2267 49.0757 cv
44.4578 49.4036 44.6525 49.764 44.8042 50.1524 cv
45.8032 52.709 44.5698 55.6191 42.0552 56.6396 cv
41.4712 56.8769 40.8579 56.9971 40.2319 56.9971 cv
gsave
[10.7631 29.9821 -29.9821 10.7631 34.8818 35.0361 ]ct
clp
/3 /Gradient get_res exec grestore
np
33.103 60.2422 mo
32.6285 59.8175 32.1871 59.349 31.7864 58.8387 cv
31.6846 58.7068 31.5853 58.572 31.489 58.4349 cv
31.726 58.766 31.9796 59.0814 32.2476 59.3809 cv
32.2722 59.3291 32.2971 59.2774 32.3223 59.2258 cv
32.5649 59.582 32.8261 59.9208 33.103 60.2422 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[2.88 0 0 3.36 30.72 3.04 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 7 
/M[6 0 0 -7 0 7 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~:JabX7RL$M9hIlB;Gg.\7RC'O:.duB<`2[b7RC0T:J+)D=B&*i7md~>
<~StMdOUSX][Uo(&gV5L8kX/r;#XKAY0Xfek4ZEpd@Za@-L['dBQ\[h~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
31.7864 58.8387 mo
31.1589 58.0395 30.6315 57.138 30.234 56.1428 cv
30.5664 56.9748 30.9912 57.7395 31.489 58.4349 cv
31.5853 58.572 31.6846 58.7068 31.7864 58.8387 cv
30.2331 56.1407 mo
30.2316 56.1368 30.2301 56.1331 30.2286 56.1292 cv
30.2301 56.133 30.2317 56.1369 30.2331 56.1407 cv
30.2273 56.1259 mo
30.2258 56.1223 30.2244 56.1187 30.223 56.1152 cv
30.2244 56.1187 30.2259 56.1223 30.2273 56.1259 cv
30.2206 56.1092 mo
30.2198 56.1071 30.2189 56.1048 30.2181 56.1026 cv
30.2189 56.1048 30.2198 56.107 30.2206 56.1092 cv
30.2145 56.0936 mo
30.2135 56.091 30.2125 56.0884 30.2114 56.0858 cv
30.2124 56.0884 30.2135 56.091 30.2145 56.0936 cv
30.2094 56.0806 mo
30.2078 56.0766 30.2062 56.0724 30.2046 56.0683 cv
29.6851 54.7373 29.439 53.3633 29.439 52.0107 cv
29.439 52.0107 li
29.439 53.3633 29.6851 54.7373 30.2046 56.0683 cv
30.2062 56.0724 30.2078 56.0765 30.2094 56.0806 cv
gsave
[10.7658 29.9895 -29.9895 10.7658 33.8965 35.4531 ]ct
clp
/3 /Gradient get_res exec grestore
np
32.2476 59.3809 mo
31.9796 59.0814 31.726 58.766 31.489 58.4349 cv
30.9843 57.7157 30.5584 56.9254 30.2261 56.0742 cv
28.022 50.4356 30.7241 44.0205 36.2485 41.7754 cv
36.8266 41.5406 37.4172 41.3582 38.0169 41.2289 cv
38.7451 41.0735 39.4766 40.9983 40.2022 40.9983 cv
43.2993 40.9983 46.2784 42.3716 48.3315 44.7539 cv
46.364 42.9937 43.8152 42.0014 41.182 42.0014 cv
39.8604 42.0014 38.5171 42.2516 37.2163 42.7803 cv
32.9936 44.4961 30.4194 48.6406 30.4194 53.0137 cv
30.4194 54.3662 30.6655 55.7402 31.1851 57.0713 cv
31.4881 57.8484 31.8734 58.5668 32.3223 59.2258 cv
32.2971 59.2774 32.2722 59.3291 32.2476 59.3809 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[21.6 0 0 19.68 27.36 4 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 45 
/H 41 
/M[45 0 0 -41 0 41 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 45 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 45 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 45 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 45 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
`rQ#<r;up"rri<)rW`B-rs8T1rsJc6p&P'mrrW0%&Hi4?"U5/9#RC_D$4@7O%Ls!S&.oNg'GVB"S,iHf
r;up"rri<)rW`B-rWiQ3$4?b?!=TG4!<*$!!r`9@"9\l4"pYA=#RLhG$OdIS%hK9a&ebro()If*^B!0l
r;lftrWE*%rrrE,rWiH/rWrf:$O[@O%1NgD!<*#u!ZqLH"9\l3"pYA=#mgqH$OdIS%M03a&ebro()If*
)B8;KXT88"r;us#rWN3(rs&H-%L<=H#mq"I$OdFQ%1WmZquH]srrW0%*s;`N"pP;;#RLeE$O[CQ%M'*^
&ebom'c%W')B0Y:*i]59!;lls!rW6#"TAT)#6"i=#RC_C$47.K$k*RT%M'']&H2\/!WN6#"!IdM"U5/9
#7(VB$4@7N%1Wm[&J>`k'c%T&(`F>5*?H:GhZ1XrquQ`trWE-&rWW<+rs/N/&IAaN$4@4M$k3XU%hB3`
&J>*C!>PY;!s8Z/"U,)7#7(SA#mq%K%1NdX&eGWf',2/s(Dn#.)]Tn@+<_pSV?$Mpr;us#rWN6)rW`B-
rs8W2rX&]7$Om"D2%C-.&.oKe&eb9H!WiH+"9\l3"pP;<#RLhF$OdIS%M'*_&ebro()If*)B0Y;+!;aP
,UFh\!8[_T!W3#u"9/N'"o\`+#Q=uE#mq"I$OdFQ%1WjY%hK<c&ebom'`nI9""=?V"U5/9#RC_D$O[@P
%M'*^&J>`k'c%T&)&jP9*ZlLK,:"T`-n52sW;lo!r;up"rWN6)rW`B-rs8T1%LNRO$k*RS%Ls!\&.oKe
1(t?9'c%Pe!sA`1"U5/9#RC_D$O[@P%Ls$^&J>`k'c.Z')B0Y:*ZlLK,:+Za-n6`![/fdurW<$#rWN6)
rs&H-rs8W2rX(q!$k*RS%Ls!\&.oKe',2,q()@]'"9\l3"pP;<#mgqH$k*RT%hK9b&el#p()Ro-)]Tk?
+<_pR,pk#h.P*/(0^8YP!!!*""9&H&"oef+#:p,d#mgqG$O[@O%1WjY%hK9a&eYil'GVB"(Dn#-"U,)7
#7(VB$4@4M%1Wmh&.oNg'GVB"(`=52*$$+D+X86Y-7C;m/1iM/1,Gg.rr`6'rriB+rWW?-rWl+&#mq"I
$OdFQ%1WmZ&.oKe&ebrn'c%T&(`=52)[6NP#RLeE$OdFQ%M'*_&ebro()If*)B0\<+!;^O,UFfd.4Ql$
0/54<2)j%cdfB@MrWW<+rW`K1#mpS<577i-$k3[V%hK9a&J>`j'GV>u(Ddr,)B0Y9*<uiV#mq%K%1NdX
&.oNg'GVB"(`=52*?H:F+X86Y-R^Gp/-mj]0f(XE2`Njr!!!0$"oef+#8.:J#mq"I$OdFQ%1WjY%hK<c
&j6mB'GVB!(Dmu,)B0Y9*?H:/#mq%K$k<aX&.oNg'GVB"(`=84*?H:F+sS?[-R^Gq/M8\21Gh!L3BB8d
^]<Qu!!W?+rs/N/:^IF8$O[@O%1NdW%hK9a&J>`k'GVB!(Dn#-)B0Y:*ZcCG+USSc%1WjY&.oNg'GVB"
(`=84*?H=H+sSB\-n-Vs/MAe51Gh$M3BKAf5XP,DZN1"0rs/Q0rsAZ3,mt+i%1NdX%hK9a&eYil'bqK#
(Dn#-)B0Y:*ZlIH+X/->%1Wjr%hK<c',2/s(`=52*$$+D+X/0X-7C;m/1iM/1,CdH3''/b5<qP'7]QOf
!*KO3#RC_C$47.K$k*RT%M'']&.oNf',2,q()Ic()&aD4*$$(B+<VgO,:"QF%hB6a&el&q(Dn#.)]Tk?
+<_pS,pk#h.kE;+0JYIB2`Ni\5!M>#6q0^>huLgu70j/*#mq"I$OdFQ%1Wm[&.oKe',)&p'c%T&(`=52
*#ot?+!2XM+sS?Z-79?:&eYln()If*)B0\<+!;^O,UFfd.4Zt`/h\q71c76Q3]oSj5sn(18P2ZOVZ787
#mq"I$OdFQ%Ls!\&.oNf8.uXN'bqK#(`=20)]Th<*ZlLI+X83X,pjuf.2!:.'c%T&)&aG7*ZlLK,:"Q_
.4Qi"/hf%:1c@9Q4$>bm5sn(28P;`P;,YR;h#LUc$4@7N%1NdW%hB3`&eYik'GVB!(Dn#.)B0Y:*?H:F
+X/*T,pjre-n-Vr'GVB"(`=53*?H:F+sSB\-RgMq/M8_41Gq'M3BKAg5XIk-7nQEK:Jk"i<rf0!,mt+i
%1NdW%hK9a&J>`k'GVB"(Dn#-)B0Y:*ZlIH+X/-U,paop-n-Sq/1`@g(Dn#.*$$(C+X/-W-7:5l.kWJ/
1,CdH3'',a5<qS(7Rp'D9i+\c<EE=-[K,ju=UY`K%M'']&.oNf',2/r()Ic()&aD4*$$(B+<VgO,:"Q^
-7C;m.kE8)0/+7^)]Tk>+<_pS,pk#h.kE8*0etRC2`Ni\5!M>#77Kg?9MJ>]<*!+(>@(_'!5/@n%Ls![
&.fEd&ebro'c%T&(`=52)]Tk>+!;^N+sS?Z-7:2j.P!&%/h\n51)h2R*ZuUN,UFcc.P!%k/h\q71c@9Q
3]oSk5sn(18P;`P:f:7n=B\s9?t*]F!$i'c&.oKe',)&p'c%T&(`=52*#ot?+!;^N,9nH[-7:2j.P!&,
/M8\10etOA*ZlLJ+s\K_-n6`!/hf"91c76Q4$5\l6:=748P;cR;,U@o=Bf$;@:Ee\Bt"*4!*KjF&J>`j
'GV>u(Dn#.)B0Y:*?H:F+X&$R,:"N\-R^Do/1iJ.0etOA2)[B9+sS?Z-RgMq/M8_31Gq'M3BKAg5XIk.
7nQEK:Jk%j='8a4?X[GVBPD=%li=Zu'G;#l',2/s()If))B'P7*?H7D+<^Y,+X/*T,U=Z_-n-Vs/hf%:
1c70M3&r30-7:5l/1iM/0f1a02E3`Z4[25!6q0[=9MJ;[;cQq&>@(ZGA7fLiD/XE8VZ6i5'GM8t%Mfit
)&X>3*$$(B+<VgMr?4HN+sS<X,pjug.P*/*1,LpL3BB5a-7:5l.kND.1,CdH3BB8c5=%Y*7S$-F:/Fhf
<ENF0?=75QB5)-uDfKiBH.N&D!"K_Y()Ic()&aD4*$$(B+Sm6@+<_mP+sS<X,pt)i.kND01c@BV4?YnX
.kE8*0etRC2`Wr^5!VD$77TmA9MSD^<*!+)>[LoLA-us`CMn*3Fa&+XI]!/U()If))&aG5*$$(B+<_s+
+TNYa+TN]N+sJ6W,pjug.P38-1cIEW5<qLc/h\q71c@9Q3]oSk6:4138P;cQ:f:7n=^,-<@:Nk^BkqU+
F*2\PH[^Nu_>r]u&/Z9&)B0Y9*?H:F+X/-U+sR"0rZM._4sD3r,UFfe.P*2,1c@?V5XRpn0etRD3&s&_
5!VG&7Rp$C9i"Vb<E<7,?!h#MAS>gpDfKiAG^=aeJV8f8pAhGu%N-0(*$$%@+!;^M,:"NZrZV=cp`L1m
+sSB\-RgPu0JbUI4?u;)1GpX?2`a#`5<qP'7S$*E9i"Yc<EE=-?=75QAnYprDfKiAG^FjhJqSo:N/t(@
qZ%*F*$$(A+!;^N,:"Q],U<:4!$V=a6Q[Em+<VgM+sS?Z-R^Gr0JYOH4?u;*2E3`Z4[25!6q0^>9MSA]
;c["(>[CfIA7oUlD/XH:GBnO`J:iQ3MN!X[Pi;\_!#-Fp+!;[L+sS?Z-7:)c,9nBV+Wqp(+"&0R+X89[
-n6c$1,LsQ5Xe4)4?Ynp6UXF88k_uV;H-\!>?kKC@Up3eBkqR)EccMNI"$TuKntYHOHPlqR\p,q+!;^M
+sS?Z-7:2h-7'oA,9e9S+<Vd(*^1Yf+<_pR,pt)l/ho4C4$Z2*5!VD$77TpA9hnPa<E<4*>[LoLAS>do
DK0`?GC"XdJV/Z4MiNp`Q'e&3TZmJk!#-S#,9nH[-7:2j.4?Pi,U4NW+<Vd**rd8[*]kJf+X/0Y-n?l'
1cRT_6qK^477TpB9i"Sa<EE=-?!h#NAnYpqDK0`?G^4[dJqSl8MiNpaQC456Tqh[cVZ6rH,UF``-R^GC
.MsT^-7'o^+s7sK*uuCB*#fk;*?H:H,:+`q.P3;02`j8n8Oc3A9288[;cQn&>[:]GA7fOkD/XE8G'A.T
H@13oL5V(SPa@i/StVsXWNEZ1n,Pd$-7:2i.Olr#/1W1u-7'o^+sA$L*ZZ1<)&O5/)B0\=+s\Nc/2&e<
4$Z2+8kVlS;H-[u>$PBA@Us(bCMe$2FE[Y-'7"kMI"6j(Mij9nSY)XQVlHo(Zg@b)!&u>S.4Qi!/M8\.
/1W.s-6sf[+<MXF)]9J.()7Q"(E+88,:4ij0JbXL5Xe:?:f11m=B\s9?t3ajB5)-uEH?8HH$OX[H$FX]
I=Hm)Mij?tU8FlhY->7A\YfE0.4Qi!4tSB?0JG+2/1Dto,pOTV+<DI>(DRVt&J>`l()\)7,Uk8t1,h9\
7S?WY<`iR3?XRATB527#EH?8HH@1*erd#6'H$XjfK85GLR%U@XY-G=B]"Pl2!71^?.kE8)0/,+90eb42
.k)hl,9e9R*#]V.'+k`b%M'*`()\,:-S-o,2`j;o9NP>#?!h#MAS5apDfKi@GC+afJU`)qH[0j]H@(-n
LQ)\)R\Hdd[(*]\_8O?k!#R=A0JG7<1c7'D0J+h*-mg2a+Wh[A'bV'/%1<LL$4IFX(E4JC.PNY;4@2M2
>?tTEA7fLjCi498G'J@^J:iQ.Jq&2qHiA:%H@:C#NK]m-X0oRR_8OC:c-u`D~>

%%EndBinary
grestore
np
31.489 58.4349 mo
30.9912 57.7395 30.5664 56.9748 30.234 56.1428 cv
30.2337 56.1421 30.2334 56.1414 30.2331 56.1407 cv
30.2317 56.1369 30.2301 56.133 30.2286 56.1292 cv
30.2281 56.1281 30.2277 56.127 30.2273 56.1259 cv
30.2259 56.1223 30.2244 56.1187 30.223 56.1152 cv
30.2222 56.1132 30.2214 56.1112 30.2206 56.1092 cv
30.2198 56.107 30.2189 56.1048 30.2181 56.1026 cv
30.2169 56.0996 30.2157 56.0967 30.2145 56.0936 cv
30.2135 56.091 30.2124 56.0884 30.2114 56.0858 cv
30.2107 56.0841 30.2101 56.0823 30.2094 56.0806 cv
30.2078 56.0765 30.2062 56.0724 30.2046 56.0683 cv
29.6851 54.7373 29.439 53.3633 29.439 52.0107 cv
29.439 47.6377 32.0132 43.4932 36.2339 41.7773 cv
36.8216 41.5387 37.4181 41.3567 38.0169 41.2289 cv
37.4172 41.3582 36.8266 41.5406 36.2485 41.7754 cv
30.7241 44.0205 28.022 50.4356 30.2261 56.0742 cv
30.5584 56.9254 30.9843 57.7157 31.489 58.4349 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[11.52 0 0 18.72 27.36 4.96 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 24 
/H 39 
/M[24 0 0 -39 0 39 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 24 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 24 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 24 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 24 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
h#R<QrW<'$p&P'mrrW0%"9\i2"U<*LrW)frrW<$#!!N&srW3$#rW<?-"9eu6#7&?NquQ]srWE-&q>gKq
rW3'%#m1;5"U,)8#7(XY!;urr!r`<$"TJZ'!<*$!!r`9/"9er5"pYA=#mgt*!9!qV!W<)u"9/N'"oef+
!<*$!!r`91"9\l4"pYA=#mgqH%*ehQ!WE,u!rW6#"TJZ)"p"r/rW*Z6!WrN-"9er5"pYD>#mgqH$k3Zm
!;lls!r`<#"TJZ*#6"i8#QXr-!WrN-"9er5$jHqB#RLhF$OdIS%M-qerW2s!rWE-&rWW9*"pYA=#RLP6
rW<c9"U,)7#7(SA$4@4M%1Wm[&/"@2irB&[r;us#rWN3(rWXDK#7(SA#mpb:"9\l3"pP;<#RLhG$OdIS
%M03a&eiXm!!<0%rWE-&rWW<+rWaJM#RLeE$4?t>"U,)7#7(VB$4@7N%1Wm[&/#Ti'G]!q!!<-%rWN6)
rW`?,&-rOJ#mq"I$k*:C"pP;<#mh+L$O[@P%M'*_&ebro()Ih8!<30#"TJZ)#6+r-#TsE[$47.L$k3XM
#6tM@#mq%K$k3[W&.oNg'GVB"(`=7_!8mkV"TAT)#6+r.#lb51$6BQ_$k3XU%L37G#mq%K%1NdX&.oNg
'GVB"(`=52*Raui!!!0$"Y0c]#6tM?#mgqG$O[@O%1WjY%hK$R$4@7N%Ls!\&J>`k'c%T&)&jP9*Zrc0
!!W?+(^C9O#RLeE$4@4M$k3XU%hB3`&IJmS%1X!\%hK<c',2/s(Dn#/*$$(C+X5;60*VUc#7(SA#mq"I
$OdFQ%1Wm[&.oKe'+><[%M'*_&ebro()Ro-)]Tk?+<_pS-1q8o!!if7#RC_C$471?$mQ2k%M'']&J5Wh
',1oe%hTBd'GV?!(`=52*$$+D+X/0X-7IFFquAAU#RLeE$O[@O%1NdW%hK9a&J>`k'GVAp&J>]j'c%T&
)&aG7*ZlLJ,:"Q_-n-[o!#Z(L$47.L$k3XU%M'*^&J>]i'GV>u(Dd\t'bhAu(Dn#.)]]tA+<i$U,pt,k
.kNC$!&"Zd$OdFQ%1WmZ&.fEd&ebom'c%T%(`=#&()If*)B9b=+!;aP,pjug.P!)'0J`D'g&Nc6$k*RS
%M'']&J5Wg',2,q()If))&aG0(Dn#.*$$(C+X/-W-7:5l.kWJ/1,Cf@!;QUJ$k3XU%hB3`&J>`j'GV>u
(Ddr,)B0V8)&aG6*?H=H+s\H]-n-Yt/MAh61c73Od/Xpl%M'']&J5Wh',2/r()If))&aG6*?>t<)]Tk>
+<_sT,pk#i.kE;+0etRD2`Wo]d/Yg1%hK<b&ebrn'c%Q$(`4,/)]Tk>*ZlLG+!;^N,UOle.P!)'0JP@?
2)mTX4?c%-!7q3(&.oKe',2/r()@]')&aD4*$$(B+<VgO+<i$U,pt,k.kNA-0f([F3&s&`5<qP'g]7$J
0+nm2',2/s(Dmu,)B'P7*?H:F+X&$S,U4T^-RgMr/MAe41c70N3]fJh5sdt/8'q;M',2,q()If))&aG5
*$$(B+<_pR)^?US-71)h.P!)(0JYFA2`Wo]4[25"77Kg?9[Nhn'bqK#(E")/)]Tk=*ZlLJ+X86X-71)g
.4Zr$0/54=2)dNW4?c"r6UaL992&)WrW(FJ0,>?@(`=52*$$(A+!;^N,9nK]-R^Al.P*2*0etRD2`Wo]
5!VG%77TpB9hnM_<8R]I!&#0,)&aG6*?H7D+<_pR,U=]a-n-Vr/1iP11,LmK3BK>e5XIk.7nH?J:Jk%j
<a!fM&/cB**$$(B+<VgO,:"Q^-RTra.P!&%/h]"<2E*ZY4[21u6q0^=9MJ;\;cQn%>@,\W0,klO*ZlLJ
+X/-V,pjuf.4Qi!/M8\10fD!P4$>eo6:=:68k_uU;H$Uu>$PBA@aP0/*?H:F+X/-V,UFcb-n-Vr/1rP.
0etL@3]oPi5sn%184lQN:f:7n=Bf$:@:Eb\iW/HJ0-;;[+X86Y,pt&g.4Qi!/M8_31,CaE2EjAl6UaL:
8ki&X;cQk#>$PEC@qB=fCs`4l+X/-U,pjuf.4Qhu/1r(u0/54<1c70M3C6)%7nH?J:Jati='8a5?X[JW
BPM@$ER=b;,:"Q]-R^Dn.kE8)0/,+91Gq'L3&s#]7Rp$C:/=_c<EE@/?!h&OAnc$tDZXp"G0p:C,pjuf
.4Qi!/M8\10etOA2)dKT3]fJg8kVlS;H-[u>$PBA@Us(bCMe$2FEVqWjT+ZJ0./.s.P!&%/h\n51,CdG
2`Wo\4?Ykm5u(6R<*!+)>[CfJAS5^mD/jW>GBnRbJ^FH).4Qi!/h\n51,Ca42)[BQ3BK>d5!VD#6W-la
=Bf'<?t3b\C2@d-F*2\QI"$X!L?S\g~>

%%EndBinary
grestore
np
11.7759 63 mo
8.40988 63 5.33594 61.4337 3.33164 58.8391 cv
3.73218 59.3491 4.17354 59.8176 4.64796 60.2422 cv
4.37108 59.9208 4.10988 59.582 3.86721 59.2257 cv
4.75192 57.4107 5.9322 55.7272 7.36076 54.2165 cv
7.7263 54.9688 8.26078 55.5993 8.90724 56.0687 cv
9.84275 57.285 11.2788 57.9972 12.7767 57.9974 cv
13.3732 57.9974 13.9793 57.8845 14.5679 57.6455 cv
15.7827 57.1523 16.7378 56.2051 17.2554 54.9785 cv
17.7749 53.749 17.7925 52.3896 17.3101 51.1504 cv
16.9842 50.3171 16.4488 49.6134 15.7716 49.0757 cv
15.6722 48.9345 15.5659 48.7993 15.4536 48.6706 cv
17.2928 47.8903 19.2628 47.2978 21.3327 46.9332 cv
21.4937 47.252 21.6407 47.5811 21.7729 47.9199 cv
23.977 53.5596 21.2769 59.9736 15.7524 62.2178 cv
14.4751 62.7373 13.1372 63 11.7759 63 cv
10.9576 47.0653 mo
11.2274 47.0185 11.4995 46.9951 11.7715 46.9951 cv
12.0128 46.9951 12.254 47.0135 12.4935 47.0503 cv
12.2562 47.0152 12.0138 46.9971 11.7681 46.9971 cv
11.4952 46.9971 11.2245 47.0199 10.9576 47.0653 cv
19.5423 44.3676 mo
17.51 42.221 14.6852 40.9965 11.7569 40.9965 cv
11.0581 40.9965 10.3538 41.0661 9.65249 41.2096 cv
10.3476 41.0663 11.0542 40.9942 11.7671 40.9942 cv
14.7781 40.9942 17.5553 42.2468 19.5423 44.3676 cv
gsave
[11.287 0 0 11.287 10.981 62.0996 ]ct
clp
/2 /Gradient get_res exec grestore
np
11.7769 55.9971 mo
10.2173 55.9971 8.73976 55.042 8.12841 53.4775 cv
7.32765 51.4277 8.31006 49.0977 10.3198 48.2813 cv
10.7944 48.0879 11.2857 47.9971 11.7681 47.9971 cv
13.3276 47.9971 14.8062 48.9512 15.4175 50.5166 cv
16.2183 52.5654 15.2339 54.8965 13.2241 55.7129 cv
12.7495 55.9053 12.2593 55.9971 11.7769 55.9971 cv
11.7671 39.9941 mo
10.3179 39.9941 8.84423 40.2686 7.41551 40.8486 cv
1.3784 43.3027 -1.5669 50.2822 .839364 56.4385 cv
2.6743 61.1377 7.09816 64 11.7759 64 cv
13.2251 64 14.6997 63.7246 16.1284 63.1445 cv
22.1655 60.6914 25.1109 53.7119 22.7046 47.5557 cv
20.8687 42.8555 16.4448 39.9941 11.7671 39.9941 cv
11.7769 56.9971 mo
12.4028 56.9971 13.0161 56.8769 13.6001 56.6396 cv
16.1147 55.6182 17.3472 52.708 16.3491 50.1524 cv
15.6001 48.2354 13.8022 46.9971 11.7681 46.9971 cv
11.1421 46.9971 10.5278 47.1172 9.94386 47.3545 cv
7.43019 48.376 6.19874 51.2851 7.19676 53.8418 cv
7.94678 55.7588 9.74366 56.9971 11.7769 56.9971 cv
11.7671 40.9942 mo
16.2026 40.9942 20.1304 43.7119 21.7729 47.9199 cv
23.977 53.5596 21.2769 59.9736 15.7524 62.2178 cv
14.4751 62.7373 13.1372 63 11.7759 63 cv
7.3413 63 3.41358 60.2813 1.77101 56.0742 cv
-.433116 50.4356 2.26805 44.0205 7.79151 41.7754 cv
9.06886 41.2568 10.4067 40.9942 11.7671 40.9942 cv
0 .5 1 0 cmyk
f
3.86721 59.2257 mo
3.41831 58.5668 3.03297 57.8484 2.72997 57.0713 cv
2.21045 55.7402 1.96434 54.3662 1.96434 53.0137 cv
1.96434 48.6406 4.53859 44.4961 8.75928 42.7803 cv
10.0607 42.2516 11.4045 42.0014 12.7263 42.0014 cv
15.3601 42.0014 17.9089 42.9937 19.8765 44.7539 cv
19.8765 44.7539 li
19.8765 44.7539 li
17.8233 42.3716 14.8442 40.9983 11.7471 40.9983 cv
10.9827 40.9983 10.2115 41.0818 9.44483 41.2546 cv
9.51389 41.2389 9.58319 41.2239 9.65249 41.2096 cv
10.3538 41.0661 11.0581 40.9965 11.7569 40.9965 cv
14.6852 40.9965 17.51 42.221 19.5423 44.3676 cv
20.2468 45.1195 20.8516 45.9802 21.3327 46.9332 cv
19.2628 47.2978 17.2928 47.8903 15.4536 48.6706 cv
14.694 47.8001 13.652 47.2218 12.4935 47.0503 cv
12.254 47.0135 12.0128 46.9951 11.7715 46.9951 cv
11.4995 46.9951 11.2274 47.0185 10.9576 47.0653 cv
10.6123 47.1241 10.2733 47.2206 9.94386 47.3545 cv
7.43019 48.376 6.19874 51.2851 7.19676 53.8418 cv
7.24684 53.9698 7.30158 54.0948 7.36076 54.2165 cv
5.9322 55.7272 4.75192 57.4107 3.86721 59.2257 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[20.64 0 0 19.68 1.44 4 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 43 
/H 41 
/M[43 0 0 -41 0 41 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 43 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 43 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 43 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 43 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
dJtTp!WrQ/"pYD?$4@7O%hK<c',2/s(Dn#.)]]tA+<_pR,UFcb-n>/q,Q\)Q#RUtM&JGlq)&jV>+s\K`
.kND/1Gq*P4?c"s6q9gA9htde<2]dA!<WH."pYD?$4@7O%M'-a',2/s(Dn#.)]Tk?+<_pR,UFcb/gr.u
/-#YN!sT#<$k<g]'c.`,*?QIN-7C>p0/57?2`Wr`5XIk.84uZQ;,^IsYlOV#;um%&"U52;#mq%K%1Wm[
&JGin()If*)B0Y:*ZuUM,:"Q^-R^Dn.kE:R!sJo:$k<g]'GhW+*?QFL-7C>p/hf(=2`Wr_5XIk.84lQO
;,^Ir=^9e`c2^K=!sAc4#RLhG$k3[W&.oNg'c%T&)&aG6*?H:F+sS?Z-7:2j.P!&%/hdG6#n%4S&el)u
)]^"D,:+]e/1rV31cIEV4[25#7S$,X9MSD_<EE=-?!s]5*WuWN#71_F$k3[W&.oNg'GVE$)&aG6*?H:F
+X/0X2C9e".4Qi!/M8\11'n<t%h]Ql(`FA9+X89\.4[#)1,LmK4$>eo6UaO<9MSD^<**4,?!h#N\H)4$
<<`[6#n%.N%M'*_&ebro()Ii,)]Tk>+!;^N,:"T`-n-Vr/1iJ-0JP=>%1a$a()Rr0*Zu[R-RgPt0/>@B
3''/d5sn(28PDlU;H-\!>?tTE@qB?9!6,"+#RLhG%1Wm[&J>`k'c%T&)B0Y:*ZlLJ+sS?Z-7C;m.kE8)
0/,+91Gh!%',;<%*$-4H,UY#k/MAh82E3`[5!VJ(&P#Dc9i+_e<`iO2?X[GUB5)1_!#>nL$k3^Y&J>`k
'c%T&)&aJ8*ZlLJ,!I4s,pjuf.P!&%/h\n51,CaE2E2Ef)&jV>+s\K`.kND/1Gq-Q4?c"s6q9gA9i"Vc
<`iO1?=@>TB5)-uE5;P?!*'F:%M'-a',2/s(Dn#.)]Tn@+<_pR,UFcb-n-Vs/M8\10etOA2)[BQ3Z/kW
+!MsW-n6c$0f([G3BTJj6:=:692/2Z;cQq'>[CfIAS5^mD/XE9mJss$3t;c4&JGin()If*)B0Y:*ZuUM
,:"Q^-R^Dn.kE;+0JP==1c70M3&s#^*?QFL-7C>p/hf(=2`Wr_5T)mV7S$-F:Jk%j='8d7?t*YYBkqR(
EH?8IWrNV@&J>cm()If*)B0Y:*Zmio+sS?Z-7:2j.P!&%/hf"81GgsI2`NfY4$>bN,:+`f/1rV31cIEV
4[25#7S$-F:/Oqi='8a5?t*YYBPMC&EH?8HH@3g7irE'l',22u(`=52*$$(B+<_pS,pjuf.4Qi!/M8\1
1,CaE2E*TU3]fGe5<pMB.4d)*1,LmK4$>eo6UaO<9MSD^<EE=-?!h#NAnYpqDK0`?GBnOaJG&uO!&G<(
()Ro-)]Tk>+!;^N,:"T`-n-Vr/1iJ-0JP=>2)[BQ3BB5a4[)(r67FE:0JYIC3'&3F5=%Y*7nHBL:f:7n
=^,0=@:Nk^C2@d,EclSOH[UBqKW>(W()If+)]Tkn*ZlLJ+sS?Z-7C;m.kE8)0/,+91Gh!K3&s#]4?Ykm
5X@b*/MAh82E3`[5!VJ(7nH?J:f:7n=B]!;@:Nk]Bl%[+EccJMH[UBpK8,30!8@KR(`=53*?H:F+X/-V
,pjuf.P!&%/h\n51,CaE2`NfY4$5Yi5<qM$6UaI!1Gq-Q4?c"s77TpB9i"Vc<`iO1?=@>TB5).!E,p&D
G^=dfJV/Z3MN%N7XoKsj)]Tn@+<_pR,UFcb-n-Vs/M8\10etOA2)[BR3]fGe5!M:u6:4.07n>Kd2`Wua
5XIk.8P;cR;,^Is>$PBA@V'1dCMe!1FEVnTI"$X!KnkMCNf^=B<WF*[*ZuUM,:"Q^-R^Dn.kE;+0JP==
1c70M3&s&_4[)(q5sdq,77Kd=8i\sr5XIk.84lTP;,^Ir=^59@@Us(bCMe!0F*;eSI"$TtKnkMCNK96e
f`9J$:`^]$+sS?Z-7:2j.P!&%/hf"81GgsI2`NfY4$>bl5X@_(6q'R884cHJ4[25#7S$-F:/Oqi='8a5
?t*YYBPMC&EH?8HH@10lJqSl8Mi@k#Ocu)uWrO@e+X/0X-7:2j.P!&%/h\q71GgsI2`NfY4$5Yj5X@_(
6q'R"7n?3D92//I6UaO<9MSD^<EE=-?!h&OAnYpqDK0`?GBnOaJ:`H/Ll77ROcu&sR[g_bp]+;<,:"T`
-n-Vr/1iJ-0JP@?2)[BQ3BB5a4[)(r6:4.07Rp!@8kViP:JaJM8PDlU;H-\">?tTE@qKChCi434Fa&+X
I=Hj%L5:_GO-,WkQ^O>7T]#mo!(\@]-7C;m.kE8)0/,+91Gq'L3&s#]4?Ykm5X@b*77Kd<8P2WL9hnJ]
;FsMU:f:7n=B]!;@:Nk]C2@d,EccJMH[UBpK8,0jMN!RWPEhK&S"61GUoOJ7-7:2k.kE8)0/,+91GgsJ
3&s#]4?Ykm5X@_(3CQD-84cEH9MJ8X:f1.j9i"Vc<`iO1?=@>TB5).!E,p&DG^=dfJV/Z3MN!RWP*D<$
S"61FUSb!&!:Ttg-n-Yt/M8\10etOA2)[BR3]fGe5!M:u6:4.07n?3D92&&T:Jand<)lsr;c["(>[CfI
AS5^mD/XH:G'J=\It<6+LP^qLOHPioR%'Y=TqeH_WiYFb_Z2qO.kNA,0JP==1c70M3&ioY3]fDc5!M>"
6q'U;8kViP:/=\`;H$Oq='/I(>$PBA@Us(bCMe!0F*;eSI"$Tu'SV=!MiEd\Pa7]*S=cLMV5L;oY-=r,
#qRY]0JP==1c72j2uP]P3B9,^4?Yno6:=:692//W:f1+h<)lt$/6Q.Z>@(]HA7fLiD/XE8Fa&.ZIXm$'
LP^qKO-,WlR$sP:TVJ?]WN3/*ZF$e8r;['T0/54<1c72d2afVb3BB5a4[25!6q9gB:Jk"g<)lt#=B\p6
?!h&OAnYpqDK0`?GBnOaJ:`H/Ll77ROcu&sR[ftBU84]dX0&S1['mL"!71]L0JP@?2)bClr\jd6rAH\q
3&s#]4[22!77^$F:fLFq='/U/>[:ZE@qKChCi435Fa&+XI=Hj%L5:_GO-,WkQ^OA8TVA6ZW2g0*YHbFA
\@T>R!!P,62)[BQr\jm:2Dt@g%Q-+%2`NfZ4[25"77^'I1f@@V=^#$7?=.)OB527#E,p&EH$ashJV/]5
MN!RWPEhK&S"64HUo()jXKSn8[C<]Z^;.2Xo`,@V2)dKT3&``R2)I/d1I<oT2)dKT4$>eo6q9jD:fLP$
>[:ZD@:EqdDK'W<G'J@^It<6+LPh%NOHPipR@Bb>TqnQaWiWA-ZaI9Q]=l"s`8gp>!":bE3BB/[2`3HL
1G^f`0etL?1c.*L3BKAg6:FF<:/b4u?=.)L@q9FpEccJLH@13nK8#);MiNm^Pa7]+SY)UNV%9N)XKJe5
[(!TX]t_D%`lP1\$og7/3]K&V2)I*E0erJX"#2Sg2*<fW4$>hr7S6EQ<E`^;@Us%^EH?;JH@10lK8#);
MiEg]Pa7]*S=cLMV5L;oY->4=[^j#`^VRh,aND`A!:9aq3]fDa3&``P1G^a>0JE8T5VFiI1Gq'N4$Gr!
7nc]X=C#BHAnPe"GC"XcJ:`H0M2R@SOd)0!R[ftBUSXlfX0&V3['mKU]t_D$`Q-*EcHtnX^]4m-4?GS`
2Dm<I0eb75/hJ[R/1E/'/hf"92)dQZ5=.h3:/Y.t?tF"cC3b/TJ:`H/Ll77ROcu&tR[ftB(S[_'WN3/)
Z*^sL]"Gbn_o9[<bK\D^e>iQY5!1ne3&WTL1,(@6/M-lO6n9`;.kE8)0/57?2`a)f6qL'L<E`a@C27X6
ItE?.Ll..POcu&sR@KkAU84ZbX0&S1ZaI<S]Y;1u`Q-*Dc-Oeef%A"CjT#]Q4ZbY`2Dd0D0.ne,r[Ipt
.fLk^.P!)'0/5:A3'0>l7nZZX=^GWRD/OoXL5:_GNf]HiQ^O>6TVA6ZVl6YuYd:aH\\,Yl_SjI9bK\A\
e(31*h"1TV!"hFY4#o5W1bg[:/M&A$.4?PjrZr[6-RgSu0JYID3^#bt8l&Ag?=R\fE.s+*N/j!_Pa@f-
+.]$tUnsl`V5C5mY-GCG]thM'`lQ<IcdC4lf@o$:i2Zh`5<V(g2`3BG0*j0].k2tq,pOW5+[@4s,pt/o
0f([I4?u;+9i>%u@VKb$M2[IVP*D9"S"61FUSO]\US=NZVl?c$Zad]e`lQ<HcI(+kf@ep8i8WhD!8RVe
5X%:j2`*<E0.e\(.4-;`+<LJ%,Te0T-7UT&2)mZ^6V'pL='T3KDKLl"P*D9"R[g"DUSXi`US@a](S[_&
WNEG6]Yhk8cHt"if@ep7hr<_ZkkkFb!%gH"4#o5W1,1C5.k)ei+<DL@)&O2.)B9hC-7UZ*2E<oe7S?QY
>[_;`FchoS-^^?mStVpUVl6JgU7n6OT:_jQVlR#.]Y_b:daZk$gYLcGj6#Rjm&L*d5rq4m3]AlN0J4n,
-R9iV)Aj5(',2,r(`OM@-S-u13B]Yt92JVm@;'P$Q'e#1StMgSVl?_qV5'cWSc5,pStVsYXg>UTaO&Mj
g>1ZFj5oIhm-aAp!7_'I5sIIm2`3?E/hAFt+s%[>'G:re%M'-b(E4GB.5*P=4?u>.:fU_/BQ&'^S=ZCJ
Uo(,lXfSM!US49LR[KS5StW$^Z+.Tjd+I.1iT'%_l0Ia=nFH5&!.Y~>

%%EndBinary
grestore
np
1.77916 56.1433 mo
1.77871 56.1422 1.77827 56.1411 1.77781 56.1399 cv
1.77826 56.1411 1.77872 56.1422 1.77916 56.1433 cv
1.77403 56.1304 mo
1.77308 56.1281 1.77212 56.1257 1.77118 56.1233 cv
1.7721 56.1256 1.7731 56.1281 1.77403 56.1304 cv
1.76817 56.1157 mo
1.76726 56.1134 1.76635 56.1111 1.76544 56.1088 cv
1.76636 56.1111 1.76724 56.1134 1.76817 56.1157 cv
1.76325 56.1033 mo
1.76192 56.0999 1.76061 56.0966 1.75928 56.0932 cv
1.7606 56.0965 1.76193 56.0999 1.76325 56.1033 cv
1.75641 56.0859 mo
1.75572 56.0841 1.75501 56.0823 1.75432 56.0806 cv
1.75504 56.0824 1.75569 56.0841 1.75641 56.0859 cv
7.36076 54.2165 mo
7.30158 54.0948 7.24684 53.9698 7.19676 53.8418 cv
6.19874 51.2851 7.43019 48.376 9.94386 47.3545 cv
10.2733 47.2206 10.6123 47.1241 10.9576 47.0653 cv
10.6187 47.1241 10.2833 47.2198 9.95654 47.3526 cv
7.44483 48.375 6.21825 51.2871 7.21631 53.8476 cv
7.26317 53.9688 7.33546 54.0713 7.39013 54.1855 cv
7.38036 54.1958 7.37051 54.2062 7.36076 54.2165 cv
.983897 52.0107 mo
.983897 52.0107 li
.983897 47.6377 3.55811 43.4932 7.7788 41.7773 cv
8.39612 41.5266 9.02291 41.3384 9.65249 41.2096 cv
9.58319 41.2239 9.51389 41.2389 9.44483 41.2546 cv
8.88535 41.3806 8.3283 41.5542 7.7788 41.7773 cv
3.55811 43.4932 .983897 47.6377 .983897 52.0107 cv
15.4253 48.6826 mo
14.9546 48.1436 14.3823 47.7002 13.7124 47.4063 cv
13.3171 47.2326 12.9079 47.1139 12.4935 47.0503 cv
13.652 47.2218 14.694 47.8001 15.4536 48.6706 cv
15.4441 48.6746 15.4348 48.6786 15.4253 48.6826 cv
21.3327 46.9332 mo
20.8516 45.9802 20.2468 45.1195 19.5423 44.3676 cv
20.2496 45.1146 20.8607 45.973 21.3472 46.9307 cv
21.3423 46.9315 21.3376 46.9324 21.3327 46.9332 cv
gsave
[12.7226 23.6603 -23.6603 12.7226 4.93848 39.2871 ]ct
clp
/3 /Gradient get_res exec grestore
np
12.7767 57.9974 mo
11.2788 57.9972 9.84275 57.285 8.90724 56.0687 cv
9.72339 56.6613 10.7181 56.9971 11.7769 56.9971 cv
12.4028 56.9971 13.0161 56.8769 13.6001 56.6396 cv
16.1147 55.6182 17.3472 52.708 16.3491 50.1524 cv
16.1974 49.764 16.0027 49.4036 15.7716 49.0757 cv
16.4488 49.6134 16.9842 50.3171 17.3101 51.1504 cv
17.7925 52.3896 17.7749 53.749 17.2554 54.9785 cv
16.7378 56.2051 15.7827 57.1523 14.5679 57.6455 cv
13.9793 57.8845 13.3732 57.9974 12.7767 57.9974 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[10.56 0 0 10.08 8.16 5.44 ]ct
snap_to_device
<<
/T 1
/W 22 
/H 21 
/M[22 0 0 -21 0 21 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!~>
<~2)R9N2`NfX3]fDc4Zttm5<qJ"6:*Ui3&ioZ3]fGd4[)%o5X7V%6:4./3&s#\4$5Vg5!D1q5X@\&6UO71
77K="4$5Yh5!M7s5s[h)6UX@37Rfm=4?Yhk5<hD!5sdn*6psI57Rp!?8P2015<qJ"6:+%-6q'R77n?0B
8P2WK5<_7q5<hCu5sn%/7S$*B8kVfN9hdc64Ztql5!M7s6:=7384uWM9hnGZ4?GYe4$5Yh4[21t6:F@7
9288Z:f0873]T5^3]fGe5!VD#77TpC:/Onf3&ilW2`NcW3]fGe5=%Y*7nHEN;H,S52)[?N2E*TU3]fJh
5XRt292/8_2)I-H1c.$H2)[BR4$>eo6UjX@:K'&)1,:U>1,:XB2)dKV4?l/#7nZTS0eb:80J>+60etOB
2E3`\5=7k19MdAq/hS_./hSe20f(XE3BKDi6q9jE/hJV*/1`A)/M8\21Gq'N4$Q&$8PL`e.k<)!.Olr#
/h\q82)dQZ5X\+9.k2qp-71&d-RgPt0JP@A3'0;j7S>-V,U4KV+sJ9X-Rp]%1,LpN4[DM.,pOQT*??.@
+!DjU.4d//2E3fa6qI~>
<~C27[(DfB`<FEVkQH@($fIt3*&KS=;^E,fr@Fa&(UH[L6jJ:W<*KnbD?EH?5EG'J:YI!pHnJV&N.L51VC
Mi;e%GBnL]I=?ZsJqJ`2LPUhGN/`m[G^=^aIXcm"K7nr6Ll%%KNK90`P*C?BIt3*&KS>/:M2I7ONf]Bd
PEhH#J:W<*KnbA>MMmISO-,ThPa7Z'R[\q`L51SBMi<[WOHPflQ'[l+S"-%ALPUhGN/`m[Ocu#pQC+)/
S=Q7ETq[I(NK0*_P*D5tR$jD4SXuIIU8+N]NfT<cPEhH#R@9V8StD[MUSOcbW2YrDPa7Z'R[]h<T:hmQ
UnsufWN*&%Q'[l+S"-%@TV8*UV5C2jWiN8)YHaLaS=Q7DTq\<YVPgDnX/rJ-Yd1UBSXuIIU8+N]Vl6Vr
XKA\1Z*UgF\%&**USO`aW2Zi!Xfnt6ZF%$J\@K2_UnsreWN*&%Y->1:ZaI6N\[oDd^;$SFWiN5&Xfo"9
['mHR]">Vh^VI\'X/i8#WN*##Y-G@D]=bhl^qmn+`Q"sXVl-GjW2cr%ZF7?[_8=+/`lH3DWMcSgUnsob
WN<;1\\>u$a2lEHbg$~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
11.7769 56.9971 mo
10.7181 56.9971 9.72339 56.6613 8.90724 56.0687 cv
8.88631 56.0415 8.86562 56.014 8.8452 55.9863 cv
9.69431 56.6316 10.7316 56.9934 11.7994 56.9934 cv
12.3944 56.9933 12.9991 56.8809 13.5854 56.6426 cv
14.8023 56.1494 15.7573 55.2021 16.2749 53.9756 cv
16.7944 52.7461 16.812 51.3867 16.3276 50.1475 cv
16.1636 49.7266 15.9311 49.3506 15.6714 48.9981 cv
15.7051 49.0235 15.7386 49.0494 15.7716 49.0757 cv
16.0027 49.4036 16.1974 49.764 16.3491 50.1524 cv
17.3472 52.708 16.1147 55.6182 13.6001 56.6396 cv
13.0161 56.8769 12.4028 56.9971 11.7769 56.9971 cv
gsave
[10.7631 29.9821 -29.9821 10.7631 6.42578 35.0361 ]ct
clp
/3 /Gradient get_res exec grestore
np
4.64796 60.2422 mo
4.17354 59.8176 3.73218 59.3491 3.33164 58.8391 cv
3.22994 58.7074 3.1308 58.5728 3.03471 58.436 cv
3.27148 58.7666 3.52479 59.0817 3.79247 59.3809 cv
3.81715 59.3291 3.84206 59.2774 3.86721 59.2257 cv
4.10988 59.582 4.37108 59.9208 4.64796 60.2422 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[2.88 0 0 3.36 2.4 3.04 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 7 
/M[6 0 0 -7 0 7 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~69dUo3&O#e4?5>W69dRm2Dd`b4?,5T69dRm2D[]b4?5;U6U3ao2DY~>
<~T:hmPUnsf]V5C/iVPgAmX/r;$XKA\1Xfen5ZF$mBZaI6N['mHR\[q~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
3.33164 58.8391 mo
2.7041 58.0399 2.1767 57.1385 1.77916 56.1433 cv
2.11168 56.9755 2.53665 57.7404 3.03471 58.436 cv
3.1308 58.5728 3.22994 58.7074 3.33164 58.8391 cv
1.77781 56.1399 mo
1.77652 56.1367 1.77532 56.1337 1.77403 56.1304 cv
1.77528 56.1336 1.77656 56.1368 1.77781 56.1399 cv
1.77118 56.1233 mo
1.77017 56.1208 1.76917 56.1182 1.76817 56.1157 cv
1.76917 56.1182 1.77018 56.1208 1.77118 56.1233 cv
1.76544 56.1088 mo
1.76472 56.107 1.76397 56.1051 1.76325 56.1033 cv
1.76398 56.1051 1.76471 56.107 1.76544 56.1088 cv
1.75928 56.0932 mo
1.75832 56.0908 1.75737 56.0883 1.75641 56.0859 cv
1.75738 56.0884 1.75831 56.0907 1.75928 56.0932 cv
1.75432 56.0806 mo
1.75273 56.0765 1.75111 56.0724 1.74953 56.0683 cv
1.22997 54.7373 .983897 53.3633 .983897 52.0107 cv
.983897 52.0107 li
.983897 53.3633 1.22997 54.7373 1.74953 56.0683 cv
1.75112 56.0724 1.75272 56.0765 1.75432 56.0806 cv
gsave
[10.7664 29.9913 -29.9913 10.7664 5.44189 35.4521 ]ct
clp
/3 /Gradient get_res exec grestore
np
3.79247 59.3809 mo
3.52479 59.0817 3.27148 58.7666 3.03471 58.436 cv
2.5296 57.7164 2.10355 56.9259 1.77101 56.0742 cv
-.433116 50.4356 2.26805 44.0205 7.79151 41.7754 cv
8.33273 41.5557 8.88477 41.3819 9.44483 41.2546 cv
10.2115 41.0818 10.9827 40.9983 11.7471 40.9983 cv
14.8442 40.9983 17.8233 42.3716 19.8765 44.7539 cv
17.9089 42.9937 15.3601 42.0014 12.7263 42.0014 cv
11.4045 42.0014 10.0607 42.2516 8.75928 42.7803 cv
4.53859 44.4961 1.96434 48.6406 1.96434 53.0137 cv
1.96434 54.3662 2.21045 55.7402 2.72997 57.0713 cv
3.03297 57.8484 3.41831 58.5668 3.86721 59.2257 cv
3.84206 59.2774 3.81715 59.3291 3.79247 59.3809 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[21.6 0 0 19.68 -.960001 4 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 45 
/H 41 
/M[45 0 0 -41 0 41 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 45 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 45 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 45 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 45 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
a8l)<r;us#rWN3(rW`B-rs8T1rsJc6pAk-mrrW3&rWE`8"pP;;#RC_D$OdFQ%M'*U&.oNg'GVB"SH/Nf
r;us#rWN3(rW`B-rs8W2rsJ`5!=TG4!<*!A!WiH+"9\l3"pP;;#RLeE$OdFQ%M'*_&eYil'c%T&)8?10
!;urr!r`<$"TAT)#6"i9#RC_C$47.K$k*RS%f-2)!?qRH!s8Z/"U,)7#6tM@$47.L%1NdX&.oNg',;5t
(E",1*:s65!;urs!rW6#"TJZ)#6"i;#RC_C$47.K$k*RS%M'*J!<*!E!WiH+"9\l3"pP;<#RLhF$OdIR
%M'*_&ebro()If*)B0Y:*i]59!;urs!rW6#"TJZ)#6+r-#S%.I$47.K$k3XU%M'']&H2\/!@@jL!s8Z/
"U,)7#7(SA$47.L%1NdX&.oNg'GVB"(`=52*$-1E+l<:>!;lls!r`<#"TAT)#6+r-#S@@L$47.K$k3XU
%M'']&J5WUrW*`8!WrN-"9er5"pYD>#mq"I$k3[W%h]Ec&ebro()If*)B0\<+!;aP,c1S?!W<*!"9&H&
"o\`+#QG)0$3(A3$TSV)%1WjY&.fEc&eboZ!<N<)!sA`1"U5/9#RC_D$O[@P%M'*^&J>`k'c%T&)&jP9
*ZlLK,:+ZaaoL8urW2s!rWE-&rWW9*8-]A*#RLeE$4@4M$k3XU%hB3_&J>]i',2/_!WrN-"9er5#6tM?
#mq%J$k3[W&.oNf',2/t(E",1*$$(B+X/-W-7:2k!!&tu!!3$"r<*'&rWW9*'aFsL#RLeE$4@4M$k3XU
%M'*_&J>^3',2,q()?uS"9\l3"pP;<#mgqH$OmOT%hK<c',2,r(Ddr-)]Tk>+<_pR,pk#h.P*0Z!:p3i
!r`<$"TAT)#6"iu#RC_C$47.K$k*RS%M'']&.oNg',2/r()@]'"9\l3"pYA=#mq"I$k*RT%hK<c',2/s
(Dn#.)]]tA+<_sT,pk#h.kE8*0^8YP!!!*""9&H'"o\`+#Q=uY#mgqG$OdFQ%1WjY%hK<b&ebom'bqK#
(`4,/"U,)8#7(VB$4@7O%1Wmh&.oNg'GVB"(`=52*?H:F+sS?[-R^Gp/1rS11,Pm/rr`6'rriN/"pP;;
rWl+&#mq"I$OdIR%Ls![&.oKe',)&p()@]'(`=52)[6NQ#RLhF$OdIS%M'*_&ebro()If+)]Tk>+!;aP
,UOle.P!&&0/57>2E0.ddfB@MrWW<+rs/Q0rsA]4rX1jt%1NdX%hK9a&J>`j'GVB!(Dn#-)B0Y9*<uiV
$47.L%1WmZ&.oNg'GVB"(`=84*?H:F+sS?[-R^Gq/I3s_0f([F3&s'u!!!0$"W%@I#6tM?#mgqG$O[@O
%1NdX%hK<b&e[>@'GM8t()If*)&aG6*??1C#mq%J$k3[V&.oKe',2/t(`=52*$$+D+X/-W-7C;m/1iM/
1,CdG3'',a5/70^!!!3%##tm5#RC_C$47.K$k*RS%M'']&J5Wg',2,q()@]')&aG5*$$(A+!;^6$OdIS
%hK9b',2,r(Dn#.)]Tk>+<_sT,pk#h.kE8*0etOB2`Ni\4[25!o`2;u0Eq^d#7(SA#mq"I$OdFQ%1WmZ
&.fEd',)&p'c%T%(`=52*#ot?+!2UK+sRL*%M's!&J5Zj'c%T&)&aG6*ZlLJ,:"Q_-n-Yt/h\q71c@9P
3]oPi5sn%0WrW(u#R:S?#RLeE$4HhA9aqRB%hB3`&J>`k'GVB!(Dmu,)B0Y9*?H:F+X&$S,UEp2&.oNg
'GVB"(`=52*?H:F+sS?[-R^Gp/1rV21,LmK3BK>e5X@b+7n?81!6>./#RC_C$47.K$k3XU%M'*^&J5Wh
',2/s()If*)&aG6*$-.C+<_pQ,:"Q^-P-k&',2/s(Dn#/*$$(B+X/-V,pt,k/1hMf0JYF@2E3]Y4[)+t
6UaL:92/0Z!"]GC$47.K$k3XU%M'*^&J>^I',)&p()Ic()&X>3*#ot?+!;^N,:"Q]-7:2j&ebro()If*
)]Tk>+!;aP,pjug.P*/(0JYFA2`NfZ4[25!6q'U<92/2Z;p,0s!*T^:$OdFQ%1WmZ&.fEd&ebrn'c%T%
(`=51)]Tk>*ZlLJ+sS?Z-7:2i.4Qh^'c%T&)B0Y:+!;^N,:+]c.4Ql$0/54<2)dKU4?Ynp6UXC78kVoU
;,gOs!2olD$OdFQ%1WjY&.oKe&ebrn'c%T%)&X>3)]Tk>+!2UK+sS?Z-7:St.4Qi!/1q\T)&aG6*?H=H
,:"Q^-n-Yt/h\q71c@9P3]oSj5sn%08P2ZO:f:7n=BSn;!:g+m$k3XU%hB3_&J>`j'GV>u(Ddo+)B0Y9
*?H:F+X&$S,UFcb-n-Vr/1iJ-0GtcJ*$$+D+X86Y-R^Do/M8\21,LmJ3BB8d5XIh,7nH?I:Jaqg<`iO1
?=<(!]`:)'%M'']&.oNg'GM8s()If))&aG6*??1C+<_pQ,:"Q^-n$Mo.kE8)0/,+9)]]tA+<_sT-7:2k
.kMep0JP@?2E3]Y4[)+t6q'U;92&,Y;H6b">?tTE@qDP<,S(Cs&J5Wh'GM8t()If*)&aG6*$$%@+!2UK
+sS?[-R^Gp/1`V1/h\n61,Cd/+!DgQ,UOog.P!)'0JYFA2E3]Y4[21u6q0^>92/2Z;cQn%>?tTEA7fIh
[fGpu&eGWf&ebom'c%T%(`=51)]Kb:rZ+?I*ZlLJ+sS?[-RgMr/h\n51,CaE2E)a&,:+Za.4Ql#0/,.;
2)dKU4$>eo6UXC78k_rU;,^Is=^59?@:Wt`CMe"V!5&:@&eYil'GVB"(`4,/)B8VprZ*7**ZlLI+X/-V
-7:2l/1rV31GgsI2`WoD,pk#h.P*2*0JYIB+#c2@4?btq6UaI88k_uV;H-\!=^59@@Us(bCMe!1FJf*A
',2,q('PKj(`=52q]#\Y*$$(!*^Lkj+X/-V-7:5l/1rV42E*TU3]fGN-n-Yt/h\q81c73P4$>bm5sn(2
8P;`P:f:7n=B\s:@:Nk]BkqU*F*2\Pf)X1u$PaBl(Ddo+)B0Y:*;gfW*;pm;*ZlIH+X&$T,pt)j/1rV4
2*!]Z4?btY.kNA,0etRD3&s&`5<qP'77TpB9i"Va<**4,?!h#MAdW3cCi435Fa&+YI]!/P()If))&aG6
*?OnprZ;(]59M-o,:+]c.P*2+1Gq-R5!M;!/M8_31Gh!L3]fJg5XIk.7nH?J:f1.k='8a6?X[JWBPMC&
EH?8IH@:9oKYd`O!!jDZ)&aG6*$-4$*r?rX*;pmE*ZcCG+<i$U-7C;n/hf(=3BTMm6UWU`1Gq'M3BKAg
5XIk.84lQM:f11l=BSj7?t*YYBPMC&EHHAKH[^KsKnkNZ!3lM1)B'P7*??1D+!:G&r>bkXr>kkY'H\JA
+s\H^.4Zu(1H%6U5XS"21c6aA3'',a5=%Y*7S$-F:/Fhe<`iO1?=75RB5)-uDfTuEH$k'kK8#,=NK:1A
qZ$m@*$$(B+!;^LrZD+\r>knXr>e-E*ZuUM,:"Wb.kNG12E3fa6qBp/3BB8d5=%Y*7n?6G:/Ong<`iR2
?X[DTB5).!E,p)FH$k'kK8,2?NKB<giW-su#ot'/+<VgO+X&!-*rmA]*<@-#r#@4-*?H:F+X86Z-n?i%
1,V'S5X\.:4$5\l5sn(28P;cQ;,^Ir=^,-<@:NmaBPD7#EH?8HH$t0nK8,2?Nf]HjR$soQ$6LB6+sJ6U
+sA*PrZ;+]"<AL&*#nhr5ogse+!;[M,UFff/2&b:3'BMp85;B76:=748P;cR;,^Ir=^,0=@:Wt`C2Im/
F*;eSI=Hj%LP^qLOcu-"S"67t!8@JU+X/-UrZhsu+sJ0Q+!2LD*#on;*#nhr4rk[e+<_sV-RgQ!1,V'T
5Xe7>6:=:68P;fS;H$Rs=^56?@Us(bCMe!0EclSPIXm$(Ll..POd)3$S=ZFM!2l^p![As:r[&+$,U4KV
+WhdI*??+>)]S\n#oaj)+<_sU-RgQ'/ho4D4[DP0:I[lI9MSA]<*!+)>[:cIA7oUlDJsH5EcZDLI"$^'
MN*^\Pa@i0TVA9\Wiii3n,QT;-7:2i-RL,b,9e9R+!)FC*#on8(`4&*(`4/1*?QIO-7CDt1,V'T5t4LD
92&)W;H-\">$PBA@V'1dCMn'0E,fl<FE`"YJ:iZ;PEhN(SY2aSW2m)*[-[k*!#6k0.4Qbp-RL,b+sA'N
*ZZ7@)As>-r"U4g(`OJ<+sn`i/i#:F5!hb4;,:"e<*!+*?!h#MAHld^Ci=<6EW0toF*)PLH@:<tM2mji
StVpVWN<8-[(!WE!!=Z".kD;`.4?Mh,U4KV+!2OE)]9G-'GLHY58+_G(`FD<,q1>r0f:sS6:XaI;cQn%
>?tWGA7]FhD/XE8F`heIFE;MGFa/1\JVAuDQ^sqLWN<;/[CEf^_:Sb7!'Mh`/M/M(.OZYj,9e9R+!)C?
(`!bt&.]6]%hTHi(E=MA-S-l*2EF#h853#a>$G9?@Us(bCMe!1FE`"Src\6^#^(B<I=d34PF2fNVQI&-
[^j#b_8OBl!#R=A0J>"..Ocbm,pOTW*uu:<().>k%L`^g$OdIT&eu9*+XS]m1,V*X6qL0S>[CfIA7fOk
D/aN;GBs17)gQ[PG'.qLFa&1]Jqo>LR\Hge[^j&c_SsR=cI;iE~>

%%EndBinary
grestore
np
3.03471 58.436 mo
2.53665 57.7404 2.11168 56.9755 1.77916 56.1433 cv
1.77872 56.1422 1.77826 56.1411 1.77781 56.1399 cv
1.77656 56.1368 1.77528 56.1336 1.77403 56.1304 cv
1.7731 56.1281 1.7721 56.1256 1.77118 56.1233 cv
1.77018 56.1208 1.76917 56.1182 1.76817 56.1157 cv
1.76724 56.1134 1.76636 56.1111 1.76544 56.1088 cv
1.76471 56.107 1.76398 56.1051 1.76325 56.1033 cv
1.76193 56.0999 1.7606 56.0965 1.75928 56.0932 cv
1.75831 56.0907 1.75738 56.0884 1.75641 56.0859 cv
1.75569 56.0841 1.75504 56.0824 1.75432 56.0806 cv
1.75272 56.0765 1.75112 56.0724 1.74953 56.0683 cv
1.22997 54.7373 .983897 53.3633 .983897 52.0107 cv
.983897 47.6377 3.55811 43.4932 7.7788 41.7773 cv
8.3283 41.5542 8.88535 41.3806 9.44483 41.2546 cv
8.88477 41.3819 8.33273 41.5557 7.79151 41.7754 cv
2.26805 44.0205 -.433116 50.4356 1.77101 56.0742 cv
2.10355 56.9259 2.5296 57.7164 3.03471 58.436 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[11.04 0 0 18.72 -.960001 4.96 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 23 
/H 39 
/M[23 0 0 -39 0 39 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
h>mHSr<!!$pAk-mrrW3&rWE6*#0?lF!W<&u!rW5r!<*!+!WiH+"9\l3"pP=U!;llr!r`<$"Sr,t!=])3
!s8Z/"U,)7#6tM7c2dbCr;us#r<**(quH]s%KZ\6!sA`1"U5/9#RC_Dh#R$HquQ`trWE-&rWN9+rW)ou
&-;n8!sA`1"U5/9#RC_D$4G2\r;liurWE-&rWW9*!<<-7!<E6'!s8Z/"U,)7#7(SA$47.L%FP7T!W<*!
"9&H&"oef+#8R=@!WiH+"9\l3"pP;<#RLhG$OdIS&+]e[!<*#t!r`<$"TJZ)#6+r-#SmIC!s8Z/"U,)8
#7(SA$4@4M%1Wm[&^p^]!<N?&!r`<$"TAT)#6+r-#T*jS!s8Z/"U,)7#7(VB$4@4N%1Wm[&J>c+!<3-!
"9&H&"oef,#QG)/#nRFN"9\l3"pYA=#mq"I$k*RM%M'*_&ebrodf9@LrWE-&rrrB+rs/Q0rsAZ3(^g`U
"U52:#RLeE$OdIR%M'*_&ebro()Q*5mK!7hrri<)rW`B-rWjPO$47.K$k*RL#7(SA$47.L%1WjY&.oNg
'GVB"(`Lj'rri<)rW`B-rs8W2rsBbS$OdFQ%1WUK#mq"I$k3[W%hK<c',2/s(Dn#/*7Flj"9er5#6"iR
#RC_C$47.K$k*RT%M''V$4@4M%1WjZ&J5Wh'GVE$)&aG6*?Y1ZfDksV"pY&3-O9ta#mq"I$OdIR%Ls![
&.o6W$k3[W&.fHf'GM<!(`=52*$$(C+kZkm!!3?/#Q=uV#mgqG$O[@O%1WjY&.fEc&e#3Z%hK<b',2/s
(Dn#.)]Tn@+<_sTdf9LU#7(VBrX&W5rX9>I%M'']&.oNf',1oe&.oNg&/5ip(Dn#.)]]tA+<i$U-7@7B
/I2Ug$47.K$k*RS%Ls!\&.oNf',2,q&.oNg'GVB"(`=84*?H:G+sS?Z-RgP6!9F24#mq"I$OdFQ%1WjY
&.fEd',)&p'c%Su',2/s(Dn#/*$$(B+<i$V-7:5l/1o<N"pt_G$k*RT-4UOs&.fEd',)&p'c%T%(_d]#
(Dn&0*$$+D+X/-W-R^Dn/1rS1df:g)$k3XU%M'']&J5Wg',2/s()If*)&a8-)&aG6*?H=H,:"Q^-n-Yt
/d!a]1,RG[/IW'u%M'*^&J5Wh',2/s(Ddo+)&aG6)&aG6*?QCI,:"Q_-n-Yu/h\q71c@;P!:g+A%M'']
&.oNf',2,q'c%T&)&aD4*$$%=*?H:F+X86Z-R^Gp/M8_31Gh!L3BP[i'+YWc&J>]i'GM8t()If*)B0V8
*>on?+!)LI+sS?[-n-Vr/M8_41Gq'M3BKAgdf:s2&J>`j'GV>u(Ddo+)B0Y9*?H:F+<_jO,:+Za.4Ql#
0/,.;2)dKU4$>eo6hgZ:!%efs',2/r()If))&aD4*??1C+<_pQ,9nK]-n-Vs/h\n61c73P3]oSj5sn(1
eGq6&!#$%]()@]'(`=52*#p"A+!;^N,9nH[-7C;n/1rS11GgsJ3BKAf5X@b+7nHA&!$E!l(Ddo+)&aG6
*??1D+<_pR,UFca-n-Yu/h\q71c@<%3BKAg5XIk-7nH?J:X]:q()If*)B'P7*?H7D+<_pR,UFcb-n-Ss
/hf"91c@<S4$>bm6:=:58P;cS;,cc\kl<:P)&aG5*$$(B+!;^N,:"Q^-R^Dn.kEA01Gq'M3BKAg5XIk.
84lQM:f11l=OR6W)B0Y9*?H:F+<_pQ,:"T_-R^Dn.kE8)1c73O3]fJh5sn(184lQN:f:4m=B\tY!%f02
*?H:F+X/-U,UFcb.4H_s/1iJ-0K2!Q4?btq6UaL98k_uW;H-\!>?kNDdf:s@*ZlLJ+sS?Y,pjuf.P!&%
/hSh41,D!S5!VD$77TpB9hnPa<EE=->[LoLB&3O]!%f<9+X/-V,pjue.4H_t/M8\10etOA2*X>m6q'U;
92/2Z;cQn%>?tTEA7fLidf:1-+sS?Z-7:2j.P!&%/h\n51,CaE2`O,=6q0^=9288\;cQn%>[:`HA7fOk
D/[l'/L)Me-7:2j.P!&%/h\q71,LjH2`NfY7S$-F:/=be<`iO1?"%2QB5).!E,p'm!8mi/-71)g.4Qi!
/M8\10f(XD2E*TU3]oPu9MSD^<*!.*>[CfIAS5^mDK'Z>GBqX;s!TBI.P!)&/hf"71,LjH3&s#]4?Ykn
:Jath<`iR3?X[GUB527$EH?8IH@14k!$j$E/1iJ-0JP==1c73O3BB5a4[)+s6;plc=^,0>@Us%`C2Ikp
EH?;JH@:<qK^&Pf~>

%%EndBinary
grestore
np
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 9.0%%AI8_CreatorVersion: 14.0.0%%For: (Nick La) ()%%Title: (cut.eps)%%CreationDate: 2/26/10 7:04 AM%%Canvassize: 16383%AI9_DataStream%Gb"/LBij'1f'`:EQN)RnO?eV]W[*iT+:0)&&dSW]g^,^TJ:k+`D7WN8&,3QjrTmf9ai4b2l2/2-okI"tQ"o*^a/9-fbuFubrPNOQ%\2sE:Ej=]kU/t#^d0,06\JO(mcKL_kog/K7XOA80%gVLIBN,rC#/ei/Z1_h2?efH<e!jD.A#Iotr)'Qh>4'dDOkkreo3SnI8.>t[%L/`K0GYYZ*3oa]2E,a1Wmra*Jo^mTD4Y3Tg2+hErZRjE]pR_t#LL$p:?@1/)\H_KIqAJsYC,(stT:'Q0f=MlZLTU)SBNpssY<=q?%EG0)<T(-uGdK5Q0L=gX).belbH_';,Gh*cL__S.cd]^,)l5,QiInT?Y^YQL]ltd?/3euMX&RIm&r:b)A4Jqt39T!#WD16kt-T\*X%n+k9kS`;>`V`X*l=eNtqG\M6.F5E(%W_JApK/3,F;<sr8QHg2N>kI3(Tu_lB3_.&C$Q7q(C!<p@[dc=OE8MsqIp'5'J)P<OoSW`/%Zb9X7'3a63Y8Drb<nmQ;MYcM`8W[npF*?DUNB>@a^+P10?f?e;bN>NZ&SBTk5TFWmU@6.A5f`FZj6FqYh9I+c`6.IbIlnR=#T:+`%D402%E4js(2pJ)F0ae*sG:n34iS/g*9Z5@M8u0u!i3:\:8R/XUCLK9q"Mmk[)>77Oj3ALidCTDCQ]&+]H0Y(Afgb;Rc;8`d%;_SZ%qKmj=gt@jIBe3].1M,d*8+U2fL8]s3AlE;W7!Y#?eODA5gVe2<_sVNR^W]"t]_Hm,4j7"_d`#=;E<"+$mXO6q9,D<Lj)Lu8]<(XR%D)865o?*Q7d_O_]`S!Plea5AsZF!VgVu-/<\4(87,VHgpr2WruEsrBFkf`_jdhr!V')\i]>cR8Q\*r@Zn)LP=bM-VBV59D2aCPdO%N'T(+ONX#'e('j3aHImjPL(+<-OFf>$$+uXr'[\k%Cp42PcWF)VH-'UAeT*P9k.#2fu3c";p%XlV8(G#Bi3`]UjMS-KfT'!/rU*$%OUGZ>,F*Hi&Uko77YIBN\"eV@`L--.:Da[mU*cRte;P!u-cV/'8B$tCVGL4F7kT`.5EVks7%0SeoNZ&\<"ph@Vj*F.9CJ_GdPkk\%4a1u.El]&;@=7j,RUcV6eFH@H%)7o4j)["-<0=I'++E2UUQbMo:['l;n.W>d55^XJ'J:!/9)E;LnGmn'prCXIoM;EG>XCA>(E'dU%*^,j=8\7m,RkMnB^5rSpF.A*7TsTb^hI:m-M-RpT(n]/Cb2Of>@!%)_a4X42KQ>LmE4=k9a"*2)cu\.[i<:SFDGGoRdQ=/6Zn$5c%ceXPiYt<i8bI&t196ke9?da"X9]9TOF.nTCd,Zk=hb;b#9OZ4<CF32E:)WL.G<<Obp^a2W*cdF8c*F*b2@o#6UEiHEe8ThYrH7L"%]i%`WO2(0g[%aj5>0EE%[sS@14D2FjX"Y?EP*5d0Y:,Rsm'hA]Yrp(3CHJt3Q&<5rI`kg#.aQddq'sV=l]RG0QENbFT!R>FjeZ=Y%cS9Y=.J#%8mR_lVpiK=?_IaepER:efT\6Ebc+5'%7eKB4^QkZQH"tbH_`90"b`mGnj$/k<WEb)UVVh#HaVu_oEqoQ6'D%*b9#@u\%W"GkpOqTG#ZCJe2gd;T86YUGgp07+93!.\N)&'K=^I-*ZEZ4\bRJiJ@]nU;UpP*Gj)n*a_9&%(#M:b_M1\*W/9:CfLZ5(M^PFbRY%dnH_Seu$HLaD^JgbOJ!BCg=Aq9kfMW3rUVkA#cmfEF$2bFN%*oU9lb$;u8CU<'qj/6OPosk1Tgk0%]#p7AZsnk/h/b#UX?.[@Tp'%E%f`AY,oYEpF)+e83`2FBDGF9W-#pt#cBZ]:B)]%A&2GJ,N!F%'!u=$a]t"t6S<T3nRpDT.a@G/VB(:$acnu#,B,GI]M.=0`g?g4%Jm4L#&8@;,eEJA.OsKs@3Ru9-r6KW+[NE\;.p9(A7d">6f=i8Xl`KObpWHGbE=tb_L7askZk&H<M48YU6/BdWL$'Wi^b$nk=g]74%g6VY'WuOjhfU@iP9UOini]PV$dXI2lR8s\`-WoaiOXk5#rQhqYqA\J7b$'q'g5VM5-^s6@jsZCtV4&ot3^lBa<Z7D(UI8;'-0^V+%a(oQ6R%&-V:\tf`7UdC/30'obPEM>QhstgOBN<1IAYO&#8f8juP'^SXB,W4_;W3,ao1VpaDQKqKfOi&sF%l:)A22QS68,@Tj@5VL%J#bQZpJ!#nR9"FZU[k+;^LF=7kHpc3`/&a]Vm^,&QTC!pMlnFf177BDm\/725%FD_Bf0]`TnSrD5C)))Gsj_R*_*.b',oG9X%(Zd%&3:.XWep_rc)@J4MGatZan$C]r(b9&A'=`,jWlKRK3q]Z<SZfco=X/H1^iKF;1!aQ/uE5iW>Dd&Y@k1Y2.@;sC)T*IW`lMRq:k.3%X6&?RPR'.G?O>g`)9q7W[pI7!$IdA14ZR!1d9;.M[D^TD[?<bUn[I__]PbjdU"6S&:6\G!!SIKL1$<'%_KWlk<pqi"fA`7)Fi]rU%s7E0$8_a'lS\/t".l0hms&s^litdNa5$1OHdjnZEP]n@g==UNZ?AQ?MZAR7-/N3H4M5Yih+)Np4%$udN<L!3@<3iSOFFOr722$Hq%qf+3W=0@N,-`OFdlQg4)?17!.?KXplrFiLo_ED="83[`l8U65%Gp-cP<1kP[;qk#.DN)Xj7IaaH[3p9m,W/dQ/&?)catQ>]jePo>%RCJj@4t%IrZSkP,f[`N73?,c14W7Z`56FkGT:];R[`,[L8>aI_N*K!b[WEX^b]5tV:b2G[4]@g82<po@/4EHoB2$II9BBVQ"m2F2%iruJ*R*TQhQ)>phR%H7fWNF,1s%;@^MlERO3k1?XXU-<6I*%<pS>SA])20\*[uMLde"S(&M2\ZBiDJ!@N8+3:*k-%1:p*3nO4>#V%12^DJ;jp:tj6RlObPX"LP).+Js4p3QF&eN2YpcC_R"DaLcT[[dD#74H)q'T5>OCAH6IFpeg:",=7\uW(7p?f2rYO_ddqQqBaslFa%m=Y?/50])ee>a*$,;^32j?,c\'5eW^F@JpqR!W4dJB%!=;E='c*1r3RYpD+$l-/b?"l%+periT8TYfJVUJY8@I8u!-TMH[VH=Ac`%9k8E=:Q#,A3'W`@rc<OH=IhPb;4gtb,dFb14ElYB.ZtYj-hYR&=A<DKeK7Gaj%ua?G5T@Ci]/N&AN`fc-0(Xr>Xi@;Qr8fGM5=!I%>0?(TNK\TN1*&qKP;M[:[FGI9pTl&\;scV!$1tuAknV<bXO`JR8n8g<$pR0<0.dDH#+j@=[?M]4N2*+l-DNt@/-1PQF+kTMpP"2S%-F=iI3KMi3V&kKWo4C1qoL6l(E[?[pp7CA-)@?/nC'(P6pe,[&:.sgkIl=FC6JW]J`gA"INpV=nJYPTTKq^"^$$hHc`B7Y5%$sV`%?a4]F.p=2Hj[dtm(jB^^`5]frmV5psNeIt)1ngT@Y:sIc9s`Pt7UFSF8bl&"^,-nSF;D><qEOS<@eZJkhR%@_=\Ighj`mYbnlhRJ%6_k'kGiij\ba@KFbu@U!*6ZBscVU,'6JGhAT1gabD<Jq4du@UY<9N_+s$s5^o1$9tULId*`AL+9,WE)s*IDPKnh_/"A]GT]kA\/C%:s-3Yg]%ja9fZDee>nn2EYqOD>qu(1D1A#*)@.VkqgMR]63V\)nLZ^MSM@9OCc(JK#1jp&PuG4S<6b6mU/OKr7IH_f\(-7/7^I,0%`s7Ie\Jlo31LR7@B^jMl6#T&I_J2DeVH0g5Xacj<$i__+dQ?(E+(F&&ri-FQYcp30.uN*!6#U]nn'\uHc#.0AEA!0Er4N&U5e4LT%/6EZoo:'uS]6?QESdu&BkNi)A6"-@o!YkB`=>)ijDB4,n[)WQnH(0oo[<p:AGKR&Uq80NS21)H6V^O3t0L*/+2j^[kNX!D-XLP&a%qS.6#KC`?UBhGFU=FB!ET&3fGG-BG7%?$aJf"BE/S_g`07TnPMg+=dkNDGG^?Di949'__^and:Mk5'8U=E,AtX2BkC8TAZ&kbZg)%^.N1Made7druGrmF+O<k?O1ba-(A>SV93cT?e5YH^:FJoq;5G(Xju`[O,'k/PAY_J"#Jf3/]kVs@B;]>%L0W7kUbbl>fq5*3:=5%%S_ZM#j3H>#[=K5dh>SQP+tK4c[tD#.D!WY>T!Zd)>j(mXaZ4Ro$H%9iN-WrT.M_kj[@^BVDAUlEEW0gih`C'C(6?q(=UTpdM+(F?%8e)6$$XR8LJ;$TkHTli_?K`7[nm_Gj]S]e`C0mIF)dZHO2,hu5Y6#FgUE]Pp<C2^XPmg0R^)O)O4fo(([d!*CLYCsJ^13_tMQXgG%d<49l9koUOn[7i_JKOa.O6A\!'>NO.r>L+9rJ'2<]Y[V4?e)=aeZ`eg;)PL'eOl*c>I@dS<1E7?C!%OI_O=p1LA8)YX-&Z`eAs1<%[rgH0#PG<=l4e!`PBs'%YEBp0f,OBp_eZ3*DYT3a&N3<-C;c+-;/&uK[77jW+PTQLDGk\J5r3>GB%2d]e#G7(jX(]hoCeCsW/>Zn%eKL,3+:8<@T7@+fd*R@e#jL(H&Uh\c&le),)UniR;:(t.]oZnFlHlGFpbH7l`aKK\65jiG.tmT"5qRFQ)/Xag24;f.':IJuVIHR&%B'Q6Z4nE>J1f5u`_T6+N3(fnPI94N:W7/7A8sOObAtJ`)7D'3]U`ZU1-"=OC/^3Thn[:JF\Zu]VUJrs)AORh5QE9#gf=#5d7[8hl%Jthf_9$V`W-*-]<(*'g@;?6>?!RM4ejc'Fofq6m]dr1e+qrr<dIY[0s8\_%mRfoWsV8n!cddLrI>t_qh7@AuZ">LS-9F*EdbQKUQ%ITH77P#l&-X%iq+?K<kmbJ\7\5MZ0P>n/'D9Q8&E43VZs$g!ZC^oU\Q-Hglqe%r,R%Ml">r(R-?TPrq).*S\We:L7lJg^b"#6iZ`%:)i8:61'gZ\<Rs\=?U'"!9l-i<j@\`3/GK)`).M<.pn.6'[5(e#&-"L;2J'G,Y5ej,Z,1%'FlKj$J"H6K=lWl@o^nkT+kF10`^Df%$$MM/**]U'82Y]n<RnQ[fnJ2Fm+\T-_C]m'5HO>b/,[9ls00@)XRH`Nb[cFW$Z_"`11)s&bKPDaSo3[4Gr*.2>Bi6YLmP\.mX*dc%UR3+Bg&7['DP+/r4$3B_QfoNOs$un`_[?FJ_EY-k%kIRq$GZ!AGuo5XhI#CN>t2T4>nR#!!f=S+3R[Gi^!<R\oVt.NUX'Iijhgq.%HSY?=6?274l`=$4>Zf_ISt5U:/rNfd8r%[aJ*ds*i*I/("1'*KUkb</a*1/PUDO\(Mk@b/`C!8rYeqabE*-5*[C_\jEJ^-\hqUL9%;:`E"a10sjFiNGOG@LHBE7LXmFD4^aFB!Ot?)SeYoMlrDm]^\SA@?eXNE*#\H(1aR]:*oup$ZO*AV7R]T8H9`i=&eO``D7t(!C@a%rfVW*8]4Q:%3i06J+@Z#Bm2\X)Y/8e?)_;%Q^=P,p+1&n=POs@E!.2oYs?Mf[r4T27E)*Gb"G0e@V[qe(po$Q`AX@U<lK^JL!Alt%Q`>[(cSfe,RQ0[Fg8BR]EUd.3GH]-B*=ZuARd08/%0:2*SPH45m;I/;-cMY-B\XJKs"0#KZSTjh5:#>1?eo9f*U.Z`Rs3LFSC*7s%Mt&fekk]bl>eS(>rR#n+f]fmFV"VEU`DQBeSQke2,Opc"OW3#6H./IdM:l8P)#iA@mWJLd/iF3Oj46N*f,amZd_St0R?'70rSrge%EMp<03-S:ac&&Sre;N9bo:ton=H\'X204$!/Pkn1X4J@d-(VG5Vm`C@o5rhM[,Y@VDi9m=nK=C-b:K+scWfQX!Mf)97B`!$U:QM@%p:VU_TB:+rWO;T;[mmuD6do":WXOY7q3--6gZcCbNN"JZdM]4>8,Ur(S=O_2cu/M!VYRn#%!sRh,.)*Qb`V"4DfF(gm<$W,HD>SD%6#Mcb)*h?;\S,F2M]9/ej0I`l`M6CPOF[):rD%?+9QRh9Uo+HqS^Aadb3'f9FHq=D[)^+jeF-GQh7:b:q',!^I0[N2L?DC'e''RI%T\\q*dtGRDrek=H(tVYVM0Ti#]s>,/.F6JcHLml_F0keI1B\0OXeS)m\NLcNFq-1O3a(7SGiH-RF'jEYosiZAF,pMM?=E$2I,=30%Ft_-]>3=#FKN?\n@e+:kH(JE6[t]Icm(di9"-54N+^%6MQJT_G<%$fOb\9PgSQ\a(!"suKV&ELN-OXdA-a9KMKin"A(V6";Wn>t\%]e'[=o@67=S9N.smV\V;o<aZs[jIDOs&j).WLM"p='S[MqRk@&npCOt3k8K>Oq,)/(ZWeSl25p2DI8@BK<r[SVXkdbK4D"qc*AA-%FM9uNLZ9%@biHoO-_9\qM61TcHm]j4@I`:%@XZlTZ,uOPFMWDeqqeEcgJ_CFn<%A68\2[g@@Bp[eKkie`]Zfn(@$o['!l@BDOW6D%n24@p&'o4p9E3RK3'Y'T:79Qfj%O3==C#/R<:4mh`ja)M*h;-/!g7Vlc1!TL+F+J%j-0SJRFf:&dAV+l5<7K?<45GQr'!(_6B8Xt%rRPQ[DE9"<irSj?NNSkA1umMmgZr,%1?WG4%_C],f(nuA--pO&(!OhVmZA1oqBS.4pg'Z\F/Gi!!7u*oPBV7R*Xnaf=uS96)37>_%Sd^AR:-Fi0\_%8Ol^BPbBU*nrCRpefDOKtfX8@'hI!/]]o\i&@.l<blUaDSLCU2@kNP"4m[]s=Q(69[j8M*V1:+oo+d;oqUDZ=Bh%6agDU1qk+`Haa6^iTN>u7ReRukE'6;7V+993E6?oaI?*7\&b+A$KfLtB<C.WBX67!aIK67S+GcgI>cnV?I-!T'4\ZlFi^"QnT^&;%*qdS8_qt4YB[FLh[*M6RpmIp27b=ucW(d%"5'*@%:<.&DSGtW'&#[qgHTe]U*oBFa;*M%YZIiV%RBh2Q=^57mn8L@UP]&EpQ8k@l%'1UU;o(H5>731d%5HiOr=iS;Q`&RtPfVQjrqd6K:R2B,;:A;OV9K5<o2*BZNRoJS?ph'1kH)ta\hNbW@'YJTo>rUoX7TE*Yo3V=?%CSlmY[/6Wa-qS^(h-M.DROs:>!-C0\@9L98`t"Y(RFPj\hh`eMR:gV]i'uhS(>I\6kWUN;5o7iH[9<?sA$R&g?T2jN&oqU\fB;BI%W1-g/jdDe_8_KW@%QhSRkSi\J(YR"X1RdDjOA_H8%;%("njKY25_J\%2$T@&N34$ZB/mQ6<?+)#mWuti*HfbJ?`*l`;lef"kh7o)%DMmaNK4S:Js0fRE0#$co:]T;i;`OL*r9jHamGA\:^[%qP-YU;cb<*n&VEBZek^O)V@pfqr8B#-kB&M7d@Zi45T-O4^X=/sh%+CuU%jlPF9h,mk)5eTgHb"R?$].2E=C<g]&_QR#+nGPoV+()qA=THk8?(YnSg-$hX^42+C6ae.PPi8QnmL=*dXFj5cZr/MdDFdk%!`=3c%JRal`6Bd,0.QRK1WcfD"/%`4^of0#dI1NU\2&AC0HLQ3"p&1)0/$0>C?ht;A9%C?.o<XYBj8PU9br_!L+4e$*o'!f5qk@Ne/[)j9%rcBr@[_2.b_p,UJ76>6BoO^4`K&E6`NU#Eea,dq2CF`c8O4I>RT9%PmYOk_$DJ`tFcHp-K3NaF<GdFZ`)K^.<h'Z"QolBlenYN*@%%R3j<;8#!!*.<,sY(-IL%6g$u=3_!hUWWH$pgioo\TcH&#P[+W^\8e`0?ht-]U&jZ/%ZlL8("q-T7<p.e]R?`DD[u(q9.LWC%KO%%nu-rE=FWGWd@>]8GZ:&?@PtpfDdCkR^:]N,]sZ^PjeM+_\98L5;A8-dp7U8C)aDnST07QToh^uF[BIVX#P?W#+8,<EofL]%r;D(U%[ref,IJD/M]I:uMhrbg1NHY)/^31.UYH1der!//1f8mZuY14T-D:U`aO.O(4H1,:?h/8eCYO5l[B]DKa<o-_))KtS!>OHrgH!'IY%4aU9L0)g#kg":`B"8uS/>BtLG$TM5EI9EWCgCMUGT5:Y]7;'@uksj(KkfBq9gZrVEFBPFt[d,S:mtbf-_bTj\pC<P%[A=Y`YM+@Z%?[CM,p7gq1)8X@Q\[C/flFlqOa%87bH!1/`mQHPEK<L36mg_Q8l[sOk\D!kZ3?$7CoB76mjKj,MhXj+3Vq'6";mNM#mVp'B?g_d^%QWgF#RWfN3%FL'LMm$@nB.;&M#C"c%rd40LF4L8tqS)JlZI^-V^.Do4UL#>!rST7kIG/qIld(T`fQuC==^=&crq\.kAD1IlDlXf1%<[^o>A_M\g=U3ISP9"3!"Ip7aWRgg3eFh,N=^XF]n*S8(rVL(&B^+'.7]Z4OIaoFNI?SKnI<\uLW`?Oo8%[S!CHoNa*uF(>_8j6;%+m(.npo1O%(>i,E&!a8/rVQKj>5,X3=ueX54)WW0*[r;kdr/*jF#_7pMg'Z@]rGmc4F5PZ0-%\=g,MD,n'gWacc^5BT=o%=O9%L%%EGKE&Dg]%"pMtY$H"^-@c-a@%`/!:l=4Jopc;ndeQtq(1S3,<Z<hIpUk&5$!ZbYk8eRkA^j3co+l6,m`4]di3btkF1#iV:d-_h'H%&re25VjA@K/,Lt7F3Nq/q9$2/r6_Qc`EV0qU_iHK?'UFDP/CPk,b=)qKCafNM:jn+/8g]A)5iVtHlPDhlo#?iTkboQB+JZhpD.Ma%-]M!1dXJf,M*C1udrVblUA&Q"m^pdaV8ih_X=6_940NCQ\]Wdki?E!'Vb+S5naU^%D`MG_ht)oV&ID0!Hhr#lH'r`ngWbH>hFb*q%IaX-MT78@+k-B!SW7jbd7Ql^1VR6#V'i%oFGk[REXY5)aIoQA15!5n>qX4WR]os!$WJXc8Ba*[Za+N!Tq4JFMY3[.!4JZFn*`UDD%`eeBPL&037(P[5t3"[apGk^0N;rQ6AX"SgKF7&bE#:T@con22`IHBj$HSh/Z6"O]tF"dOL/$6*Hb7"EZP._sMoN&#joB4rll>nhT%e*WcN*jtPq+^:+.f#g(aBZr^:nNO99;f@MVkJtt)Fg&,ul$`JHEFjQ?6lN[c0<D13hWN&L\!JuL2Q;(.>CB@!;jM@j8.05rW2`W0%qj#uq]c_[FR7WH:_V*YI^&1--.kdMf+'5(Oeb[\=dIFk1q"hGY5IbdL!M6HnkI$:,r:SQdq-6)Q3X<jSeDpAYZS_&`<h_:7jlBB'%<hTk9>`^&PmY61C[nig,CS6EhW`3#%/N'<-<8Z+#T?\CsZHAU*Lb#f:pSu=,3ibbS6$neqXJMJ;R[.(7/Ek>:G:=PMKf`2"j'g)\%dA^gV`TA5i<k,H:'s;#77'=_^NUgR_hl^fB/^7j-n=GF*/0cHRkO&Wkqo:4*;A/=O4k!G4Vl#JdIr_8q9^OK,`7-Wr<hp.[Q.=-s%?oh#FisCbrHfW>tQClLe_qN>>4M?#4Us&[;>,*o8q'^&FRf=kW\<8G*Gp=>0`[Wd$`@m%20,*Z.N0P^0OlK"kAn9be7FWbX9aUS_%-oNqVVTJC>(!e4R;bL=1St9\]1M9TUS=IjT`2l/I\<aIR&sX?/ZBFp#4&m?=V#8*P5$.XQUqWF-R,gq0Y1`Bu/-X*^91AI8fMJFj%Pp+P@grCEKX+`/)9?<0&E9HcOe"l=(W3Z0c<PQ*<Yd6ikrfPJFN24lL>C!m/r3lE@\U!@8RB.7F'g$2<\kenjrH.H*]sl%imaqEF%7f2hu"#4@IG9S#F?QIGQh2]JK*6qA32Ask\8*e3lKkKEAD6GVjQJ&d)BZn#sp?pme;EMGAq,Dk:l:3]rT^%!(ZI?!qXmLQX*fpW]%><>cIXXnMZYl*5@mB;hi2$_TKQgQJRVBGNeH)(=_DlIImlV]?Q<7QW]HKS/c7HRgj;gN_OA;%3ofPg:\/p,8u&JUZX[S;(m_3)6?%QR_bA:pJGVBliIH$Mm2_&p`g%VuJ#%\OC05:[((P:2UZ4=KaC>ck;'[+nJ+gqt2e(:uYf,pqk=mgUU8K++8B:AN)NB;c_H+/$e(u%g;QuDI]L5`RYTD._Emk>g?1uV2fi?GljcB_6o4%kO%#H'T:/jCqYKrbQ'%%M$P:UH^X@TD^$BP%<OUbu,'G?u'^!V#E`GpZoR(Dt%UJq5b=*s*)1OK/3`6A&WQTNpSW]r_=l]?A)=TtbOVS=15T:b"(8<UrWi:UWg)cm.kWt.Y:4Kn,FeeY7WnIO1,H+'R$hVLh?Uq6<!%6c;"pD@$+3Vpg"#PMbdZ;ht,Ah<]V?dr<JUqpj0?71)GkO+L=rQ4Xs]Xe+f*GHr#6Z[9lNB0?dSoPu-F2V$r)j0s&49@Wn9jjCbR%UOPR-WTTGN=?,X:rM@h[eD>FQIC$UVf&G`CCYR6pO)pRFYBSkIeoi_'J+kOS#7nK2o\s95gGgk\Sr^<@_l8s(<)0k"=1;G%93JR2%2B8=$%@/s15N;rK]OrbP&DbmLUSP>iX*a0FqP"m5<'BpLmHDj6*.7`h8QK/_dMI8HO)h_HYup&Vg@4OR(X5GXNrr9]mjYtrI+Th4%[*rjZ0AJS(8H#sHK<P6]pMUfh/>"K]G00M*hjMf3gA)A3nY0!43ILHnGjI3+ghAm9S>lE]<-C@feY_nf/Kf#"S)i2I5f`2e2qJX4%085"1UKVlk2*_mKT6Ir7N?>R-)K-5LkGirOLFfou?D$#>=$=j7XPu>&o/@ILDN?<O5,pu<`[@rr+4^tKP/iUYk3l3<rlhFp?JH3(%<#XP;=r&5Gd'NIB_WB(P#9?I8(Y_U5??o%<V7V/!3sp&Wip4)DQcB$V\^/e$j#_$@WaFpfMfk3R*GJf#IuYq>XMa0?2\)-;FXMSS%f%?TTG.70kj-Vs*kl'Z>m\K69SC+@okVU"k*UJu.Z3#`$[*WJ>HG<I3q;`!a^\>#.!k*CShV.8$[h%ciBALnanD/k?jisRfj3#[(%,"39nkFR0[Wi,-$R!2QKTKHAWYCGDR"D;5"Z]K?:h4<*lGjiKIh<+^M#9W8%7'C>Y^Ak_BEdhGgSXWUPfonCe4!gIhm]IPch`[CT%BL#%/B@L%2A<-6C%<H[+?i@S0mf%I$[_+n)I!itn2juhHal-R:2"Bki*H1oJo2T!`C0qjPh>D_D[+p*)As6K2a-C98j,6F6L,P/I%>V++$Hl7>2mCH![*_!9e.pGqT<]XS(:)QQ+IXSlWD*/ke;PY0t<S7hN?_3mL+$E$+mnUc*ihCcEZ6btfilF5<+.h(jfA8Z[iXNMG%0td+Ggu]\?1s'MtEo*Llat"-Nhk(_IGQD?p*0a#Y?Q&I2q;]G/]seSc:9^;-YP7J7O*88IC>HMr6XoCiX3uL/5+';VQkqI4et@G_%C`Y1-b1:Une_3Xg4R[RMSup;A%84eHFRiT]qJuABI[#4aC4,<*+&('<q*'297s=pua3*=NlOd!1P$(\,M'%5j3_u;m[[uNBVb`79%Ma<NT8n5%;,s1HOmamNVN6!3$Wj'0bEN`NGHoZ)qerFr\gjc'L/'64RATjB^U[N!ep=<HmebV8W)q)\!m]J.Vmi8OMkJM_f,ql_o%!Snul/)m;jPM;*sgq:a4<hK+EcPE-BcX2c^q=/1\@ldIN.E]X90`;sMNpdM0hAtuhjQ_2/?=).)4,9Z?jk&BcF3ZfEfJ@`@rL.#<%8]C?m"jq,YN3(n>q&f<r:-)as3Dt'Q4?6_a?.<5/*KB?F&"8L.L&5q0M&/DUW1Iih%57=rS%E4F:-ZQn>#FmekCP^7eb5<o7sdT1%p:R0,S-6!U^3k8kf=^]iD0YO8\:-7OQ=hmf6<<]&!Gab=R^Jo'IO76:IXuPO!JhI,X*O`_pTCF3e!'Y"VfNl!0bP]JD#<%d;-N?Z%F+4)W4bCl7THcYM40)^#.U4N:!MEZYnK6"/`8P[s4aBKB^K7jCeYb+ug$.5Ue+7p3=`eNmrH5W7US9\nr5h'L)`0$Ql.$_$$?`lo%cGUb%g=1I*D:78&7_d=\qp]Yc]J+t?%kH&qAs;B8j*#!13LZSr$;pe&HrUpQj?7e/bF=DR=jjtgGA\_+'5T>nEY[W4i4Cop+l;Nd%4T2AWL7%7qf4]XRL@qqjk<E56`re;C7MtCca0csA**Vf?n]AsM06>VdX7N1AMq7<;-t*oI%2KbS7i0Mg43OIqeR:Me49Vqb@_o,=%HKX1_!r._pEb>3AET!r_b^8if7O'Q9]iGB=')/V4j&L7,)rpeTXWN>D;`_T_H_%W!grb7=ql]`]Oj'A)ZOuZ=R!(B:]\(oq5^DJT%m(ic2gV96%(Rj:`Cm)eUP^0R6Q"tc)Q1p9WXbVg&^osU#nibeS0mn,9>&KX=[9T(lgO?oGg1r>%IIQLDG-@2nM"$JZlULH)%Ed\Z%dAJ6gNhe6]UaPbP(-Wp/H+h_@\%HGr>*l5!hchk3,>E).qJb5g`6Uq`/:EkRo.Nc*C?k3>BVi'5i/G[gZ]K,$l&RXo,,(3m[6'T+%ntHa=S0-of!\<&%Dd"g8f,Jrb7i.`T[-AYoW\<I+U^P)a1kds]6RBA*DsoTRCWFBS],,gL2tO63TU4nn3+.s&kIi3lA9G5aqfn+_%jnM\;h[2/PUO@-+^ClmUGMs+%.J=s,eF-@he&+QEmd6?bEV-@+U3?,'n1God]5+Hcr3,cpY?(+hMoF/aa<,3+*]2GK^:Yc$1O?Ck%l,Q$BUuah3P0H-NYO(nupCg0/ojM^EnDS9`eOuOera,8Fd]/+RUqqQ^WGlE*Pa$Iij3c%r]@K$F5O'l/0BoQ;?)<u><DpS+C^/Pk%'^^=\2akISBPlk3pW`X*7U9cjqcZ#*!J5Xp_;^YNj,i>LYO]DV*.0cCBc=2:5Y9)'p$bVLA>1]U[7>EE!HH8^Z$^fKhHPI-p#)S?%mE<HTp*q&b5D7>YNEiQGpSt.aLYj&Cg'=6^e2STA^F1ri4*QFgfg?oo]3f>=7m#8_kMmY>#F/BZX./qZ_o"EBSc#bmC%_#:=4Kq@%Gl:54fWSl_8,BpqpnE5i=FC)0JYugS%T=d@kN)ejN!U/d]?0<kpPlTEmb.JET9hK\aWtslYI*-s^=S\ihre)f;CbnJNr.@MAa@kS%XKrst,ft>4U\Fb&>X,l'HNtL'VDE/J1[j*GPr2H?p\Q;<43Pk)GiK?Nq;7\=:Fi%<jZK/hGuJ:8O"5SMd3Iqo\a3doJ:QO=]<Kt9%85eq2A@Yl\*?B8^QCJdb>#,jI)=5p]hDt-R_!nFsdO-e>eViS,E;fU6$:o-.O?2Yi.$HD=I@Sgbc;$Y?FI,'bm[^37?d:J)S)<Wk%k?h6Lb4b"b^GX`k*eYf78&of'rioeO>$a5S4[5fg^[e8qOkB!CZ;&$bra+9)>PgMlh<TtR\H17#rPmGfFTPe<Yhna8J#IiWro0cF%HcWUrerl),p%A%V]Gh7C\bZ*MLHTX^fKI-*I]msarqthJ5=-B-At,6X&"[^0037Ms3RRMBIoFtfIpVh0GIF,sGA<0QH$(c0$mDm1%q67p_;IfW4r<ZrJ0>T%RHt_*OTC.n??i*\`ScA9J^Ai\TVAnMApFYBrJ4nW=AOGJ,mRMIeGJ.]d:u^QY5cU59F..%+FagCV'k\n4%^$0OfVS_)X,bBG:!<&S\a=!n;#ClA9/KFT!lHJ=jU76f7TRAR8S9;..YIa\MC\KUAqQbX>k<rS(>C8Q88SqO`j$*ace*7B47W*Xm%H1kQ<bUg6H4ia7<I!@emgWc:7]U$pjLTNeEVK6]n=\q.0]8lK3Q%QpA[lXmZX2=3o]C9n0HAeC>qaPm>kVdO`%Jkj-Ec(c:kgqu_%])Aqs-3gS`B6#a;]4.@SXqXXGT[<D*f6&GbIVsg#fn#@B=lj@X^;VB<f1D.;@A;0k%Lu\&NRj^BGLe=TPlUe?I4XumpY3B>B``!3%leoQp5+^oUR:d"Yl4/GN1P3;uiT@CO+ge^#ns#0)*qS`>?e9#6TA^7+ql3Nn*%UKg"#fbCf6]@A3;Z5[n11EKY9!0$`;pkuoZ'$)%"\[hD3[)NdpLmm=UBFX=#'D6cL>B2\f'r<[mR5]M9L-Gm\1<?"-RSiHDXkY@p$8(54.Tl'kpJ#RWY'0PI%-L@4[%>AUS,gdak-88%8"nNn*4U2]m-R]#^:s;3c:#FIkpb>UR"!TlY#)o3Ll[)K*J+%"'@NpMI)OA+Uf4W*s,4gc\3"G)r8XU%0905N@skD-&ONaQ@SS\O%.>k5>hIR1i]:5d)Hop>6l0!k\9iV#Qi1bHkR]T,XTS#8%2UDc0o=3?<(V>)J<m1m1j!$@MQLE:IMW4a&Bm5G?^'1?5m'X@UT=@1e%Fad)u/-]a/d69j7fDB\SR%MnTm7M.^]F4#pi$dncG>u6=TAj%]o$qW1A!-JhH[\&2D3C?;h`5r5mJLsFAgbmUSZn]QkDfB?leD9T%f:SCPUYHm!qM2332$Xn&cFkAqJ32G/PCB!8UMh4;c4(#m-Sk-rGD7k1$nf-%N@L&SP6JLNd"9iNEG+b$ip<>qlLs#DkSkE_p76>u%endj50*D<Rm/;3Y^!>RS+rTJtHT)pUST9\`Ejq7g4E+`MXue"S)c&+7o*s(W[FVln/(Sio)o\mX6lbi&C5"=[PImsS4.E%t\tgc*%P6]9[i@Z&f7;k"8dk?]5eE>jSR4iVgQ<fb[]lCYCoWKT^^2A9Qh(!/[bM'mH`D&+.I730QePNublkHD/Z"$;AcB!m".W7>/i&1[7%jmFO@`4[/8FNO+L.J+LS]RKH3E>;&gSCK-j)]I(e%G]J1aXNh#\J)M0Agj.:LQJjthIK,gSSOea8F?WBp&4S:Zf^qkD`L/QB=fn7%`A_ARl.d4[d'kR)Ik#Xr,tq=LRH=\ho7')k]UolaIo7Z<MIgYep>@.&8*/s3>(9/!r+R%[?(]Ya-In_&ru6(:<8Qr[GZpTn-F`iN%gtG%i2\Mp9gq0*hn:!iNH9Xb.n#&Rjq^M)]5;VD98rg+"3h[X5OtM5f\l),&rRpJn.*17>(V<u8JDb/I/`3\b.U)jboV%nTj3;)'%Pi7i^+$70mi/\gkUWYUP+d^M:g"&mgiT91])AOWqr#,Ck:RSb_HD:!o\V])50=jUK2E[b4#C=)Zf=,?Hr=`429oAU<e5LYX\I0,&%qklm<5!ALTNM6d@\kK3g:n6rkCN*9YEk&Fp^F/KM`ht%WIi^@t_!1gSmQ0ba.4Q>SFbgR]j4i*C%LVft(SCT8d4atm\`9[DFgE'u%`@B#r!B8N9rIS+P'JB/bDEYbjmH.8F<]V^bji#b?(XJ0S7:AG1-B<_G3aE6/.&LY'%ocemac0;o/dCFi$VXI"'dtBtUQBMLOfsCH%m$C(.^9l>M3)0mR@m_Q,?]GiN81"2><[L:.&gkS"Q%M%%BL^&teNTFXUBlo8>3$I9:ihLa9baRf5no]\.7[e\X5_VOC:GYI?2Iqk%Tm<%$0p>qsMZXkrYs^rOU;YOO\XEh!:fo9JZ54GHmSl-MYKFjX!kD:D'[W4q)@Ts$"-jCb<f';l'bQ3j?9KeYao1N]-h`9#n!Y<%%/8VbN)u^#;3+&_f]8Kbbn?LR8.[(&:@/JkgG:EE<f(9(QnQ#=IeC20!]ifR+S)X?4n\]]_cpnm/-hXH7UccUQ)inGR'bWaX.q1tH%%SQlb1I4?ED1FbO&"d$/emP%U8t^A*30&fKPq`TCd%A%/^lVk:WN/tW)cK't_?7eQCf;!7R[!piWO(C!M'APB.ZQ3-&doG#//Ht"%_*`*&`KCr1?A,R0jk*?oTRcgbaClsdR?_elGkAH6Q7&)tgWdpr/(>),.nWd&jRc6U>%s01g_o0+`j@;hf@QGCb+R@.?E_>:7OFRX%L),DR]'QJb-brN6*^iA&PD4VU0r1#+8KuJn9bR;bka';fGu0T9brOc+A6fjoXR8W7nS=:PK`\7odVM`H(mFro3DiB3o9:3=cTEGR%m?1#I?0M+2rT-Gd8WiZlE<%`$MA<Va-%68^WZiP]%XNe7:dRidJm'n&n``&jFeJ9k6_TZ8Ap)"D+:05D-sb3]!'S]YdGd!B=?4[T%Lu_?p.!q'_4cn<onJSWpUkJZ%)DA'h&c%PAHXLom$?_l#g8<h_!GV3>nXH/(L5Mq8p5(]4.4<VFVRfP*pi'7^OlSrB5P/WVLAD\^%7a3>q+qc=FdV)6=R(sF#@^Z.bD,tT2-;i!KR*e0UhMI<erZa!YMf/RP(&0>^IDZJ#YHol/>m_u$%7/E!';YLnoZ/p8JOH[YP<7\Q%c4Cn7hrpIb3(kSqJ64`0XGVkOL\)I)N^S7Y(6ATm8h#TD)h@+i%uT'P&a=N-=cnXZgP%I1,*md"OIRSp1Efa;;jV0tBbH;68!OF/%FFnPm!tQeM*"c%U)1:\4(UDsn%._u0"W8gbg4oS4[ISa-Q#)0;hrn)PLD-<$CO5K_K\QiT,7`DPW7_-^]+nDrmamtdW#R-P4J/0K%,&'G[K,ldY`./$rY,EO%Bp]!-%T5I$poZ<A_C"&2`6F3LWY[:mb?uCofHC(8l?OS-X&*aunn$f+bWfn)-2BSY0eHPu1^=>EOug]K%`R&hqjhUEj@ME2\+CX@+B_%H&:J,<+9]5&$M'o%V?'0uE6%Gm`N>*E`Sn%?R+G+-DjI&+9Ln$te,pa2PZ9"ip;N;a)5NYQ+]U[LN%>,ub"9SlP^pbZHPJcMN>9TC#o<X<8ep`UtWWqdMSo*)C"?jpd+:8A\*/"'ED50[hmO[aoQgeZR7H8ZAg@]0dh!\WGY6%kB"!*2<5%lUZa)]_'8Q(#%/n<O=-f(K8d=TJq.[$$(^I3rB,L(d&$[,e!Tadr;,)SAld8k$)+(_]tSH7-tV(r^M??a?!YFi36Qabc3N\YTPkD%$UZ7"!jtTa8+'6nA]0l$JpWMoHt^[\;R4WR+[lU\LV&2"Gu^.NZKYu`6]/2j-=R/k[KRnrPKtC,9Y6BZ_2$Hi5sjQ[0O;KR7Vo-)%%BusWo8)/]OP)J[@d]NgaRBd?;D]@0Vhf;E+%DA!GpTZr5.MgCYpOb%JHqGpW<FLZOpM%!af*We0prJ<Se"sBi\X#.-=0`-r$J$e%0fbut^1[Yf[NtP,<[EK"D*Ya_WF1R7/fKC5K*[8Ke.(DanqMV-am*`4V"QpD%7GAlcmnY#/pSR9R5RBA=Q,3i#]c$u^]PIc$"/?.%N?!%+:4K!\#&\rENCgqsHB&lrE52NW:Ifkk4A_;/&G[b1JS7=GH0@S!0I4OoS3,$Ca4)5Lm9u*_"C5>cQ&?7-^u1?:J-./-Hmpbr%X@g!VR\:kVqA8XO'hKRI&1VkZ!_"+&TD9:)[JjOl>[0q1?ZIfIX5l(\+q\cD`;ni1)<L$hJmV0EVV"\f_%stKE"Fg9iti>!D>>/F%3f%?n8@)2lCJK0u:@ST"!n_,J0FK+s9SP_22M(kQ0T51AAu5EBCnXJ+:PW)gX&::^/1CLVaJ29\$_dYq9b+M&Z6m\%(8Q)i^eZZm%htkM6AjMRh%X4:o#7VM]R"ZpQ3epkR%juQ\`@RZSiul5jW2.IqKYo?S<aeQ?Ac[*'?r03E$[O]p,C(_M6&jt[$cTBa`@Rm"oW+@u%PXJ<""s!G+)bB$3!Cuhr,%(nY0G,kLMMctA&;^0=MNqkdLn_*bV!j6TlU.Q8V]2_oY!J^a&R9l[#fYmb>t_!2;6g88j\e'u`\V5J%`S#JG8^4b9]N1Cj+_HO>@`6p/d/@I*&qYq81l_0bUH,o*=9(oT*3q,UL+Y8/$ael(d?rn`)[^WL=o1%,=em)BUAS7IT8pe.qU=K;%IAj;^e-Z,)\rFKYU`ohJ?Yr4d%oc6(W.G&$AVX)3+[Y,eSW2j`,l8;a$B3jeJk:Kq.4uirE:G3FQ-LT!GD.lm`h[h`S%=t%cOcBn%Wf7"J+O7B70/XSnYt=!8#[qH^jW\?sBAlo.>:Wj<EhTtE-l8EN[`U-km!EL,REa_ZM0oXLfr7FRNotK0jKkX9"BR=?,0LLU\N)>g%89;"SI*<7NA+IH>FP*$1b/NNDT-Hqd\<U_PlPCPkdSm*-I+/PX5u:il9T:;_]3X23Ki2t-=d*MhE4T?A:%Mp-[Cb(]SiLi:U3B5W%+[Rd!pS9/"R6rUFrt16_C1P\_\1$l8IDF_H"@G^N6_P<fkSnoPCkT;Pa?YR8,slFl8GTm-,U<@R@MfE\cePjb`d("?[($LpU$Y-n%@^[sV]T)h#Ii%@$YEW(%,Rir>fZ7N5R\0Y>l(Vlc0oN`)[WBbQ*m^b"cerGO`=UEm0F:Ah`7iZh/0O8/.SaCS2ei^M9G4&t(IdME%"'o5ETQ#OR\Is`p(i[QS<H"u,OB".ma3$,Ji96]ZPj`,0K*24r?o"K"_XiFs:1u%<O$O#>'ljJ,^<PrFgSAGOp>n8^ddpie5IL+@%\.Fi.0uOQ.3>B,e%5seeC/WM"`PK<?^1-UW`C:H(!qJ^iJ95X*`0[kS\Y6\,cQ3=p%M`JEDnnmU8Ua2Z$*P9Qkc`$BDq#bo2MN!a%.KqgJ*jJEYBHt'TN4f#"";%p6V:ZmO2$>,(:7p9p6jq&GPQ\&eJ>550%8M^99Ib(d+s0N)0L\0LRcOOq&1e`!8BqX1!5_FIAq6(;%OF.lf=JX8QU4;1WAPJ=MY(8!u'9G%G_U*@^+.,4t/a6sR4TgQXK[?(f?`'Jsa?Sc6kBE@f=D/a3&1e_BPku=rHpeT"--"@9ofTZ+%*$AE\j1Wbm.[/E#nlcIjSEPe`;aI]<!f:BX#`U8[nHlV/+C>bF#pBdg8;3ZnLE'1,J/^/lKFIB+Dij&V$'n/J_@WY;7Y1N>PFU)b%[kWgEE0!Wm$EQesq[CU:1U$_-l,(M><Pt!:e05Y1i@24.2?Su,^^Q%EWE0N"0RNR#J3r`7od6sCM(.1nd2XMO7_M0'JjFRC<YAKY%i&):DEjVF*NS:6)fsla>X*D[>Vd_=_nHH?5OJKa.lPZ(aVEiUdJ*S0&.`FA9-'FMg\$M$deHC$,(CAlNg.r):H1E(@B,El!A!]Np%:>T/>+rl;u,E`4\^I0,M_N=t),6=Nhkmr^M$pO47s$hGg%q'HJ(r;M:$<q`!Ll.6/4SZ&Jl4?GVZ3O4<Z4GWNAIY+r0hr0I5r>W?%H*L!D5oAU"@(RK8$Y!j14,A(=_>pTm,bTmXOBrhW&J:7^Z()#7<+1_j3NjH:UaKWaTQ]#'`(H5E/4b0MM$2<NDD"9bK`Nb@7:Ag<%BsQ=tbuE1]7Q`3d$2ek=[nD8jJVXD__C>uH'<<qAM@t8.Lm?+'0N$hK9jJ$@Un;='BSU10!]6GjT&^=lU'paa`/k1kJ=\0?S@kmQ%nYH@A^;OjU=L[gp;.;WO,f2^NN+hc/ZQ(\3L9u$GhIs^I!_`'Z\Ce%TCdu-*$N*j4,4dQ'U2g#3F21O.,r8B;?uQYh`u1odn8)Rj%XlNom!%"@q6';LY,jW^K!NAWXI-q`Q;#@eCjJN+/PYRcm&qdH>DCu+(Q2sZ*)ssR=*[<48,YLd2!YkDhAr)9[X2l"_@g9ptQn$$3%A@/-4X)/%8bqR0e=BI44(p_LTqB%6.d$"af@08rqd'o*h7*Tk\gbMYmg;k^=W,]lm]R6;DXH0S[d1$#YgkMLVFVou#AH+D*pCq1R%QY;Y=23tC2b3#??:lcaZ%k<+?$J;tGLgg7;qM`P'EsE@dfHSCS!XJjlJ:`K]ZP!9i&P.kV(RQ"Y&23kKIK\eBDb@@Jf`ja+,Y\8=%',H6t#I6o&aofqM@Pn09LB0LDi^:eU'!;Gt@#j"F"d[0`!lM6!DWXrd7*R^I,R4O!8X`3GqntY!7cRI+o!7>0R[m?n5Za.K8[GbF%lR%bE9"`*co4*0'J]b=^*"\T+<e-Or;+&,;,%<1JgPsjN8?aF./dY`<oI41'6jYgm1.u:e=ps`3)Y%f8R6i>G<l&O(-]=m)P7IXk%ao%;A+sa%_6eFL`"3RE'M*,+q@_%`=dfT+3/dfD35b;+7HD293%b@1ei)GNrN1Doa7L\[AI6Xf]"4=jLfZ1;E#5oMgik$qL9R<7L%&XEm=Nu=mNDGUr1Mm[.3#-5V0hAIqQX:"3YLpoau>X6t>Md".P)pU+PFoq4:+=gPOL*">*'YiE7,LXX^qIL10"7-`J.8Z@=1'Cg?%*@ou<Mlh.&LHMZ&Os3]['*c+c=V6)@2,K71K@%DBUtU[0j=(>UN,g4Bar5^C.A7U7O*t?NrV7e@[qua>lo\T^$9^&Q?%a&'YlM/j%#SD2hbm.%!]YFZ.q_gbtLsEBM7>R2fLF,P:6p*OWaXe:PT'S!tUcLjb6'R?@,L<O-fGH>pR?>0A2F[hZCgC##&L1b],fkR*o\VT!%/kCr2H'RKAEJTc78;q4e#i)a/&R3Sgo$\]nc\hJU99=rB@4js,'%p4E6H"[*.7&kM7&1lW#gmZ9,,0O>4)'KfKcH#$co_I][Lltt%68iXZaFckdSOS<1i1`J.!H8ib'9J1\J]U;rc<O=>KHrpVUer:+blF@.">TSR7Ti\-.>_&1<63CWG#9CiYUA[e6AC8j+:SZ&]2[oZ%4u^b<.)a8[@1A^g8;P=7TTGkb.*2XH=I10?O9UES]4)MN5p7R>%$FjlLijaRRPZGRBD*Y<7+h0n/1RG0nu)CB.\ns)Q&EGUB;9Wa%IVp#<@f;80RfZe*Ws0OYZ8bOuKTUjKgR(eY+tW(7kWj3Amf$ZpQkLV.j+;]QX^+OEDL!-8@Lk;]0XItp$g&MZ<5LtN<cK#o7^*j^%(D]o6;*`.BKnU+D5&;=G@3MM`cUW[d.(b:?<!`$1$CWG*Gu:kN`qrUJ'FWE,)ASFpnY:J.BO]Y<C4ej%1hfX>lrXk@U-_JW@1PFF%<.>NjR8_lUYWgVkZD`j_>R$2q+eX?a;kd$Lh*m$cOEd1lo.G<T!jE5%Oc'R_T%N[s7>4j\F+VGFFP(b)BimpUekcNQ=9u\X-JaB0%GkP8bMC4#hRZRRd(:'6;O@^EG9FqI(Y*W07ZETE=O9E*Z&XqLZP9=9We:m(d>ZaNR%'YfJKnZ=B,-4VpW/r&&k^k?8N"l;[7YUbV%_DE`1#n/3QVqBo^nK]T[:2mT+kD#+k%STe^F_Og2TnLF].F>KTmHgQ6["9?2;5&hXS"trL%GWc"];X)pine9E+n6X9N@l]>!(1L;%d7k()L^Bif*p*RY3=Q=0^)6.X"bi(MBc@aq)ZUSe$OX-L(2H9?:^Ac[%d8L2n5Y:k<_r7-)AGrEUaL%2=gOb4,kSC0&/=c21aIa%%$#46#6;TMS+U&esJlNor/g>BnP!t$9YUr&<+V>kKBOnCS0[nu0_hN@/?m^-ZAOU<(#UP1IOXqi4;##u+8PBCU"A?@oOJbUJ>YKt8%1;cWY,UVT[G!:C2aa[Ge31]X7M$[=AL/BQOSC4]A3gc2>M/lH:V'sSJJ1)_-U]DY=l*4HOHlN>7hW,kh)?o9iKEQkq=Kt3[Jj<gu%Fp*B#'Tm#Ea3l@I5-6e%<d-%H4moXp_p>t9-X\I*Kpb:Z63N7$#0=Vb1Cs`lKUJgJdM)uio;XG*.eiu_CVh>/?-.>IkXtR:-Bor;%+F6%R$Z-kqg6eG=&<<!5!ne;u(R2RA,EA!2-F$V*=qtr!Kn3)P<lB]CoUK;b>8@FK*rrWb_a'#JjJPl51l'it#*O1*6RSK4gUh`b%&Tibs0ssmb_o.ZS[aZg\<fg.Hrt71+`]e`+&\=osM23Gi#*LW,1r<.*.AdCuJ&DIG8s[P-qM;50%TJ+l%4d,she)Q4D.4.ioFIos%cU`E6211mNho4[d9-lur^,RRSj8,j-\g_sepkqFDKWQ;/%jqq3O<pR5][I-*U,77i&kk@a5AVdcG.J<)52m;e%d$A?H3U6(H*^\*%UJ"GY$EM=S*7Q0&2rsWuSVZg3>(&pff!<C>MPME5]BZWU9e@&6!c",^o(0l791/Pk%Oa[tH#_6&j3a5<NV+;U8OP<I)*U4dhSV`[%O,-O;DirVb&E,i98p#1lr[TlVrT,Dk93>XkW(5=/(b]=[K_^rL@u_3]E/KR*]Du82`*2n"8W!Q3Ylb!P+HRj9IPO9!L(?$;@Yt4b%_jddhrT)=;-AgmgJYZV/Di*TL1Z\3GLX?+0M=3>F9i@Ja/:aA2"!lU,:`A0jZ>mFXR7VlEpS,U9CVX+%OPMgk&A)H]mq.I:R.kI]%!%[$^DTuc&K.R>\'dp.3oM>gAN'gFCc*1Udc7?8`i]SBTdp0o^-K#M`b",?Z:.eX\!Q41nG)9YA@NB3O09;TR!D_^G<"'k[`:t9i%>LP9<Qr&#EQr%sGC7+$@;Bb0^@W*@B)LKAX\J]>'1S8eWGT7PLU3Z^%-JjOS/n%6Qn2'DeJVS3$DL_U>Aldq8h]cJ1k^Mm2pM`H$%@I4Wh84e$@l+e>cP"7dU*#ZB_25"(pT02g['I5c=3,660:*7OeeUh;T5M]rEenp^tM[qgX53!7T*+PRcN#B8FH,PZ1E=(um/n#Ee%`[OEM)&@1*`5%&Gp*@Y-+tr(AWUM9MfFI6eXMQDh&)KPY9rC9L`"t<[GdRC=a?m!kgATFd6CL6T)&=p2pB=d'%5;KaAg*r=L1WI.%P=kr3/qa_C"Up%cBAPN1,9FQUZG5Dgo(=Vj@cthD*:uKG/)br1YqPus8K7T@4c[;Pn1rLe8%`[uct71ufF..Z2Md_Y3!Fo;IG';T%HJ9Ee6LA&e3b:ZVPR/Wb;PKnjh^ndIKf0%*I(PUgeNci%P/l.(p`E"K!NSMY-.nJ#Vp@5&]84e#\0QdO0/WE`%od$.`L!?g-K2YM%5(!Np?#G[&\KfW"+;/TrnRa`r/c`O8O,;3BaOhOTA)(Gp?rne&VNsP"5&firA4VgoL#gB&OL>IqJ"3*be.#$#$t.t4+QG\]S5Bi,%>8u+0q#"&]S\P_)UZ?Y"eclgf!u:N?_9s1c%*+usoU\`,FdL^+6<T$e<P[E""jD\R%P;3l_hLsEYCg;7`A1S%M6V.:!4dukbJTN\%D2A7$X?AmTRnpUoCYn39!.*Q4dm!6jdK)8X@m`,*ru,mS+hpasJhp_;69L+<]6p8/5M&1^fC8KadH.YF"2^0d6Gs1o'WbRelJKYX%K0Ke0qVVB`(AAds=fLQ4oe]GF%[lUDEDt+Y*X%in-&O)['$,iaH.RdHr2,jlE(LC5q?/UWA`^LXAK)_G,X_nd.#(7.E#?YN)Y^1A%6TlA4S&!dWQ']UQ5U)%/:(-G=*:Y(N'I&C$%D1o($MML6jLB+hC2E3;6#i%p^V%tjC.D$/pODD5$&W+R'a$K$X5V^MbhJ_V49fR8%mQMPpf+>"p)k_U*a5/G8$q$PI,>Tj]''pU(p%2U)Z[1pq;(&-W:jA0sl@01;madll-Z!B$#P@hh3^*V<GZ,DdooS:SKFo=(Vt"1A%Q?9"MX$.\IL@>qCT79>cdk7F&p4>>X_qS^J66h8*I-X]uGoJr7LeT/"@L6Qu$_'oo9XcLp2QQk'J^h\`G@:Uc81a0X$(X%T_ZbLJ%pEQVh(+I):i$\hP4&dn6Wd-[u[`e$%'$7^8aoI1+9`F?%1=&_VeNunU(n`.dNe+mG6&$Gtln\)RVQoh]]<a2`2&8\9%+<@]b1fm!%]t.+8$i)`l3r_*ikGI=<_^-slJeU"(/$R?TK*Nj.MD\g\!dBV@[EW-d3*1lVSIWERKagMSd,D'.kQl:#"&/OcO%qH('o2IhcCqCg%1;o+Ba=Qf+1F>J-Z#%4KLr4G7a7GYQ^G$P#OKP5V^_H/g$:"*h:__inMWCd/bniM$`#GqLs"$XNWql[P!9l/OJ,t*I9jodXaa17_%+i#FJ+US//JBqRsnN>SNQ3"6MaoTDBK55ro#tMt>HR4Fk:Ch8R;AtAp*!SL'oaH*Z#%BAR<cd%0k)i](lk=@)FA4QTr[o7;#tssD%%$?0PEBsdZ('hlh"]P^e3#8MAckC@L@T70i9&WnC'_ldGK4AoWMcE1UNl<%E531f*=l/54Ee%uCRn-6pOMt+r$8Xd[J.QOA$HODX%&Cm3NZESq4r&[.Z8#*'F%$@q-5Rrsr[a>CPemPtVN\X.KRWa2./IfK`iR*1((#Rg2H(fK!1#G$FPK!6u-:)(^bQ-\?%L0haZe)'J%(,HOL#Kqq58eNM(I0N,iZG#P*gZ*-Y9(5p^g.N@:ePD,(JlkW0b9[I*aNpPu+[r[Z80A^#:/ONK<Sp,lJkU'd#@o"bVM./7].1t]%B#q]YAqgZR&lLX5UlA(k80SQNXq`jjV-'KYBHH?p8.:tH"C&Ysl[C6`Md.1[Iss]$2.fn\*?5iOe@[(a(0SJAHYr57p`#^U^\3Nh%9Xp];b"6SDn;G^DA;9>C&ha@;hD#6_ELc!*S0/6`\/_)Mhoc%E4B2uT/.:k8b'?6,[_r)hRfSaC"qU:Q7m]8g+c%FLig%D(29mcT%KuuYOC^#@c9_2ZLENF;;AE'Bop@.2Fd&A9s5rB97V7:5"N.W7A8AMo2.JV'Y9I=Uq^u_nXR\I<`A5Xl)qsi)cCs5GTmQ`gD$bZ$+%D!2a$bcj(*L6/U6kG'04KLBFtj?PpT,oDBS"^)RnV"bpKaOgVJC.Y,<P3-o]0L['<W@H=64Ge_NM=V!"=@"+iG9A7GZl`p/BM%aE%0I@$h$J#88bX/9T(#bIQ35o(Kh'aDBj5=%2HB3L@$sj&qLu!3P,eP<XRaPr>T!c`erYmjd\0`[Kl#SgqRc&]gn-/%BJ4^<Y@H0,9%&nM+Oi_l_<Gnn_e_^]5<E'beg7PMrH+(X:8fDqE>/ND`2;fF!T?uQ7="n:0<,Q+XV4?UJdVch:GQKY>,E^,7_:m_m26C(Oaq5Z-'%\-*_9"T.d2p1K_5JZ9)o.+^fh31IfT22H8?8T%A;<0Z/UO@,/g6"n,sn"ffF7]X"9eC\nj-ue;0SK=k2q4=d2E#hnH'&nAZ'X'$L%jeg*]7I9e0_uY2mg#WkMZcc5tBSZ#2MT5$[4'3*B*@YgFgup%%DMJA[<TJ\Bs#od\F>uYVA7]*Q.=B1QV?F$-n=ApDE9J;RXsc1G%G_aoOf12[ih=O\%#.g;\XuHMeZfB<HFg:N)p<(L9Ud_L*gC*W"g+B>+?<sBR_I]\6iju0^aN3;DRN+F7gWK`='+D,-gU@d^q/"*U%=O1("7=:W#SaGQj;Sb5^n=:;S.qqfQ_rKO[_Y+G+M\rGrQNA+/s3s#GNX`%O?(LY5laQ"upWR`99c0]U\FhE\\IC_@Kp?iV<S3+^%!0(OE_c\Z'kBpO4VJr.Bp2T%2U>3%%g\?32:L$0I0ZG[eA?j7O-mj,X&RQ-5,>rB1AF=,ulSEo^HPcc\Y0gqj:4$GCYd-r])gi*4%/2VB+([fH;q.Mm.jl/qeEV5sdis^<\$4_/HEr(qJM\7!:e*%Nc7U0QE2Z[oV5'L3WIeo!o09R:BCeB;I`PEGcY^A_fq3jJe%G+%l%OpU"Y&88V;OhDCanY(5`VsheDcc1W)8-=j./YK?OeC]M@dUASB[7dm=rFI$RY'\"=33IkLF>>Omq$J;TQVr!<fE^VhbVP#DIf.Bu%H">.AnG-4<]uh`q;_TcZFli_bA6.3KH.AK"dVp(CTnXp3LZ3(dq"b9Y"5FdX!OST"'PC-b\XR&1NC@TdHXcL`Pqo@K]K"n,HF!Fs%kB$E#\J*eZlOK:>&jG6u!)=0G*lmeuKd#Gb4uZ,,5D^#SjOd1P>&K>#@:^N8(9YWn0f$Q%3_Ih_:X^Z(E[0[=O1>hF<cKPBi'#8M%JR"b#]7`?(.*#),KT0Jj-lWr++UD2GgcL;gkN#ek6rMAK?GQ;\`c@gpFuZ-%i_+H7^^$RgIcX;nAX&dT_3"g7V($d2:Vr`]&]^@/%Zf/MD@5e9P7Y9B[!@o@+K=q?Q(is?bC1El[&.$:/>7[r]"u)DTp[HiNgua@Yk`-/%PiCFO**!*]EQ1bN9*suX!Nu=k=m<m;4t.Nr%7]<EWXrsm9f<BX=PuC;opAWNsG="be/j<iV'VCX?iA7GqSCrHOk0'41d+?oJS8(G3+X]/9Z*7Zk7``3^["oX_/EYEjE>Zjke'Qm=%YQ++f!Y::;0]Z0L+tO%DK12GQ&BIl_iW2bOTp=ERJXOM0_f"tmjJcE/=F)9J-#T6Y+jM*ChkV\h'g=.'<E7+T+T9?0/i`e\A$M&)%A9)c;18$>0ms9!W)`tjNF)m0h2R_TVV[DN"GJl*L>7#4?4'F71>SB"aEFd+;lij,>Bm*VZJsa5.7_F+T8eTUSjGIrsB0r[#Ru!-s%Ba,m1"SlGGk)-i5@.HUD%+Bm0>pA+^-hN&*#W9hUbj9JlH5*iEiPZ<JHs@f^M7R;Kgh1@,,1RT4<kB%t+5>]]LU'qdq(*)[Y[t5Y%YnU>J*QsHL\Rkqf'!iqES(&$G7=>)fcd;4TG-N,DPA%ZK5iI5?hc.Cq-!2Abpp+Wu#u3&1Mb/K+!K:%rP#YS:PB#)OltPm=B6]0i%KZ!n@4oqi#@Z?L/V;ZeCMh:([Ho;2qEo@]i?dY`jN7u?jC3KR6nj$Vo#tf+&D&9K'ch`^,a2!EBZ#-^E$1?H*m.o/>m+R6S@<%:[%;`/Tm/7_up?CW@jo%>V4T)aIK!K(g?$Q7XFkRh0!Vg2e<oX*M+j:atH_V0,=LbS\"pd"a'-m("5[;9D/Lp.K^6qJNbP7H\T;<@>e%Rk[*nM.-[]*():=;Jqk;\VoEE_3,lrY))t5JO/8AW5K63fjaW_/L%ho(l''2EN*V8_O(T[i(RppQp0u'A#G-lo\mfb8?P*V$%'X3%Y)VfYmPMa>piZm-'#%I^rhqQ?:f1dr52la'QA6+B#rJSFmBcQ(.U;KQ>?k'D."`UWR.EJemWbO)o;?(Q((%+B@_Q?Bn"\f6:?@4L%[cuS#2PTR6N&@Aanqf4bPYX5r\AoZAb'56iY%<77*Q9oY)u!I/(jO&J'\6oq([eiD",9)X\-#4<E5VUo;.eHjLmm;oaOWj9g]]Zf%$&`M2Y<\JHM/.Y]N<KliG[VY8f6dQV8]"UOFbIQ2KRF"Yem^m_GaP=X%sc(HL`H:ak_U6_+oi=i8"Y$VY==L`PUpP>-:qbu*-h3?%7N(TqSj1tCp"#*(ZNV&fm\>0JRY,JHTg9)T)f#K"=9[YA%b;^]QccNkp0>*ra#$*8_m?GRC_E&!n8VA@U[lIXWC/ol0*HZTfNH<R%Z.P(*6)1A]p8W(!1Nrb4Hc8$FWt0S0O\:g=eHa_ZKm4PCBoKY,fE]Ia8,pbY>7Tj>8rr*3*\^O$-??X+<afu&NGh$d"M8Qn`o8b3%!(I\?'-Gc&MK$5_a7%1bFQ:&&)VB4nc*>-aHp*\<q-4IjNfS?m%8ngC7F]H254_?Q+03@;&]3[XBeMZ6cep4RSlH>,Na)LU^E^4]%gN!&8[9:1[S!nQEnf_`&'U:nDW[E@k.?A98[&ORi07Ce,1#nZ9)nMMVGuH-bFu,_C-'X3=m]pepO6D5DL_NVTnJOFZ),c2R=Ffu3%dL"hWgi@urEUG]:P8GDM':%QKJ4#0F)-k+no'M$r+A)W%_o2/Q4FFn^MC;n/(LN&i5t^BV^Vc9Q8r+@`&Q">9L(#[t:LPR-_`1\Y%_Fb4t-a@S]Os=%FP'RU@P0T!SAt^Lr7>W+`8Jj0?A>J,r&n2ME3HPR\@jK+29-l@VA1?OQ?XhHh?^Ushi^@`6+:o36!X_"E9M,*I%WuT1`Ph6gBQ#%L0E=/'3=I=s8C%be0S;H3<3#Su4#0`00Z9=F*ej0eBjHG/uC1;iWn\PuU6G7pd`]:n0&[-AGSj.3fO<8dh["W,?%Q[==?iM+M%+1ALE(2oAN)5B^&!9F)c^-"="au9)$Tub'k@$VG_G6/Ye5r:BtM]i7F_Vn&V$c3U"iknZ_0?FdTM,3fMc]u@B]XeBa%7l_TN]fphk:Wg8S_AJ(/.Md?gS/LmN/'uu>bCCt"qc-W#4R'dR.i*@rI@AKOV8s=R*;C3P47!:G%C$J.;IQ"l%XlK>XGctlTOG]-%;*<%,5hQ#DJDubu#i[TBMUtheOLN-t<JFU#j7Qs&T^:*TkTr5#8sZM((:4Hd0hu?$.EIaYB8T&"$1M%L%lV(6SK^o^Q(``Q(5aSU%3AK^$-qJ]$O5r)6`Oa`drR;UBi[kV5Y>[CfokM3AaO+RfFs(NhknK7h'ato'-1UOab`fr?\:7U+c[euu#?mN(Q1F`gU*N+&n7a;j%1O2q,T4bsUM1AL&2h@WI3UQ*tb2MQ0]OjZ_[%@@t4I$N9duttS35iumSqEnZGW8IZQ95a0m%reS6;G?GL`W5?'V/\p"5#=Q`"]Ik%Qg'iR@^+A-&1S5,GYjjIgB8)M3K/jiPXP4#5=)8N*[CJ_3/4D7XlE:hLJu<BGrg^[+\<>GV,.n2*>N,;<*kbL<ol,u3gU'o"u"5'%\;GK*`B)6%<NO"&r;d=/Z!KB!daB=?13irh=j.3sX$b`B/YEi^9k(XgT'"Q3[^q^qpVEt(ZDB(n!EYco-0((;,XfAJ+PEUP!$A<U%jfkeKG*?@N.i)(lS;UGT%mZWqMdN`@dO%Qe/BgPEaQHR?M8K2\bp+*\`=(iYMGaun#p)il3tt?]fEG+^`o;u6Qp6@9PrRoditTSo%NR+\Y;^;aoa"!5e8A!tH_=436b@:@C`L,;N#^.^(<0@DR^>`uc=\t>0A3j(]jFSTBVhic_#c8+`RgY'0hra*7:mOjeRDL+MkQnBk%A4RJ)%X-sjJlsD$@cLCq*1D#,)?/gW/D74=_'N[O/F6?o955ZPHLioU/3(fiJQg.B,jT>cLLs7>=M8j0>0cmWj[4XMeSl:+P?6s'%4H$lt`?0^]J/5bt7dCc9@U9LGqAc<MgM@_P&lad]4kYk@_)-KMZ$^AT`O/Mq1TLVdGe@@E!aFYDbD/*'FpeJjO>p"//N.O]#uYSt%lX2T@Jm1cticj;rO,)9#7CQAlgWj#R93akC7Y5T9[ZBD^iaR[JnV(olj5Sm7+g2XgaMkEAcT%;b>iI7:E=V-j4E,ikcG^hDaPq`Q%969_iLNIN\6NT(NFToF=&Q],TMXq9q*Lq\&iGrBIE2BM(QO/7J,$gNRXkpWdI(g,/O.65nC"snta17k8pk*)tcK0*aA29[u-00$J%1s+`^:fmbeGIKOJ4"[\e):4*-OR:XKd`%0kRs6L6-"kp/4P%Js^e51(P!+u6ps*j1s/p)qfTM\t>oX3n#=L?"`HjZ-X.13a<T6f&%j/WJ<g4^REnBt7>CN>=3;P]4p,ibPbnn.u(r/n^U(>)2_/iW\/LaAR-O:V8[M0+k_+Y/P!JakI`n,OGps'2&D>ITI8iq,2]O;e@Q%*p^uJg8GeL.dQ&BUOTf$qQht/PmVSRgTBM]hQYPtFbYV1;=!sOZ.8<\@I'H4)k)T.BKR,TMPHBO+%W(L0"YqE?gmY?7cRp8EpZfm%`MIQeGh27\"i]NI\CgUYVu;)jkNIRG[=:l\ibNSb#/.ilrJ[2>N+R7QkF;?d-iPt\[F+/QhY0(GGC',.:=%0B[[MpM#GFGmp&~>%AI9_PrivateDataEnd