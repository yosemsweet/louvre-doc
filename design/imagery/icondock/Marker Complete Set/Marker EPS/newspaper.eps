%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (Nick La) ()%%Title: (newspaper.eps)%%CreationDate: 5/31/10 1:50 PM%%Canvassize: 16383%%BoundingBox: 484 1441 540 1503%%HiResBoundingBox: 484.5093 1441.4814 539.4902 1502.5195%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 512.5 1471.5 512.5 1471.5%AI3_TileBox: 206 1076 818 1868%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 64 64%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 1%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: 469 1516 8 813 750 26 0 0 43 129 0 0%AI5_OpenViewLayers: 7%%PageOrigin:-34 356%AI7_GridSettings: 32 32 32 32 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 116 128 8%%BeginData: 13860 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD5BFF7D7D27272027275252FD67FFA87D52F827F827F827F827F8%2727FD63FFA87D522727F8272727F8272727F82727A8FD5FFFA8A85252F8%27F827F827F827F827F827F8527DFD05FFA8FD58FFA8A852272027272720%2727272027272720527DFD08FFA8FD55FFA87D5227F827F827F827F827F8%27F827F85252A8FD06FFA87D7DA87DFD52FF7D7D2727F8272727F8272727%F8272727F8527DA8FD06FF847D27527DA8FFA8A8FD4DFFA87D522727F827%F827F827F827F827F827F85252A8A8FD04FFAF7D52F82752A8FD04FF7DA8%FD4AFFA87D52202727272027272720272727202727527DA8FD05FFA97D52%272727A8FD08FF7DFD46FFA8845227F827F827F827F827F827F827F827F8%5252A8FD05FFA85352F827207DA8FD09FFA87DFD43FFA87D5227F8272727%F8272727F8272727F82727527DA8FD05FFA853522727F8527DFD0DFF7DFD%40FF7D7D2727F827F827F827F827F827F827F827F85252A8FD05FFA85252%F827F85259A8FD0FFF7DA8FD3BFFA87D52FD042720272727202727272027%272720527DFD07FF7D522027272752A8FD12FF7DA8FD37FFA8A85228F827%F827F827F827F827F827F827F827F8527DA8FD05FFA87D52F827F827277D%A8FD14FFA87DFD34FFA87D5227F8272727F8272727F8272727F8FD042753%7DFD07FF7D52F8FD04277DA8FD17FFA87DFD31FF7D7D2727F827F827F827%F827F827F827F827F82721527DFD07FF7D52F827F827F8527DFD1BFF52FD%2EFF7D53FD04272027272720272727202727272027277D7DFD07FF7D7D27%272027274C53AFFD1DFF7DA8FD28FFA8A85352F827F827F827F827F827F8%27F827F827F827277D7DFD07FF7D7D2727F827F82752A8A8FD1FFF537DFD%25FFA8A85227F8272727F8272727F8272727F8272727F827287DA8FD07FF%A87D2727F8FD04277DA8FD22FF847DFD22FFA87D5227F827F827F827F827%F827F827F827F827F827277DA8FD07FFA87D2727F827F827F8527DFD25FF%7D52FD1FFFA87DFD0427202727272027272720272727202727275284A8FD%08FFA852272727202727527DFD29FF52FD1CFF7D522727F827F827F827F8%27F827F827F827F827F8275284A8FD08FFA85227F827F827F82752A8FD2B%FF52A8FD18FFA87DFD0427F8272727F8272727F8272727F827272752A8FD%09FFA87D522727F827272728A8FD2EFF52A8FD15FF7D7D2727F827F827F8%27F827F827F827F827F827F82752A8A8FD08FFA85252F827F827F827277D%A8FD30FF7D52FD12FF7D7D27272027272720272727202727272027272720%5259A8FD09FFA8535220272727202727527DFD33FF7D52FD0EFFA87D5227%27F827F827F827F827F827F827F827F827F82752A8A8FD07FFA8845227F8%27F827F827F82752A9FD35FFA827FD0BFFA87D522727F8272727F8272727%F8272727F8272727F82752A8FD08FFA87D5227F8272727F827272752A8FD%38FFA827A8FD07FFA85227F827F827F827F827F827F827F827F827F827F8%272E7DA8FD07FF7D7D2727F827F827F827F827277DA8FD27FF7D52F82752%FD0FFF277DFD07FFFD042720272727202727272027272720FD04277DA8FD%07FFA87DFD0427202727272027277DA8FD29FF53272027272752FD0EFF52%52FD06FF7D27F827F827F827F827F827F827F827F827277DA8FD07FFA87D%2727F827F827F827F827F8527DFD25FFA87DA8FFFFFF7D27F8272727F827%A8FD0DFF5252FD06FF272727F8272727F8272727F8FD04277DA8FD08FFA8%52272727F8272727F827272852A9FD26FF7D272752FFFFFF52F82753FF27%27277DFD0DFF7D27FD06FFF827F827F827F827F827F827F8527DFD09FF7D%52F827F827F827F827F82752A8A8FD28FF27F82752FFFFFF2727F8A8FF27%F82752FD0DFF7D27A8FD05FF52272720272727202727527DFD0AFFA85227%2727202727272027277DA8FD2BFF2727277DFFFFFF272027A8FFA87D7DFD%0EFFA827A8FD05FF5227F827F82727537DFD0BFFA852F827F827F827F827%27527DFD25FFA8522752FD05FF28F8277DFFFFFF2727F852A8FD11FFA827%52FD05FFA8F82727277DFD0DFF7D27F8272727F82727527DFD28FF522727%F8A8FD04FF2727F8A8FFFFFF7D2727F827527D52A8FD0EFF2752FD05FFA8%27F827F87DFD0BFFA82727F827F827F82752A8FD24FFA8A8FD04FF5227F8%2727FFFFFFA827F827A8FFFFFFA852F827F827F827F827A8FD0CFF52F8FD%06FFFD042752FD0AFFA820272727202752A8A8FD25FF7D2720A8FFFFFF7D%272720277DFFFFA8272727FD06FFA8525352522027277DFD0CFF5227A8FD%05FF52F827F827FD09FF7DF827F827277DA8FD21FFA8FD05FFA827F82752%FFFFFF5227F827F827A8FF7D27F852FD0BFF52F82727FD0CFF7DF8A8FD05%FF5327F82727FD09FF2727275284FD23FF7D2727A8FD04FF52272727A8FF%FF52F8272727F852FF7DF82752FD05FFA87D52A8FFFF7D27F827FD0CFF7D%2759FD05FF7DF827F8277DFD07FF7D27F8A8FD23FFA85227F82752FD04FF%A9F827F852FFFF2727277DF827F87E5327F87DFD04FFA827F827F8A8FF7D%F82727FD0CFFA8F852FD05FFA827202727A8FD06FFA8272027A8FD21FF52%52272720527DFD06FF7D272720FFFF272027FF7D2027275220277DFD04FF%A8FD04272052272720A8FD0CFFA82727FD06FFF827F82752FD07FF2027F8%A8FD20FF5927F827F87DFD08FFA827F82752FF202727FFA827F827F827F8%A8FD06FFA852F827F82727A8FD0EFFF827A8FD05FF4C2727F852FD07FF4C%27277DFD17FFA8A8A8FD06FFA82727F8A8FD0AFF7D2727277D272752FFFF%7D27F82727277DFD08FFA87D7DA8FD0FFFA92727A8FD05FF2727F82727FD%07FF2727F859FD16FF7D27F827A8FD05FFA827F8277DFD0BFF2727F827F8%2752FFFFFF5227F827F852FD1CFF27277DFD05FF7D27272027A8FD06FF7D%272752FD16FF7D202727FD07FF5227207DFD0BFFA827272027277DFFFFFF%7D20FD0427FD1CFF52277DFD05FF5327F827F8A8FD06FF5227F827FD10FF%A8FD05FFA827F852FD07FF7DF82727FF7D7D7DFD08FF7DF827F82752FFFF%FFA827F82727A8FD1CFF522752FD05FFA8F82727277DFD06FF7DF82727FD%0FFF5227F87DFD04FF2727F8FD07FF7D27272752272727A8FD07FFA82727%27F827A8FFFFFFA87D7DFD11FF7D7D272727FD08FF7DF852FD05FF7E27F8%27F87DFD06FF7D27F827A8FD0DFF7D27F82727FD04FF7DF8277DFD06FFA8%F827F827F82752FD09FF5327F827F87DFD14FF7D52F827F82752A8FD08FF%5927F8A9FD05FFFD042752FD06FFA8202727A8FD0EFF2727202752FFFFFF%7D27207DFD07FF522727207DFD0CFF27272027A8FD11FFA87D2727202752%7DA8FD0AFF842027A8FD05FF27F827F828FD06FFA827F8277DFD0EFF53F8%27F82752FFFFFF202727FD07FF5227F852FFFF537DA8FD08FF7DF82759FD%0FFFA87D2727F82727527DFD0DFF7D27F87DFD05FF5227F82727FD07FF27%27F87DFD0EFF7D272727F82752FFFF522727A8FD06FFA8F82727A8522727%52FD0AFFA8FD0DFFA9A85227F82727527DFD10FFA8272752FD05FF52F827%F827A8FD05FFA852F82752FD0EFFA8F8272727F82727FF7D27F87DFD06FF%A827F827F827F8277DFD16FFA85227F827F82752A8FD12FFA827F852FD05%FF7D27202727A8FD06FF52272052FD0FFF5227277D7D2727277D272752FD%07FF52272727207DFD16FF7D522727202752A8A8FD15FF272727FD05FF7D%F827F8277DFD06FF7DF82721FD0FFF7D27F87DFF7DF827F827F827A8FD06%FF52F827F87DFD14FF7D52F827F827277DA8FD17FFA827F827A8FD04FF7D%272727F87DFD06FF7D272727A8FD0EFFA8F82727FFFF7E2727F827277DFD%07FF7D52A8FD12FF7D7D2727F82727527DFD1BFF272727A8FD04FFA8F827%F82727FD06FF7DF827F8A8FD0FFF52F827A8FFFFA82727F827F8A8FD18FF%A87D2727F827F82752A8FD12FFA8A8A8FD08FF52F8277DFD05FF27272720%27FD06FFA82727277DFD0FFF5327277DFFFFFFA820272752FD16FFA87D52%272727202752A8FD14FF7D522759FD08FF522727A8FD05FF2727F827F8A8%FD05FFA8F827F87DFD0FFFA8F82727FD04FF7D527DA8FD13FFA87E5227F8%27F827277DA8FD13FFA87DF82727A8FD09FF52F8277DFD05FF52F8272727%7DFD06FF27F82752FD0FFFA827F8277DFD18FFA852272727F827277DA8FD%14FFA85227F852A8FD0BFF5227F87DFD05FF5227F827F87DFD06FF2727F8%52FD0FFFA8F827F87EFD15FFA85252F827F827F8527DFD15FF7D27F82752%A8FD0DFF7DF82752FD05FF7D2027272752FD06FF52202727FD10FFA87DA9%FD14FF7D522027272720527DFD15FFA87D2727207DA8FD0FFF7D272052FD%05FF7D27F827F852FD06FF5227F827A8FD23FF7D52F827F827F82752A8FD%14FFAFA85227F8277DFD12FF7DF82727FD05FFA82727F82727FD06FF7D27%27F8A8FD20FFA87DFD0427F827527DA8FD15FF7D52F82752A8FD14FF7D27%2727A8FD04FFA827F827F827A8FD05FF7D27F8277DFD1DFFA87D2727F827%F827277D7EFD15FFA852F827F8527DFD16FF7DF827F8A8FD05FF27272027%27A8FD05FFA82727207DFD1BFFA852272027272720537DFD16FFA8522720%2752A8FD18FF7D272727A8FD05FF52F827F8277DFD05FFA827F82752FD18%FFA85227F827F827F82753A8FD16FF7D27F827277DA8FD0FFFA87D5252A8%FD06FF7DF827F8A8FD05FF52272727F87DFD06FF27272752FD16FF7D52F8%272727F82752A8FD16FFA87DFD04277DFD11FF7D27F8527DFD07FFA827F8%27A8FD05FF7DF827F82752FD06FF27F82727FD13FFA87D2727F827F82727%7DA8FD17FF7D27F827277DA8FD0FFFA852F82727A8FD09FFA8F827F884FD%05FF7D2727272052FD06FF52272727A8FD0FFFA87E52272027272720527D%FD1AFFA827527DFD10FFA85227207DA8FD0BFFA82720277DFD05FFA8F827%F82727FD06FF53F827F8A8FD0CFFA8A85227F827F827F82752A8FD1DFFA8%FD10FF5327F82752A8FD0DFFA8F827F8A8FD06FF27F8272727A8FD05FF7D%27F8277DFD0BFFA827F8272727F827277DA8FD2DFFA852F827277DA8FD0F%FFA82727277DFD06FF2727F827F8A8FD05FF7DF827F87DFD0BFFA8F827F8%2727527DFD19FFA8FFA8FD11FFA87D2727F8287DFD12FFA8F827F87DFD06%FF52202727277DFD05FFA827202759FD0CFF5220527DFD1AFFA8522727FD%11FF5927202752A8FD14FFA8272727A8FD06FF5227F827F87DFD05FFA8F8%27F852FD0CFFA8A8FD19FFA85227F8277DFD0FFF7D52F827F852A8FD16FF%A8F827F8A8FD06FF7E2727F82752FD05FFA8FD0427FD25FF7D52F82752A8%FD0FFF84FD042753FD19FFA827F827A8FD06FF7D27F827F827AFFD05FF27%27F827A8FD21FFA87DF827F853A8FD0FFF5927F827277DA8FD10FFA85227%7DFD06FFA8F82727FD08FF2727202727FD06FF52272720FD20FFA8522720%527DFD0FFFAF7DFD04277DFD11FF7D5220277DFD07FFA8272052FD07FFA8%27F827F82784FD05FF5227F8277DFD1CFFA85227F82752A8FD12FFF82727%7DA8FD0FFFA87DF827277DA8FD07FFA852F82752FD08FF52272727F8A8FD%05FF7DF827277EFD1AFF7D52F827277DA8FD14FFA87DFD10FFA852272752%7DFD09FFA852F82727AFFD08FF52F827F82752FD05FF7D27F82752FD17FF%A853F827F8527DFD27FF7D52F8272EA8FD0AFF5327F827F852AFFD08FF7D%272727207DFD05FFA82027277DFD14FFA8A85227202752A8FD26FFA87D27%27277DA8FD0BFF522727272027277DFD08FFA8F827F82727FD05FFA827F8%2727FD12FFA85227F827277DA8FD11FFA87D2752A8FD10FFA85227F82752%FD0CFF7DF827F827F827F827A8FD08FFA827F8272727A8FD05FF2727F827%FD10FF7D52F82727527DFD12FFA8522727527DFD0FFF7D5227272784FD0C%FFA852F8272727F827277DA8FD0AFF2727F827F8A8FD04FFA852F827F8FD%0DFFA87D2727F82752A8FD12FF7D52F82752A8FD0EFFA87DF827F8527DFD%0CFFA82827F827F827F82727A8FD0CFF52202727277DFD05FF52272027A8%FD0AFFA852272027277DA8FD11FFA87D2027277DA8FD0EFFA85227272752%A8FD0CFFA87D20272727202727527DFD0EFF5227F827F87DFD05FF7DF827%F8A8FD0AFFF827F8527DFD11FFA87D2727F8527DFD0FFF7D52F827F853A8%FD0CFFA85227F827F827F827207DFD10FF7D2727F82752FD05FF7D272727%7DFD0AFF7D52A8FD11FFA85227272752FD10FF7D2727F82752A8FD0CFFA8%7D2727F8272727F82752FD12FF7D27F827F852FD05FF7DF827F87DFD1BFF%A85227F827277DA8FD11FF2727F859A8FD0DFF5227F827F827F827F852A8%FD14FF2727202727FD05FFA827272752FD19FF7D522027277DA8FD14FFAF%7DFD0DFFA87D272720272727202752A8FD15FFAF52F827F827A8FD04FFA8%F827F852FD16FFA87D2727F82759FD25FF5227F827F827F827F8527DFD18%FF52272727F8A8FD05FF27F82727FD14FFA85227272752A8FD24FFA87DFD%0427F8FD042784FD1AFF7DF827F82759FD05FF2727F827A8FD10FFA85227%F827F87DA8FD12FFA8522727AFFD0EFF5227F827F827F827F82753FD1CFF%7D272727207DFD05FF52202727A8FD0EFFA87D202727527DFD13FF7D5227%2752FD0EFF7DFD042720272727207DA8FD1DFFA8F827F82727FD05FF5227%F8277DFD0BFFA87D2727F82727A8FD12FFA87D2027277DA8FD0DFF5927F8%27F827F827F82752A8FD20FF52F8272727FD05FF7D2727F87DFD0BFF5227%27F87DA8FD11FFA8A85227F8527DFD0DFFA87D2727F8272727F8272752A8%FD22FF5227F827F8A8FD04FF7D27F82752FD0BFF522752A8FD11FFA85227%F82752A8FD0EFF7D27F827F827F827F82727A8FD24FF7D202727277DFD04%FFA827272052FD1EFF7D522727277EA9FD0EFF7D27272027272720272752%7DFD26FF7D27F827F87DFD04FFA827F82727FD1BFF7D7D2027F8527DFD0F%FF7D27F827F827F827F827277DFD29FF2727F82752FD05FFFD0427A8FD17%FFA87E2827F8277DFD10FF7DFD0427F8272727F8277DFD2BFF52F827F852%FD05FF52F827F8A8FD15FFA85227F827277DA8FD0FFF7D27F827F827F827%F827F859A8FD2CFF5327202727FD05FF522727277DFD13FF7D522727277D%A8FD10FF84FD042720272727202752FD2FFF7EF827F827A8FD04FF7DF827%F87DFD10FFA87DF827F8527DFD11FF7D52F827F827F827F827F852A8FD30%FFA8272727F8A8FD04FF7D27F8277DFD0EFFA85227F82752A8FD11FFA827%27F8272727F827272728A8FD33FF2727F82752FD04FFA8F827F852FD0BFF%A85227F827F8527DFD11FF7D27F827F827F827F827F8527DFD35FF7D2727%2052FD04FFA827202752FD0BFF272720277DFD12FFA827272027272720FD%0427A8FD37FF7D27F82727FD05FF2727F827FD0BFF52277DA8FD11FF7D52%F827F827F827F827F8277DFD3AFFF8272727A8FD04FF52272727FD1EFFA8%FD0427F8272727F827277DA8FD3BFF52F827F87DFD04FF2727F827A8FD1B%FF7D52F827F827F827F827F82752FD3EFF5327272752FD04FF7D272720A8%FD19FFA8FD0427202727272027277DA8FD3FFFA8F827F852FD04FF5327F8%277DFD17FF7D52F827F827F827F827F82752A8FD42FF27F82727FD04FFA8%F827277DFD15FFA85227F8272727F8272727F852A8FD44FF5227F8277DFF%FFFF7E27F82752FD13FF7D52F827F827F827F827F82727A8FD46FFA82027%277DFD04FF27272752FD11FFA85227202727272027272720527DFD48FFA8%27F82752FD04FF27F82727FD0FFFA852F827F827F827F827F827277DA8FD%4AFF5227F827FD04FF5227F827FD0EFF52272727F8272727F827272752FD%4DFFA8F827F8A8FFFFFF52F827F8FD0CFF7D2727F827F827F827F827F852%A8FD4FFF5220277DFFFFFF7D272027A8FD09FF7D5227272027272720FD04%27A8FD51FF7D27F852FFFFFF7DF827F8A8FD07FFA82727F827F827F827F8%27F8277DFD54FF2727F8A9FFFF7E2727277DFD05FFA852F8272727F82727%27F827277DA8FD55FF7DF82752FFFFA8F827F87DFFFFFFA82E27F827F827%F827F827F82727A8FD57FFA8272052FFFFFF4C27277DFFA8522027272720%272727202727527DFD5AFF5227F8A8FFFF5227F8525227F827F827F827F8%27F827F87DA9FD5CFF272752FFFF7DF8272727F8272727F8272727F82752%FD5FFF84F827A8FFA827F827F827F827F827F827F8527DFD61FF7D207DFF%FFA852272720272727202727A8FD64FF52F8A8FFFFFF52F827F827F8277D%FD67FF52F8A8FFFFA8FD04277DFD6AFF7D277DA8FF7D527DFD54FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 Au0 O0 0 0 1 k0 J 0 j 1 w 4 M []0 d0 XR487.0229 1486.2241 m489.7261 1486.8491 497.7769 1489.9429 500.4097 1490.8101 c503.4683 1491.814 530.71 1500.314 532.2061 1501.2671 c533.6982 1502.2124 530.46 1503.1304 527.4482 1501.9897 c524.4365 1500.8452 495.7026 1492.7632 493.5034 1491.8921 c491.3081 1491.0171 485.105 1489.2788 Y485.1245 1489.0874 485.1597 1488.8022 V484.7769 1488.6343 484.4839 1488.1421 484.5112 1487.1812 C486.3472 1483.1577 488.855 1439.7715 497.4995 1441.5332 C492.9604 1441.0801 491.5229 1460.0684 487.0229 1486.2241 Cf534.3584 1500.9663 m533.5459 1501.1772 537.792 1486.9233 537.9053 1465.8457 C537.8389 1465.6113 535.1943 1463.8105 534.4326 1463.3535 c531.8037 1461.7793 506.3745 1449.1934 504.4644 1448.0137 c502.9019 1447.0449 498.9956 1445.084 497.6011 1444.3887 C497.6128 1444.7441 497.605 1445.166 497.5659 1445.6777 c497.3823 1448.0957 496.5815 1454.5215 495.4761 1462.8027 c494.9253 1466.9395 494.3003 1471.5444 493.6401 1476.3374 C492.6323 1483.6147 L492.6206 1483.5913 492.605 1483.5874 492.5894 1483.5679 C492.6597 1483.6616 492.7222 1483.728 492.8003 1483.8569 C493.6089 1484.314 496.7729 1485.3687 498.1206 1485.9585 C516.6318 1493.1187 533.9873 1499.9116 Y532.8232 1500.4272 511.4917 1492.6772 V505.5737 1490.1772 496.8628 1488.9858 491.9917 1484.7007 c491.7261 1484.4663 491.6284 1483.939 491.6792 1483.5444 C491.4331 1483.6968 491.2261 1483.7593 491.1323 1483.1069 C492.3823 1472.8726 494.1479 1458.1934 495.9292 1445.459 c496.1675 1443.752 496.9409 1442.5918 497.3472 1443.2129 C497.5542 1442.6309 497.8589 1442.0332 498.2261 1441.7793 C497.98 1441.6621 497.7378 1441.5801 497.4995 1441.5332 C497.7339 1441.5566 497.9839 1441.6387 498.2378 1441.7715 C498.3003 1441.7285 498.3589 1441.627 498.4253 1441.6152 c499.1987 1441.4707 508.2769 1446.9824 510.9644 1448.4473 c513.6514 1449.9082 537.6514 1462.5605 538.9053 1463.6699 c539.417 1464.1191 539.1865 1464.4004 538.585 1464.4824 C542.2217 1469.5801 533.6826 1500.8647 534.3584 1500.9663 Cf501.9995 1480.0171 m501.9839 1480.0366 501.9761 1480.0522 501.9722 1480.0679 c501.9644 1480.0952 501.9604 1480.1343 501.9644 1480.1929 C501.9644 1480.2515 501.9644 1480.3062 501.9526 1480.3335 C501.937 1480.4194 501.8862 1480.4702 501.812 1480.5093 c501.5386 1480.6577 501.144 1480.6421 500.6284 1480.4702 C500.4331 1480.4155 500.2886 1480.3335 500.187 1480.2515 C500.1011 1480.1655 500.0581 1480.0835 500.0854 1479.9897 C500.0894 1479.9702 500.1011 1479.9233 500.1323 1479.8765 C500.1519 1479.8257 500.1792 1479.7866 500.1792 1479.7554 C501.7144 1474.6772 L501.7339 1474.6226 501.6948 1474.5444 501.6128 1474.4429 C501.5112 1474.3257 501.4878 1474.2007 501.5425 1474.0718 c501.6128 1473.9194 501.7769 1473.8101 502.0425 1473.7632 c502.312 1473.7124 502.5737 1473.7319 502.8276 1473.8101 C503.062 1473.8921 503.2144 1474.0093 503.3042 1474.1655 C503.3628 1474.2866 503.3862 1474.3843 503.3667 1474.4897 C503.3472 1474.5679 503.2886 1474.6616 503.1909 1474.7593 C503.0933 1474.8452 503.0425 1474.9155 503.0308 1474.9507 c502.519 1476.4897 502.2104 1477.5562 502.0972 1478.1421 C502.4722 1477.7397 502.9839 1477.2593 503.687 1476.7085 c503.9761 1476.4858 504.2808 1476.2515 504.6167 1476.0132 C504.6831 1475.9468 504.7456 1475.8452 504.7964 1475.7163 C504.8394 1475.5679 504.8823 1475.4663 504.9331 1475.4077 c505.2495 1475.0366 505.7065 1474.9312 506.3042 1475.0913 C506.5425 1475.1655 506.7183 1475.2905 506.8511 1475.4819 c506.9722 1475.6616 507.019 1475.8726 506.9878 1476.0757 c506.9722 1476.1655 506.9019 1476.2593 506.7729 1476.3413 C506.644 1476.4312 506.5659 1476.5132 506.5503 1476.5913 C505.312 1481.1812 L505.2964 1481.2397 505.3472 1481.3257 505.4409 1481.4194 c505.5386 1481.521 505.5737 1481.6187 505.5386 1481.728 c505.4878 1481.8999 505.3198 1482.0093 505.019 1482.064 c504.7104 1482.1304 504.4331 1482.1108 504.1792 1482.0288 c504.0151 1481.978 503.9058 1481.9038 503.8511 1481.8101 C503.7378 1481.6538 503.687 1481.5405 503.7065 1481.4624 C503.7104 1481.4351 503.7534 1481.3921 503.812 1481.3491 c503.8745 1481.3022 503.9136 1481.2515 503.9253 1481.1968 C505.019 1477.1147 L503.2847 1478.5249 502.269 1479.4897 501.9995 1480.0171 Cf511.4956 1483.1538 m511.644 1483.1812 511.7651 1483.2163 511.8706 1483.2437 C512.1128 1483.3257 512.312 1483.4507 512.4409 1483.603 C512.5034 1483.689 512.5308 1483.7632 512.5073 1483.8608 C512.4644 1484.0132 512.3472 1484.1538 512.1636 1484.2749 c511.9761 1484.3999 511.7964 1484.4468 511.644 1484.4194 c511.562 1484.4038 511.4995 1484.3921 511.4448 1484.3726 C511.3237 1484.3374 511.2339 1484.2788 511.1519 1484.2007 C511.0308 1484.0991 510.9644 1484.0405 510.9331 1484.021 C509.769 1483.2983 L509.6753 1483.3062 509.5815 1483.314 509.4839 1483.3218 C509.3315 1483.3257 509.2104 1483.314 509.1245 1483.271 c508.7183 1483.0796 508.5308 1482.8882 508.5815 1482.7046 C508.5854 1482.646 508.6284 1482.5991 508.687 1482.564 C509.0776 1480.6929 509.5073 1478.9468 509.9683 1477.3335 C509.9409 1477.0952 509.9292 1476.9702 509.9331 1476.9507 C509.9448 1476.9116 509.9644 1476.8921 509.9956 1476.8687 c510.3784 1476.5796 510.7651 1476.4585 511.1519 1476.4897 C511.187 1476.4897 511.2183 1476.4937 511.2456 1476.5054 C511.3315 1476.5327 511.4175 1476.6069 511.4995 1476.7085 c511.6167 1476.853 511.6948 1476.939 511.7339 1476.9624 C512.6089 1477.6812 L512.9878 1477.7827 513.249 1477.8999 513.3818 1478.0171 c513.5342 1478.146 513.5811 1478.2827 513.5459 1478.4429 c513.5146 1478.6108 513.3623 1478.7476 513.1162 1478.8491 c512.8628 1478.9507 512.6479 1478.978 512.4526 1478.9194 C512.269 1478.8726 512.1519 1478.8101 512.0972 1478.728 C512.0698 1478.6772 512.0386 1478.6304 512.019 1478.5835 C511.8472 1478.4429 511.6167 1478.2944 511.3394 1478.1421 C511.2651 1478.2749 511.1675 1478.5952 511.0425 1479.0991 C511.2495 1479.2593 511.4331 1479.4038 511.5737 1479.5132 C511.6245 1479.5562 511.7534 1479.603 511.9565 1479.6499 c512.1597 1479.6968 512.3081 1479.7593 512.4058 1479.8257 C512.5659 1479.9233 512.6714 1480.0757 512.7183 1480.2671 c512.73 1480.3218 512.73 1480.3647 512.7183 1480.396 C512.687 1480.5444 512.5112 1480.6616 512.2104 1480.728 c511.9058 1480.8022 511.6558 1480.8022 511.4526 1480.7397 c511.2495 1480.6772 511.1284 1480.5601 511.0698 1480.4194 C510.9058 1480.3452 510.812 1480.2905 510.7769 1480.2554 C510.5542 1480.9937 510.394 1481.6694 510.3042 1482.2749 C510.4097 1482.3921 510.6323 1482.5757 510.9995 1482.8218 C511.1362 1482.9272 511.312 1483.0327 511.4956 1483.1538 Cf516.2451 1484.6851 m516.1943 1484.8374 516.1475 1484.9858 516.0967 1485.1343 c516.042 1485.2905 515.9521 1485.3882 515.8037 1485.4155 C515.6357 1485.4624 515.4404 1485.4429 515.2139 1485.3726 c515.0029 1485.3022 514.8232 1485.1968 514.6631 1485.0522 c514.4756 1484.8804 514.4053 1484.7241 514.4404 1484.5679 C514.4482 1484.5015 514.4912 1484.439 514.5771 1484.3647 c514.6787 1484.2749 514.7373 1484.1968 514.7646 1484.1538 C517.499 1479.3765 L517.5264 1479.3257 517.5615 1479.228 517.6084 1479.0562 c517.6357 1478.9468 517.6904 1478.8569 517.7725 1478.8022 C518.0107 1478.6226 518.3193 1478.5952 518.6904 1478.7202 c518.9404 1478.7983 519.1201 1478.9312 519.2334 1479.1147 c519.4561 1479.4858 519.5146 1479.8882 519.4092 1480.3452 c519.3975 1480.4038 519.335 1480.4663 519.2178 1480.5327 c519.1045 1480.5991 519.0537 1480.6733 519.0537 1480.7397 C519.4014 1484.0874 L520.8975 1481.8062 L520.9482 1481.7319 520.9834 1481.6538 520.999 1481.5522 C521.0225 1481.4819 521.0342 1481.3608 521.0459 1481.2124 c521.0576 1481.0718 521.0693 1480.9663 521.0771 1480.9038 C521.124 1480.7085 521.2529 1480.5601 521.4521 1480.4858 c521.792 1480.3687 522.1396 1480.3687 522.5186 1480.4858 c522.7959 1480.5796 523.0537 1480.7437 523.2686 1480.9429 C523.4951 1481.1655 523.5693 1481.4077 523.499 1481.7241 c523.4834 1481.7866 523.4521 1481.8804 523.4053 1482.0171 c523.3584 1482.1421 523.3271 1482.2437 523.3037 1482.314 C523.2764 1482.478 523.2686 1482.6343 523.2881 1482.7593 C523.8467 1487.3726 L523.8545 1487.4468 523.8896 1487.564 523.9521 1487.728 C524.0107 1487.8608 524.0264 1487.9702 524.0068 1488.0405 C523.9912 1488.1226 523.9326 1488.2007 523.8467 1488.2749 C523.6553 1488.4077 523.4092 1488.4155 523.0928 1488.3179 c522.7842 1488.2241 522.5303 1488.0562 522.3428 1487.8296 C522.2295 1487.7124 522.1826 1487.5601 522.2217 1487.3687 c522.2725 1487.0874 522.292 1486.9233 522.2881 1486.8921 C521.8428 1483.0054 L519.8975 1485.9429 L519.874 1485.9702 519.8623 1486.0093 519.8506 1486.0483 c519.8389 1486.0874 519.8389 1486.146 519.8467 1486.2358 C519.8584 1486.3218 519.8545 1486.3882 519.8428 1486.4233 C519.8271 1486.5093 519.7725 1486.5757 519.6748 1486.6343 c519.4365 1486.7671 519.1084 1486.7671 518.6865 1486.6304 c518.335 1486.5132 518.1123 1486.3608 518.0186 1486.1812 C517.9561 1486.0796 517.9365 1485.9897 517.9521 1485.9077 c517.96 1485.8726 517.9951 1485.8179 518.0498 1485.7515 C518.0928 1485.6812 518.1123 1485.6265 518.1123 1485.5757 C517.7607 1481.6694 L516.2451 1484.6851 Lf527.9131 1487.5249 m528.0225 1487.2788 528.1982 1487.1108 528.4365 1487.0288 c528.6592 1486.9507 528.874 1486.9585 529.1045 1487.0327 c529.4092 1487.1343 529.5889 1487.3062 529.6436 1487.5483 c529.6631 1487.6304 529.6592 1487.7319 529.624 1487.8374 C529.5928 1488.0171 529.5107 1488.1968 529.3818 1488.3843 C529.2529 1488.8022 529.0537 1489.103 528.7803 1489.3257 c528.3584 1489.6733 527.7959 1489.7319 527.1045 1489.5054 c526.5107 1489.3062 526.0732 1488.8921 525.7959 1488.2515 c525.5264 1487.6577 525.4756 1487.0522 525.6201 1486.4468 c525.7139 1486.0679 525.9326 1485.7476 526.2725 1485.4741 c526.6396 1485.1929 527.0732 1485.0405 527.585 1485.0366 c528.2061 1485.0327 528.5693 1485.0132 528.667 1484.9741 c528.8936 1484.8921 529.0537 1484.6343 529.1514 1484.2124 c529.2686 1483.7397 529.1162 1483.439 528.7061 1483.2983 C528.5498 1483.2515 528.4092 1483.2788 528.2959 1483.3804 c528.1709 1483.4937 528.0537 1483.5991 527.9365 1483.7085 C527.6514 1484.146 527.249 1484.2827 526.7451 1484.1147 C526.5068 1484.0444 526.2646 1483.8882 526.0029 1483.6733 c525.874 1483.564 525.8232 1483.4624 525.8467 1483.3647 c525.8936 1483.1694 526.2021 1483.0288 526.7881 1482.9194 C527.4521 1482.2866 528.292 1482.1304 529.3037 1482.4663 c529.8154 1482.6382 530.1943 1482.939 530.4639 1483.3765 c530.7256 1483.8218 530.8037 1484.2632 530.6943 1484.6968 c530.5576 1485.2671 530.2998 1485.6616 529.8975 1485.8726 c529.6201 1486.021 529.1514 1486.103 528.5029 1486.1304 c527.6865 1486.1655 527.2061 1486.4312 527.0732 1486.8999 c527.0029 1487.1655 526.9912 1487.4233 527.0576 1487.6733 c527.1318 1487.9624 527.2842 1488.146 527.5146 1488.2358 c527.7568 1488.3218 527.9014 1488.2866 527.9365 1488.1187 c527.9443 1488.0835 527.9443 1488.0522 527.9443 1488.0249 C527.9639 1488.021 527.9756 1488.0171 527.9795 1488.0015 C527.9795 1487.9937 527.96 1487.9312 527.9092 1487.814 C527.8701 1487.7085 527.8662 1487.6069 527.9131 1487.5249 Cf529.7725 1479.8491 m527.6865 1478.9663 507.937 1471.8374 506.4136 1471.1772 c504.8901 1470.5137 500.6284 1468.9785 Y500.6362 1467.7168 501.1479 1467.6504 v501.6597 1467.584 508.8784 1470.6738 510.9878 1471.5015 c513.0967 1472.3257 531.8662 1479.4702 532.9248 1480.0835 c533.9795 1480.6968 531.8584 1480.7319 529.7725 1479.8491 cf516.9248 1467.877 m517.4365 1468.2285 516.3154 1468.3379 515.2803 1467.8535 c514.249 1467.3691 504.3667 1463.5684 503.6128 1463.2051 c502.8589 1462.8379 500.7261 1462.0215 Y500.8237 1461.209 501.0972 1461.1465 v501.3706 1461.084 504.9487 1462.7832 505.9995 1463.2324 c507.0503 1463.6777 516.4131 1467.5254 516.9248 1467.877 cf502.1011 1456.7402 m502.3745 1456.6777 505.9526 1458.377 507.0034 1458.8262 c508.0542 1459.2715 517.4209 1463.123 517.9326 1463.4746 c518.4443 1463.8262 517.3232 1463.9355 516.2881 1463.4512 c515.2529 1462.9629 505.3706 1459.166 504.6167 1458.7988 c503.8628 1458.4316 501.73 1457.6152 Y501.8276 1456.8027 502.1011 1456.7402 vf502.5151 1452.002 m502.7886 1451.9395 506.3667 1453.6387 507.4175 1454.0879 c508.4683 1454.5332 517.8311 1458.3809 518.3428 1458.7324 c518.8545 1459.084 517.7334 1459.1934 516.7021 1458.709 c515.667 1458.2246 505.7847 1454.4238 505.0308 1454.0605 c504.2769 1453.6934 502.144 1452.877 Y502.2417 1452.0645 502.5151 1452.002 vf524.4639 1471.3765 m525.3311 1471.7788 533.0771 1475.2124 533.4873 1475.5366 c533.8975 1475.8647 532.9209 1476.0054 532.0693 1475.5679 c531.2178 1475.1304 523.0225 1471.7593 522.4053 1471.4312 c521.7842 1471.0991 520.0146 1470.373 Y520.1709 1469.5801 520.4131 1469.5098 v520.6553 1469.4395 523.5928 1470.9785 524.4639 1471.3765 cf532.7295 1471.1226 m531.8779 1470.6855 523.6787 1467.3145 523.0615 1466.9863 c522.4404 1466.6543 520.6709 1465.9277 Y520.8271 1465.1348 521.0693 1465.0645 v521.3115 1464.9941 524.2529 1466.5332 525.1201 1466.9316 c525.9873 1467.334 533.7373 1470.7676 534.1475 1471.0913 c534.5576 1471.4194 533.5811 1471.5601 532.7295 1471.1226 cf532.8936 1466.3691 m532.042 1465.9316 523.8428 1462.5645 523.2256 1462.2363 c522.6045 1461.9043 520.835 1461.1777 Y520.9912 1460.3848 521.2334 1460.3145 v521.4756 1460.2441 524.417 1461.7793 525.2842 1462.1816 c526.1514 1462.5801 533.9014 1466.0137 534.3115 1466.3379 c534.7217 1466.666 533.7451 1466.8066 532.8936 1466.3691 cfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF