%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (Nick La) ()%%Title: (ticket.eps)%%CreationDate: 5/31/10 1:45 PM%%Canvassize: 16383%%BoundingBox: 480 1440 544 1504%%HiResBoundingBox: 480.5522 1440.8994 543.4482 1503.1006%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 512.5 1471.5 512.5 1471.5%AI3_TileBox: 206 1076 818 1868%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 64 64%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 1%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: 469 1516 8 813 750 26 0 0 43 129 0 0%AI5_OpenViewLayers: 7%%PageOrigin:-34 356%AI7_GridSettings: 32 32 32 32 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 128 8%%BeginData: 10614 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD4FFF527D277DFD7BFF7D27F827A8FD7AFF7D272727F87DA8FD78%FF5227F827F827F82752FD75FFA927272027275220FD0427A9FD72FF84F8%27F827F8FFA827F827F827F8A8FD70FF7D2727F82727A8FFFF7D27F8FD04%27FD6FFF7DF827F827F8A8FD04FF2727F827F82752FD6DFF7D2027272720%A8FD06FFFD04272027A8FD6BFF52F827F827F8A8FD07FFA8F827F827F87D%FD6AFF52F8272727F8A8FD09FF52F8FD0427FD69FF52F827F827F8A8FD0A%FFA827F827F8277DFD67FF522727202727A8FD0CFFA8A85227207DFD66FF%52F827F827F8A8FD10FF522752FD65FF522727F82727A8FD11FF522752FD%64FF52F827F827F8A8FD11FF7DF827F8A8FD62FF522027272720A8FD12FF%FD0427A8FD61FF52F827F827F8A8FD12FF5227F827F87EFD60FF52F82727%27F8A8FD12FFA8272727F8277DFD5FFF52F827F827F8A8FD13FFA8F827F8%27F87DFD5EFF522727202727A8FD14FF7D272727202752FD5CFFA852F827%F827F8A8FD15FF52F827F827F852FD5BFFA8522727F82727A8FD16FF5227%F827272728FD5AFFA852F827F827F8A8FD16FFA852F827F827F827A8FD58%FFA8522027272720A8FD18FF522720FD0427FD58FFA827F827F827F8A8FD%19FF52F827F827F827A8FD56FFA827F8272727F8A8FD1AFF52272727F827%27A8FD55FFA827F827F827F8A8FD1BFF7DF827F827F8277DFD54FFA82727%27202727A9FD0FFFA87DA8FD0AFFA82727272027277DFD53FFA827F827F8%2727FD0FFF7D52F827F8277DFD09FF2727F827F82727FD52FFA8272727F8%2727FD0FFF7D27F852A852F8277DFD08FF7DF8272727F8277EFD50FF7D27%F827F827F8A8FD0EFF7D27F852A8FFA827F8277DFD07FFA827F827F827F8%52FD4FFF84272027272720A8FD0EFFA8272752FD04FFA8272727A8FD07FF%7D27272720272752A8FD4CFF7D27F827F827F8A8FD0EFFA827F852A8FD05%FF7D27F852FD08FF2727F827F827F827275252A8A8FFFFFFA8A87D7D537D%FD0452A8FD38FF7D27F8272727F8A8FD0EFFA8272752A8FD07FF7D27277E%FD08FFFD0427F8272727F8FD0427522727F8272727F8272727F827A8FD36%FF7D27F827F827F8A8FD0EFFA827F852A8FD09FF7D27F8A9FD07FFA8F827%F827F827F827F827F827F827F827F827F827F827F827F827A8FD34FF7D27%2727202727A8FD0EFFA8272052FD0CFF7D2752FD08FFA827272027272720%27272720272727202727272027272720272727A8FD32FF7D27F827F827F8%A8FD0EFFA827F852A8FD0DFF7D2752FD09FF2727F827F827F827F827F827%F827F827F87D7D52F827F827F852A8FD30FF53272727F82727A8FD0EFFA8%27F852FD10FF7D27277DFD08FF7D52F8272727F8272727F8272727F852FF%FFFF7D2727F8272752FD2FFF5227F827F827F884FD0EFFA827F852A8FD11%FF5227F87DFD09FFA85252F827F827F827F827277DA8FD04FF52F827F827%F852FD2DFF7D272027272720A8FD0EFFA8522752FD14FF7D27277DFD0CFF%A8A87DA87DA8FD09FF7D202727272052FD2BFF5227F827F827F87DFD0EFF%A827F852A8FD15FF7D27F87DFD1BFF52F827F827F852FD29FF5227F82727%27F884FD0EFFA8272727A8FD0DFFA8A8A8FD07FF7D27277DFD1BFF52F827%2727F87DFD27FF5227F827F827F87DFD0EFFA827F827A8FD0EFF52F87DFD%08FF7D27F87DFD1BFF7DF827F827F852FD25FF522727272027277DFD0EFF%A8272052A8FD0EFFA82727A8FD09FF7D2720A8FD1BFFA827272027277DFD%23FF5227F827F827F87DFD0EFFA827F827A8FD0FFF27277DFD0BFF7D27F8%A8FD1CFF5227F827F87D7D52FD1FFF52272727F827277DFD0EFFA827F827%A8FD0FFF7D27F87DFD0CFF7E27F8A8FD1CFFA853FD0527FD1EFF5227F827%F827F87DFD0EFF7E27F827A8FD0FFFA827F827F87DFD0CFF7D27F8A8FD1D%FF52F827F8A8FD1DFF522720272727207DFD0EFFA8272727A8FD0DFFA852%7DFF52527D27277DFD0CFFA82727FD1BFFA8522027277DFD1DFF2727F827%F827F852FD0EFFA827F827A8FD0EFF52F87DFD04FF7D27F87DFD0CFF7D27%27FD19FF7D27F827F87DFD1DFF2727F8272727F87DFD0EFFA8272727A8FD%0EFF7DF852FD06FF7D27277DFD0CFFA82752FD17FF7D27F8272752FD1DFF%2727F827F827F852FD0EFFA827F827A8FD0EFF7DF8277DFD07FF7D27F852%A8FD0BFFA82752FD15FF5227F827F852FD1DFFFD042720272752FD0EFFA8%272052A8FD0FFF7D27207DFD08FF7E272052FD0CFFA8277DFD13FF522727%272052FD1DFF2727F827F827F852FD0EFFA827F827A8FD0DFFA8FFFFFF7D%27F87DA95227A8FD04FF592727FD0DFFA87DFD12FF2727F827F852A8FD1C%FFFD0427F8272752FD0EFFA827F827A8FD0DFF7D277DFFFFFF7D27F85227%27A8FD05FF7DFD21FFFD0427F852FD1DFF2727F827F827F852FD0EFF7E27%F827A8FD0EFF7DF852FD04FF5227F827A8FF5252A8FD11FFA8527DFD0EFF%A82727F827F827A8FD1CFF2727202727272052FD0EFFA8272727A8FD0FFF%A82727FD05FF7D27277D7D2727FD12FF5227FD0EFFA8272720272727A8FD%1BFFA82727F827F827F852FD0EFFA827F827A8FD0DFF7D52A8FF2727A8FD%05FF5227F827F8A8FD10FFA82727FD0EFFA8F827F827F827A8FD1CFF2727%F8272727F852FD0EFFA8272727A8FD0DFFAF27F852FF7DF87DFD06FF5327%2727A8FD0FFFA82727FD0EFFA82727F8272727A8FD1BFFA82727F827F827%F852A8FD0DFFA827F827A8FD0FFF7D27F8527D2752FD07FF522752FD0FFF%A827F8FD0EFFA8F827F827F827A8FD1CFFFD042720272752FD0EFFA85220%52A8FD0DFFA8FFFFFFA82727522752A8A87D7E527DFD12FFA82720FD0EFF%A820272727204CA8FD1CFF2727F827F827F852A8FD0DFFA827F827A8FD0D%FF7D27F87DA8FFA827F827F827F827F827F87DFD10FFA827F8A8FD0DFFA8%F827F827F827A8FD1CFFFD0427F8272752A8FD0DFF8427F827A8FD0DFFA8%272727F8277DFFA8FD04275252532727A8FD0FFFA827F8A8FD0DFFA8F827%2727F852FD1CFFA92727F827F827F852A8FD0DFF5927F827A8FD0EFFA8F8%277E52F827A8FFA852F827A8FFFFFFA8FD0FFF7E27F8A8FD0DFFA8F827F8%27F852A8FD1CFF2727202727272052FD0EFF52272752A8FD10FF5227A8FF%7D7EFD04FF5220277DFD11FFA82727A8FD0DFFA8272720272752FD1DFF27%27F827F827F852A8FD0DFF5227F87EFD0EFFA8A8FFFF7D27F8A8FFFFA827%52FFFF52F852FD10FFA827F8A8FD0DFFA8F827F827F852A8FD1CFF2727F8%272727F852FD0EFF522727FD0FFF7D2727FFFFFF272727FFFFA82727A9FF%A87DA8FD0FFF7E27277DFD0DFFA82727F8272752A8FD1CFF2727F827F827%F852A8FD0DFF7D2727FD10FF7DF82727FFFFA8F82728FFFF52F8A8FD12FF%7D27F87DFD0DFFA8F827F827F852A8FD1CFFFD042720272752FD0FFF2727%FD0FFFA8FFFF7E202727FFFFA8272728FFA82753FD11FF8427207DFD0DFF%A8202727272052FD1DFF5227F827F827F852A8FD0EFF7DF87DFD0EFF5227%27FFFF7DF82727FFFFA8F8272752F852FD10FF7D27F87DFD0DFFA8F827F8%27F852FD1DFF52272727F8272752A8FD0FFF52277DFD0EFF52277DFFFFFF%A8F82727FFFFFF5227F827A8FD0FFF7D27F87DFD0DFFA8F8272727F852FD%1DFF5227F827F827F852A8FD0FFFA827F87DFD0DFF7DF852FD05FFA8F827%27FFFFFF847DA8FD0FFF7D27F87DFD0DFF84F827F827F852FD1DFF522720%2727272052FD12FF202727FD0DFF272727FD06FFA8272727FD13FF7D2727%7DFD0DFFA8272720272752FD1DFF5227F827F827F852FD13FF7DF82727FD%0BFF5227F82727FD06FFA82727F8A8FD10FF5227F87DFD0DFF7DF827F827%F852FD1DFF7D27F8272727F852FD15FF7DF82752FD0AFF7D277E272727FD%06FFA82752A8FD0FFF5227277DFD0DFF7E2727F8272752FD1DFF7D27F827%F827F852A8FD16FF7DF82752FD0CFFA8272727FD05FFA8A8A8FD0FFF5227%F852FD0DFF7DF827F827F852FD1DFFA82727272027277DFD19FFA8272752%FD0DFF272727FD15FF52272052FD0DFF7D202727272052FD1DFFA827F827%F827F87DFD1BFF7DF82727FD0DFF272727A8FD12FF5227F852FD0DFF7DF8%27F827F852FD1EFF522727F827277DFD1DFF7D272727FD0DFF2727F8A8FD%10FF5227F852FD0DFF7DF8272727F852FD1FFFF827F827F87DFFFFA8FD1C%FF7DF82727FD0CFFA8F827A8FD0FFF2727F852FD0DFF52F827F827F852A8%FD1FFF5227272027277DFD1FFF7D202727FD0CFFA8A8FD0FFF52272752FD%0DFF7D272720272752FD21FFA8A82727F827F852A8FD1EFF7DF82727A8FD%1AFF5227F852FD0DFF52F827F827F852A8FD24FF5227F827272728FD1EFF%7DF82727FD19FF52272752FD0DFF522727F8272752A8FD26FF2727F827F8%2727FD1EFF7DF82727A8FD16FF2827F852FD0DFF52F827F827F827A8FD28%FFFD042720277DFD09FFA8FFA8A8A8FD10FF7D272727FD15FF27272052FD%0DFF52202727272052A8FD29FFA8F827F827F827A8FD05FFA87D2727F827%F827F827277D7DFD0CFF7DF82727FD13FF2727F852FD0CFFA852F827F827%F827A8FD2BFF7DF8272727F87DFD04FF5227F8272727F8272727F8FD0427%A8FD0BFF7D272727FD11FF2727F852FD0DFF52F8272727F827A8FD2DFF7D%F827F827F8A8FF7D2727F827F827F827F827F827F827F827F852A8FD0AFF%53F82727FD0FFF2727F852FD0CFFA852F827F827F827A8FD2FFF7EFD0627%2027272720272727202727272027272720272727A8FD0AFF7D202752FD0D%FF27272752FD0CFFA852272720272727A8FD31FFA82727F827F827F827F8%27F827F827F827F827F827F827F827F827A8FD0AFF52F82752FD0BFF2727%F852FD0CFFA827F827F827F827A8FD34FF5927F8272727F8272727F8FD07%27F8272727F8272727A8FD0AFF7DF82752FD09FF2727277DFD0CFFA82727%27F8272727A8FD36FFA852F827F827277D7DA8A8FFA8A87D7D2727F827F8%27F827F852FD0BFF52F82752FD07FF2727F87DFD0CFFA827F827F827F827%7DFD3AFF527DA8FD0CFFA8272720272727207EFD0BFF7D272752FD05FF27%27207DFD0CFFA82720272727202784FD4CFF2727F827F82720FD0CFF7DF8%2727A8FFA82727F852FD0CFFA827F827F827F8277DFD4DFFA82727F82727%277DFD0CFF522727207D2727F852FD0CFFA827F8272727F8277EFD4EFFA8%27F827F827F827A8FD0BFFA852F827F827F852A8FD0BFF7E27F827F827F8%277DFD50FF52272027272720A8FD0DFF7D275252A8FD0CFFA82727272027%27277DFD51FF7DF827F827F82753FD1DFF7D27F827F827F8277DFD52FFA8%272727F8272753FD1CFF7D272727F82727277DFD54FFF827F827F82727FD%1BFF7D27F827F827F8277DFD55FF52272720272727FD1AFF842720272727%20277DFD56FF5227F827F82727FD19FF7D27F827F827F82752FD57FF7DF8%272727F827FD18FF7E27F8272727F8277DFD58FF5227F827F82727FD17FF%7D27F827F827F82752FD59FF7E202727272052FD16FF7D27272720272727%7DFD5AFF7D27F827F82752FD15FF7D27F827F827F82752FD5BFFA82727F8%2727A8FD14FF7D272727F827272753FD5CFFA827F827F827A8FD13FF7D27%F827F827F82752FD5EFF272727527EFD13FF84272027272720277DFD5FFF%52F852FD14FF7D27F827F827F82752FD60FF532727FD13FF7E27F8272727%F82752FD61FF7DF82727FD11FF7D27F827F827F82752FD62FFA827272752%FD0FFFA82727272027272752FD64FF2727F82727FD0DFFA827F827F827F8%2752FD65FF7DF8FD0427FD0BFFA8272727F827272752FD66FFA827F827F8%2752FD09FFA827F827F827F82752FD68FF5227272720277DFD07FFA82720%27272720277DFD69FFA8F827F827F8277DFD05FFA827F827F827F82752FD%6BFF7DF8272727F827FD05FF52F8272727F8277DFD6DFF52F827F827F87D%FFFFFF52F827F827F82752FD6FFF532727202727A8FF7D2727202727277D%FD71FF7D2127F827527DF827F827F8277DFD74FF7D27F8272727F8272727%7DFD76FF7D27F827F827F8277DFD78FF522727272052A8FD79FF7DF827F8%52A8FD7AFFA87D52A8FD7BFFA8FD52FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 Au*u1 D0 O0 0 0 1 k0 J 0 j 1 w 4 M []0 d0 XR542.2461 1480.4365 m542.1406 1480.7295 541.8828 1481.1201 541.3516 1481.6514 c540.1328 1482.874 538.3594 1484.7686 536.5 1486.7451 C531.0039 1486.6318 530.8477 1485.7725 528.6719 1486.7842 C523.3594 1486.0146 528.125 1499.3428 521.3086 1501.7256 C521.0977 1501.917 520.9766 1501.999 520.8008 1502.1436 C521.5039 1503.1943 521.1289 1503.3584 520.0156 1502.7412 C519.3555 1503.1396 519.1953 1502.9092 519.3555 1502.3428 C517.8203 1501.3271 515.4375 1499.3389 512.5308 1496.3584 c506.4722 1490.1396 485.3589 1470.6006 480.5581 1464.3896 C480.4214 1463.0654 481.4624 1463.1982 V481.5737 1463.0693 481.644 1462.9639 481.7886 1462.8193 C483.7944 1461.499 483.0249 1459.9209 488.4019 1457.5107 C490.4565 1458.4131 493.0933 1458.8115 494.4565 1457.9053 C499.4917 1458.6357 495.2612 1445.2803 502.0151 1442.9326 C502.3823 1442.5928 502.6479 1442.3936 502.9097 1442.1982 C502.8862 1442.1709 502.855 1442.1357 502.8354 1442.1084 C502.5854 1439.8193 505.0933 1441.542 v507.605 1443.2686 523.1719 1459.46 527.9648 1464.4131 c532.7578 1469.3623 541.3281 1477.3037 543.0508 1479.8115 c543.8242 1480.9365 543.4219 1481.1006 542.2461 1480.4365 Cf0 D534.8086 1474.0811 m529.0391 1468.1592 509.6362 1450.1709 503.6558 1443.1045 C503.1753 1444.1006 502.3276 1445.3779 501.5269 1446.2451 C501.5073 1446.9053 497.2104 1449.6553 499.8979 1449.7412 C501.1245 1452.0693 501.23 1456.6436 497.5581 1459.8311 c495.7261 1461.335 492.1206 1462.085 489.2378 1460.7139 C485.8159 1457.9209 487.2729 1462.5498 484.5581 1462.874 C484.0269 1463.3428 483.5034 1463.6943 483.0132 1463.9756 C485.98 1466.2256 500.9917 1481.8389 505.687 1486.6904 c509.9487 1491.0889 517.168 1497.8311 519.9336 1501.042 C520.4336 1500.1475 521.1289 1499.1318 521.7969 1498.4092 C522.1797 1495.9678 525.5469 1497.9482 523.2461 1494.917 C521.9688 1492.6279 521.8086 1487.9326 525.6133 1484.8506 c527.4258 1483.3701 531.0195 1482.6475 533.9023 1483.9521 C534.3984 1486.9014 537.6406 1481.6787 538.582 1481.5967 C539.6602 1480.6514 540.7188 1480.1006 541.4375 1479.9287 C539.9023 1478.8779 537.6016 1476.9482 534.8086 1474.0811 cf*U508.6909 1456.749 m507.8472 1455.9365 503.8315 1461.1865 501.2808 1463.374 C497.7964 1467.1436 494.2847 1468.249 499.7378 1471.4873 C505.8354 1477.5771 511.8706 1483.6201 516.7383 1488.5107 C519.8125 1484.6396 524.8594 1480.2217 525.9258 1479.0225 C531.8047 1473.3389 526.9336 1479.4756 521.875 1484.3389 C520.4219 1483.374 518.2813 1493.1826 513.875 1486.9834 C510.3042 1483.4287 505.9097 1479.0811 501.4097 1474.6357 C499.6519 1472.1318 495.7769 1470.792 495.769 1467.3506 C502.0464 1460.9756 L504.019 1458.9756 505.8394 1457.1201 507.4214 1455.5068 C510.6753 1455.3506 510.8628 1457.9521 512.2729 1458.585 C520.6328 1466.7451 528.8359 1475.624 Y529.0977 1477.0029 527.4375 1474.8076 519.7813 1467.5928 c517.8672 1465.7881 513.8047 1461.8037 508.6909 1456.749 cf505.4292 1468.585 m505.562 1468.6982 505.6011 1468.8154 505.5776 1468.9287 C505.5503 1469.0107 505.5112 1469.0771 505.4604 1469.1357 C505.3315 1469.2568 505.1401 1469.3232 504.8745 1469.3076 c504.6479 1469.292 504.4995 1469.2451 504.4214 1469.1631 C504.3784 1469.1006 504.355 1469.0225 504.355 1468.9287 c504.355 1468.8311 504.3433 1468.7568 504.3159 1468.71 C504.3042 1468.6436 504.1089 1468.2607 503.7261 1467.5654 c503.3745 1466.9404 503.2183 1466.5889 503.2495 1466.5303 C503.2808 1466.4912 503.3042 1466.46 503.3198 1466.4365 C503.3901 1466.3662 503.4917 1466.3232 503.6011 1466.3232 C503.6636 1466.3154 503.7964 1466.3193 503.9995 1466.3311 c504.0815 1466.335 504.1479 1466.374 504.2026 1466.4248 C504.2456 1466.46 504.2808 1466.5225 504.3198 1466.6045 c504.3823 1466.7334 504.4136 1466.8037 504.4214 1466.8076 C504.5894 1466.6084 504.8276 1466.3506 505.1323 1466.0342 c505.6401 1465.5146 506.2495 1464.917 506.9487 1464.249 c507.0073 1464.1943 507.0308 1464.0889 507.0308 1463.9678 c507.0308 1463.8389 507.0659 1463.749 507.1245 1463.7061 C507.2378 1463.6318 507.3901 1463.6084 507.5815 1463.6553 c507.7729 1463.6982 507.9292 1463.792 508.0659 1463.917 C508.2183 1464.0654 508.2808 1464.2295 508.2573 1464.4092 C508.2534 1464.4834 508.2261 1464.5381 508.1792 1464.585 C508.1479 1464.6201 508.0776 1464.6553 507.9604 1464.6943 C507.8511 1464.7412 507.769 1464.792 507.7183 1464.835 C507.0229 1465.4795 506.3589 1466.124 505.7261 1466.7646 c505.4214 1467.085 505.1401 1467.3818 504.8901 1467.6592 C504.9995 1467.8896 505.0854 1468.1006 505.1597 1468.2842 C505.1792 1468.3271 505.2651 1468.417 505.4292 1468.585 Cf509.5229 1466.2217 m509.5464 1466.1982 509.5776 1466.1826 509.6089 1466.1631 C509.7808 1466.0928 510.0308 1466.167 510.3589 1466.4014 C510.4175 1466.4404 510.4683 1466.4756 510.5073 1466.5225 C510.6558 1466.6709 510.7065 1466.8037 510.6558 1466.917 c510.6401 1466.9521 510.6167 1466.9795 510.5933 1467.0029 C510.5542 1467.0381 510.4917 1467.0771 510.394 1467.1123 c510.2964 1467.1475 510.2339 1467.1826 510.1948 1467.2256 C507.0503 1470.3467 L506.9604 1470.585 506.9058 1470.7139 506.8862 1470.7334 c506.7808 1470.8428 506.6167 1470.8584 506.3901 1470.7881 C506.2026 1470.7139 506.0542 1470.6201 505.937 1470.5146 C505.8354 1470.417 505.7808 1470.3154 505.7729 1470.21 c505.7612 1470.0615 505.7886 1469.96 505.8511 1469.8975 C505.8745 1469.8662 505.9292 1469.835 506.019 1469.7998 C506.1089 1469.7725 506.1714 1469.7256 506.2144 1469.6787 C507.8276 1468.1084 508.9058 1467.0732 509.4292 1466.5615 C509.4214 1466.4131 509.4526 1466.2998 509.5229 1466.2217 Cf512.5776 1468.4404 m512.9058 1468.7607 512.8276 1469.4951 512.355 1470.6475 C512.3745 1470.8311 512.3276 1470.9756 512.2183 1471.0889 c512.0854 1471.2217 511.9175 1471.2256 511.7144 1471.0928 C511.644 1471.0537 511.5854 1471.0029 511.5229 1470.9482 C511.2808 1470.7021 511.2534 1470.4756 511.4526 1470.2686 C511.4839 1470.2412 511.519 1470.21 511.562 1470.1787 C511.7104 1469.917 511.8198 1469.667 511.8823 1469.4326 C511.9604 1469.1787 511.9604 1469.0303 511.8901 1468.9795 C511.7573 1468.8936 511.5229 1468.9834 511.1753 1469.2334 c510.8706 1469.4561 510.5698 1469.7295 510.2808 1470.0459 c509.894 1470.4678 509.5698 1470.8896 509.2964 1471.2881 c508.9644 1471.7686 508.8667 1472.0498 508.9917 1472.124 C509.062 1472.1709 509.187 1472.1436 509.3745 1472.0615 C509.562 1471.9678 509.7261 1471.8467 509.8823 1471.6982 C509.9526 1471.5303 509.9917 1471.4404 510.0073 1471.4248 C510.1011 1471.3428 510.2495 1471.3154 510.4683 1471.3857 c510.6558 1471.4404 510.8042 1471.5107 510.9019 1471.6123 c510.9448 1471.6553 510.9722 1471.6943 510.9917 1471.7334 C511.0776 1471.9443 511.062 1472.1006 510.9448 1472.2178 C510.9058 1472.2529 510.7729 1472.3311 510.5503 1472.4404 C510.0542 1472.792 509.6558 1473.0068 509.3511 1473.085 c508.9409 1473.1982 508.5933 1473.1084 508.3042 1472.8232 C508.2612 1472.7842 508.2183 1472.7451 508.1714 1472.6904 c507.8979 1472.3545 507.9448 1471.8154 508.312 1471.0771 c508.6245 1470.4404 509.062 1469.8311 509.6401 1469.2451 c510.1519 1468.7334 510.6323 1468.3857 511.0894 1468.1982 c511.687 1467.96 512.1792 1468.0459 512.5776 1468.4404 cf515.7734 1472.1553 m515.9688 1472.042 516.1445 1472.0264 516.3164 1472.0967 c516.3672 1472.1162 516.4141 1472.1514 516.457 1472.1982 C516.5938 1472.3232 516.6523 1472.5029 516.6445 1472.7451 C516.6445 1472.9795 516.5664 1473.1787 516.4219 1473.3193 c516.3789 1473.3623 516.3359 1473.4014 516.2891 1473.4287 C516.207 1473.4717 516.1016 1473.4795 515.9727 1473.4521 c515.8438 1473.4287 515.7188 1473.3975 515.6094 1473.374 C513.4922 1473.1084 L512.7573 1475.9873 L512.7456 1476.0264 512.7573 1476.0967 512.7847 1476.2021 C512.8081 1476.2803 512.7886 1476.3623 512.73 1476.4521 c512.6479 1476.5732 512.4917 1476.6201 512.2769 1476.5811 c512.0854 1476.5498 511.9292 1476.4795 511.8198 1476.3701 c511.7026 1476.2568 511.6636 1476.1357 511.7104 1475.9912 C511.7729 1475.8701 511.8276 1475.7529 511.8823 1475.6318 C512.5229 1473.2061 L511.2808 1474.4873 L511.2339 1474.5303 511.1987 1474.5928 511.1714 1474.6865 c511.144 1474.7725 511.1128 1474.8389 511.0815 1474.8779 C511.0464 1474.9131 510.9995 1474.9404 510.9448 1474.9561 c510.7261 1475.0225 510.4565 1474.8975 510.1401 1474.6006 C510.0542 1474.5107 510.0073 1474.4482 509.9995 1474.4092 C509.9917 1474.2373 510.0151 1474.124 510.0776 1474.0576 C510.1128 1474.0264 510.1714 1473.9951 510.2651 1473.9639 C510.3589 1473.9365 510.4292 1473.8975 510.4839 1473.8545 C513.6289 1470.8975 L513.668 1470.8584 513.6875 1470.7998 513.6953 1470.71 C513.6992 1470.6318 513.7188 1470.5693 513.7578 1470.5342 C513.8555 1470.4287 514.0156 1470.4014 514.2422 1470.4404 c514.4375 1470.4756 514.5938 1470.5498 514.6992 1470.6592 C514.7969 1470.749 514.8516 1470.8623 514.8594 1470.9912 c514.8672 1471.1201 514.832 1471.2217 514.7578 1471.292 C514.7188 1471.3428 514.6406 1471.3896 514.5234 1471.4404 C514.4141 1471.499 514.3281 1471.5498 514.2813 1471.5889 C513.6016 1472.1631 L515.2617 1472.3428 L515.375 1472.3545 515.5469 1472.2881 515.7734 1472.1553 cf517.1641 1473.8076 m517.1875 1473.7881 517.2109 1473.7686 517.2422 1473.7607 c517.6172 1473.6748 517.9258 1473.6904 518.1641 1473.8193 C518.1875 1473.835 518.2031 1473.8428 518.2148 1473.8584 C518.2617 1473.8975 518.2891 1473.9678 518.2969 1474.0615 c518.3086 1474.1865 518.3203 1474.2725 518.3281 1474.2959 C518.582 1475.0264 L518.7813 1475.1982 518.9023 1475.3428 518.9375 1475.4678 c518.9766 1475.5928 518.9414 1475.7021 518.8555 1475.792 c518.7461 1475.9014 518.5938 1475.9521 518.3867 1475.9561 c518.1797 1475.9561 518.0234 1475.9209 517.9219 1475.8311 C517.8164 1475.7529 517.7773 1475.6748 517.7773 1475.6006 C517.7813 1475.5654 517.7852 1475.5225 517.793 1475.4834 C517.7422 1475.3389 517.6563 1475.1748 517.543 1475.0029 C517.4375 1475.0732 517.2305 1475.2607 516.9219 1475.5771 C516.9844 1475.7412 517.0391 1475.8818 517.082 1475.9951 c517.1016 1476.042 517.1602 1476.1045 517.2695 1476.1943 c517.375 1476.2842 517.4531 1476.3623 517.4883 1476.4326 c517.5469 1476.5459 517.5469 1476.6748 517.4844 1476.8232 C517.4766 1476.8545 517.4531 1476.8857 517.4258 1476.9092 C517.3438 1477.0029 517.1797 1477.0381 516.9492 1477.0029 c516.7188 1476.9639 516.5547 1476.9014 516.4492 1476.7998 c516.3477 1476.6982 516.3125 1476.5967 516.3438 1476.4795 C516.2734 1476.3857 516.2305 1476.3232 516.2305 1476.292 C515.7539 1476.7373 515.3477 1477.1514 515.0156 1477.5381 C515.0234 1477.6475 515.0898 1477.835 515.2188 1478.1006 c515.2695 1478.2061 515.3281 1478.335 515.3984 1478.46 C515.4805 1478.5146 515.5469 1478.5771 515.5938 1478.624 C515.7227 1478.7412 515.7969 1478.874 515.8125 1479.0186 C515.8164 1479.0889 515.7891 1479.1592 515.7344 1479.2217 C515.6406 1479.3076 515.5078 1479.3701 515.3281 1479.4092 C515.1484 1479.4326 515.0156 1479.4248 514.9258 1479.3662 c514.8828 1479.3389 514.8438 1479.3037 514.8125 1479.2764 C514.7578 1479.2256 514.7188 1479.1592 514.6992 1479.085 c514.6719 1478.9795 514.6523 1478.9248 514.6406 1478.9014 C514.2031 1478.0967 L514.1406 1478.0771 514.0781 1478.0537 514.0078 1478.0381 C513.9063 1477.9951 513.8359 1477.96 513.8008 1477.8975 C513.6172 1477.6592 513.5781 1477.4834 513.6953 1477.374 C513.7266 1477.335 513.7734 1477.3115 513.832 1477.3037 C514.9297 1476.1318 515.9883 1475.0576 517.0156 1474.0693 C517.1094 1473.9092 517.1523 1473.8193 517.1641 1473.8076 Cf520.1563 1476.7451 m520.1523 1476.6123 520.1797 1476.5225 520.2461 1476.4834 C520.3594 1476.4014 520.5078 1476.3896 520.6992 1476.4248 C520.8906 1476.4756 521.0508 1476.5654 521.1797 1476.6904 c521.3359 1476.8428 521.4023 1477.0068 521.375 1477.1865 C521.3711 1477.249 521.3477 1477.3193 521.3047 1477.3545 C521.2656 1477.3936 521.1875 1477.4365 521.0781 1477.4756 c520.9609 1477.5146 520.8867 1477.5654 520.8398 1477.6162 C520.1406 1478.2529 519.4805 1478.8936 518.8477 1479.5381 c518.5391 1479.8584 518.2617 1480.1553 518.0117 1480.4326 C518.1133 1480.667 518.2031 1480.874 518.2813 1481.0654 C518.2969 1481.0967 518.3828 1481.1943 518.5508 1481.3506 c518.6797 1481.4756 518.7227 1481.5967 518.6875 1481.7061 C518.6719 1481.7881 518.625 1481.8506 518.5781 1481.9014 c518.4531 1482.0342 518.25 1482.0928 517.9961 1482.0771 c517.7695 1482.0693 517.6133 1482.0186 517.5391 1481.9365 C517.4922 1481.8779 517.4688 1481.8037 517.4688 1481.7061 C517.4766 1481.6123 517.4609 1481.5381 517.4375 1481.4834 C517.418 1481.417 517.2266 1481.0381 516.8477 1480.3506 c516.4922 1479.71 516.3359 1479.3662 516.3711 1479.3037 C516.3945 1479.2686 516.418 1479.2334 516.4375 1479.2178 C516.5156 1479.1436 516.6055 1479.1084 516.7227 1479.0928 C516.7773 1479.0889 516.9063 1479.0967 517.1172 1479.1084 C517.1953 1479.1162 517.2695 1479.1475 517.3203 1479.2061 C517.3633 1479.2373 517.3984 1479.3037 517.4375 1479.3896 C517.5 1479.5107 517.5313 1479.5693 517.5313 1479.5811 C517.7109 1479.3857 517.9453 1479.124 518.25 1478.8115 c518.7578 1478.292 519.3633 1477.6982 520.0625 1477.0225 c520.1211 1476.9639 520.1523 1476.874 520.1563 1476.7451 CfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF