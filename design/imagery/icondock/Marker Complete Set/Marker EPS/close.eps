%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (Nick La) ()%%Title: (close.eps)%%CreationDate: 5/31/10 1:56 PM%%Canvassize: 16383%%BoundingBox: 480 1447 544 1497%%HiResBoundingBox: 480.2417 1447.8877 543.7578 1496.1128%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 512.5 1471.5 512.5 1471.5%AI3_TileBox: 206 1076 818 1868%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 64 64%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 1%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: 469 1516 8 813 750 26 0 0 43 129 0 0%AI5_OpenViewLayers: 7%%PageOrigin:-34 356%AI7_GridSettings: 32 32 32 32 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 100 8%%BeginData: 13498 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD3CFFA852272027527DA8FD76FFA852F827F827F827F82752FD74%FFA8272727F8272727F827272752FD72FFA827F827F827F827F827F827F8%277DFD71FF7D20FD04277D847D202727272052FD71FF2727F82727FD04FF%A8F827F827F8FD70FFA8272727F8A8FD05FF7DF8272727A8FD6FFFA8F827%F827A8FD05FFA827F827F8A8FD6FFFA8FD0427FD06FFA820272727A8FD6F%FFA8F827F8277DFD05FF5227F827F8A8FD39FFA8A87D7D7DA8A8A87DFD0C%A8FFA8FFA8FFA8FFA8FFA8FFA8FD16FF52F8272752FD04FFA8272727F852%FD30FFA8FFA8FFA8A8FFFFFF7D27F827F827F827F827F827F827F827F827%F827F8FD0E275227522752275227522752275227522752275227522727F8%27F82727525227F827F82727522852275227522752275227522752275227%5227522752275227522752275227522752275227282752275227522752FD%0627F852A8FF522027272720272727202727272027272720272727202727%272027272720272727202727272027272720272727202727272027272720%272727202727272027272720272727202727272027272720272727202727%272027272720272727202727272027272720272727202727272027272720%2727272027272720272727207DFF5227F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F8A8842727F8272727F8%272727F8272727F8272727F8272727F8272727F8272727F8272727F82727%27F8272727F8272727F8272727F8272727F8272727F8272727F8272727F8%272727F8272727F8272727F8272727F8272727F8272727F8272727F82727%27F8272727F8272727F8272727F8272727F8272727F8272727F82727277D%7D27F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F87DA8272720272727202727272027272720272727202727%272027272720272727202727272027272720272727202727272027272720%272727202727272027272720272727202727272027272720272727202727%272027272720272727202727272027272720272727202727272027272720%272727202727272027272720272752A87D27F827F8FD08527D527D527D52%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52%7D527DFD1652275227522752275227522752FD06272127F82752FFA8F827%272752FD6FFFA8FFFFFFA8522727F852FF7D27F827F852FD74FFF827F827%27FFA82027272752FD73FFA82727272052FF7D27F827F852FD73FFA8F827%F82727FFA82727F82752FD73FFA827F8272752FF7D27F827F827A8FD72FF%A8F827F82727FFA82727202727FD73FF7D2720272752FF7D27F827F827A9%FD72FFA8F827F82727FFA8F8FD0427FD73FF7D272727F852FF7D27F827F8%27A8FD72FF7DF827F82727FF7D20FD0427FD73FF7D2727272052FF7D27F8%27F827A8FD72FF7DF827F82727FF7D2727F82727FD73FF7D27F8272752FF%5327F827F827A8FD72FF7DF827F82727FF7D2727202727FD73FF53272027%2752FF5927F827F827FD73FF7DF827F82727FF7DF8FD0427FD73FF522727%27F852FF5227F827F852A8FD72FF7DF827F82727FF7D20FD0427FD73FF52%2727272052FF5227F827F852FD10FFA8FFA8FD0BFFA87D7DA8A8FD11FFA8%FFFFFFA8A8A8FD11FFFD047DA8FD15FF7D7DA8FD0AFF7DF827F82727FF7D%2727F82728FD0EFFA85227275252A8FD08FF7E272727F8277DFD0EFFAF27%2727525227F82727A8FD0DFFA82727F827272728A8FD0AFFA8FD05FFA87D%FD0427A8FD09FF5227F8272752FF5227F827F852FD0DFF7EF827F827F827%F87DFD07FF52F827F827F8277DFD0DFF2727F827F827F827F827F87DFD0B%FFA8F827F827F827F827F8A8FD07FFA85227277D7D7D2727F827F827F852%A8FD08FF7DF827F82727FF7D2727202752FD0DFF202727272027272720A8%FD06FF7D2727272027277DFD0CFF7D272727202727272027272720A8FD0A%FF2027272720272727202727FD07FF522720272727202727272027272720%A8FD08FF532720272752FF5227F827F852FD0CFF5227F827F827F827F827%27FD07FF2727F827F827A8FD0CFF27F827F827F8272727F827F827F8FD09%FF2827F827F827F827F827F8277DFD06FF7DF827F827F827F827F827F827%F8277DFD08FF7DF827F82752FF7DF827272752FD0BFFA8272727F8272727%F82727277DFD06FF52F8FD0427FD0CFFA82727F8272752A8FF5227F82727%2752FD07FF7D272727F8272727F8272727F852FD06FF7D272727F8272727%F8272727F82752FD09FF52272727F852FF5227F827F853FD0BFF52F827F8%27F852F827F827F852FD06FF5227F827F827A8FD0BFF5227F827F827A8FF%FFFF5227F827F827A8FD06FF52F827F827F8272727F827F827F8A8FD05FF%7DF827F827F827F827277EA8A87DFD0AFF7DF827F82752FF7D2027272752%FD0BFFFD0427207DFF7D2027272720FD06FF5320FD0427FD0BFFA8272727%202752FD04FFA820272727207DFD06FF2027272720277DFFA82727272027%7DFD05FF522727272027277DA8FD0FFF52272727207DFF5227F827F87DFD%0AFF7D27F827F827A8FFA827F827F8277DFD05FF5227F827F8277DFD0AFF%A8F827F827F87DFD05FF52F827F82727FD05FF7D27F827F82752FFFFFFF8%27F827F87DFD05FF7DF827F827F8A8FD11FF7DF827F82752FF522727F827%7DFD0AFF7D2727F82727FFFFFF2727F827277DFD05FF7D2727F82727A8FD%0AFF7D27F8272727A8FD05FF7D27F8272727A8FD04FF7D2727F82727A8FF%FF7D27F827272752FD05FF5227F8272727A8FD11FF5227F8272752FF2727%F827F87DFD0AFF2727F827F852FFFFFF52F827F82727FD05FF5227F827F8%277DFD0AFF52F827F82727FD06FFA8F827F827F8A8FD04FF5227F827F827%A8FFFF7DF827F827F852A8FD04FF7DF827F82721FD12FF7DF827F82752FF%52272720277DFD09FFA827272720277DFFFFFF532720272727A8FD04FF84%2727202727A8FD0AFF272720272752FD06FFA827202727277DFD04FF5927%27202727FFFFFF7D2720FD0427FD05FF532720272727FD12FF5227202727%52FF5227F827F87DFD09FFA8F827F827F884FFFFA852F827F827F87DFD04%FF7D27F827F8277DFD09FFA827F827F82759FD07FF2727F827F852FD04FF%5227F827F827FD04FF2727F827F827A8FD04FF7DF827F82727FD12FF7DF8%27F82752FF52F82727277DFD09FF7D27F8272727A8FFFFFFF8272727F827%52FD04FFA8F8272727F87DFD09FFA8F8272727F8A8FD07FF522727F82752%FD04FF59F8272727F8FD04FFA82727F8277DFD05FF52272727F827FD12FF%7D272727F87DFF5227F827F87DFD09FF7DF827F827F8A8FFFFFF7DF827F8%27F87DFD04FF7D27F827F82752FD09FF7D27F827F8277DFD07FF5227F827%F852FD04FF7D27F827F82752FD04FFA852527DFD06FF7DF827F82721FD12%FF7DF827F82752FF52202727277DFD09FF522720272727FD05FFA8522720%7DFD05FFA820272727207DFD09FFA820FD0427FD08FF7D2727202727FD04%FFA82027272720277DFD0DFF522727272027FD12FF7D272727207DFF5227%F827F8A8FD09FF52F827F82727FD07FFA8A8FD06FFA827F827F82752FD09%FF7D27F827F827A8FD07FF5327F827F827A8FD04FF52F827F827F8277DFD%0CFF7DF827F827F8FFFFA8A8FD0EFF7DF827F82752FF522727F827A8FD09%FFFD0427F852FD10FF2727F8272752FD09FFA82727F82727FD08FF7DF827%272720FD05FFA827F8272727F82752A8FD0AFF5227F82727277E7D272752%AFFD0CFF7D27F827277DFF2727F827F8A8FD08FFA827F827F82727FD0FFF%A827F827F82727FD09FF7D27F827F827A8FD07FF7D27F827F827A8FD05FF%5227F827F827F827F852A8FD08FF7DF827F827F827F827F827F8A8FD0BFF%7EF827F82752FF5227272027A8FD09FFFD0427207DFD10FF272720272752%FD09FFA82727202727A8FD07FF7D20FD0427FD07FF522727272027272720%277DFD07FF53272027272720272727202727FD0BFF7D272027277DFF2E27%F827F8FD09FFA927F827F82752FD10FF52F827F82727FD09FFA827F827F8%277DFD07FF5227F827F827A8FD07FF5327F827F827F827F82752FD06FF7D%F827F827F827F827F827F827A8FD0AFFA8F827F82752FF52F8272727A8FD%09FF2727F8272752FD06FF52522753A8FD05FF52272727F827AFFD09FFFD%0427F87DFD07FF532727F82727FD09FFA87D2727F8272727F82752FD05FF%52272727F8272727F8FD0427FD0BFFA8272727F87DFF5227F827F8A8FD08%FFA852F827F82752FD05FF5227F827F827A8FD04FF52F827F827F8A8FD09%FF52F827F82752FD07FF2727F827F852FD0CFF7D27F827F827F827A8FD04%FF7DF827F827F827F8FD0452FD0CFFA8F827F82752FF7D20272727FD0AFF%522720272752FD05FF522727202727A8FD04FF522727272027A8FD09FF52%2727272052FD06FFA8272727202759FD0DFFA85227272027277DFD04FF7D%272727202752FD11FFA8272727207DFF5227F82727FD0AFF52F827F82727%FD05FF2727F827F827A8FD04FF7DF827F827F8A8FD09FF7DF827F827F8AF%FD05FF7DF827F827F884FD04FF7D52277DA8FD05FF7D27F827F82727FD04%FF7DF827F827F8FD13FF2727F82759FF7D2727F827FD0AFF52272727F84C%FD04FFA827F82727277DFD05FF7D27F82727277DFFFFFF7D527DFFFFFFA8%27F82727277DFD05FF5227F8272727A8FFFFA8FD0427F827A8FD05FF2027%2727F827FD04FF7D27F8272727A8FD12FF52F827277DFF5227F82727FD0A%FF7DF827F827F8A8FFFFFF7DF827F82727FD06FF7DF827F827F87DA87D27%27F82752FFFFFF2727F827F852FD04FFA827F827F82727FFFFFF5227F827%F827F852FD04FFA827F827F827F8A8FFFFFF7DF827F827F8A8FFFFA87D7D%FD0DFF5227F8277DFF7D27272052FD0AFF842727272027A8FFFFFF272720%27277DFD06FF7D2720FD072720272727A8FFFF7D20FD0427FD04FF7D2727%2027277DFFFFFFA820272727202727A8FD04FFFD04272027A8FFFFFF7D27%20272727A8FFA827202727FD0CFF522027277DFF7D27F82727FD0BFF2727%F827F87DFFFF7D27F827F827A8FD06FFA8F827F827F827F827F827F827F8%7DFFFF7D27F827F82759FFFFFF2727F827F827A8FD04FFA8F827F827F827%52FFFFFFA827F827F827F8FD04FF7EF827F827F8522727F827F82727FD0B%FF5227F8277DFFA8F8272752FD0BFF52F8FD0427FFFF27F82727277DFD07%FF7D272727F8272727F8272727F82752FFFFFF2727F8272727A8FF7D27F8%FD0427FD06FFA8FD0427F827A8FFFFA82727F8272727FD04FF7D272727F8%272727F8272727F8277DFD0AFF7D2727F8A8FF7D27F82727FD0BFF7D27F8%27F8275252F827F82721FD07FFA827F827F827F827F827F827F827F87DFF%FFFF7DF827F827F8525227F827F827F87DFD07FFA8F827F827F8527D8427%27F827F82752FD04FF7DF827F827F827F827F827F827F87DFD0AFF5227F8%277DFFA820272752FD0CFFFD0427202727272027277EFD07FFA820272727%2027272720272727207DFD05FF52202727272027272720272752FD09FF7D%27272027272720272727202727A8FD04FF52272727202727272027272720%27A8FD0AFF7D272720A8FFA827F82752FD0CFFA8F827F827F827F827F852%FD08FFA827F827F827F827F852527D527DFD06FFA827F827F827F827F827%F8277DFD0AFF52F827F827F827F827F827F87DFD05FF7DF827F827F827F8%27277D7D7DA8FD0BFF5227F8277DFFA82727F852FD0DFF84F8272727F827%2752A8FD09FF7D27F8FD0427A8FD0CFFA852F8272727F827272752FD0CFF%522727F8272727F8272752FD07FF52F8272727F8277DFD10FF52F82727A8%FF7D27F82752FD0EFFA82727F827F852A8FD0BFF5227F82727A8FD0FFF7D%2727F827F82752FD0EFF7D2727F827F827F87DFD08FFAF52F827F87DA8FD%11FF5227F8277DFFFF2727207DFD10FFA8A87DA8FD0EFFA8A8A8FD14FFA8%84A8A8FD11FFA8A87D7D7DFD0CFFA852A8FD13FF52202727A8FFA827F827%52FD75FF2727F827A8FFFF20272752FD75FF522727F8A8FFA827F82752FD%75FF2727F8277DFFFF27272752FD75FF27272720A8FFA827F82727FD75FF%2127F827A8FFFF2727F852FD74FFA827F82727FFFFA827F82727FD74FFA8%F827F827A8FFFF27272027FD74FFA827202727FFFFA827F827F8A8FD73FF%A8F827F827A8FFFFFD0427A8FD73FF7DFD0427FFFFA827F827F8A8FD73FF%7DF827F852A8FFFFFD0427A8FD73FF7D27272752FFFFFF27F827F8A8FD73%FF7DF827F852FFFFFF5227F827A8FD73FF7D27F82759FFFFA852F827F8A8%FD73FF7DF827F87DFFFFFF28272027A8FD73FF7D2720277EFFFFFF52F827%F8A8FD73FF7DF827F8A8FFFFFF52272727A8FD73FF7D272727FD04FF52F8%27F87DA8FFA8FD70FF7DF82727FFFFFF7D20272727202727525253527D59%7D7DA87DFD06A8FFA8FFA8FFA8FFAFFFA8FD2BFFA8FFAFFFA8FFAFFFA8FF%A9FFA8FFA8FFA8FFFD08A87DA87DA87DA8FD067D527D527D5252FD0527A8%FFF827F827F827F827F827F827F827F827F827F827F827F827F827F8FD0A%275227522752275227522752275227522752275227522752275227522752%27522752275227522752FD0C27F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F8A8272727F8272727%F8272727F8272727F8272727F8272727F8272727F8272727F8272727F827%2727F8272727F8272727F8272727F8272727F8272727F8272727F8272727%F8272727F8272727F8272727F8272727F8272727F8272727F8272727F827%2727F8272727F8272727F8272727F8272727F8272727F8272727F8272727%285227F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827FF2727202727272027272720272727202727272027%272720272727202727272027272720272727202727272027272720272727%202727272027272720272727202727272027272720272727202727272027%272720272727202727272027272720272727202727272027272720272727%2027272720272727202727272027272720FFFF2727F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F852FFFFFF7D52%27525252FD2027F8272727F8272727F8272727F8272727F8272727F82727%27F8272727F8272727F8272727F8272727F8272727F8272727F8272727F8%272727F8272727F8272727F8272727F8272727F8272727F8272727F82727%272052A8FD0AFFA8FFA8FFA8FFA8FFA8FFA8A8A8AFA8A8A8AFA8A8A8AFA8%A8A8AFFD06A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A8%7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8%A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8AF%FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 Au*u1 D0 O0 0 0 1 k0 J 0 j 1 w 4 M []0 d0 XR542.5361 1451.3369 m542.4072 1451.3291 542.2041 1451.3252 542.0596 1451.3174 C542.3838 1452.626 542.6611 1454.5869 542.7822 1457.1377 c542.9697 1463.1299 543.29 1480.9463 543.126 1487.9189 C543.8096 1488.7549 543.2744 1490.3135 542.2549 1490.7861 C538.0205 1490.6377 526.8408 1490.5986 515.2705 1490.6221 C516.0713 1493.0479 515.4854 1496.208 511.2432 1496.1104 C507.7705 1495.0322 507.5361 1492.5674 508.251 1490.6455 C495.9736 1490.7002 484.7744 1490.8135 482.7119 1490.9385 c480.3096 1491.083 480.0674 1490.0439 480.5869 1489.0713 C480.7158 1485.8096 480.1846 1470.4072 480.5127 1465.0908 c480.7861 1461.1611 480.6924 1454.9932 480.9268 1451.3799 C479.6533 1450.8838 480.3643 1449.4385 481.3643 1448.6338 C481.4971 1448.3213 481.6533 1448.2002 481.8213 1448.3135 C482.0479 1448.1885 482.2744 1448.1064 482.4775 1448.0947 c492.1846 1447.8057 534.2744 1447.8955 542.1377 1447.9189 c544.4775 1447.9814 543.9854 1450.708 542.5361 1451.3369 Cf0 D511.8721 1494.0283 m514.1885 1493.376 513.4385 1491.2314 512.6143 1490.6299 C511.9854 1490.6299 511.3564 1490.6338 510.7275 1490.6377 C509.8682 1491.2744 509.3564 1493.915 511.8721 1494.0283 Cf482.7158 1451.5322 m482.8486 1452.833 482.8994 1454.4502 482.7783 1456.4072 C482.0244 1462.083 483.7119 1479.3721 483.0088 1487.4971 C491.7783 1487.7471 531.4424 1487.5439 540.8838 1487.3916 C540.3564 1483.333 540.3213 1469.7236 540.9189 1465.4463 C541.1963 1461.2158 540.3408 1454.3564 540.5752 1451.2549 C528.0635 1450.7979 488.7549 1450.3604 482.7158 1451.5322 Cf*U495.29 1467.7471 m495.0791 1467.7861 494.8643 1467.8057 494.6494 1467.8057 c493.6963 1467.8057 493.2119 1467.4111 493.2119 1466.626 c493.2119 1466.5088 493.2314 1466.3799 493.2549 1466.2471 C493.04 1465.4463 492.7744 1464.7627 492.458 1464.1729 c492.1182 1463.5361 491.8369 1463.2393 491.5947 1463.2744 C491.2002 1463.3564 490.8994 1463.9775 490.7002 1465.1338 c490.5205 1466.1455 490.4619 1467.2393 490.5049 1468.4268 c490.5518 1469.9971 490.7002 1471.4307 490.9385 1472.7354 c491.2197 1474.3057 491.5439 1475.0439 491.9189 1474.9541 c492.1572 1474.8994 492.3682 1474.6104 492.5557 1474.0869 c492.7393 1473.5557 492.8486 1473.0049 492.876 1472.415 C492.6885 1471.9463 492.5947 1471.6924 492.5947 1471.6416 c492.5947 1471.2939 492.8682 1470.9736 493.415 1470.6807 c493.876 1470.4268 494.3057 1470.2979 494.6924 1470.2979 c494.8525 1470.2979 494.9893 1470.3291 495.1143 1470.3838 c495.6572 1470.6182 495.9307 1470.958 495.9307 1471.3994 c495.9307 1471.5479 495.8174 1471.9463 495.5869 1472.5947 C495.2822 1474.2236 494.9072 1475.4033 494.4697 1476.1455 c493.8721 1477.1338 493.0205 1477.626 491.9189 1477.626 c491.7627 1477.626 491.5869 1477.6221 491.415 1477.6064 c490.2354 1477.4697 489.2939 1476.333 488.6064 1474.1924 c488.0049 1472.3604 487.7119 1470.3252 487.7275 1468.0869 c487.7393 1466.1025 488.0205 1464.4971 488.5635 1463.2744 c489.2705 1461.6768 490.3838 1460.8877 491.9189 1460.8994 c493.1846 1460.9111 494.4463 1462.4971 495.708 1465.6533 C496.083 1465.9658 496.2666 1466.3408 496.2666 1466.7666 c496.2666 1467.2939 495.9424 1467.6143 495.29 1467.7471 cf504.376 1465.79 m504.1963 1465.79 503.9854 1465.7393 503.7197 1465.6182 c503.4697 1465.5088 503.208 1465.3916 502.958 1465.2705 C501.7588 1464.79 L501.04 1475.8096 L501.0244 1475.915 501.0791 1476.0283 501.1963 1476.1455 c501.3174 1476.2705 501.3799 1476.3877 501.3799 1476.5088 c501.3799 1476.6143 501.3447 1476.7393 501.2861 1476.8916 C501.1729 1477.1455 500.9189 1477.3604 500.5088 1477.5439 c500.1104 1477.7314 499.6846 1477.8213 499.2432 1477.8213 c498.7197 1477.8213 498.3291 1477.7002 498.0439 1477.4463 c497.8447 1477.2705 497.7432 1477.0908 497.7432 1476.9111 c497.7432 1476.7744 497.8135 1476.6104 497.958 1476.415 c498.0947 1476.2236 498.165 1476.1025 498.165 1476.0479 C499.0049 1463.9541 L499.0127 1463.7939 498.9307 1463.6064 498.7314 1463.3955 C498.54 1463.1807 498.4424 1462.9893 498.4424 1462.8213 c498.4424 1462.7393 498.458 1462.6494 498.4854 1462.5596 c498.6299 1462.0908 498.9072 1461.7002 499.3057 1461.3799 c499.7002 1461.0635 500.0947 1460.9307 500.4854 1460.9854 c501.1064 1461.0752 501.5479 1461.2549 501.7979 1461.5361 c502.0908 1461.8838 502.3486 1462.0908 502.5791 1462.1572 c502.8018 1462.2275 503.165 1462.2588 503.6729 1462.2588 c504.1807 1462.2588 504.5713 1462.3096 504.8408 1462.4072 c505.1143 1462.5049 505.3564 1462.708 505.5557 1463.0205 C505.7666 1463.3174 505.8721 1463.6455 505.8721 1463.9775 c505.8721 1464.1729 505.8291 1464.3564 505.7471 1464.5166 c505.3135 1465.3643 504.8486 1465.79 504.376 1465.79 cf*u1 D512.5635 1477.6064 m512.4385 1477.6572 512.2861 1477.6846 512.1025 1477.6846 c511.9033 1477.6846 511.5908 1477.6494 511.1689 1477.5791 c510.7588 1477.5049 510.4619 1477.4658 510.3057 1477.4658 c510.1689 1477.4658 509.9814 1477.5049 509.7275 1477.5791 c509.4697 1477.6494 509.2822 1477.6846 509.1689 1477.6846 c509.0088 1477.6846 508.8604 1477.6377 508.7275 1477.5439 C508.1689 1477.1768 507.6299 1476.1963 507.1143 1474.6143 c506.5518 1472.9111 506.3135 1471.3135 506.3955 1469.8213 c506.6768 1464.333 508.1846 1461.4189 510.9229 1461.0986 c511.2314 1461.0635 511.5439 1461.0244 511.8604 1460.9854 c512.1729 1460.9541 512.4814 1460.9932 512.8018 1461.0986 c513.5986 1461.3408 514.3486 1462.4072 515.0557 1464.3018 c515.7666 1466.2002 516.0635 1468.0361 515.9697 1469.8213 c515.7666 1474.1768 514.6182 1476.7627 512.5635 1477.6064 cf0 D512.5049 1465.2705 m511.9932 1463.9189 511.5361 1463.2393 511.1221 1463.2393 c510.6846 1463.2393 510.2275 1463.9893 509.7471 1465.5049 c509.2666 1467.0127 509.0283 1468.4541 509.0283 1469.8213 c509.0283 1470.8721 509.2158 1472.0947 509.5908 1473.4775 c509.9424 1474.7432 510.2354 1475.4229 510.4541 1475.5283 c510.6729 1475.6416 510.8799 1475.6885 511.0791 1475.6885 c511.8174 1475.6885 512.3721 1474.9854 512.7432 1473.5752 c512.9619 1472.7354 513.1455 1471.4893 513.2822 1469.8213 C513.29 1469.6455 513.2939 1469.4736 513.2939 1469.2822 c513.2939 1468.0166 513.0322 1466.6846 512.5049 1465.2705 cf*U523.1143 1469.4658 m521.665 1470.1455 520.9189 1471.0439 520.876 1472.1807 c520.8564 1472.8174 520.9541 1473.3799 521.1807 1473.876 c521.4346 1474.4463 521.79 1474.7471 522.2354 1474.7705 c522.7041 1474.8018 522.9385 1474.6143 522.9385 1474.2119 c522.9385 1474.1455 522.9307 1474.083 522.9111 1474.0127 C522.9424 1473.9893 522.9541 1473.9619 522.9541 1473.9346 c522.9541 1473.9072 522.8955 1473.79 522.7627 1473.5752 c522.6338 1473.3564 522.5986 1473.1533 522.6338 1472.9346 c522.7275 1472.3096 522.9775 1471.8291 523.376 1471.4775 c523.7314 1471.1611 524.1338 1471.001 524.5752 1471.001 c525.1572 1471.001 525.5479 1471.2432 525.7549 1471.7432 c525.8213 1471.915 525.8525 1472.1299 525.8525 1472.3955 c525.8525 1472.8135 525.7744 1473.2666 525.6299 1473.7744 C525.5752 1474.7627 525.3486 1475.583 524.9541 1476.2471 c524.3408 1477.3135 523.3682 1477.8447 522.0361 1477.8447 c520.8955 1477.8447 519.9346 1477.2471 519.1689 1476.0479 c518.4307 1474.9346 518.0752 1473.6494 518.0908 1472.2158 c518.1025 1471.3252 518.3525 1470.4697 518.8408 1469.6416 c519.3916 1468.7354 520.1104 1468.1025 521.001 1467.7275 c522.1143 1467.2627 522.7588 1466.9502 522.9111 1466.8057 c523.2744 1466.4658 523.4541 1465.79 523.4541 1464.79 c523.4541 1463.6729 523.0635 1463.1182 522.2783 1463.1182 c521.9854 1463.1182 521.751 1463.2744 521.5791 1463.5947 c521.3994 1463.9189 521.2393 1464.2354 521.0791 1464.5518 C520.7471 1465.7236 520.0869 1466.3135 519.1064 1466.3135 c518.6494 1466.3135 518.1494 1466.165 517.6104 1465.8721 c517.3252 1465.7236 517.1885 1465.5361 517.1885 1465.3096 c517.1885 1464.8604 517.6885 1464.3057 518.6846 1463.6533 C519.6064 1461.7939 521.04 1460.8604 522.9932 1460.8604 c523.9697 1460.8604 524.7822 1461.251 525.4385 1462.0283 c526.1025 1462.8057 526.4307 1463.7158 526.4307 1464.7549 c526.4307 1466.0947 526.1104 1467.1416 525.4854 1467.8838 c525.0518 1468.4033 524.2627 1468.9307 523.1143 1469.4658 cf534.708 1477.8018 m534.5557 1477.8291 534.4385 1477.8447 534.3291 1477.8447 c534.0986 1477.8447 533.9072 1477.7939 533.7275 1477.6846 c533.4697 1477.5361 533.3213 1477.458 533.2705 1477.4463 C530.8721 1476.6885 L530.7119 1476.7627 530.5439 1476.8486 530.3721 1476.9463 C530.1064 1477.0713 529.8877 1477.1143 529.7197 1477.0908 c528.9033 1476.9697 528.4971 1476.6885 528.4971 1476.2471 c528.4971 1476.1182 528.5479 1475.9814 528.6377 1475.8486 C528.5479 1471.4736 528.5713 1467.3486 528.7197 1463.4775 C528.5713 1462.9814 528.4971 1462.7158 528.4971 1462.6807 c528.4971 1462.5869 528.5166 1462.501 528.5596 1462.4385 C529.1299 1461.5479 529.7705 1460.9932 530.4736 1460.7822 C530.54 1460.7666 530.6064 1460.7627 530.6533 1460.7627 c530.8096 1460.7627 530.9932 1460.8486 531.1924 1461.0244 C531.4619 1461.2471 531.6299 1461.3799 531.7119 1461.4189 C533.5869 1462.3564 L534.3057 1462.3057 534.8174 1462.3643 535.1221 1462.5361 c535.4307 1462.708 535.583 1462.9736 535.583 1463.3369 c535.583 1463.7432 535.3838 1464.1533 534.9814 1464.5518 c534.5869 1464.9541 534.1963 1465.165 533.8252 1465.1924 c533.4775 1465.2197 533.2393 1465.1572 533.1104 1465.0088 c533.04 1464.9307 532.9775 1464.8486 532.9072 1464.7549 C532.54 1464.5674 532.0713 1464.4072 531.5127 1464.2783 C531.4307 1464.6221 531.3916 1465.3916 531.3916 1466.5908 C531.833 1466.79 532.2041 1466.958 532.5088 1467.1104 c532.6143 1467.1611 532.8604 1467.1729 533.251 1467.1377 c533.6377 1467.1064 533.9268 1467.1221 534.126 1467.1885 c534.458 1467.2939 534.708 1467.5479 534.8682 1467.9424 c534.9033 1468.0361 534.9229 1468.1299 534.9229 1468.2236 c534.9229 1468.5869 534.6689 1468.9502 534.1572 1469.3291 c533.6416 1469.7002 533.2002 1469.8877 532.8096 1469.8877 c532.4229 1469.8877 532.1494 1469.7393 531.9893 1469.4658 C531.6729 1469.4111 531.4736 1469.3525 531.3916 1469.3018 C531.3174 1471.0869 531.3174 1472.6729 531.3916 1474.0557 C531.6299 1474.251 532.126 1474.4932 532.8721 1474.7705 c533.1768 1474.8916 533.5166 1475.0088 533.9072 1475.1338 C534.1729 1475.0908 534.4033 1475.0674 534.6064 1475.0674 c535.0791 1475.0674 535.4775 1475.2002 535.7822 1475.4502 c535.9346 1475.5713 536.001 1475.7432 536.001 1475.9736 c536.001 1476.3252 535.8604 1476.708 535.5752 1477.1182 c535.2861 1477.5283 534.9971 1477.751 534.708 1477.8018 cfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF