%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (Nick La) ()%%Title: (video reel.eps)%%CreationDate: 5/31/10 1:44 PM%%Canvassize: 16383%%BoundingBox: 481 1441 543 1503%%HiResBoundingBox: 481.3594 1441.4619 542.6406 1502.5391%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 512.5 1471.5 512.5 1471.5%AI3_TileBox: 206 1076 818 1868%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 64 64%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 1%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: 469 1516 8 813 750 26 0 0 43 129 0 0%AI5_OpenViewLayers: 7%%PageOrigin:-34 356%AI7_GridSettings: 32 32 32 32 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 128 8%%BeginData: 14988 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD37FFA8A87D7D527D5252FD042720272752527DA8FD68FFA87E52%522727F827F827F827F827F827F827F827F827F82727527DFD61FFA87D7D%FD0427F8272727F8272727F8272727F8272727F8272727F8272727F8527D%A8A8FD58FFA87E5227F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827277D7DFD52FFA87E52272727202727%272027272720272727202727272027272720272727202727272027272720%27272720FD04277DA8FD4DFFA85227F827F827F827F827F827F827F827F8%272752527D527D59FD057D525227272027F827F827F827F827F827F827F8%27277DA8FD48FF7D522727F8272727F8272727F8272727527D7DA8A8FD11%FFA87D52522727F8272727F8272727F82727277DFD44FFA87D2127F827F8%27F827F827F827275253A8A8FD19FFA8A85952F827F827F827F827F827F8%27F8527EFD40FF7D2727272027272720FD04277D84FD23FF7D7D52522727%202727272027272752FD3DFFA82727F827F827F827F827F8537DFD29FFA8%A85227F827F827F827F827F87DFD3AFF7DF8272727F8272727F8527DFD2F%FFA87DF8272727F8272727F852A8FD37FF52F827F827F827F827277DA8FD%32FFA85227F827F827F827F82752FD34FFA85227272027272720527DFD38%FF7D2027272720FD0427A8FD31FF7D27F827F827F827F87DA8FD3AFF7EF8%27F827F827F827F87DFD2FFF52272727F827272752FD3EFFA8FD0427F827%2727F852FD2DFF2727F827F827F8277DFD41FF5227F827F827F827F827A8%FD2AFF2727202727272052A8FD43FF7D272027272720272727A8FD28FF27%27F827F827F852FD46FF7D27F827F827F827F8277DFD26FF2727F8272727%F87DFD48FFA852F8272727F82727277DFD24FF2727F827F827F87DFD14FF%FD047D527D7DA8A8FD2DFFA852F827F827F827F8277DFD22FF5227272720%2727A8FD12FF7D52FD042720FD0427527DFD2EFF7D2727202727272027A8%FD20FF5927F827F827F8A8FD11FFA82727F827F827F827F827F827F827F8%52A8FD2CFF7DF827F827F827F827A8FD1EFF7D272727F82727A8FD11FF7D%2727F8272727F8272727F8272727F8272727A8FD2CFF7D2727F8272727F8%52FD1DFFA827F827F827F8A8FD11FF7DF827F827F827F827F827F827F827%F827F827F8277DFD2CFF52F827F827F827F87DFD1CFF522027272720A8FD%10FFA85220272727202727272027272720272727202727272052FD2DFF7D%20272727202727A8FD1AFF53F827F827F87DFD10FFA827F827F827F827F8%27F827F827F827F827F827F827F827F8A8FD2DFF52F827F827F827F8A8FD%18FF84F8272727F852FD11FF52F8272727F8272727F8272727F8272727F8%272727F827272752FD18FFA85252275228537DFD0EFF52F8272727F82752%FD17FFA8F827F827F827A8FD10FFA8F827F827F827F827F827F827F827F8%27F827F827F827F827F87DFD16FF7D27F827F827F827F827F87DFD0CFFA8%27F827F827F82752FD16FF522720272727A8FD11FF522720272727202727%27202727272027272720272727202727277DFD15FF532720272727202727%272027277DFD0CFF7E27272720272727A8FD14FF5927F827F8277DFD11FF%A827F827F827F827F827F827F827F827F827F827F827F827F82727FD15FF%7D27F827F827F827F827F827F827F87DFD0CFF5227F827F827F852FD13FF%A827F8FD0427FD12FFA8F8272727F8272727F8272727F8272727F8272727%F8272727F8A8FD15FF27F8272727F8272727F8272727F8272752A8FD0BFF%FD0427F82727A8FD12FF52F827F827F8A8FD12FF7D27F827F827F827F827%F827F827F827F827F827F827F827F852FD15FFA8F827F827F827F827F827%F827F827F827F852A8FD0AFFA8F827F827F82727FD11FFA827272027277D%FD13FFA820272727202727272027272720272727202727272027274CA8FD%15FF7D2720272727202727272027272720272727207DFD0BFFA827272027%27277DFD10FF2727F827F852FD14FFA827F827F827F827F827F827F827F8%27F827F827F827F827A8FD16FF7DF827F827F827F827F827F827F827F827%F827F8A8FD0BFF7DF827F827F827A8FD0EFF7D27F82727277DFD15FF2727%F8272727F8272727F8272727F8272727F8272752A8FD17FF52272727F827%2727F8272727F8272727F8FD0427FD0CFF522727F827277DFD0DFFA827F8%27F82752FD16FF52F827F827F827F827F827F827F827F827F827277DFD19%FF52F827F827F827F827F827F827F827F827F827F8277DFD0BFF7D27F827%F827F8A8FD0CFF7D2727202727A8FD16FFA8272027272720272727202727%272027A8FFA8FD1BFF522727272027272720272727202727272027272720%7DFD0CFF52272027272752FD0BFFA8F827F827F852FD18FF5227F827F827%F827F827F827F827F8A8FD1DFF7DF827F827F827F827F827F827F827F827%F827F82727FD0CFFA8F827F827F827A8FD0AFF5227F8272727A8FD19FF52%27F8272727F8272727F82727277DFD1DFFA827F8272727F8272727F82727%27F8272727F8272727A8FD0CFF7D2727F8272759FD09FFA827F827F82752%FD1BFF7D522727F827F827F827277DA8FD1FFF2727F827F827F827F827F8%27F827F827F827F827F8A8FD0CFFA827F827F827F8A8FD08FF7D27272027%27A8FD1EFFA87D527D7DA8A8FD22FFA82027272720272727202727272027%2727202727277DFD0DFF5227202727277DFD08FF2727F827F852FD49FF52%F827F827F827F827F827F827F827F827F827F87DFD0DFFA8F827F827F852%FD07FFA827F82727277DFD49FFA827F8272727F8272727F8272727F82727%27F8277DFD0EFF522727F82727FD07FF7DF827F82727FD4BFF527DA852F8%27F827F827F827F827F827F827F8A8FD0EFF5927F827F827A8FD06FF5227%2027277DFD4EFF52272027272720272727202727272027A8FD0FFF272720%27277DFD05FFA827F827F82784FD4EFF7DF827F827F827F827F827F827F8%2727FD10FF52F827F82727FD05FFA8F8FD0427FD35FFA87D527D527D53A8%A8FD11FFA8272727F8272727F8272727F8272752FD10FF7D272727F827A8%FD04FF5227F827F87DFD32FF7D52F827F827F827F827F827277DA8FD0FFF%5327F827F827F827F827F827F8277DFD10FFA8F827F827F87DFD04FF5220%272727A8FD30FFA82727202727272027272720272727202752FD0FFF7D27%2027272720272727202727FD12FF522727202752FFFFFFA8F827F82727FD%30FF7DF827F827F827F827F827F827F827F827F827F87DFD0EFF7D27F827%F827F827F827F8A8FD12FF5227F827F827A8FFFF7D272727F852FD2FFF7D%2727F8272727F8272727F8272727F8272727F827277DFD0FFF7DFD0427F8%27277EFD13FF7DF8272727F8A8FFFF52F827F82753FD2EFF7DF827F827F8%27F827F827F827F827F827F827F827F827F852FD10FF7D52275252A8FD14%FF7D27F827F8277DFFFFFD042720A8FD2DFFA82027272720272727202727%27202727272027272720272727207DFD29FFA820272727207DFFA827F827%F827A8FD2DFF2727F827F827F827F827F827F8272727F827F827F827F827%F827F8A8FD28FFA827F827F82727FFA82727F82727FD2DFF7D272727F827%2727F82727527DA8FFFFA8A85227F8272727F8FD0427FD29FF2727F82727%27A87D27F827F852FD2CFFA827F827F827F827F827F87DAFFD07FFA852F8%27F827F827F82752FD28FF52F827F827F8A87D2727202752FD2CFFA82027%272720FD0427FD0CFFA82727202727272027A8FD27FF5227202727277D52%27F827F87DFD2CFF2727F827F827F82727FD0EFFA8F827F827F827F852FD%27FF7DF827F827F87D52F82727277DFD14FFA87D7DA8FD13FFA8272727F8%272727F8A8FD0FFFA82727F8272727F8A8FD26FF7D272727F827522727F8%27F87DFD12FF7D27F827F82727FD12FF7DF827F827F827F852FD11FF52F8%27F827F82752FD26FF7DF827F827F85227202727277DFD11FF7D27202727%27202727A8FD10FF52272727202727277DFD11FF7D27202727272052FD26%FF7D272727202727F827F827F87DFD10FF7D27F827F827F827F827F8A8FD%0FFF27F827F827F827F8A8FD11FFA8F827F827F82727FD26FFA8F827F827%F8FD0427F8277DFD0FFFA827F8272727F8272727F82727FD0FFF2727F827%2727F827A8FD11FFA8272727F8272727A9FD25FFA827F8272727F8F827F8%27F87DFD0FFF52F827F827F827F827F827F82728FD0DFFA827F827F827F8%27F8A8FD11FFA8F827F827F82727FD26FFA8F827F827F8FD042720277DFD%0EFFA827272027272720272727202727277DFD0DFF272720272727202784%FD11FF7D2727272027277DFD26FFA8272027272720F827F827F87DFD0EFF%2E27F827F827F827F827F827F827F852FD0DFF52F827F827F827F87DFD11%FF7DF827F827F827A8FD26FFA8F827F827F82727F827272752FD0DFFA827%F8272727F8272727F8272727F82727A8FD0CFF52272727F827272752FD11%FF2727F8FD0427FD27FFA8272727F827272027F827F87DFD0DFF7DF827F8%27F827F827F827F827F827F8277DFD0CFF7DF827F827F827F8277DFD0FFF%7D27F827F827F852FD27FFA8F827F827F852522027272752FD0DFF522720%2727272027272720272727202727A8FD0CFFA8272727202727272052FD0F%FF532727202727277DFD27FFA82727272027522727F827F852FD0DFF52F8%27F827F827F827F827F827F827F827FD0EFF5227F827F827F827F852A8FD%0CFF7DF827F827F827F8A8FD27FFA8F827F827F87D7D2727F82752FD0DFF%FD0427F8272727F8272727F8FD0427A87DA8FD0CFFFD0427F8272727F827%A8FD0AFF7D2727F8272727F852FD28FF7D27F82727277D5227F827F827FD%0CFFA827F827F827F827F827F827F827F827F827F82752FD0CFF7DF827F8%27F827F827F82752A8FD06FF7D27F827F827F827F8277DFD0DFFA87D5252%272727527EFD12FF7DF827F827F87DA82727202727FD0DFFFD0427202727%27202727272027272720272752FD0DFF52272720272727202727272052FD%047D27272027272720FD0427FD0CFFA85227202727272027272752FD11FF%5227202727277D7D27F827F827A8FD0CFF27F827F827F827F827F827F827%F827F827F82727FD0DFFA827F827F827F827F827F827F827F827F827F827%F827F827F827F87EFD0BFF7DF827F827F827F827F827F82752FD10FF52F8%27F827F8A8FFFD0427F8A8FD0CFF5227F8272727F8272727F8272727F827%2727F827A8FD0DFFA8522727F8272727F8272727F8272727F8272727F827%2727F87DFD0BFF522727F8272727F8272727F82727277DFD0FFFFD0427F8%27A8FF52F827F82759FD0CFF7DF827F827F827F827F827F827F827F827F8%27F8A8FD0EFFA852F827F827F827F827F827F827F827F827F827F827F87D%FD0AFFA828F827F827F827F827F827F827F827F827A8FD0DFF7D27F827F8%2721FFFF52272727207DFD0CFF8427202727272027272720272727202727%272027A8FD10FF7D20272727202727272027272720272727205252A8FD0B%FF7D2027272720272727202727272027272720A8FD0DFF7D202727272052%FFFF7DF827F82727FD0DFF2727F827F827F827F827F827F827F827F827F8%A8FD11FFA82727F827F827F827F827F827275252A8A8FD0EFF52F827F827%F827F827F827F827F827F82752FD0DFF5227F827F82752FFFFA827F82727%27A8FD0CFFA82727F8272727F8272727F8272727F8272727A8FD13FF7D52%2727F8272727F8277DFD13FF5227F8272727F8272727F8272727F8272752%FD0CFFA8272727F827277DFFFFFF2727F827F8A8FD0DFF52F827F827F827%F827F827F827F827F82752FD15FFA8A85252F82727527DFD11FF7D52F827%F827F827F827F827F827F827F827F82727FD0CFFA8F827F827F827A8FFFF%FF7D2027272759FD0DFFA827202727272027272720272727202727A8FD2E%FFA8272027272720272727202727272027272720272727FD0CFF53272727%202727FD04FFA827F827F852FD0EFF2827F827F827F827F827F827F827F8%52FD2EFFA827F827F827F827F827F827F827F827F827F827F82727FD0CFF%52F827F827F852FD05FF5227F82727AFFD0EFF2727F8272727F8272727F8%2727277DFD2EFF52F8272727F8272727F8272727F8272727F8272727F852%FD0BFFA82727F82727277DFD05FF7DF827F8277DFD0EFFA82727F827F827%F827F827F82727FD2EFFA8F827F827F827F827F827F827F827F827F827F8%27F82752FD0BFF5227F827F82720FD07FF2720272752FD10FF5227272720%272727202752FD2FFF7D272027272720272727202727272027272720FD04%27FD0CFF52272720272752FD07FF5227F827F8A8FD10FFA87D2827F82727%527DFD30FF52F827F827F827F827F827F827F827F827F827F827F87DFD0B%FFA8F827F827F8277DFD07FFA82727F82752FD15FFA8FD33FFF8272727F8%272727F8272727F8272727F8272727F853FD0CFF5227F8FD0427FD08FFA8%27F827F827A8FD47FF7D27F827F827F827F827F827F827F827F827F827F8%277DFD0BFFA827F827F827F87DFD09FF7D272027277DFD47FFA820272727%2027272720272727202727272027272752FD0CFF7D272720272727A8FD0A%FFF827F827F8A8FD46FF7D27F827F827F827F827F827F827F827F827F827%52FD0DFFF827F827F82752FD0BFF7D2727F82752FD47FF2727F8272727F8%272727F8272727F827272752FD0DFF5227F8272727F8A8FD0BFF7D27F827%F827A8FD46FF53F827F827F827F827F827F827F827F82752FD0DFFA827F8%27F827F852FD0DFF522720272752FD25FFA87D7D7DA8A8FFFFFFA8A8FD17%FF522027272720272727202727272052A8FD0EFFA8272720272727A8FD0D%FFA8F827F827F8A8FD21FFA85227F827F827F82752FFFF52F85252A8FD15%FF7D2727F827F827F827F85252A8FD10FF5227F827F82752FD0FFF522727%F82727FD1FFFA852F8272727F8272727F82752A8F8272727F852A8FD15FF%A87D7D7D527D7DA8FD12FFA827F8272727F8FD10FF7D27F827F82752FD1D%FF7D27F827F827F827F827F827F827F827F827F827F82752FD2EFF7DF827%F827F87DFD11FF522720272727A8FD1CFF52272720272727202727272027%2727202727272027272752FD2CFFA927272027274CFD13FFF827F827F827%A8FD1AFF84F827F827F827F827F827F827F827F827F827F827F827F82752%FD2BFF2727F827F8277DFD13FF7D2727F827277DFD1AFF7D27F8272727F8%272727F8272727F8272727F8272727F82727277DFD29FF7D27F827272752%FD15FF52F827F827F87DFD19FF7DF827F827F827F827F827F827F827F827%F827F827F827F827F827A8FD27FF7D27F827F82727FD16FFA82720272727%20FD19FF7D27202727272027272720272727202727272027272720272727%207DFD26FFA8272727202727A8FD17FF5327F827F82727FD19FFF827F827%F827F827F827F827F827F827F827F827F827F827F82727FD25FFA827F827%F827F87DFD19FF5227F827272752FD18FF522727F8272727F8272727F827%2727F8272727F8272727F8272727FD24FFA8522727F8272752FD1BFFF827%F827F82752FD17FF7D27F827F827F827F827F827F827F827F827F827F827%F827F82727FD23FFA852F827F827F827A8FD1BFFA82027272720277DFD17%FF5227202727272027272720272727202727272027272720272752FD22FF%A852202727272027A8FD1DFF7DF827F827F82752FD17FF2727F827F827F8%27F827F827F827F827F827F827F827F8277DFD21FFA827F827F827F8277D%FD1FFF7DF8272727F8277DFD16FFA82727F8272727F8272727F8272727F8%272727F8FD0427FD21FFA827F8272727F8277DFD21FF52F827F827F82752%FD16FFA8F827F827F827F827F827F827F827F827F827F827F87EFD20FF59%27F827F827F8277DFD23FF5227272027272752FD16FFA8FD042720272727%20272727202727272027277DFD20FF52272727202727277DFD25FF52F827%F827F82728FD17FF5227F827F827F827F827F827F827F827F87DFD1FFFA8%2727F827F827F82759FD27FF522727F8FD0427A8FD16FF7D522727F82727%27F8272727F82727A8FD1FFF7DF8272727F82727277DFD28FFA852F827F8%27F827F87DFD17FFA85252F827F8272727205259FD1FFFA852F827F827F8%27F8277DFD2BFF7D2027272720272752A8FD19FFA8FFFFFFA8FD21FF7D27%2727202727272027A8FD2DFF7DF827F827F827F82752A8FD3BFFA82727F8%27F827F827F827A8FD2FFFA8FD0427F8272727F87DA8FD37FFA87DF82727%27F8272727F852FD33FF5227F827F827F827F82752FD35FF5327F827F827%F827F827F852A8FD34FF7D272027272720FD04277DA8FD30FF84FD042720%2727272027277DFD37FFA852F827F827F827F827F82752A8FD2CFF7D52F8%27F827F827F827F827F8A8FD3AFF7DFD0427F8272727F82727527DFD27FF%A87D2727F8272727F8272727F82752FD3DFFA85227F827F827F827F827F8%27277DA8FD22FFA85227F827F827F827F827F827F8277DFD40FFA8522027%27272027272720FD04277DA8FD1CFFA87D52272720272727202727272027%277DFD44FFA82727F827F827F827F827F827F82727527DA8A8FD0FFFA8A8%7D7E59522727F827F827F827F827F827F827F82752FD48FF7E592727F827%2727F8272727F8272727F827275252FD047D84FD047D5252FD0427F82727%27F8272727F8272727F827272752A8FD4CFFA85227F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827277DA8FD51FFA8595220272727202727272027272720272727%20272727202727272027272720272727202727272027527DA8FD57FFA859%522727F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F852527DA8FD5EFFA87E52522727F8272727F8272727F8272727F82727%27F8272752527DA8FD68FFA8A8FD047D527D5253527D527D7D7E7DA8A8FD%36FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 Au*u1 D0 O0 0 0 1 k0 J 0 j 1 w 4 M []0 d0 XR542.3242 1468.4082 m542.7305 1471.0488 542.7344 1473.3574 542.3984 1474.9941 C542.0586 1477.4941 541.4609 1479.6973 540.7656 1481.7676 C540.75 1481.8379 540.7344 1481.8926 540.7188 1481.9629 C540.6289 1482.9707 539.9688 1484.4746 538.9453 1486.1855 C536.0586 1491.8965 532.1797 1495.4512 529.2578 1497.127 C527.8125 1498.209 526.3984 1499.0215 525.1328 1499.3574 C523.8242 1500.1738 521.7656 1500.8184 519.4961 1501.3105 C518.6641 1501.5527 517.7656 1501.8027 516.7227 1502.0684 C515.3047 1502.6738 512.2466 1502.6738 508.7778 1502.1895 C507.9497 1502.1191 507.2036 1502.0137 506.6763 1501.8418 C506.6646 1501.8379 506.6489 1501.8379 506.6372 1501.834 c506.1997 1501.752 505.7622 1501.666 505.3208 1501.5723 c505.2114 1501.5488 505.0864 1501.5137 504.9731 1501.4902 c504.5747 1501.4004 504.1724 1501.3105 503.7739 1501.209 c503.6724 1501.1816 503.5669 1501.1504 503.4614 1501.123 c499.5161 1500.0879 495.813 1498.5371 494.0083 1496.623 C489.8677 1494.2676 483.6919 1485.1191 483.0513 1481.5645 C482.0474 1478.3652 480.1216 1472.1934 482.4966 1464.1816 C482.7778 1463.4551 483.0278 1462.8066 483.2778 1462.1621 C485.1606 1456.5371 488.7974 1450.4941 495.1958 1446.3965 C507.6294 1437.7012 524.0898 1442.3027 529.0977 1446.502 C529.7578 1446.9824 530.2852 1447.4941 530.8867 1447.9902 c531.0273 1448.0996 531.1602 1448.2168 531.2969 1448.3301 c539.582 1455.3926 542.1406 1463.5918 542.3242 1468.4082 Cf0 D518.0977 1444.5098 m511.2817 1443.5449 506.5513 1442.7754 496.7817 1448.3457 C494.7739 1449.3379 492.0396 1451.6973 489.5864 1454.959 c489.0669 1455.6738 488.5708 1456.3848 488.106 1457.0918 c487.1177 1458.6543 486.2271 1460.377 485.5044 1462.2168 c484.4458 1465.1504 483.856 1468.7363 483.9771 1473.9746 C483.8013 1478.709 487.4224 1489.1895 495.7427 1495.041 C495.8169 1495.0996 495.9067 1495.1543 495.9849 1495.2129 C497.1646 1496.0215 498.4263 1496.7402 499.7935 1497.334 C500.6919 1497.7832 501.5903 1498.0723 502.4927 1498.3926 c507.27 1499.9238 513.2188 1500.5918 518.3477 1499.1738 C520.3516 1498.5215 521.3359 1498.3027 521.8008 1498.3027 C522.8711 1497.916 523.7344 1497.541 524.1328 1497.291 C524.8086 1497.0371 525.5391 1496.6621 526.293 1496.2051 C526.2266 1496.2051 526.1484 1496.2129 526.0859 1496.2168 C525.7734 1496.1934 531.4688 1492.873 535.1016 1487.2441 C535.3008 1487.0723 535.4805 1486.8457 535.6641 1486.6387 C537.0391 1484.4629 538.1484 1482.1152 538.7773 1479.6816 c539.5664 1476.248 539.8438 1472.2598 539.6172 1468.5645 C539.2188 1466.166 538.375 1462.3301 536.4063 1458.7441 C535.3516 1453.7949 527.1367 1447.7441 519.9141 1444.9512 C519.3047 1444.7871 518.6914 1444.6035 518.0977 1444.5098 cf*U*u1 D519.5078 1476.5371 m518.4102 1478.4551 516.4336 1479.9629 513.2773 1480.3223 C508.9497 1480.5098 506.6489 1478.291 505.688 1475.5957 C504.2896 1472.9668 504.7114 1470.4941 505.9536 1468.5293 C506.2583 1467.9082 506.6372 1467.4121 507.0747 1467.0801 C509.5591 1464.4863 513.3438 1463.3496 514.6523 1465.0605 C514.668 1465.0645 514.6797 1465.1504 514.6953 1465.1777 C515.457 1465.2754 516.3047 1465.4746 517.2617 1465.8105 C518.9492 1466.1152 520.2266 1468.3301 520.5391 1470.9355 C520.625 1471.1543 520.7148 1471.3535 520.7969 1471.5957 C521.4844 1472.9043 520.8711 1474.8418 519.5078 1476.5371 Cf0 D513.5508 1467.7129 m513.4922 1467.7402 513.4766 1467.791 513.4102 1467.8145 C512.8481 1467.6426 510.0513 1468.3613 509.0239 1470.5957 C508.645 1471.7285 508.4692 1473.3691 509.3599 1474.7754 C510.1958 1475.8691 511.563 1476.5332 512.7935 1476.7637 C515.0938 1476.748 517.4141 1474.8379 517.5469 1473.5645 C517.6289 1473.3809 517.6719 1473.209 517.7266 1473.0332 C517.7734 1471.6699 517.3086 1470.2402 516.6406 1469.2129 C515.7891 1468.4434 514.6367 1467.9395 513.5508 1467.7129 Cf*U505.9185 1484.0059 m505.9731 1484.0215 505.9497 1484.627 505.7075 1485.2793 C505.7192 1485.2832 505.731 1485.2832 505.7427 1485.2871 c505.8325 1485.3223 505.895 1485.377 505.9849 1485.4121 C506.8989 1484.9824 508.7544 1485.3262 510.4731 1488.3418 C512.6489 1492.5215 503.6489 1495.291 500.1802 1491.1348 C497.5747 1490.1855 496.8599 1484.2051 500.6489 1483.4707 C503.1841 1482.5488 504.9419 1483.7441 505.9185 1484.0059 Cf498.4927 1468.6777 m498.4888 1468.6895 498.4927 1468.7012 498.4888 1468.7129 c498.4731 1468.8066 498.4302 1468.8809 498.4067 1468.9746 C498.9927 1469.8027 498.981 1471.6855 496.3091 1473.9043 C492.5708 1476.7871 488.2778 1468.4004 491.7583 1464.2598 C492.231 1461.5293 498.0005 1459.7754 499.3833 1463.3809 C500.7349 1465.7129 499.8677 1467.6543 499.7817 1468.6621 C499.7739 1468.7207 499.1724 1468.7988 498.4927 1468.6777 Cf510.0083 1458.166 m509.9536 1458.1855 509.606 1457.6895 509.3989 1457.0254 C509.3872 1457.0293 509.3794 1457.0371 509.3677 1457.041 c509.2739 1457.0684 509.1919 1457.0645 509.0981 1457.0879 C508.6333 1457.9902 506.9575 1458.8496 503.7583 1457.5098 C499.4692 1455.5254 504.9302 1447.8457 510.2036 1449.0215 C512.8403 1448.1738 517.0703 1452.4785 514.5078 1455.3691 C513.0664 1457.6504 510.9419 1457.7754 510.0083 1458.166 Cf528.4805 1468.4512 m525.7813 1468.4395 524.543 1466.709 523.7188 1466.127 C523.6719 1466.0918 523.9063 1465.5332 524.3555 1465.0059 C524.3477 1464.998 524.3359 1464.9941 524.3281 1464.9863 c524.2539 1464.9238 524.2148 1464.8496 524.1445 1464.7871 C523.1367 1464.873 521.5117 1463.9082 520.9492 1460.4824 C520.3516 1455.8066 529.7539 1456.3301 531.5703 1461.4316 C533.6875 1463.2129 532.2852 1469.084 528.4805 1468.4512 Cf523.0195 1482.0566 m523.0234 1482.0449 523.0234 1482.0371 523.0313 1482.0254 c523.0781 1481.9434 523.1445 1481.8887 523.1914 1481.8105 C522.9219 1480.834 523.5664 1479.0605 526.8242 1477.8613 C531.3008 1476.4043 532.5625 1485.7246 527.8945 1488.4746 C526.5391 1490.8926 520.5078 1490.6113 520.4141 1486.7559 C519.918 1484.1074 521.3789 1482.5684 521.793 1481.6426 C521.8203 1481.5918 522.4141 1481.7129 523.0195 1482.0566 CfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF