%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (Nick La) ()%%Title: (open.eps)%%CreationDate: 5/31/10 1:50 PM%%Canvassize: 16383%%BoundingBox: 480 1447 544 1497%%HiResBoundingBox: 480.1895 1447.624 543.8096 1496.3755%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 512.5 1471.5 512.5 1471.5%AI3_TileBox: 206 1076 818 1868%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 64 64%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 1%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: 469 1516 8 813 750 26 0 0 43 129 0 0%AI5_OpenViewLayers: 7%%PageOrigin:-34 356%AI7_GridSettings: 32 32 32 32 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 100 8%%BeginData: 13180 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD3DFF7D52202727527DFD77FF7D2727F827F827F82727A8FD74FF%7D2727F8272727F8272727F8A8FD72FF7DF827F827F827F827F827F82727%FD72FFFD042720527DA85227272720277DFD70FF7D27F827F87DFD04FF52%27F827F87DFD70FF7D2727F852FD06FFFD0527FD70FF5227F82752FD06FF%7DF827F852A8FD6FFF7D2727207DFD06FF5227272752FD70FF5927F82727%FD06FF27F827F852FD70FFA8F82727277DFD04FF7D2727F8277DFD39FF7D%2752275227522852275227525253525252535252527D537D527D537D527D%537D52FD147D7E7D27F827F827527D7D52F827F827F87DA8A87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8FD0C7D%527D537D527D527DFFFFA820272727202727272027272720272727202727%272027272720272727202727272027272720272727202727272027272720%272727202727272027272720272727202727272027272720272727202727%272027272720272727202727272027272720272727202727272027272720%27272720272727202727272027272720A8FF5227F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F82727FF7D2727F8%272727F8272727F8272727F8272727F8272727F8272727F8272727F82727%27F8272727F8272727F8272727F8272727F8272727F8272727F8272727F8%272727F8272727F8272727F8272727F8272727F8272727F8272727F82727%27F8272727F8272727F8272727F8272727F8272727F8272727F8272727F8%2727277D5227F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F87D522727202727272027272720272727202727%272027272720272727202727272027272720272727202727272027272720%272727202727272027272720272727202727272027272720272727202727%272027272720272727202727272027272720272727202727272027272720%27272720272727202727272027272720272727A82727F827F827F827F827%2727F8272727F8272727F8272727F8FD2327F8272727F8272727F8272727%F8272727F8272727F8272727F8272727F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F82727FF27F82727%277DAFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD14A87DA87DA8%7DA87DA87DA87DA87D7D59272727F852FFF827F827F8A8FD73FFA8F827F8%2727FF27202727277DFD73FFA82727272027FFF827F827F87DFD73FFA8F8%27F827F8AF272727F8277DFD73FFA827F8272727A8F827F827F87DFD73FF%A8F827F827F8A827272720277DFD73FFA82720272727A8F827F827F87DFD%73FFA8F827F827F8A827F82727277DFD73FFA8272727F827A8F827F827F8%7DFD73FFA8F827F827F8A827202727277DFD73FFA827272720277DF827F8%27F87DFD73FFA8F827F827F8A8272727F82752FD73FFA827F82727277DF8%27F827F87DFD73FFA8F827F827F87D272727202753FD73FFA82720272727%A8F827F827F87DFD73FFA8F827F827F8A827F827272752FD73FFA8272727%F827A82727F827F87DFD2EFFA8A87D7EA8FD31FFA8FD0EFFA8F827F827F8%A8522027272752FD10FFA87DAFA8A97D7D7DFD14FFA8525220FD0427A8FD%13FFA852527DFD17FF5227277DA8FD0BFFA82727272027A82727F827F87D%FD0FFF52F827F827F827F8272784FD0CFF7D5227525252F827F827F827F8%27F87DFD0AFF84A8FFFFFFA85252F827F82752FD08FFFD04A8FD09FF7D27%F827F8277DFD0AFFA8F827F827F8A8522727F82752FD0EFF7D2727F82727%27F8272727F87DFD0AFF7D272727F8272727F8272727F8272727F8A8FD07%FF7E2727F87D7D52F8272727F8272727A8FD06FF52F827275259FD08FF7E%2727F8272727A8FD09FFA827F8272727A82727F827F87DFD0DFFA8F827F8%27F827F827F827F827F8A8FD09FF7DF827F827F827F827F827F827F827F8%2727FD07FF2027F827F827F827F827F827F827F87DFD05FFA8F827F827F8%2752FD07FFA827F827F827F87DFD09FFA8F827F827F8A8522727202753FD%0DFF7D27272720272752FD0427202727FD09FFA827272720272727202727%52FD04272027A8FD06FF5227272027272720272727202727277DFD05FFA8%27202727272027FD08FF272720272727A8FD09FFA82720272727A85227F8%27F87DFD0DFF27F827F827F8A8FFFF5227F827F82752FD08FFA8F827F827%F827F8277DFFFF52F827F827F8A8FD06FF5227F827F827F827F827F82721%2752FD07FF2727F827F82727FD07FFA827F827F8277DFD0AFFA8F827F827%F8A852F827272752FD0CFFA82727F8272752FD04FFFD0427F827FD08FFA8%27F8272727F852A8FFFFFF5227F8272727A8FD06FF52F8272727F8272727%52A8A8FFA8FD08FF272727F8272727A8FD07FFFD0427F8A8FD0AFFA82727%27F827AF5227F827F87DFD0CFF5227F827F8277DFD04FF7DF827F827F87E%FD07FFA8F827F827F852A8FD04FF52F827F82727FD07FF5227F827F82727%7DA8FD0DFF2727F827F827F87DFD06FFAF27F827F8277DFD0AFFA8F827F8%2721FF7D202727277DFD0CFF522727202727FD05FFA8272727202752FD07%FFA8272027272784FD05FF272720272752FD07FF522027272720A9FD0FFF%5227272027272752FD07FFFD042720A8FD0AFFA82727272027FF5227F827%F87DFD0BFFA8F827F827F852FD06FF2827F827F827FD07FFA8F827F827F8%A8FD04FF5927F827F8277DFD07FF5227F827F827A8FD0FFF2727F827F827%F827A8FD06FF52F827F8277DFD0AFFA8F827F82727FF7D2727F8277DFD0B%FF7D27F82727277DFD06FF7DF8272727F8A9FD06FFA8272727F8277DFD04%FF52F8272727F8FD08FF522727F82727FD10FF52F8272727F827277DFD06%FF2727F82727A8FD0AFFA827F8272752FF5227F827F87DFD0BFF7DF827F8%27F8A8FD06FF7D27F827F8277DFD07FF2027F827F87EFFFFFF7DF827F827%F852FD08FF5227F827F827A8FD0FFF5227F827F827F82727FD05FFA852F8%27F8277DFD0AFFA8F827F82727FF7D272720277DFD0BFF522720272727A8%FD06FFA820272727207DFD07FF27272720277DFFFFFF2727202727277DFD%08FF7D2727202727FD10FF7D20272727202727277DFD05FF5227202727A8%FD0AFFA82720272752FF7D27F827F87DFD0BFF52F827F82727FD07FFA827%F827F82752FD07FF2727F827F8A8FFFF7D27F827F82727FD09FF5227F827%F827A9FD0FFF5227F827F827F827F827A8FD04FF52F827F8277DFD0AFFAF%F827F82752FF7DF82727277DFD0BFFFD0427F852FD08FF2727F8272752FD%07FF27F82727277DFFFF27F8272727F87EFD09FF52F8FD0427FD10FF7D27%27F8272727F827277DFD04FF52272727F8A8FD0AFFA8272727F852FF7D27%F827F87DFD0AFFA827F827F82752FD07FFA852F827F82727FD07FF2727F8%27F87EFF52F827F827F827A8FD09FF5227F827F827A8FD0FFF5227F827F8%27F827F82727FD04FF52F827F8277DFD0AFFA8F827F82752FFA820272727%7DFD0BFFFD0427207DFD08FF522720272752FD07FF52202727277DA82727%202727277DFD0AFF5220FD0427FFFFFFA8FD0CFF7D27272027527D202727%277DFFFFFF52272727207DFD0AFFA8272727207DFF7D27F827F87DFD0BFF%52F827F82752FD08FF52F827F82727FD07FF2727F827F852F827F827F827%27FD0BFF5227F827F827A87DF82752A8FD0AFF7D27F827F87DA827F827F8%27A8FFFF52F827F82759FD0AFFA8F827F82752FFA82727F8277DFD0BFF52%27F827277DFD08FF52272727F827FD07FF522727F8272727F8272727F8A8%FD0BFF522727F8272727F8272727F8A8FD09FFA8F827272752FF5227F827%277DFFFF5227F827277DFD0AFFA827F827277DFF7D27F827F884FD0BFF52%F827F82752FD08FF52F827F82727FD07FF2727F827F827F827F827F852FD%0CFF5227F827F827F827F827F827F8A8FD08FF7D27F827F852FFA8F827F8%27F8A8FF7DF827F8277DFD0AFFA8F827F8277DFFA8272720277DFD0BFF52%2720272752FD08FF282727272052FD07FF5327272027272720272727A8FD%0CFF7D2727202727272027272720277DFD08FFA82027272752FFFF7D2027%272752FF53272027277DFD0AFFA8272027277EFF7D27F827F8A8FD0BFF7D%F827F82727FD07FFA827F827F82728FD07FF5227F827F827F827F82752FD%0DFF5227F827F827F827F827F82727FD09FFA827F827F852FFFFA827F827%F827A87DF827F82752FD0AFFA8F827F8277DFFA8F82727277DFD0BFF7D27%2727F827A8FD06FFAF2727F827277DFD07FF52F8272727F8FD0427FD0EFF%52F8272727F82727FD0452A8FD09FFA82727F82727FFFFFF5927F8272752%52272727F87DFD0AFFA8272727F8A8FF7D27F827F87DFD0BFFA8F827F827%F87DFD06FF7D27F827F8277DFD07FF5227F827F827F82727FD0FFF5227F8%27F82727A8FD0EFFA827F827F852FD04FF2727F827F828F827F82752FD0A%FFA8F827F8277DFFA8202727277DFD0BFFA8272727202752FD06FF7D2727%202727A8FD07FF7D20272727527D7DFD10FF592027272720FD11FF272720%2727FD04FFA82027272720272727207DFD0AFF7D27272720A8FFA827F827%F87DFD0CFF2727F827F828FD06FF2727F827F827A8FD07FF5227F827F87D%FD12FF5227F827F827A8FD0FFFA827F827F827A8FD04FF52F827F827F827%F82752FD0AFF7DF827F827A8FFFF2727F827A8FD0CFF7DF8272727F8A8FD%04FF8427F827272752FD08FF7D2727F82752FD12FF7D2727F82727FD04FF%A8A8FD0BFFFD042721FD05FFA827F8272727F8272752FD0AFF7D27F82727%FFFFA827F827F8A8FD0CFF7D27F827F82752FD04FF52F827F827F87DFD08%FF5227F827F87DFD12FF5227F827F827A8FFA852F82752FD09FFA827F827%F827A8FD05FF5227F827F827F82752FD0AFF7DF827F827A8FFFF27272027%A8FD0DFFFD04272052FD04FF272720272727A8FD08FF7D2727202753FD12%FF7D27272027277D52272727202752FD09FFFD042720A8FD06FFFD042720%272752FD0AFF7D27202727FFFFA827F827F8A8FD0DFF7DF827F827F87DFF%FF5227F827F82752FD09FF5927F827F87DFD12FF5327F827F827F827F827%F827F8277DFD08FF52F827F8277DFD06FF52F827F827F82727FD0AFF7DF8%27F827FFFFA9F8272727A8FD0DFFA827F827272721A87D27F8272727F8A8%FD09FF7DF827272752FD12FF7DF8272727F8272727F8272727F852FD08FF%2727F82727A8FD06FF5927F8272727F82759FD09FF7DFD0427FFFF7E27F8%27F8A8FD0EFF5927F827F827F827F827F827F852FD0AFF2727F827F852FD%12FF2727F827F827F827F827F827F82752FD07FF2727F827F82752FD06FF%7DF827F827F827F852FD09FF7DF827F852A8FFA820272727A8FD0FFF5227%272720272727202727277DFD09FFA82720FD0427FD12FF52202727272027%2727205228527DFD08FF27272720272727A8FD06FF2720272727202752FD%09FF7DFD0427FFFF8427F82720A8FD10FF2727F827F827F827F82752FD0A%FFA8F827F827F827A8FD11FF7D27F827F827F827277EFD0CFF5227F827F8%27F8A8FD06FF7D27F827F827F87EFD09FF7DF827F852FFFFA82727F827A8%FD11FF7D272727F827272752FD0CFF7D2727F82727A8FD12FF7D27F82727%277DFD0FFFFD0427F852FD08FFA8522027277DFD0AFF7D27F82752FFFF7D%27F827F8A8FD12FFA8A87D7D52527DFD0EFFA8525227A8FD14FF7D27F852%A8FD11FF7D522752A8FD0AFFA884A8FD0BFF7DF827F852FFFFA827272027%A8FD73FF7D27202752FFFF7D27F827F8AFFD73FF7DF827F87DFFFFA8F827%2727A8FD73FF5227272752FFFF7D27F827F8A8FD73FF7DF827F87DFFFFA8%20272727FD74FF5227272752FFFF8427F82727FD74FF7DF827F87DFFFFA8%2727F827FD74FF5227F82752FFFF7D27F82720FD74FF7DF827F87DFFFFA8%27272027FD74FF5327202753FFFF7D27F82727FD74FF7DF827F87DFFFFA8%F8272727FD74FF5227272752FFFFA827F827F8A8FD73FF7DF827F87DFFFF%FFFD0427A8FD73FF5227272752FFFFA827F827F8A8FD73FF7DF827F87DFF%FFFF2727F827A8FD73FF5227F8277DFFFFA827F827F8A8FD73FF7DF827F8%7DFFFFFF27272027A8FD73FF532720277DFFFFA827F827F8FD74FF7DF827%F8A8FFFFFFFD0427A8FD73FF7D272727A8FFFFFF52F82727FD74FF7DF827%27FD04FF52272752FD0FA8FFA8FFA8FFA8FFA9FFA8FFAFFFA8FD55FFA8FF%7D27272752FFFFA827F827F827F827F827F827F827F827F827F827F827F8%27F827F8FD0827522752275227FD0A527D5252527D597D527D597D52FD04%7D7E7D7D7D7E7D7D7D7E7D7D7DA87EA87DA87EA87DA87EA87DA87EA87DA8%7D7D7D7E7D7D7D847D7D527D7D7D527DFD045227282727F827F827F827F8%FF522727F8272727F8272727F8272727F8272727F8272727F8272727F827%2727F8272727F8272727F8272727F8272727F8272727F8272727F8272727%F8272727F8272727F8272727F8272727F8272727F8272727F8272727F827%2727F8272727F8272727F8272727F8272727F8272727F8272727F8272727%F8272727F8272727522727F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F8277D272720272727202727272027%272720272727202727272027272720272727202727272027272720272727%202727272027272720272727202727272027272720272727202727272027%272720272727202727272027272720272727202727272027272720272727%20272727202727272027272720272727202727272027272720A852F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827FFA8522727F8272727F8272727F8272727F827272720FD0F27F827%2727F8272727F8272727F8272727F8272727F8272727F8272727F8272727%F8272727F8272727F8272727F8272727F8272727F8272727F8272727F827%2727F8272727F8272727F8272727F8272727F8272727F8272727F827A8FF%FFA87D2727275252FD047D7E7DA8A8A87DFD04A8AFA8A8A8AFA8A8A8AFA8%A8A8AFA8A87DA8A8A87DA8A8A87DA87D7E7DA87D7E7D7EFD067D527D527D%527D525228FD055227272752FD0427F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F82727522752527D7D7EA8FF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 Au*u1 D0 O0 0 0 1 k0 J 0 j 1 w 4 M []0 d0 XR495.0186 1478.4746 m494.8975 1478.5293 494.7412 1478.5566 494.5537 1478.5566 c494.3428 1478.5566 494.0342 1478.5176 493.6006 1478.4434 c493.1709 1478.377 492.874 1478.334 492.7139 1478.334 c492.5771 1478.334 492.3779 1478.377 492.124 1478.4434 c491.8662 1478.5176 491.667 1478.5566 491.5498 1478.5566 c491.3857 1478.5566 491.2334 1478.5098 491.0967 1478.416 c490.5225 1478.0332 489.9717 1477.0293 489.4443 1475.416 c488.874 1473.666 488.6318 1472.0371 488.71 1470.5137 c488.999 1464.8926 490.542 1461.916 493.3467 1461.584 c493.6631 1461.5527 493.9834 1461.502 494.3076 1461.4629 c494.6162 1461.4355 494.9365 1461.4824 495.2646 1461.584 c496.0811 1461.834 496.8545 1462.9277 497.5732 1464.8652 c498.292 1466.8066 498.6045 1468.6895 498.5146 1470.5137 c498.292 1474.9668 497.1318 1477.6152 495.0186 1478.4746 Cf0 D494.96 1465.8535 m494.4404 1464.4668 493.9717 1463.7715 493.5498 1463.7715 c493.1045 1463.7715 492.6318 1464.5449 492.1436 1466.0918 c491.6514 1467.6348 491.4053 1469.1074 491.4053 1470.5137 c491.4053 1471.584 491.5928 1472.834 491.9795 1474.252 c492.3467 1475.541 492.6396 1476.2441 492.8623 1476.3535 c493.0928 1476.459 493.3037 1476.5176 493.5107 1476.5176 c494.2607 1476.5176 494.8232 1475.7949 495.2061 1474.3496 c495.4326 1473.498 495.624 1472.2129 495.7568 1470.5137 c495.7725 1470.334 495.7725 1470.1504 495.7725 1469.9629 c495.7725 1468.6699 495.5029 1467.3027 494.96 1465.8535 cf*U*u1 D507.5146 1478.9863 m506.9561 1478.9863 506.3193 1478.834 505.5889 1478.5488 c504.8584 1478.2559 504.4561 1478.1074 504.3701 1478.1074 C503.7061 1478.1895 503.3271 1478.2363 503.2334 1478.2363 c502.9326 1478.2363 502.6436 1478.1777 502.374 1478.0723 c502.0186 1477.9355 501.8428 1477.7441 501.8428 1477.498 c501.8428 1477.4238 501.8623 1477.3379 501.9014 1477.209 C501.9443 1477.0879 501.9639 1477.0098 501.9639 1476.9629 C502.335 1463.7324 L502.335 1463.6777 502.2607 1463.5605 502.1162 1463.3965 c501.9678 1463.2246 501.9014 1463.041 501.9014 1462.8301 c501.9014 1462.7676 501.9092 1462.6855 501.9248 1462.5879 c501.9912 1462.2324 502.249 1461.9512 502.6982 1461.7324 c503.0928 1461.5293 503.5107 1461.4238 503.9639 1461.4238 c504.2373 1461.4238 504.4561 1461.4629 504.6201 1461.5527 C504.9717 1461.7285 505.1514 1461.9473 505.1514 1462.2051 c505.1514 1462.3105 505.1123 1462.4746 505.0498 1462.6934 C504.9756 1462.9082 504.9443 1463.0645 504.9443 1463.1582 C504.8545 1464.2246 504.7998 1465.1621 504.7998 1465.9785 c504.7998 1466.4551 504.8193 1466.8457 504.8623 1467.1621 C504.9717 1466.916 505.1318 1466.7988 505.3545 1466.7988 c506.21 1466.7988 507.3154 1468.0957 508.6631 1470.7012 c509.9521 1473.1621 510.6006 1474.9824 510.6006 1476.1738 c510.6006 1476.6738 510.499 1477.0801 510.2959 1477.377 c509.5342 1478.4473 508.6084 1478.9863 507.5146 1478.9863 cf0 D506.6865 1472.8496 m505.9912 1471.4941 505.3389 1470.5918 504.7373 1470.1504 C504.6592 1474.8418 L505.0381 1475.291 505.4834 1475.6934 505.9951 1476.0371 c506.5068 1476.3848 506.9248 1476.5527 507.2529 1476.5527 c507.5771 1476.5527 507.7451 1476.3535 507.7451 1475.9512 c507.7451 1475.2363 507.3936 1474.209 506.6865 1472.8496 cf*U520.3857 1478.6816 m520.2334 1478.709 520.1045 1478.7246 519.9912 1478.7246 c519.7646 1478.7246 519.5576 1478.6699 519.3779 1478.5566 C519.1201 1478.4082 518.9639 1478.3301 518.9092 1478.3145 C516.4639 1477.5371 L516.2998 1477.6152 516.1279 1477.7012 515.9482 1477.7988 C515.6748 1477.9238 515.4521 1477.9746 515.2764 1477.9434 c514.4443 1477.8223 514.0303 1477.5371 514.0303 1477.0879 c514.0303 1476.9512 514.0811 1476.8223 514.1748 1476.6777 C514.0811 1472.2051 514.1045 1467.9746 514.2607 1464.0176 C514.1045 1463.5176 514.0303 1463.2402 514.0303 1463.2012 c514.0303 1463.1035 514.0498 1463.0254 514.0928 1462.959 c514.6787 1462.041 515.3311 1461.4824 516.0537 1461.2598 C516.124 1461.248 516.1787 1461.2402 516.2334 1461.2402 c516.4014 1461.2402 516.585 1461.334 516.7881 1461.502 c517.0576 1461.7363 517.2373 1461.877 517.3154 1461.916 C519.2373 1462.877 L519.9756 1462.8223 520.499 1462.8809 520.8154 1463.0566 c521.124 1463.2363 521.2842 1463.5137 521.2842 1463.873 c521.2842 1464.2949 521.0771 1464.7168 520.667 1465.1191 c520.2607 1465.5293 519.8662 1465.7441 519.4834 1465.7754 c519.1318 1465.8027 518.8818 1465.7402 518.7451 1465.5957 C518.6787 1465.5059 518.6162 1465.4199 518.542 1465.3262 C518.167 1465.127 517.6904 1464.9707 517.1162 1464.8379 C517.0342 1465.1855 516.9912 1465.9785 516.9912 1467.2051 C517.4404 1467.4043 517.8154 1467.5801 518.1396 1467.7363 C518.2412 1467.791 518.499 1467.7988 518.8936 1467.7715 c519.2881 1467.7324 519.5889 1467.752 519.7881 1467.8145 c520.1318 1467.9277 520.3857 1468.1855 520.5459 1468.5957 c520.585 1468.6895 520.6045 1468.7832 520.6045 1468.877 c520.6045 1469.248 520.3428 1469.6152 519.8193 1470.002 c519.2959 1470.3848 518.8389 1470.5723 518.4443 1470.5723 c518.0498 1470.5723 517.7725 1470.4277 517.6084 1470.1504 C517.2803 1470.0918 517.0771 1470.0332 516.9912 1469.9824 C516.9131 1471.8027 516.9131 1473.4277 516.9912 1474.8418 C517.2373 1475.0449 517.7373 1475.291 518.5068 1475.5762 c518.8193 1475.6973 519.1709 1475.8223 519.5693 1475.9512 C519.835 1475.9004 520.0811 1475.8809 520.2803 1475.8809 c520.7725 1475.8809 521.1709 1476.0137 521.4873 1476.2715 c521.6318 1476.3926 521.71 1476.5684 521.71 1476.8027 c521.71 1477.1699 521.5576 1477.5645 521.2725 1477.9785 c520.9795 1478.3926 520.6826 1478.6309 520.3857 1478.6816 cf535.2061 1464.877 m534.9248 1476.0605 L534.9248 1476.2168 535.0303 1476.3652 535.2607 1476.5176 c535.4834 1476.666 535.585 1476.8691 535.5771 1477.123 c535.5615 1477.5371 535.292 1477.916 534.7607 1478.2715 c534.2256 1478.6309 533.7139 1478.8066 533.2021 1478.8066 c532.8975 1478.8066 532.6631 1478.7246 532.5186 1478.5566 C532.2373 1478.2793 532.1045 1478.0605 532.1045 1477.8848 c532.1045 1477.7988 532.1514 1477.6855 532.249 1477.5371 c532.3428 1477.3848 532.3936 1477.252 532.3936 1477.123 C532.6396 1467.1621 L530.0498 1471.6035 528.6201 1474.5137 528.3467 1475.9004 C528.3311 1475.9512 528.3271 1475.9824 528.3271 1476.0293 c528.3271 1476.0762 528.3428 1476.1777 528.3662 1476.3145 c528.3936 1476.4512 528.4092 1476.5527 528.4092 1476.6426 c528.4092 1476.8301 528.3467 1476.9902 528.2256 1477.123 C527.7881 1477.6582 527.0576 1477.9238 526.0381 1477.9238 c525.6553 1477.9238 525.3623 1477.8691 525.1514 1477.7441 c524.9365 1477.6152 524.835 1477.4551 524.835 1477.252 c524.835 1477.1855 524.8467 1477.084 524.8779 1476.9434 c524.9053 1476.8066 524.917 1476.709 524.917 1476.6426 C525.5303 1464.1348 L525.542 1464.002 525.4443 1463.8496 525.2217 1463.6738 c525.0029 1463.4941 524.917 1463.2402 524.96 1462.916 c525.0068 1462.5059 525.2725 1462.1504 525.7451 1461.8457 c526.21 1461.5332 526.6904 1461.3848 527.1826 1461.3848 c527.6396 1461.3848 527.9912 1461.5332 528.2256 1461.834 c528.3896 1462.0371 528.4717 1462.2637 528.4717 1462.5059 c528.4717 1462.7012 528.4014 1462.9395 528.2646 1463.2207 c528.1279 1463.5137 528.0576 1463.6934 528.0576 1463.7715 C527.7881 1467.6152 527.6787 1470.2285 527.7334 1471.6191 C528.2256 1470.4473 528.9834 1468.9902 530.0146 1467.2441 c530.4443 1466.5254 530.9014 1465.7754 531.4131 1464.998 C531.5186 1464.791 531.5928 1464.5293 531.6123 1464.2051 c531.6279 1463.8379 531.6709 1463.5684 531.7373 1463.4043 c532.1592 1462.3418 532.9482 1461.7832 534.1084 1461.7168 c534.5693 1461.6816 534.9561 1461.834 535.2686 1462.1699 c535.585 1462.502 535.7529 1462.916 535.7764 1463.4043 C535.7959 1463.6113 535.7021 1463.8613 535.5029 1464.1543 c535.3037 1464.4434 535.2061 1464.6855 535.2061 1464.877 Cf*u1 D542.5732 1451.3965 m542.4561 1451.377 542.2764 1451.3652 542.1514 1451.3457 C542.4443 1452.666 542.6475 1454.6426 542.5889 1457.2129 c542.4053 1462.8574 544.1006 1480.9902 543.1514 1487.8848 C543.8857 1488.709 543.3428 1490.3184 542.3076 1490.7988 C538.0928 1490.6504 526.9951 1490.6113 515.4834 1490.6348 C516.4092 1493.0879 515.9365 1496.4746 511.5459 1496.373 C507.9209 1495.2441 507.8193 1492.6113 508.6475 1490.6582 C496.2373 1490.709 484.8467 1490.8262 482.7646 1490.9512 c480.6162 1491.0801 480.1826 1490.2598 480.4873 1489.3848 C479.749 1487.0059 480.6123 1470.2402 480.6553 1465.1699 C480.5498 1460.9863 480.5537 1454.4082 480.8584 1450.9043 C479.3389 1450.1152 481.2725 1447.7363 482.6318 1447.7129 C492.249 1448.9668 534.335 1446.8301 542.2139 1447.9746 C544.5107 1448.0645 544.0537 1450.7871 542.5732 1451.3965 Cf0 D511.6904 1490.834 m510.6006 1490.0137 509.0342 1494.1504 512.1748 1494.291 C515.0889 1493.4707 513.1475 1490.2402 512.3193 1490.7676 C512.2998 1490.748 512.2881 1490.6738 512.2686 1490.6426 C512.0889 1490.6426 511.9131 1490.6465 511.7334 1490.6465 C511.7061 1490.7441 511.6865 1490.8145 511.6904 1490.834 Cf482.6162 1451.1621 m482.5889 1451.1621 482.5771 1451.1582 482.5537 1451.1582 C482.7139 1452.5137 482.7842 1454.2637 482.6396 1456.416 C482.6592 1462.0879 483.2178 1479.3965 482.7568 1487.502 C490.9521 1487.7598 531.0068 1487.5605 540.7959 1487.4043 C540.5186 1483.3145 541.0068 1470.0293 540.624 1465.5098 C540.6318 1461.1309 540.3818 1454.1816 540.6904 1451.1738 C528.2178 1449.9863 488.7998 1451.4082 482.6162 1451.1621 Cf*UULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF