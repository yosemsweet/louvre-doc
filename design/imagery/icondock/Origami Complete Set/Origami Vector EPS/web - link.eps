%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (Nick La) ()%%Title: (4-09.eps)%%CreationDate: 1/7/10 9:47 AM%%Canvassize: 16383%%BoundingBox: 96 192 128 224%%HiResBoundingBox: 96 192 128 224%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_Cropmarks: 96 192 128 224%AI3_TemplateBox: 112.5 207.5 112.5 207.5%AI3_TileBox: -194 -188 418 604%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 32 32%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 1%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: 74 229 24.71 1893 1050 18 0 0 18 96 0 0%AI5_OpenViewLayers: 77%%PageOrigin:0 0%AI7_GridSettings: 4 4 4 4 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 128 8%%BeginData: 29596 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD35FFA8FD057D527D597D527D597D527D597D597D7DA8A8FD64FF%7D7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D%7DA8FD5DFF7D7D537D527D537D527D537D527D537D527D537D527D537D52%7D537D527D537D527D537D59A8A8FD55FFA87D7D527D527D527D527D527D%527D527D527D527D527D527D527D527D527D527D527D527D527D527D527D%527DA8FD50FFA87D527D597D527D597D527D597D527D7DA87EA8A8FFA8FF%A8FFA8FFA8FFA8A87E7D597D597D527D597D527D597D527D7DA8FD4BFFA8%7D527D527D527D527D527D527D7DA8A8FD15FFA8A97D7D527D527D527D52%7D527D527D7DFD48FF7D7D537D527D537D527D537DA8FD1FFFA8A87D7D52%7D537D527D537D527EFD44FF7D527D527D527D527D527D7DFD0BFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8A8537D527D52%7D527D527D7DFD40FF7D7D597D527D597D527D7EFD2CFFA8597D597D527D%597D52A8FD3DFF527D527D527D527D7DA8A8FD2FFF847D527D527D527D52%7DA8FD39FF84527D537D527D537DA8FD34FFA87D7D527D537D527D7DFD36%FFA87D527D527D527D52A8FD0EFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA87D527D%527D527D52A8FD33FF7D7D597D527D597D84FD3CFFA8597D527D597D52A8%FD31FF7D7D527D527D527DA8FD15FF7D7D522E272E272E272E272E052E05%2E28595384A8FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA8FFFFFFA8FF7D7D52%7D527D527DFD2FFF537D537D527D53A8FD12FFA97D2E522D2D2D512D512D%512D512D512D512D512D2E062E062E28597DFD13FFA87D527D537D527DFD%2CFFA8527D527D527D59FD0FFFA8FFA859272D2D2D262D2D2D26FD042D51%2D51FD042D262D2728062806280528062E53FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFA87D527D527D527DA8FD2AFF597D527D597D7DFD10FFA8522E%2D512D512D58577C7C83A7AD83ADA7AD82512D512D512D2E0D300D2F062F%282E062E28537DFD10FFA8597D527D597DA8FD27FFA8527D527D527DA8FD%0FFF592E052E2D2D2D7C7CA782AD83A782AD82A782A782A7FD042D272D2E%0D070D070D072F062E272E272E287EA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8%A8527D527D527DA8FD25FFA8537D527D537DA8FD0EFF5927512D512D512D%83A7ADA7AD8383587C2D58588282AD82A77C7C2D512D2E0D0E0D300D0D07%302D512D512D2D272E53FD0FFF7D7D527D537DA8FD23FFA8527D527D527D%A8FD0DFF522E2D2D262D2D2D268383A782A78257262D2D2D262D2D5182A7%82838282512D262E070D070D070D072E2D51FD042D262D287DA8FFA8FFA8%FFA8FFA8FFA8FFA8A8527D527D527DA8FD21FFA8527D597D527DFD0DFF83%2D512D512D582D512D82A7ADA7ADA7AD51512D512D512D512D5882AD82AD%82A751512D2E0D300D300D302D512DA7837C2D512D512753A8FD0DFF7D7D%597D527DA8FD1FFFA8527D527D527DA8FD0BFFA8512D2D275158A782512D%7C82AD83A782AD828357582D2D272D2D2D277C8282828382822D2D2D2E07%0E0D0D072F2D2D2D8382A751512D2D272E53FFA8FFFFFFA8FFFFFFA8FFFF%FF597D527D527DA8FD1EFF527D537D527DFD0CFFA8512D515182A7ADA7AD%7CA7A7AD83ADA7AD82AD83A782A77C512D2E2D512DAD82A782A77C512D51%FD052E2F0D2F2D512D7C83AD827C2D512D2E2EA9FD0CFF7D7D537D527DFD%1DFF527D527D527DA8FD07FFA8FFFFFF592D2D2D58AD83A782A782A782A7%82A782A782A782A7828382A72D2D2E2E2D2D82838282572D2D2D062E2D2D%262D2D0D072F2D2D267C82A7822D2D2D262D277EA8FFA8FFA8FFA8FFA8FF%A8FF527D527D527DFD1BFF7D7D527D597DA8FD0BFF52512D5158ADA7ADA7%ADA7ADA7AD58512D5858585151518382AD7C512D592D5151AD82A782512D%512E302D512D512D510D300D2F2D512D7C82AD2D512D512D512D7DFD0CFF%7D7D527D597DFD19FF7D7D527D527DA8FD0BFF2E2D275158A782AD83A782%AD82A7FD042D272D2D2D272D2D58FD042D2E2E2D2D7C838258272D0D0E0D%2E2D2D272D2D0D070D070D272D2D51512D2D2D272D2D2D2752FFFFA8FFFF%FFA8FFFFFFA8A8527D527D52A8FD17FFA87D527D537DA8FD0BFF28512D51%7CADA7AD83ADA7AD82822D512D522E2E2D512D512D512D512D522F362F51%2D58828357512D300D0E0D2E2D2E2D2F0D0E0D300D2F2D512D512D512D51%2D582D512D52A8FD0AFFA8537D527D53FD17FF7D527D527D7DFD05FFA8FF%FFFFA8FF282D26517CA782A782A782A78258262D2D2E0D302D2D26512D2D%262D2D2D0D300D302D2D2D5882582D2E0D0E0D0D0D0E0D0D070D070D070D%2D2D262D272D272F2D2D517C2D2D262EA8FFA8FFA8FFA8FFA8FFA87E527D%527D52FD15FFA8597D527D7DFD0BFF2E512D5182ADA7ADA7AD83ADA7AD2D%512D3530362E512D8282822D512D512D59303630362D512D582D512E360D%300D300D0E0D300D0E0D300D522D512D512D2F2D512D8282822D512D52A8%FD0AFF7D527D597D7DFD13FFA8527D527D52FD0BFF282D2D2D7CAD83A782%AD82A782A7827C272D2D2F0D2E2D5182A7822D27512D2D2E362F300D2F2D%2D272D2D2F0D300D0E0D0E0D0D0D0E0D0D070D0C2D272D2D2D272D2D58FD%04822D2D2D2EA8FFFFFFA8FFAFFFA8FFA87D527D527DA8FD12FF7D7D527D%53A8FD0AFF532E2D517CAD83ADA7AD82AD83AD82AD83822D512D512D5158%A782AD575157582D52303630362F362F2E2E3530300D360D300D300D0E0D%0E0D0E0D302D512D512D512D58FD06822D512D52FD0AFFA87D527D537DFD%11FF7D7D527D527DFFFFA8FFFFFFA8FFFFFF532E2D2D2DA782A782A782A7%82A782A782A7825826FD042DFD0782512D2D2E0D362F300D360D300D300D%300D300D0E0D0E0D0D070D070D072E2D2D26FD042D828282578257822D2D%2D52A8FFA8FFA8FFA8FFA8FF7D7D527D52A8FD10FF7D597D527DA8FD09FF%7D2E2D512DADA7AD83ADA7AD82AD83AD82AD82AD57512D5157A782A782AD%828382AD51512D58303630363036303630360D360E300D360D300D300D0E%0D302E512D512D512D51FD06825E822D512D7EFD0AFF527D597D52FD0FFF%7D527D527D7DFD09FFA828272D2DA782AD82A782A782A782A7828382A782%51272D2D828283FD08822D2D272E30362F362F300D360D300D300D0E0D0E%0D0D0D0E0D0D070D2D2E062F2D2D27825E825782578257582D2D27A8AFFF%A8FFAFFFA8FFA8A8527D527D7DFD0EFF537D527D7DFD0AFF532D512D83A7%AD82AD83AD82AD82A782AD82A782AD7C572D7C828382A782827C8258827C%8251512D363036303630362F3630360D360D300D300D0E0D0E0D0E0D300D%0D07302D512D8282825782578257572D2E28FD0AFF7D527D537DA8FD0CFF%7D7D527D52A8FFFFA8FFFFFFA8FFFF59052D2D7C82A782A782A782A782A7%828382A782828283FD0882582D262D2D2D512D2D2E2F362F360D362F300D%300D300D300D0E0D0E0D0D070D070D070D070D072E2D2D2D825757262D2D%57262D052852FFA8FFA8FFA8FFA8FF7E7D527D527DFD0BFFA87D597D527D%FD09FFA827512D5883ADA7AD82AD83AD82AD82AD82AD82A782AD82A782AD%828382AD82582D512D512D512D512D5A363630363036303630362F360E30%0D360D300D300D0E0D300D300D300D2F2D512D822D512D512D512D2E062E%A8FD09FF7D7D597D52FD0BFF7D527D527DA8FD09FF2E2D275182A782A782%A782A7828382A78282828382828283FD0882512D2D5A2F2D27FD042D3630%362F3630360D360D300D300D0E0D0E0D0D0D0E0D0D070D070D070D282D27%51572D272E2D2D272E07280553A8FFA8FFA8FFA8FFA8A8527D527D7DFD0A%FF597D527D7DFD09FF59512D5182AD83AD82AD82A782AD82A782AD82A782%A7828382A782828283828282582D512F5A2D512D512D59305A3636303630%362F3630360D360D300D300D0E0D0E0D0E0D300D0D0C512D5157822D5127%2F2E2E072F062E067EFD06FFA9FFFF7D527D537DFD09FF7D7D527D52A8FF%FFA8FFFFFFA8FFFF2D262D7CA782A7828382A78283828382828283FD0B82%7C2D51FD042D2E592D2E2F3630362F3630362F362F300D300D300D300D0E%0D0E0D0D070D070D070D072E262D575D57572D2D060D072F060D062828FF%A8FFA8FFA8FFA8FF7E7D527D52A8FD08FF7D597D527DFD09FF582D5158AD%82AD83AD82AD82AD82AD82A782AD82A782AD828382A7828282582D512D51%2D512D59365A365B365A365A363630363036303630362F360E300D360D0E%0D300D0E0D300D300D512D57578257512D2E072E2D52072F062E53FD09FF%597D597D7DFD07FFA8527D527D7DFD09FF272D2DA782A782A7828382A782%82828382828283FD098258272D2D52FD042D365A365A365A363630363036%2F3630360D360D300D300D0E0D0E0D0D0D0E0D0D070D070D282D2D57575E%2D2D272E2D2D272E0728272EA8FFA8FFA8FFA8FFA87E527D527DA8FD06FF%7D7D527D53FD09FF59512D7C82AD82A782AD82A782AD828382A782838283%8282828382822D582D512D5B5A5A35595A5A365B365A365A365A305A3636%303630362F3630360D360D300D300D0E0D0E0D0E0D300D2F2D512D5E2D51%2D2D2D512D512D2E2D512D7DFFFFA9FFFFFFA9FFA87D527D5384FD06FF7D%527D527DFFFFA8FFFFFFA8FFFF2E262D7C8382A782828283FD10822D2D26%2D2D5A365A365A365A365A365A3636305A30362F3630362F362F300D300D%300D300D0D0D0E0D0D070D070D070D072E262D2D2D262D2D2D51A72D2D26%2D2D2D27FFA8FFA8FFA8FFA8FF7D7D527D52FD06FF597D527DA8FD08FF84%27512D5158AD82AD82AD82A782AD82A782AD82838283FD04822D512D582E%5A36615A5B36615A5B36615A5A365B365A365A363630363036303630360D%360D300D300D0E0D300D0E0D300D300D522D512D512D5151ADA7A751512D%512D5159FD08FFA8527D597DA8FD04FF7D7D527D52FD09FF2E28272D2D51%82A782828283FD0D8258272D2D2E365A365A365A365A365A365A365A365A%365A3636303630362F362F300D360D300D300D0E0D0E0D0D070E0D0D070D%070D072F062D272D58A782AD83A7828382512752A8FFA8FFA8FFA8FFA87D%527D527DFD04FF7D527D537DFD08FFA82E062E2D5158A782AD828382A782%83828382828283FD04822D512D59365A365B5A5B36615A5B36615A5A365B%365A365A365A30363636303630362F3630300D300D0E0D300D0E0D300D0D%07300D2F072F2D5158ADA7AD83ADA7AD82AD58512DA8FFFFA8FFFFFFA8FF%7D7D527D7DFD04FF527D527D7DFFA8FFFFFFA8FFFF7D05282D2D2D83FD0E%82588282822D2D2D59305A365A365A365A365A365A365A365A365A363630%3630362F362F360D360D300D300D0E0D0E0D0D070E0D0D070D070D070D07%0D062D2DA782A782A782A782A782A72D2D2DFFA8FFA8FFA8FFA8A8527D52%7DFFFFFFA87D527D59FD09FF282E06512D8282A782AD828382AD82838283%FD06822D512D58365B365B36615A615A615A615A615A5B365B365A365B36%5A365A363630363036303630360D360D300D300D0E0D300D300D300D2F07%522D58A7ADA7AD83AD83AD82AD82582D51FD08FFA87D527D59A8FFFF7D52%7D527DFD08FFA828052F2D2D5783FD0E825E582D2D2759365A365A365A36%5A365A365B365A365A365A365A3636305A3036303630362F362F300D300D%300D0E0D0D0D0E0D0D070D070D072F070D272D2DA782A782A782A782A782%A77C2D27A8A8FFA8FFA8FFA8FF527D527D7DFFFF537D537D7DFD08FF7E06%2E0D512D8282A7828257512D587CFD0682572D512D59365A365A365B5A5A%36615A5B36615A5B365B365A365A365A365A3636303630362F3630360D36%0D300D300D0E0D0E0D0E0D300D2F07300D2E2D5158AD82AD83A782AD82A7%82AD2D5152FFFFFFA8FFFFFFA884537D527DFFFF7D527D52A8A8FFFFFFA8%FFFFFF2E28060D262D57828282572D262D2D2D262D2D5857822D2D2D3630%36305A365A365A365A365A365A365A365A365A365A305A30362F3630362F%362F300D300D300D300D0E0D0E0D0D070D070D070D070D072F272D268382%A782A7828382A7828282572D2DA8FFA8FFA8FFA8FF7D7D527D52FFFF527D%597DA8FD08FF2F282F0D512D8282AD7C512D522E512D512D512D5157512D%59365A365B365A365B5A5B36615A5B36615A5B36615A5A365B365A365A36%3630363036303630360D360D300D300D0E0D300D0E0D300D3007302E512D%7C83AD82AD82AD82AD82A782AD58512DFD09FF597D527DA8A87D527D52FD%05FFA9FFFFFF052E070D272D578282582D2D0D300D2F2E2F2D2D272D2D2D%2F363036305A365A365A365A365A365A365A365A365A365A305A36363036%30362F362F300D360D300D300D0E0D0E0D0D070E0D0D070D070D072E2D51%82A7828382A782828283FD04822D2D7DFFA8FFA8FFA8FFA87D527D52A87E%537D527DFD08FF7E2E06300D2E2D58828251512D300D3630362F362F512D%512D59305A365A365A365A365B365A365B5A5A365B365A365A365A365A36%3630363036303630360D360D300D300D0E0D0E0D0E0D300D0D07300D2F2D%517CA782AD82A782AD828382A7828382512D7CA8FFFFFFA8FFFFFF537D53%7D7D597D527D7DFFFFFFA8FFFFFFA87D0628070D2D2D51822D2D262E0D0E%0D300D300D2F2D2D262D2F362F363036305A365A365A365A365A365A365A%3636305A30362F3630362F362F360D360D300D300D0E0D0E0D0D070D070D%070D070D070D282D2DA782838283FD0A822D2D2DFFA8FFA8FFA8FFA87D52%7D527D7D597D52A8FD08FF532E06300D2E2D5882512D522F300D360E362F%362F512D512D59305A365A365A365A365B365A365B365A365B365A365B36%5A365A363630363036303630362F360E300D360D0E0D300D0E0D300D300D%300D2E2D5882AD82AD82A782AD828382AD828382582D52FD08FF7D7D597D%59527D527D7DFFFFFFA9FFFFFFA953062F070D2D2D51822D2D0C0E0D0E0D%300D300D352D2D272D2F362F363036305A3636365A365A365A365A365A36%36305A3036303630362F362F360D360D300D300D0E0D0E0D0D070E0D0D07%0D070D072F282D2DA782828283FD0A82512D2DFFA8FFA8FFA8FFA8A8527D%527D7D527D53A8FD08FF282E060D0D2E2D5882572D2E0D300D300D363036%2F352E2E2F363636305A365A365A365A365A365A365A365A365A365A365A%363630363036303630360D3630300D300D0E0D300D0E0D300D0E07300D2F%072F2D5182AD828382A782828283FD06822D51FFFFA8FFFFFFA8FFA87D52%7D53527D527DA8FFA8FFFFFFA8FFFF28052F070D272D2D582D2D2E0D0D0E%0D0E0D2F2D2D262E2F362F362F362F3630362F363036305A3636305A3036%303630362F3630362F362F360D360D300D300D0E0D0E0D0D070E0D0D070D%070D070D070D062D2DFD0D825782572D26FFA8FFA8FFA8FFA8A8527D527D%7D527D59FD09FF062E0D300D302D512D582D512E522D512D352E512D512D%512E363036305A3636365A365A365A365A365A365A365A365A365A363630%363036303630362F360E300D360D300D300D0E0D300D300D300D2F072F2D%5182AD828382AD82828283FD06822D51FD06FFA8FFA87D527D59527D527D%A8FFA8FFFFFFA8FFFF28052F070D072FFD062D272D2D2D2E2F2D2D27FD04%2D3530362F363036303630363036303630363036303630362F3630362F36%2F300D360D300D300D0E0D0E0D0D0D0E0D0D070D070D072F070D072D2D7C%FD0C825782572D27FFA8FFA8FFA8FFA8A8527D527D7D537D52FD09FF062E%07300D0D0D2E2D512D512D512D512D300D352E512D512D512D5930363036%3636305A3636305A3636305A36363036363630363036303630360D363030%0D300D0E0D300D0E0D0E0D0E0D300D2F0730072F2D5158828283FD0A825E%822D51A8FFFFFFA8FFFFFFA87D537D52527D527DA8FFFFFFA8FFFFFFA828%060D070D070D07FD042D825757262E0D0E0D300D2E26FD042DFD042E352F%362F3630362F3630362F3630362F362F360D362F300D300D300D300D0E0D%0E0D0D070E0D0D070D070D070D070D072F072D267CFD068257825E825782%5782572D2DFFA8FFA8FFA8FFA8A8527D527D7D597D52FD09FF282E07300D%300D302F512D5151582D512D2F0D360E362F582D522E582D512D512D3630%5A3636305A3636305A36363036363630363036303630360D360E300D360D%300D300D0E0D300D300D300D2F07300D2F2D5158FD0D825D822D51A8FFFF%FFA8FFFFFFA87D597D52527D527DA8FFFFFFA8FFFFFFA82E062F070D070D%070D0D2D272D2D2D272D2D2F0D300D300D360D30272D2D2D272D2E2F2F36%30362F3630362F3630362F362F360D360D300D360D300D300D0E0D0E0D0D%0D0E0D0D070D070D072F070D072F072D278282825E82828257825D825782%5782572D2DFFA8FFA8FFA8FFA8FF527D527D7D527D53FD09FF062E072F07%300D0D0D300D2E2D5157572D512D2F0D360D360D362F512D512D512D522D%512E3630363036303630363036303630362F3630360D360D300D300D0E0D%300D0E0D0E0D0E0D300D2F07300D2F072F2D5157FD07825D825E8257825D%582D51FFFFA8FFFFFFA8FFFF7D527D53527D527DFFFFA8FFA8FFA8FFA828%052F070D070D070D070D0D2D262D2D57262D0C0E0D300D300D302E2D262D%2E2F262D2D2E0D362F360D362F360D362F300D360D300D300D300D300D0E%0D0E0D0D070E0D0D070D070D070D070D072F070D072D2D57578257825782%578257822D512D572D2D27FFA8FFA8FFA8FFA8FF527D527D7D527D59FD09%FF062E072F07300D300D300D0E2E522D512D512D2F0D360D360D3630362F%352F362F582D522F3630363036303630363036303630362F3630360D360D%300D300D0E0D300D0E0D300D300D300D2F07300D2F072F2E512D58FD0682%5D822D512D512D512D52FFFFA8FFFFFFA8FFFF7D527D59527D527DFFFFA8%FFFFFFA8FFFF2E052F070D070D070D070D0D0D072E2D2D272D0C0E0D300D%300D300D300D360D300D362F300D362F300D362F300D360D300D360D300D%300D0E0D300D0E0D0E0D0D070E0D0D070D070D072F070D072F070D072F27%2D27515782578257572D2D2D2E272D2D2D27FFA8FFA8FFA8FFA8FF527D52%7D7D537D52FD09FF2E2E062F0D2F07300D0D0D300D0E0D512D512D2F0D0E%0D300D300D360D360D3630360D3630362F3630362F3630360D3630360D36%0D300D360D300D300D0E0D0E0D0E0D0E0D0E07300D2F07300D2F072F072F%072F2E512D575E8257582D512D2E072F2D512D52A8FFFFFFA8FFFFFFA87D%537D52527D527DA8FFA8FFA8FFA8FFA8530628072F070D070D070D070D07%0D272D2D2D060E0D0D0D0E0D0E0D300D300D300D300D300D300D300D300D%300D300D300D300D300D0E0D0E0D0D0D0E0D0D070D070D070D070D070D07%0D072F070D070D0707060D272D2651572D262D272F060D072D262D2EFFA8%FFA8FFA8FFA8FF527D527D7D597D52FD09FF592E06300D2F07300D300D30%0D0E0D2F2D512D2F0D0E0D300D2E2D512E300D360E360D3630360D363036%0D3630360D360E360D360D300D360D300D300D0E0D300D0E0D300D300D30%0D2F07300D2F072F072F072F072F28512D512D512E2F072F072F2D512D7D%A8FFFFFFA8FFFFFFA87D597D52527D527DA8FFFFFFA8FFFFFFA8A8062807%2F070D072F070D070D070D072F2D2E070E0D0D0D2E2D2D272D2E2D272E2E%2F0D300D300D300D300D300D300D300D0E0D300D0E0D0E0D0D0D0E0D0D07%0E0D0D070D070D072F070D072F070D072F0707070D0707062D2D2D060D07%07070D072D272D7DFFA8FFA8FFA8FFA8FF527D527D7D527D53FD09FFA82E%062F072F0D2F07300D2F07300D0E0D0E0D0E0D0E0D2E2D5151512D512D51%2D512D2E2D512E300D360D300D360D300D300D0E0D300D0E0D300D0E0D0E%0D0E0D300D0D07300D2F072F072F072F072F072F072F072F072F062F072F%072F072F072F2D5127FFFFFFA8FFFFFFA8FFFF7D527D53527D527DA8FFA8%FFA8FFA8FFA8FF2828060D072F070D070D070D070D070D070D070D072E2D%2D51AD512D262D5151272D2D2D262D2D2F0D300D0E0D0E0D0E0D0E0D0D0D%0E0D0D070E0D0D070D070D070D070D070D070D072F070D070D0707060D07%07060D0707060D0707060D0707062D272EA8FFA8FFA8FFA8FFA8FF527D52%7D7D527D59FD0AFF59282E07300D2F07300D300D300D300D300D0E0D302D%5157ADA7A7587C7CADA7AD51512D582D512D360D300D360D300D300D300D%300D0E0D300D0E0D300D300D300D300D300D2F0730072F072F072F072F07%2F072F072F072F072F072F072F072F282E52FFFFFFA8FFFFFFA8FFFF7D52%7D59527D527DFFFFA8FFFFFFA8FFFFFF592E27754A7550754A7550754A75%50754A7550754A7550754A7550754A7550754A7550754A7550754A2F0D0E%0D0E0D0D0D0E0D0D0D0E0D0D070E2E754A7550754A7550754A7550754A75%50754A7550754A7550754A7550754A7550754A7550754A2E067DA8FFA8FF%A8FFA8FFA8FF527D527D7D537D52FD0BFF27755175507551755075517550%75517550755175507551755075517550755175507551755075517551532F%0E0D300D0E0D0E0D0E0D0E0D0E2E75517550755175507551755075517550%7551755075517550755175507551755075517550755175512EA8FFA8FFFF%FFA8FFFFFFA87D537D52527D527DA8FFA8FFA8FFA8FFA8FFA7514A759E9F%9E9F9E9F9E9F9E9F9EFD0C9FA09FA09FA69FA09FA6A0A69FA050754A512D%2D262E0D0D070D070D070D28514A759E9F9E9F9E9F9E9F9E9F9EFD0C9FA0%9FA09FA69FA09FA6A0A69FA050754AA8A8FFA8FFA8FFA8FFA8FF527D527D%7D597D52FD09FFA87551759FC7C1FD0CC7C8C7C8C7C8C7C8C7CDC8C8C8CD%C8CEC8CEC8CEC8CEC9C9517551512D512D520D300D0E0D302F7551759FC7%C1FD0CC7C8C7C8C7C8C7C8C7CDC8C8C8CDC8CEC8CEC8CEC8CEC9C9517575%A8A8FFFFFFA8FFFFFFA87D597D52527D527DA8FFFFFFA8FFFFFFA8755075%9EC7C0C7C0C7C0C7C0C7C0C7C0C7C7C7C1FD04C7C8C7C8C7FD08C8C9C8C9%C8CEC8A64A75507CFD042D070E0D0D077550759EC7C0C7C0C7C0C7C0C7C0%C7C0C7C7C7C1FD04C7C8C7C8C7FD08C8C9C8C9C8CEC8A64A7551CAA8FFA8%FFA8FFA8FF527D527D7D527D53FD09FF50759FC7C1C7C1C7C1C7C7C7C1FD%08C7C8C7C8C7C8C7C8C7FD04C8CDC8C8C8CEC8CEC8CEC9C9507582825151%2D2E0D300D0D50759FC7C1C7C1C7C1C7C7C7C1FD08C7C8C7C8C7C8C7C8C7%FD04C8CDC8C8C8CEC8CEC8CEC9C95075FFFFA8FFAFFFA8FFAF7D527D5352%7D527DA8FFA8FFA8FFA8FFA8754AC7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0%C7C1C7C1C7C7C7C1C8C7C8C7C8C7FD06C8C9C8C9A6CEC8754A828282512D%2D2E070D07754AC7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C1C7C1C7C7C7%C1C8C7C8C7C8C7FD06C8C9C8C9A6CEC8754AFFA8FFA8FFA8FFA8FF527D52%7D7D527D59FD09FF5175C1C7C1C7C1C7C1FD0CC7C8C7C8C7C8C7C8C7CDC8%C8C8CDC8CDC8CEC8CEC8CEC9CE5175828382832D512E300D305175C1C7C1%C7C1C7C1FD0CC7C8C7C8C7C8C7C8C7CDC8C8C8CDC8CDC8CEC8CEC8CEC9CE%5175FFFFA8FFFFFFA8FFFF7D527D59527D527DFFFFA8FFFFFFA8FFAF754A%C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C7C7C1FD04C7C8C7C8C7C8C7FD%06C8C9C8C9C8CEC8754A828282512D2D2E282F07754AC7C0C7C0C7C0C7C0%C7C0C7C0C7C0C7C0C7C7C7C1FD04C7C8C7C8C7C8C7FD06C8C9C8C9C8CEC8%754AFFA8FFA8FFA8FFA8FF527D527D7D537D52FD09FF5175C1C7C1C7C1C7%C1C7C1C7C7C7C1FD0AC7C8C7C8C7C8C7FD04C8CDC8C8C8CEC8CEC8CE5175%828282582D512D512D515175C1C7C1C7C1C7C1C7C1C7C7C7C1FD0AC7C8C7%C8C7C8C7FD04C8CDC8C8C8CEC8CEC8CE5175A8FFAFFFA8FFAFFFA87D537D%52527D527DA8FFA8FFA8FFA8FFA8754AC19EC7C0C7C0C7C0C7C0C7C0C7C0%C7C0C7C0C7C1C7C1C7C7C7C1C8C7C8C7C8C7FD06C8C9C8C9A6754A825882%82582D572D2D26754AC19EC7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C1C7%C1C7C7C7C1C8C7C8C7C8C7FD06C8C9C8C9A6754AFFA8FFA8FFA8FFA8FF52%7D527D7D597D52FD09FF5175C1C7C1C7C1C7C1C7C1C7C7C7C1FD08C7C8C7%C8C7C8C7C8C7FD04C8CDC8CDC8CEC8CEC8CE5175FD08825E825175C1C7C1%C7C1C7C1C7C1C7C7C7C1FD08C7C8C7C8C7C8C7C8C7FD04C8CDC8CDC8CEC8%CEC8CE5175A8FFFFFFA8FFFFFFA87D597D52527D527DA8FFAFFFA8FFAFFF%A87550C1C0C7C0C7C0C7C0C7C07B50754A7550754A7550754A7550754A75%50754A7550754A7550754A7550754A7550754A7550754A7550754A755075%4A7550754A7550754A7550754A7550754A7550754A7550754A7550754A75%75FD06C8C9C8C9C87550FFA8FFA8FFA8FFA8FF527D527D7D527D53FD09FF%5075C1C7C1C7C1C7C1C7C1C7507551755075517550755175507551755075%517550755175507551755075517550755175507551755075517550755175%507551755075517550755175507551755075517550755175507551755075%C8C8C8CDC8C8C8CEC8CE5075A8FFA8FFA8FFA8FFA87D527D53527D527DA8%FFA8FFA8FFA8FFA8754AC1C0C19EC7C0C7C0C7C0754A2E282E282F282E28%2F2751267C7B754A9F989F989F9E9F989F9E9F9E9F9E9F9E9F9E9F9EFD0C%9FA69FA09FA69FA09FA6A0754A2E282E282E282E282E282E282E28754AC8%C7C8C7FD04C8C9C8754AFFA8FFA8FFA8FFA8FF527D527D7D527D59FD09FF%5175C1C7C1C7C1C7C1C7C1C75175072F072F072F072F072F2D5151A75175%C1C7C1C7C1C7C1C7C1C7C1C7C7C7C1FD08C7C8C7C8C7C8C7C8C8CDC8C8C8%CEC8CEC8CEC9CE5175072F072F072F072F072F072F072F5175C8C8C8CDC8%CDC8CEC8CE5175FFFFA8FFFFFFA8FFFF7D527D59527D527DAFFFA8FFA8FF%A8FFA8754AC7C0C1C0C7C0C7C0C7C0754A0D0707070D0707072F072E272D%58754AC1C0C1C0C7C0C1C0C7C0C7C0C7C0C7C0C7C0C7C0C7C7C7C1FD04C7%C8C7C8C7FD08C8CEC8754A0D0707070D0707070D0707070D07754AC8C7C8%C7FD06C8754AFFA8FFA8FFA8FFA8FF527D527D7D537D52FD09FF5175C1C7%C1C7C1C7C1C7C1C75175072F072F072F072F072F072D2D515175C1C7C1C7%C1C7C1C7C1C7C1C7C1C7C7C7C1FD08C7C8C7C8C7FD04C8CDC8C8C8CEC8CE%C8CE5175072F072F072F072F072F072F072F5175C7FD04C8CDC8C8C8CE51%75A8FFA8FFA8FFA8FFA87D537D52527D527DA8FFA8FFA8FFA8FFA8754AC1%9EC1C0C19EC7C0C1C0754A07060D0707060D0707060D062D26754AC19EC1%C0C19EC7C0C19EC7C0C7C0C7C0C7C0C7C0C7C0C7C1C7C1C7C7C7C1C8C7C8%C7FD07C8A6754A07060D0707060D0707060D070706754AC8C7C8C7C8C7FD%04C8754AFFA8FFA8FFA8FFA8FF527D527D7D597D52FD09FF5175C1C7C1C7%C1C7C1C7C1C75175062F072F072F072F072F072F06525175C1C7C1C7C1C7%C1C7C1C7C1C7C1C7C7C7C1FD08C7C8C7C8C7C8C7C8C7CDC8C8C8CEC8CEC8%CE5175072F072F072F072F072F072F072F5175C7FD04C8CDC8CDC8CE5175%A8FFA9FFA8FFA9FFA87D597D52527D527DA8FFA8FFA8FFA8FFA87550C1C0%C7C0C1C0C7C0C7C0755028060D0707070D0707070D0707077550C1C0C1C0%C1C0C7C0C1C0C7C0C7C0C7C0C7C0C7C0C7C0C7C7C7C1FD04C7C8C7C8C7FD%08C8755007070D0707070D0707070D0728057550C8C7C8C7C8C7FD04C875%50FFA8FFA8FFA8FFA8FF527D527D7D527D53FD09FF5075C1C7C1C7C1C7C1%C7C1C75075062E062F072F072F072F072F072F5075C1C1C1C7C1C7C1C7C1%C7C1C7C1C7C1C7C7C7C1FD0AC7C8C7C8C7C8C7FD04C8CEC8CE5075072F07%2F072F072F072F072F062E5075C7C8C7FD04C8CDC8C85075A8FFA8FFA8FF%A8FFA87D527D53527D527DA8FFA8FFA8FFA8FFA8754AC1C0C19EC1C0C19E%C7C0754A2E0628060D0707060D0707060D07754AC1C0C19EC1C0C19EC1C0%C19EC7C0C7C0C7C0C7C0C7C0C7C0C7C1C7C1C7C7C7C1C8C7C8C7FD06C875%4A0D0707060D0707060D0706052828754AC8C7C8C7C8C7C8C7C8C8754AFF%A8FFA8FFA8FFA8FF527D527D7D527D59FD09FF5175C1C7C1C7C1C7C1C7C1%C75175A82F062E062F072F072F072F072F5175C1C1C1C7C1C7C1C7C1C7C1%C7C1C7C1C7C7C7C1FD08C7C8C7C8C7C8C7C8C7CDC8C8C8CEC8CE5175072F%072F072F072F072F062E2EFF5175C7C8C7FD04C8CDC8CD5175A9FFA8FFA9%FFA8FFA87D527D59527D527DA8FFA8FFA8FFA8FFA8754AC1C1C1C0C7C0C1%C0C7C0754A7550754A7550754A7550754A7550754A7550754A7550754A75%50754A7550754A7550754A7550754A7550754A7550754A7550754A755075%4A7550754A7550754A7550754A7550754A7550754AC8C7C8C7C8C7C8C7C8%C8754AFFA8FFA8FFA8FFA8FF527D527D7D537D52FFFFFFA9FFFFFFA9FF51%75C1C7C1C7C1C7C1C7C1C775755075517550755175507551755075517550%755175507551755075517550755175507551755075517550755175507551%755075517550755175507551755075517550755175507551755075519FC7%C8C7C8C7FD04C8CD5175A8FFA8FFA8FFA8FFA87D537D52527D527DA8FFA8%FFA8FFA8FFA8754AC19EC1C0C19EC1C0C19EC7C0C1C0C7C0C7C0C7C0C7C0%C7C0C7C0C7C1C7C1C7C7C7C1C8C7C8C7C8C7C8C7754A5D575D575D2D2D2D%2E06754AC19EC1C0C19EC1C0C19EC7C0C1C0C7C0C7C0C7C0C7C0C7C0C7C0%C7C1C7C1C7C7C7C1C8C7C8C7C8C7C8C7754AFFA8FFA8FFA8FFA8FF527D52%7D7D597D52FD09FF5175C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C7C7%C1FD0CC7C8C7C8C7FD04C8CD51755782575E2D512D2E072F5175C1C7C1C7%C1C7C1C7C1C7C1C7C1C7C1C7C1C7C7C7C1FD0CC7C8C7C8C7FD04C8CD5175%A8FFA8FFA8FFA8FFA87D597D52527D527DA8FFA8FFA8FFA8FFA87550C1C0%C1C1C1C0C7C0C1C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C1C7C1C7C7%C7C1FD04C7C8C7C8C775505D57572D2D272E0707077550C1C0C1C1C1C0C7%C0C1C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C1C7C1C7C7C7C1C7C7C8%C7C8C7C8C77550FFA8FFA8FFA8FFA8FF527D527D7D527D53FFA9FFFFFFA8%FFFFFF5075C1C1C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C7C7C1C7C7%C7C1FD08C7C8C7C8C7C8C8C850752D512D512D2E072F072F5075C1C1C1C7%C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C7C7C1C7C7C7C1FD08C7C8C7C8C7%C8C8C85075A8FFA8FFA8FFA8FFA87D527D53527D527DA8FFA8FFA8FFA8FF%A8754AC1C0C19EC1C0C19EC1C0C19EC7C0C19EC7C0C7C0C7C0C7C0C7C0C7%C0C7C1C7C1C7C7C7C1C7C7C8C7C8C7754A2D2D2D272E0707060D07754AC1%C0C19EC1C0C19EC1C0C19EC7C0C19EC7C0C7C0C7C0C7C0C7C0C7C0C7C1C7%C1C7C7C7C1C7C7C8C7C8C7754AFFA8FFA8FFA8FFA8FF527D527D7D527D59%FD09FF5175C1C1C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C7C7C1FD0C%C7C8C7C8C7C8C8C851752E2F072F072F072F072F5175C1C1C1C7C1C7C1C7%C1C7C1C7C1C7C1C7C1C7C1C7C7C7C1FD0CC7C8C7C8C7C8C8C85175A8FFA8%FFA8FFA8FFA87D527D59527D527DA8FFA8FFA8FFA8FFA8754A75C1C1C0C1%C1C1C0C7C0C1C0C7C0C1C0C7C0C7C0C7C0C7C0C7C0C7C0C7C1C7C1C7C7C7%C1FD04C7C875754A0D0707070D0707070D07754AC1C1C1C0C1C1C1C0C7C0%C1C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C1C7C1C7C7C7C1FD04C7C8%9F754AFFA8FFA8FFA8FFA8FF527D527D7D537D52FFFFFFA8FFFFFFA8FF7C%75509FC1C1C1C7C1C1C1C7C1C7C1C7C1C7C1C7C1C7C1C7C7C7C1C7C7C7C1%FD08C7C8C7C875755152072F072F072F072F072F517550FD04C1C7C1C7C1%C7C1C7C1C7C1C7C1C7C1C7C1C7C7C7C1C7C7C7C1FD08C7C8C7C89F755175%A8FFA8FFA8FFA8FFA87D537D52527D527DA8FFA8FFA8FFA8FFA8FF51754A%9FC0C19EC1C0C19EC1C0C19EC7C0C19EC7C0C7C0C7C0C7C0C7C0C7C0C7C0%C7C1C7C7C7C1C79F754A510707060D0707060D0707062F4A754AC1C0C19E%C1C0C19EC1C0C19EC7C0C19EC7C0C7C0C7C0C7C0C7C0C7C0C7C1C7C1C7C7%C7C1C79F754A75A1FFA8FFA8FFA8FFA8FF527D527D7D597D52FD0BFF7575%51C1C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C7C7C1FD0CC7C89F7551%75282F062F072F072F072F062F062E517575C1C1C7C1C7C1C7C1C7C1C7C1%C7C1C7C1C7C1C7C7C7C1FD0CC7C89F755175A7FFA8FFA8FFA8FFA8FFA87D%597D52527D527DA8FFA8FFA8FFA8FFA8FFA8CF507550754A7550754A7550%754A7550754A7550754A7550754A7550754A7550754A7550754A75505105%2E0628052E0628052E0628052E06284A7550754A7550754A7550754A7550%754A7550754A7550754A7550754A7550754A7550754A755075A1FFA8FFA8%FFA8FFA8FFA8FF527D527D7D527D53FFA8FFFFFFA8FFFFFFA8FFFFA85175%517550755175507551755075517550755175507551755075517550755175%50755175507552532E53062E062E062E062E062E2853537D517551755075%517550755175507551755075517550755175507551755075517550755175%5075A7FFA8FFA8FFA8FFA8FFA8FFA87D527D53527D527DA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8AFA8FF527D527D7D527D%59FD15FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFA9FFA8FFA9FFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA87D527D59527D527DA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF527D527D7D537D52A9%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFAFFFA8FFAFFFA8FF%AFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87D%537D52527D527D7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8AFA8%FFA8AFA8FFA8A8527D527D7D597D527EFD0EFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FF7D7D597D537D7D527D52A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FF7D7D527D527DFF527D537D52A8FFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFAFFFA8FFAFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7D7D537D527DA8FF7D527D527D%527D7DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8AFA8FFA8AFA8FFA8AF7EA87D7D527D527D%59FFFFFF7D597D527D597D527D597D527D597D527D597D527D597D527D59%7D527D597D527D597D527D597D527D597D527D597D527D597D527D597D52%7D597D527D597D527D597D527D597D527D597D527D597D527D597D527D59%7D527D597D527D597D527D597D527D597D527D597D527D597D527D597D52%7D597D527D597D53FD04FFA87D527D527D527D527D527D527D527D527D52%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52%7D527D527D527D527D527D527D52FD07FF7D537D527D537D527D537D527D%537D527D537D527D537D527D537D527D537D527D537D527D537D527D537D%527D537D527D537D527D537D527D537D527D537D527D537D527D537D527D%537D527D537D527D537D527D537D527D537D527D537D527D537D527D537D%527D537D527D537D527D537D527D537D7DFD09FFA97D7D527D527D527D52%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52%7D527D527D527D527D527D527D527D527DA8FD04FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
userdict /lv1Fix true putuserdict /_contoneDevice true put%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--26 Bn%AI5_BeginGradient: (Unnamed gradient 1)(Unnamed gradient 1) 1 3 Bd[<878888888889898A8A8A8B8B8C8C8D8D8E8E8F8F9091919292939494959696979898999A9A9B9C9C9D9E9F9FA0A1A2A2A3A4A5A5A6A7A8A9A9AAABACADAEAEAFB0B1B2B3B3B4B5B6B7B8B9BABBBBBCBDBEBFC0C1C2C3C4C5C6C7C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7><25252525262626272728282929292A2A2B2B2C2C2D2E2E2F2F303031323233333435353637373839393A3B3C3C3D3E3E3F404141424344444546474748494A4B4B4C4D4E4F4F50515253545555565758595A5B5B5C5D5E5F60616263636465666768696A6B6C6D6E6F7071>001 %_Br<D7D8D8D8D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFE0E0E0E1E1E2E2E3E3E3E4E4E5E5E6E6E6E7E7E8E8E8E9E9EAEAEBEBEBECECEDEDEEEEEEEFEFF0F0F1F1F1F2F2F3F3><7172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3><00000000000000000000000000000000000101010101010101010101010101010101010101010101010101010101010101010202020202020202020202020202020202>01 %_Br[0.53125 0.144531 0 0 1 59.5506 0 %_BS%_0.53125 0.144531 0 0 1 59.5506 0 Bs0.84375 0.441406 0 0 1 50 56.7416 %_BS%_0.84375 0.441406 0 0 1 50 56.7416 Bs0.953125 0.703125 0.007813 0 1 50 100 %_BS%_0.953125 0.703125 0.007813 0 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 11)(Unnamed gradient 11) 0 3 Bd[<000000000000000000000001010101010101010101010101010101010101010202020202020202020202><333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555758595A5B5C5D>0.99218801 %_Br<0202020202020202020202020202020202020202020202020202020202020202020202020101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000><1313131414141414151515151616161616171717171818181818191919191A1A1A1A1A1B1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F2020202021212121212222222223232323232424242425252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B2B2C2C2C2C2C2D2D2D2D2E2E2E2E2E2F2F2F2F30303030303131313131323232323333><6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFD>01 %_Br[0.007813 0.363281 0.992188 0 1 50 100 %_BS%_0.007813 0.363281 0.992188 0 1 50 100 Bs0 0.199219 0.992188 0 1 50 50 %_BS%_0 0.199219 0.992188 0 1 50 50 Bs0.007813 0.074219 0.421875 0 1 50 0 %_BS%_0.007813 0.074219 0.421875 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 12)(Unnamed gradient 12) 0 3 Bd[<5B5B5C5D5E5E5F606161626364646566676868696A6B6B6C6D6E6E6F707171727374747576777778797A7A7B7C7D7D7E7F808081828383848586878788898A8A8B8C8D8D8E8F90909192939394959696><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<313132333434353636373838393A3A3B3C3C3D3E3E3F4040414242434444454646474848494A4A4B4C4C4D4E4E4F5051515253535455555657575859595A5B>0<7172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.589844 0.042969 1 0 1 50 100 %_BS%_0.589844 0.042969 1 0 1 50 100 Bs0.355469 0 0.6875 0 1 50 50 %_BS%_0.355469 0 0.6875 0 1 50 50 Bs0.191406 0 0.441406 0 1 50 0 %_BS%_0.191406 0 0.441406 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 14)(Unnamed gradient 14) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6>0 %_Br[0.9 0 50 100 %_BS%_0.9 0 50 100 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 15)(Unnamed gradient 15) 0 3 Bd[<C6C7C7C8C8C8C9C9CACACACBCBCCCCCDCDCDCECECFCFD0D0D0D1D1D2D2D3D3D3D4D4D5D5><48494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667696A6B6C>001 %_Br<8F90909091919192929393949495969697979899999A9B9B9C9D9D9E9FA0A0A1A2A3A4A4A5A6A7A8A8A9AAABACADAEAEAFB0B1B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C1C2C3C4C5C6><2F2F2F2F2F303030303031313131323232323333333434343535353636363737373838383939393A3A3B3B3B3C3C3C3D3D3E3E3F3F3F40404141414242434344444545454646474748>001 %_Br[0.835938 0.421875 0 0 1 50 100 %_BS%_0.835938 0.421875 0 0 1 50 100 Bs0.777344 0.28125 0 0 1 50 58.427 %_BS%_0.777344 0.28125 0 0 1 50 58.427 Bs0.5625 0.183594 0 0 1 59.5506 0 %_BS%_0.5625 0.183594 0 0 1 59.5506 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 18)(Unnamed gradient 18) 0 3 Bd[<8F9090909091919292939393949495969697979898999A9A9B9B9C9D9D9E9F9FA0A1A2A2A3A4A5A5A6A7A8A8A9AAABABACADAEAFAFB0B1B2B3B4B5B5B6B7B8B9BABBBCBCBDBEBFC0C1C2C3C4C5C6C7C7C8C9CACBCCCDCECFD0D1D2D3D4D5><2F2F2F2F303030313131323233333434353536363737383839393A3A3B3C3C3D3D3E3F3F4041414242434444454647474849494A4B4B4C4D4E4E4F505151525354545556575858595A5B5C5C5D5E5F6060616263646566666768696A6B6C>001 %_Br<C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998979695939291908F><4847474646454544444443434242414140403F3F3E3E3E3D3D3C3C3B3B3A3A393939383837373636353534343333333232313130302F2F>001 %_Br[0.835938 0.421875 0 0 1 50 70.303 %_BS%_0.835938 0.421875 0 0 1 50 70.303 Bs0.5625 0.183594 0 0 1 59.5506 30.303 %_BS%_0.5625 0.183594 0 0 1 59.5506 30.303 Bs0.777344 0.28125 0 0 1 50 0 %_BS%_0.777344 0.28125 0 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 2)(Unnamed gradient 2) 0 2 Bd[<F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7>0 %_Br[0.78 0 50 100 %_BS%_0.78 0 50 100 Bs0.95 0 50 0 %_BS%_0.95 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 49)(Unnamed gradient 49) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6>0 %_Br[0 0 0 0.098039 1 50 100 %_BS%_0 0 0 0.098039 1 50 100 Bs0 0 0 0 1 48.3253 0 %_BS%_0 0 0 0 1 48.3253 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 5)(Unnamed gradient 5) 0 3 Bd[<000102030405060708090A0B0C0D0E0F1011131415161718191A1B1C1D1E1F><AAABABACADADAEAEAFAFB0B1B1B2B2B3B3B4B4B5B6B6B7B7B8B8B9BABABBBB><FCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9><00000000010101010101010102020202020202030303030303030304040404>1 %_Br0<8080818282838484858686878888898A8A8B8C8C8D8E8E8F9090919293939495959697979899999A9B9B9C9D9D9E9F9FA0A1A1A2A3A4A4A5A6A6A7A8A8A9AAAA><BCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC>01 %_Br[0.121094 0.734375 0.976563 0.015625 1 50 100 %_BS%_0.121094 0.734375 0.976563 0.015625 1 50 100 Bs0 0.667969 0.988281 0 1 50 50 %_BS%_0 0.667969 0.988281 0 1 50 50 Bs0 0.5 0.738281 0 1 50 0 %_BS%_0 0.5 0.738281 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 50)(Unnamed gradient 50) 1 3 Bd[<8787878888888989898A8A8B8B8C8C8D8D8E8E8F8F9091919292939494959696979898999A9A9B9C9C9D9E9F9FA0A1A2A2A3A4A5A5A6A7A8A9A9AAABACADADAEAFB0B1B2B3B3B4B5B6B7B8B9BABABBBCBDBEBFC0C1C2C3C4C5C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7><25252526262627272728282929292A2A2B2B2C2C2D2E2E2F2F303031323233333435353637373839393A3B3B3C3D3D3E3F404041424343444546464748494A4A4B4C4D4E4E4F5051525253545556575858595A5B5C5D5E5F5F60616263646566676869696A6B6C6D6E6F7071>001 %_Br<D7D7D8D8D9D9DADADADBDBDCDCDDDDDDDEDEDFDFE0E0E0E1E1E2E2E2E3E3E4E4E5E5E5E6E6E7E7E8E8E8E9E9EAEAEBEBEBECECEDEDEEEEEEEFEFF0F0F0F1F1F2F2F3F3><7172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3><00000000000000000000000000000000000101010101010101010101010101010101010101010101010101010101010101010202020202020202020202020202020202>01 %_Br[0.529412 0.145098 0 0 1 59.6565 0 %_BS%_0.529412 0.145098 0 0 1 59.6565 0 Bs0.843137 0.443137 0 0 1 49.857 56.7416 %_BS%_0.843137 0.443137 0 0 1 49.857 56.7416 Bs0.952941 0.701961 0.007843 0 1 50 100 %_BS%_0.952941 0.701961 0.007843 0 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 51)(Unnamed gradient 51) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 52)(Unnamed gradient 52) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 53)(Unnamed gradient 53) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 54)(Unnamed gradient 54) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 55)(Unnamed gradient 55) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 56)(Unnamed gradient 56) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 57)(Unnamed gradient 57) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 58)(Unnamed gradient 58) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 59)(Unnamed gradient 59) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 6)(Unnamed gradient 6) 0 3 Bd[0.007813<131314141515161617181819191A1A1B1B1C1C1D1D1E1E1F1F20202121222223232424252526262727282829292A2A2B2B2C2C2D2D2E2E2F2F303031313232333334343535363737383839393A3A3B3B3C3C3D3D3E3E3F3F40404141424243434444454546464747484849494A4A4B4B4C4C4D4D4E4E4F4F505051515252535354555556565757585859595A5A5B5B5C5C5D><6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFD>01 %_Br<0000000000000000000000000000000000000000000000000000000000000000000000000001010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101020202020202020202020202020202020202020202020202020202020202020202020202><333332323232313131313130303030302F2F2F2F2E2E2E2E2E2D2D2D2D2C2C2C2C2C2B2B2B2B2A2A2A2A2A2929292928282828282727272726262626262525252525242424242323232323222222222121212121202020201F1F1F1F1F1E1E1E1E1D1D1D1D1D1C1C1C1C1B1B1B1B1B1A1A1A1A1A191919191818181818171717171616161616151515151414141414131313><FDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C>01 %_Br[0.007813 0.363281 0.992188 0 1 50 66.6667 %_BS%_0.007813 0.363281 0.992188 0 1 50 66.6667 Bs0.007813 0.074219 0.421875 0 1 50 27.2727 %_BS%_0.007813 0.074219 0.421875 0 1 50 27.2727 Bs0 0.199219 0.992188 0 1 50 0 %_BS%_0 0.199219 0.992188 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 60)(Unnamed gradient 60) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 61)(Unnamed gradient 61) 0 3 Bd[<0000000000000000000000000101010101010101010101010101010101010101010202020202020202020202><33343536363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D>0.99215701 %_Br<020202020202020202020202020202020202020202020202020202020202020202020202020201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000><131313141414141415151515161616161617171717171818181819191919191A1A1A1A1B1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1E1F1F1F1F202020202021212121222222222223232323242424242425252525262626262627272727272828282829292929292A2A2A2A2B2B2B2B2B2C2C2C2C2D2D2D2D2D2E2E2E2E2F2F2F2F2F30303030313131313132323232333333><6C6D6E6F707172737475767778797A7A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFD>01 %_Br[0.007843 0.364706 0.992157 0 1 50 100 %_BS%_0.007843 0.364706 0.992157 0 1 50 100 Bs0 0.2 0.992157 0 1 51.8759 50 %_BS%_0 0.2 0.992157 0 1 51.8759 50 Bs0.007843 0.07451 0.423529 0 1 50.4256 0 %_BS%_0.007843 0.07451 0.423529 0 1 50.4256 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 62)(Unnamed gradient 62) 0 3 Bd[<0000000000000000000000000101010101010101010101010101010101010101010202020202020202020202><33343536363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D>0.99215701 %_Br<020202020202020202020202020202020202020202020202020202020202020202020202020201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000><131313141414141415151515161616161617171717171818181819191919191A1A1A1A1B1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1E1F1F1F1F202020202021212121222222222223232323242424242425252525262626262627272727272828282829292929292A2A2A2A2B2B2B2B2B2C2C2C2C2D2D2D2D2D2E2E2E2E2F2F2F2F2F30303030313131313132323232333333><6C6D6E6F707172737475767778797A7A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFD>01 %_Br[0.007843 0.364706 0.992157 0 1 50 100 %_BS%_0.007843 0.364706 0.992157 0 1 50 100 Bs0 0.2 0.992157 0 1 51.8759 50 %_BS%_0 0.2 0.992157 0 1 51.8759 50 Bs0.007843 0.07451 0.423529 0 1 50.4256 0 %_BS%_0.007843 0.07451 0.423529 0 1 50.4256 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 63)(Unnamed gradient 63) 0 3 Bd[<0000000000000000000000000101010101010101010101010101010101010101010202020202020202020202><33343536363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D>0.99215701 %_Br<020202020202020202020202020202020202020202020202020202020202020202020202020201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000><131313141414141415151515161616161617171717171818181819191919191A1A1A1A1B1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1E1F1F1F1F202020202021212121222222222223232323242424242425252525262626262627272727272828282829292929292A2A2A2A2B2B2B2B2B2C2C2C2C2D2D2D2D2D2E2E2E2E2F2F2F2F2F30303030313131313132323232333333><6C6D6E6F707172737475767778797A7A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFD>01 %_Br[0.007843 0.364706 0.992157 0 1 50 100 %_BS%_0.007843 0.364706 0.992157 0 1 50 100 Bs0 0.2 0.992157 0 1 51.8759 50 %_BS%_0 0.2 0.992157 0 1 51.8759 50 Bs0.007843 0.07451 0.423529 0 1 50.4256 0 %_BS%_0.007843 0.07451 0.423529 0 1 50.4256 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 7)(Unnamed gradient 7) 0 2 Bd[<4D4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs0.3 0 50 0 %_BS%_0.3 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 9)(Unnamed gradient 9) 0 3 Bd[<8F9090909091919292939393949495969697979898999A9A9B9B9C9D9D9E9F9FA0A1A2A2A3A4A5A5A6A7A8A8A9AAABABACADAEAFAFB0B1B2B3B4B5B5B6B7B8B9BABBBCBCBDBEBFC0C1C2C3C4C5C6C7C7C8C9CACBCCCDCECFD0D1D2D3D4D5><2F2F2F2F303030313131323233333434353536363737383839393A3A3B3C3C3D3D3E3F3F4041414242434444454647474849494A4B4B4C4D4E4E4F505151525354545556575858595A5B5C5C5D5E5F6060616263646566666768696A6B6C>001 %_Br<C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998979695939291908F><4847474646454544444443434242414140403F3F3E3E3E3D3D3C3C3B3B3A3A393939383837373636353534343333333232313130302F2F>001 %_Br[0.835938 0.421875 0 0 1 50 100 %_BS%_0.835938 0.421875 0 0 1 50 100 Bs0.5625 0.183594 0 0 1 59.5506 35.1515 %_BS%_0.5625 0.183594 0 0 1 59.5506 35.1515 Bs0.777344 0.28125 0 0 1 50 0 %_BS%_0.777344 0.28125 0 0 1 50 0 BsBD%AI5_EndGradient%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 1 255 79 79 0 50 Lb(Layer 2) Ln0 Au0 O0 J 0 j 1 w 4 M []0 d0 XR127.5 208 m127.5 216.5605 120.5605 223.5 112 223.5 c103.4395 223.5 96.5 216.5605 96.5 208 c96.5 207.147 96.5 207.147 y96.5 206.2412 96.5 204.6001 96.5 203.5 C96.5 194.5 l96.5 193.3999 97.3999 192.5 98.5 192.5 C125.5 192.5 l126.6001 192.5 127.5 193.3999 127.5 194.5 C127.5 203.5 l127.5 204.6001 127.5 206.2412 127.5 207.147 c127.5 207.147 127.5 208 VBb1 (Unnamed gradient 49) 0 0.000977 0 1 17.9707 31.1262 31.1262 -17.9707 -398432.88 -92353.6094 Bg17.9707 -31.1262 157.7831 91.0961 24.0537 175.1152 Xm144809.0156 -250816.613 157.7831 91.0961 -144784.9688 250991.722 Bc17.9707 -31.1262 157.7831 91.0961 24.0537 175.1152 Bm144809.0156 -250816.613 157.7831 91.0961 42.0244 143.9893 Bcf0 BB*u0 0 0 0.5 k125.5 192 m98.5 192 l97.1216 192 96 193.1216 96 194.5 C96 208 l96 216.8223 103.1777 224 112 224 c120.8223 224 128 216.8223 128 208 C128 194.5 l128 193.1216 126.8784 192 125.5 192 Cf1 D112 223 m103.729 223 97 216.271 97 208 C97 194.5 l97 193.6729 97.6729 193 98.5 193 C125.5 193 l126.3271 193 127 193.6729 127 194.5 C127 208 l127 216.271 120.271 223 112 223 Cf*U0 D99.5 208 m99.5 201.0967 105.0967 195.5 112 195.5 c118.9033 195.5 124.5 201.0967 124.5 208 c124.5 214.9033 118.9033 220.5 112 220.5 c105.0967 220.5 99.5 214.9033 99.5 208 CBb0 0 0 0 Bh1 (Unnamed gradient 50) 0 0 0 1 12.5 0 0 -12.5 -92799.3906 113174.5547 Bg12.5 0 0 12.5 109.1641 212 Bmf0 BB*u0.902344 0.652344 0.34375 0.164063 k112 195.25 m104.9697 195.25 99.25 200.9697 99.25 208 c99.25 215.0303 104.9697 220.75 112 220.75 c119.0303 220.75 124.75 215.0303 124.75 208 c124.75 200.9697 119.0303 195.25 112 195.25 Cf1 D112 220.25 m105.2451 220.25 99.75 214.7549 99.75 208 c99.75 201.2451 105.2451 195.75 112 195.75 c118.7549 195.75 124.25 201.2451 124.25 208 c124.25 214.7549 118.7549 220.25 112 220.25 Cf*U0 D113.4351 220.2124 m112.8647 220.2852 112.2837 220.3262 111.6919 220.3262 c110.4297 220.3262 109.2104 220.1519 108.0581 219.8335 C107.6226 219.3486 L106.9917 218.6675 L106.9917 219.3638 L105.0752 218.4932 L103.4502 216.9727 L100.9434 213.8403 L100.6362 212.9014 L101.1855 212.6641 L100.7817 212.0088 L100.8457 209.2549 L101.6548 208.0894 L102.415 207.5142 L102.5444 207.1362 L103.1914 206.8032 L103.3447 206.0806 L103.6035 205.8193 L103.8096 205.8647 L103.8096 207.2153 L103.4585 207.5449 L102.9971 207.6807 L102.9243 207.7485 L103.1431 207.9536 L103.1431 208.3491 L103.3608 208.7026 L102.7788 208.7476 L102.5605 208.5435 L102.0996 208.5435 L101.8325 209.0425 L101.7842 210.042 L102.0752 210.042 L102.2446 210.8359 L102.7065 211.2671 L103.5767 210.8853 L103.8223 211.0176 L104.8164 210.5864 L104.6953 209.9741 L104.6953 209.7012 L104.9614 209.5879 L105.2529 209.7012 L105.2529 211.1543 L106.3931 212.0181 L106.7271 212.5596 L107.1841 212.8066 L107.2959 212.9878 L107.5093 213.187 L107.9707 213.187 L108.0796 213.3623 L108.2852 213.6963 L108.7705 213.9233 L109.207 213.9233 L109.207 213.7065 L109.6724 213.7065 L109.8623 214.0137 L109.4014 214.1729 L109.4014 215.0122 L110.3472 215.0122 L110.6382 214.3096 L111.3901 214.6045 L110.9482 214.9414 L111.2441 215.4219 L110.3472 216.2612 L110.3472 216.8516 L109.8862 216.897 L109.5708 216.5107 L109.4014 217.2822 L108.625 217.3281 L108.2368 216.9419 L107.9941 216.2383 L107.6543 216.2158 L107.4609 215.5801 L107.1211 215.5801 L107.145 216.375 L106.5386 216.9194 L107.7026 217.7144 L108.2368 217.5776 L109.1826 217.7144 L109.8965 217.2314 L110.832 217.7368 L110.832 218.5762 L109.5464 218.9849 L110.4932 219.167 L111.2202 218.9849 L111.73 218.2588 L111.5356 217.8726 L112.0215 216.897 L112.8125 216.5991 L113.1123 216.7603 L113.1855 217.6909 L114.1074 218.5537 L113.0396 219.5527 L112.2148 219.8018 L113.4351 219.8018 L113.4351 220.2124 LBb1 (Unnamed gradient 51) -0.000977 0 0 1 5.15185 8.92327 8.92327 -5.15185 -108384.4219 -20640.1523 Bg5.15185 -8.92327 49.8797 28.7981 80.0522 204.0557 Xm41513.6367 -71903.7344 49.8797 28.7981 -41433.5859 72107.7891 Bc2.57593 -4.46164 49.8797 28.7981 80.0522 204.0557 Bm2.57593 -4.46164 49.8797 28.7981 82.6279 199.5942 Bm41513.6367 -71903.7344 49.8797 28.7981 85.2041 195.1323 Bcf0 BB*u0.6875 0.351563 0.914063 0.214844 k103.6035 205.5693 m103.4258 205.6436 L103.167 205.9048 L103.1001 206.0288 L102.9717 206.6353 L102.4302 206.9141 L102.3081 207.0552 L102.2031 207.3608 L101.5039 207.8901 L100.6401 209.1123 L100.5957 209.249 L100.5317 212.0029 L100.5688 212.1401 L100.8213 212.5493 L100.5371 212.6719 l100.4185 212.7231 100.3584 212.8564 100.3984 212.979 C100.7056 213.918 L103.2549 217.1289 L104.9043 218.6758 L106.8882 219.5913 L107.127 219.5737 L107.2417 219.3638 L107.2417 219.3052 L107.8721 220.0005 L107.9917 220.0747 l109.751 220.5596 111.5537 220.7031 113.4668 220.4604 c113.5913 220.4443 113.6851 220.3384 113.6851 220.2124 C113.6851 219.8018 l113.6851 219.6636 113.5732 219.5518 113.4351 219.5518 C113.4067 219.5518 L114.2783 218.7363 L114.3574 218.5537 L114.2783 218.3711 L113.4272 217.5747 L113.3613 216.7407 L113.2305 216.54 L112.9307 216.3789 L112.7246 216.3652 L111.9336 216.6631 L111.7979 216.7856 L111.312 217.7612 L111.3125 217.9849 L111.4395 218.2373 L111.0693 218.7651 L110.9561 218.7935 l111.0327 218.7495 111.082 218.6675 111.082 218.5762 C111.082 217.7368 l111.082 217.645 111.0317 217.5605 110.9507 217.5171 C110.2095 217.1162 L110.3716 217.1006 l110.4995 217.0879 110.5972 216.98 110.5972 216.8516 C110.5972 216.3696 L111.415 215.6045 l111.502 215.5229 111.5195 215.3921 111.457 215.291 C111.2798 215.0029 L111.5415 214.8032 L111.6377 214.5698 L111.4814 214.3716 L110.7295 214.0767 l110.6035 214.0273 110.4595 214.0884 110.4072 214.2139 C110.1802 214.7622 L109.6514 214.7622 L109.6514 214.3511 L109.9438 214.25 L110.0977 214.0977 L110.0747 213.8823 L109.8848 213.5752 L109.6724 213.4565 L109.207 213.4565 l109.0801 213.4565 108.9756 213.5508 108.959 213.6733 C108.8262 213.6733 L108.459 213.5015 L108.1831 213.0552 L107.9707 212.937 L107.6079 212.937 L107.397 212.6753 L107.3027 212.5869 L106.9048 212.3716 L106.606 211.8867 L105.5029 211.0317 L105.5029 209.7012 l105.5029 209.5981 105.4395 209.5054 105.3433 209.4683 C105.0518 209.355 L104.8633 209.3579 L104.5972 209.4712 l104.5054 209.5103 104.4453 209.6011 104.4453 209.7012 C104.4453 209.9741 L104.5332 210.4365 L103.834 210.7397 L103.6953 210.665 L103.4761 210.6563 L102.7568 210.9722 L102.4727 210.707 L102.3198 209.9897 l102.2949 209.8745 102.1934 209.792 102.0752 209.792 C102.0464 209.792 L102.0796 209.1108 L102.2495 208.7935 L102.4619 208.7935 L102.6079 208.9302 L102.7979 208.9966 L103.3799 208.9517 L103.5835 208.8159 L103.5737 208.5713 L103.3931 208.2783 L103.3931 207.9536 L103.3657 207.8398 L103.5288 207.7847 L103.6294 207.7271 L103.9805 207.3975 L104.0596 207.2153 L104.0596 205.8647 l104.0596 205.7476 103.978 205.646 103.8633 205.6206 C103.6572 205.5752 L103.6035 205.5693 Lf1 D102.7485 207.3125 m103.3057 207.0254 L103.436 206.855 L103.5596 206.2725 L103.5596 207.1069 L103.3311 207.3218 L102.9268 207.4409 L102.8267 207.498 L102.7109 207.7144 L102.7534 207.9312 L102.8931 208.062 L102.8931 208.3491 L102.9302 208.4805 L102.9331 208.4849 L102.8691 208.4897 L102.7314 208.3608 L102.5605 208.2935 L102.0996 208.2935 l102.0073 208.2935 101.9229 208.3442 101.8794 208.4253 C101.6123 208.9243 L101.583 209.0303 L101.5347 210.0298 L101.603 210.2144 L101.7842 210.292 L101.873 210.292 L102 210.8882 L102.0742 211.0186 L102.5361 211.4497 l102.6084 211.519 102.7153 211.5361 102.8071 211.4961 C103.5654 211.1631 L103.7036 211.2378 L103.9219 211.2471 L104.916 210.8159 L105.0029 210.7529 L105.0029 211.1543 L105.1021 211.3535 L106.2422 212.2173 L106.5142 212.6909 L106.6084 212.7793 L107.0063 212.9946 L107.083 213.1191 L107.3389 213.3696 L107.5093 213.437 L107.8315 213.437 L108.0723 213.8271 L108.1792 213.9229 L108.6646 214.1499 L108.7705 214.1733 L109.1514 214.1733 L109.1514 215.0122 l109.1514 215.1504 109.2632 215.2622 109.4014 215.2622 C110.3472 215.2622 l110.4482 215.2622 110.5396 215.2012 110.5781 215.1079 C110.7754 214.6318 L110.8853 214.6748 L110.7969 214.7427 l110.6943 214.8203 110.668 214.9629 110.7354 215.0723 C110.9243 215.3789 L110.1763 216.0786 L110.0972 216.2612 L110.0972 216.625 L109.9951 216.6353 L109.7646 216.3525 l109.7031 216.2783 109.605 216.2471 109.5127 216.2676 c109.4194 216.29 109.3472 216.3633 109.3267 216.457 C109.1978 217.0439 L108.7222 217.0718 L108.4541 216.8057 L108.2305 216.1567 l108.1978 216.0615 108.1108 215.9956 108.0107 215.9888 C107.8433 215.9775 L107.7002 215.5073 l107.668 215.4019 107.5708 215.3301 107.4609 215.3301 C107.1211 215.3301 L106.9419 215.4058 L106.8711 215.5874 L106.8916 216.2666 L106.3716 216.7334 L106.2891 216.936 L106.3975 217.126 L107.5615 217.9209 L107.7646 217.9565 L108.2988 217.8198 L109.147 217.9619 L109.3228 217.9214 L109.9111 217.5234 L110.582 217.8857 L110.582 218.3936 L109.4707 218.7466 l109.3618 218.7813 109.29 218.8853 109.2969 218.9995 c109.3037 219.1138 109.3867 219.209 109.499 219.2305 C110.4458 219.4126 L110.5537 219.4097 L111.2808 219.2275 L111.4248 219.1284 L111.9346 218.4023 L111.9531 218.1465 L111.8154 217.8721 L112.2017 217.0962 L112.7944 216.873 L112.8735 216.916 L112.9365 217.7104 L113.0146 217.8735 L113.7417 218.5537 L112.9116 219.3301 L112.1426 219.5625 l112.0239 219.5981 111.9492 219.7158 111.9673 219.8384 c111.9858 219.9609 112.0908 220.0518 112.2148 220.0518 C112.4795 220.0518 l110.9985 220.1411 109.5845 219.9868 108.1948 219.6118 C107.1753 218.4976 l107.105 218.4219 106.9961 218.3984 106.9004 218.4346 c106.8047 218.4722 106.7417 218.5645 106.7417 218.6675 C106.7417 218.9756 L105.1787 218.2656 L103.6211 216.79 L101.1387 213.6841 L100.9409 213.042 L101.2847 212.8936 L101.4238 212.7393 L101.3984 212.5327 L101.0332 211.9404 L101.0938 209.3359 L101.8604 208.2319 L102.5659 207.7134 L102.6514 207.5952 L102.7485 207.3125 Lf106.9429 216.8926 m107.312 216.561 L107.395 216.3677 L107.3901 216.2061 L107.415 216.2886 l107.4453 216.3882 107.5342 216.4585 107.6377 216.4653 C107.812 216.4766 L108.0005 217.0234 L108.0605 217.1191 L108.2725 217.3301 L107.7539 217.4468 L106.9429 216.8926 Lf*U0 D114.6162 218.0996 m115.4653 218.123 L115.4653 217.5776 L114.811 217.5776 L114.4951 217.8501 L114.6162 218.0996 LBb1 (Unnamed gradient 52) 0.000488 0 0 1 0.438477 0.759464 0.759464 -0.438477 -1727.3474 5727.8286 Bg0.438477 -0.759464 3.88409 2.24248 112.8979 217.1074 Xm3533.2441 -6119.7588 3.88409 2.24248 -3420.3462 6336.8662 Bc0.219238 -0.379732 3.88409 2.24248 112.8979 217.1074 Bm0.219238 -0.379732 3.88409 2.24248 113.1172 216.7275 Bm3533.2441 -6119.7588 3.88409 2.24248 113.3364 216.3481 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k115.4653 217.3276 m114.811 217.3276 L114.6479 217.3882 L114.332 217.6606 l114.2461 217.7349 114.2207 217.8574 114.27 217.9595 C114.3911 218.209 l114.4321 218.2925 114.5161 218.3472 114.6094 218.3496 C115.4585 218.373 L115.6396 218.3022 L115.7153 218.123 L115.7153 217.5776 l115.7153 217.4395 115.6035 217.3276 115.4653 217.3276 Cf120.4746 214.6948 m120.8262 215.126 L121.542 214.5815 L121.8101 215.0171 L121.8164 215.6768 l120.5063 217.2593 118.7813 218.5259 116.7944 219.3345 C116.0723 219.3252 L116.084 218.8945 L117.4004 217.6631 L117.8062 217.3735 L118.6064 217.3735 L118.4976 218.1563 L119.3828 217.124 L118.8613 216.5342 L119.0308 215.376 L119.7036 214.7461 L119.1343 214.2129 L119.7827 212.9702 L120.438 212.9702 L120.9233 213.5825 L120.4746 214.6948 LBb1 (Unnamed gradient 53) 0 0 0 1 3.84277 6.65588 6.65588 -3.84277 -78752.1484 -13318.4541 Bg3.84277 -6.65588 29.5294 17.0488 102.5815 211.5396 Xm30965.0645 -53633.0664 29.5294 17.0488 -30862.4824 53844.6055 Bc1.92139 -3.32794 29.5294 17.0488 102.5815 211.5396 Bm1.92139 -3.32794 29.5294 17.0488 104.5029 208.2114 Bm30965.0645 -53633.0664 29.5294 17.0488 106.4243 204.8838 Bcf0 BB*u0.6875 0.351563 0.914063 0.214844 k120.438 212.7202 m119.7827 212.7202 l119.6895 212.7202 119.604 212.772 119.561 212.8545 C118.9126 214.0972 l118.8608 214.1968 118.8813 214.3188 118.9634 214.3955 C119.3379 214.7461 L118.8599 215.1934 L118.7832 215.3398 L118.6138 216.498 L118.6738 216.6997 L119.0513 217.1265 L118.856 217.3545 L118.7949 217.2095 L118.6064 217.1235 L117.8062 217.1235 L117.6611 217.1699 L117.2554 217.4595 L115.9131 218.7119 L115.834 218.8877 L115.8223 219.3184 L115.8921 219.4985 L116.0688 219.5752 L116.791 219.5845 l118.894 218.75 120.6646 217.46 122.0088 215.8359 C122.0664 215.6743 L122.0601 215.0146 L122.0229 214.8862 L121.7549 214.4507 L121.5879 214.3359 L121.3906 214.3823 L120.8672 214.7808 L120.7617 214.6514 L121.1553 213.6763 L121.1191 213.4272 L120.6338 212.8149 L120.438 212.7202 Lf1 D119.9341 213.2202 m120.3169 213.2202 L120.6372 213.624 L120.2427 214.6011 L120.2808 214.853 L120.6323 215.2842 l120.7173 215.3887 120.8701 215.4063 120.9775 215.3252 C121.4736 214.9478 L121.5605 215.0889 L121.5654 215.5874 l120.8682 216.4165 120.0537 217.1538 119.1509 217.7783 C119.5728 217.2866 l119.6538 217.1919 119.6528 217.0518 119.5703 216.9585 C119.1255 216.4556 L119.2656 215.4985 L119.8745 214.9287 L119.9536 214.7461 L119.8745 214.5635 L119.4438 214.1602 L119.9341 213.2202 Lf117.8857 217.6235 m118.3193 217.6235 L118.25 218.1216 L118.3047 218.3154 l117.7915 218.6133 117.2554 218.877 116.7002 219.103 C116.3291 219.0864 L116.3311 219.0059 L117.5713 217.8457 L117.8857 217.6235 Lf*U0 D123.8159 212.2031 m123.2036 213.4355 L122.8999 212.9443 L122.3062 213.1738 L121.918 213.7754 L120.5898 212.5327 L120.2798 211.5508 L120.5957 211.3691 L119.8833 210.2153 L120.0015 208.7817 L120.0015 207.1021 L121.5542 205.6499 L123.4102 206.9434 L124.0039 206.6943 L124.0039 205.2524 L124.0635 205.2358 l124.3462 206.2261 124.5 207.2666 124.5 208.3408 c124.5 209.6929 124.2568 210.9912 123.8159 212.2031 CBb1 (Unnamed gradient 54) -0.000488 0 0 1 4.23437 7.33415 7.33415 -4.23437 -87609.8984 -15501.8721 Bg4.23437 -7.33415 34.4807 19.9074 102.9214 202.8115 Xm34120.5859 -59098.5938 34.4807 19.9074 -34017.6641 59301.4063 Bc2.11719 -3.66708 34.4807 19.9074 102.9214 202.8115 Bm2.11719 -3.66708 34.4807 19.9074 105.0386 199.1445 Bm34120.5859 -59098.5938 34.4807 19.9074 107.1558 195.4775 Bcf0 BB*u0.6875 0.351563 0.914063 0.214844 k124.0635 204.9858 m123.9966 204.9951 L123.937 205.0117 l123.8286 205.0415 123.7539 205.1401 123.7539 205.2524 C123.7539 206.5283 L123.4404 206.6597 L121.6973 205.4448 l121.6001 205.3765 121.4697 205.3867 121.3833 205.4673 C119.8306 206.9194 L119.7515 207.1021 L119.7515 208.7817 L119.6343 210.1948 L119.6704 210.3467 L120.2476 211.2808 L120.1553 211.334 l120.0532 211.3926 120.0059 211.5142 120.0415 211.626 C120.3516 212.6079 L120.4189 212.7153 L121.7471 213.958 L121.9487 214.0234 L122.1279 213.9111 L122.4722 213.3779 L122.7964 213.2524 L122.9912 213.5669 l123.0391 213.6445 123.1226 213.7017 123.2153 213.6851 c123.3057 213.6812 123.3872 213.6279 123.4277 213.5469 C124.04 212.3145 l124.5146 211.0137 124.75 209.6851 124.75 208.3408 c124.75 207.272 124.6001 206.2041 124.3037 205.167 c124.2725 205.0576 124.1724 204.9858 124.0635 204.9858 Cf1 D120.2515 207.2104 m121.5771 205.9707 L123.2671 207.1484 L123.5068 207.1738 L124.1006 206.9248 L124.1543 206.894 l124.2178 207.374 124.25 207.8574 124.25 208.3408 c124.25 209.627 124.0249 210.8975 123.5811 212.1177 C123.1802 212.9224 L123.1123 212.813 l123.0493 212.7104 122.9233 212.6685 122.8096 212.7109 C122.2158 212.9404 L122.0962 213.0381 L121.8701 213.3882 L120.8086 212.395 L120.5786 211.6675 L120.7202 211.5859 L120.8379 211.4307 L120.8086 211.2378 L120.1392 210.1538 L120.2505 208.8022 L120.2515 207.2104 Lf*U0 D112.1182 202.7178 m112.1182 203.0659 L111.1641 203.9736 L109.9507 204.019 L108.6011 205.2822 L108.2046 204.9116 L107.8003 205.2896 L107.3638 205.3511 L106.9292 205.5093 L106.7002 205.1387 L106.3774 205.1387 L106.1826 205.729 L105.7788 205.6377 L105.2446 205.1846 L105.0835 204.9268 L105.0425 203.8452 L104.356 203.2021 L104.3398 202.7627 L104.6787 202.0518 L105.439 201.1895 L105.8115 200.3872 L107.2827 199.3887 L107.4438 198.2227 L107.5903 197.1333 L108.146 196.8252 l108.4072 196.7549 108.6719 196.6914 108.9404 196.6362 C109.4507 196.6782 L110.21 197.0879 L111.6577 197.3223 L112.377 197.9961 L112.8618 198.4653 L113.8809 198.541 L114.7217 199.3281 L114.8911 200.1074 L115.7407 200.9014 L115.8691 201.7036 L111.8511 202.4678 L112.1182 202.7178 LBb1 (Unnamed gradient 55) 0 0 0 1 5.09814 8.83025 8.83025 -5.09814 -107166.6094 -20327.8828 Bg5.09814 -8.83025 43.5632 25.1512 85.7402 194.0684 Xm41080.8438 -71154.1172 43.5632 25.1512 -40995.1016 71348.1875 Bc2.54907 -4.41512 43.5632 25.1512 85.7402 194.0684 Bm2.54907 -4.41512 43.5632 25.1512 88.2891 189.6533 Bm41080.8438 -71154.1172 43.5632 25.1512 90.8384 185.2383 Bcf0 BB*u0.6875 0.351563 0.914063 0.214844 k108.9404 196.3862 m108.8901 196.3911 l108.6167 196.4478 108.3472 196.5122 108.0811 196.584 C107.4692 196.9146 L107.3428 197.0981 l107.1938 198.1445 107.1938 198.2031 107.1938 198.2227 c107.1875 198.3022 107.0903 198.9761 107.0513 199.2437 C105.6709 200.1802 L105.585 200.2817 L105.2124 201.084 L104.4912 201.8862 L104.1143 202.6553 L104.0898 202.772 L104.106 203.2114 L104.1851 203.3848 L104.7964 203.9575 L104.8335 204.936 L104.8716 205.0591 L105.0327 205.3169 L105.6172 205.8281 L105.7236 205.8813 L106.1274 205.9727 l106.2549 206.0024 106.3799 205.9292 106.4199 205.8071 C106.561 205.3887 L106.7163 205.6406 l106.7793 205.7427 106.9058 205.7856 107.0146 205.7441 C107.4492 205.5859 L107.835 205.5371 L107.9712 205.4722 L108.2046 205.2539 L108.4302 205.4648 l108.5269 205.5547 108.6753 205.5547 108.772 205.4648 C110.0532 204.2656 L111.1733 204.2236 L111.3364 204.1548 L112.2905 203.2471 L112.3682 203.0659 L112.3682 202.7178 L112.3511 202.627 L115.916 201.9492 l116.0488 201.9238 116.1372 201.7979 116.1162 201.6641 C115.9878 200.8618 L115.9116 200.7188 L115.1187 199.978 L114.9658 199.2749 L114.8926 199.1455 L114.0518 198.3584 L113.8994 198.2915 L112.9707 198.2227 L111.8286 197.1396 L111.6978 197.0757 L110.25 196.8413 L109.5693 196.458 L109.4712 196.4292 L108.9609 196.3872 L108.9404 196.3862 Lf1 D107.8203 197.2915 m108.2671 197.0439 l108.4585 196.9995 108.7041 196.9409 108.9556 196.8882 C109.3779 196.9229 L110.0913 197.3081 L111.5415 197.5562 L112.688 198.645 L112.8433 198.7148 L113.7744 198.7837 L114.4941 199.4575 L114.647 200.1606 L114.7202 200.29 L115.5073 201.0254 L115.584 201.5034 L111.8042 202.2222 l111.7119 202.2397 111.6372 202.3076 111.6108 202.3979 c111.585 202.4888 111.6113 202.5859 111.6802 202.6504 C111.8682 202.8262 L111.8682 202.9585 L111.0601 203.7275 L109.9414 203.769 L109.7798 203.8364 L108.6011 204.9399 L108.3755 204.729 l108.2788 204.6392 108.1304 204.6392 108.0337 204.729 C107.687 205.0532 L107.3291 205.1035 L107.0361 205.2065 L106.9131 205.0073 L106.7002 204.8887 L106.3774 204.8887 l106.2695 204.8887 106.1738 204.958 106.1401 205.0605 C106.0161 205.4351 L105.8936 205.4072 L105.4063 204.9941 L105.3311 204.8584 L105.2925 203.8359 L105.2134 203.6626 L104.6021 203.0898 L104.5918 202.8149 L104.9043 202.1592 L105.6265 201.355 L106.0078 200.5562 L107.4233 199.5957 L107.5303 199.4248 l107.6938 198.3018 107.6938 198.2441 107.6938 198.2227 c107.6992 198.1479 107.7832 197.5532 107.8203 197.2915 Cf*U0 D104.1128 208.9819 m104.6953 208.9521 L105.8926 208.1807 L105.3423 208.0288 L104.9868 208.3623 L104.1938 208.7397 L104.1128 208.9819 LBb1 (Unnamed gradient 56) 0 -0.000977 0 1 0.791992 1.37177 1.37177 -0.791992 -9736.4238 3759.1516 Bg0.791992 -1.37177 6.51893 3.7637 101.3242 207.3735 Xm6381.8721 -11053.7275 6.51893 3.7637 -6280.5479 11261.1016 Bc0.395996 -0.685885 6.51893 3.7637 101.3242 207.3735 Bm0.395996 -0.685885 6.51893 3.7637 101.7202 206.6875 Bm6381.8721 -11053.7275 6.51893 3.7637 102.1162 206.002 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k105.3423 207.7788 m105.1714 207.8467 L104.8159 208.1802 L104.0864 208.5142 L103.9565 208.6602 L103.8755 208.9023 L103.9136 209.1333 L104.1255 209.2314 L104.708 209.2017 L104.8306 209.1621 L106.0278 208.3906 l106.1108 208.3374 106.1548 208.2402 106.1396 208.1431 c106.125 208.0454 106.0542 207.9658 105.959 207.9395 C105.4087 207.7876 L105.3423 207.7788 Lf106.3604 207.8472 m107.1538 207.8472 L107.3472 207.5596 L106.6362 207.2114 L106.2314 207.439 L106.3604 207.8472 LBb1 (Unnamed gradient 57) 0 0 0 1 0.371094 0.642753 0.642753 -0.371094 -211.0204 6115.0659 Bg0.371094 -0.642753 3.46013 1.99771 104.8008 206.9478 Xm2990.2725 -5179.3042 3.46013 1.99771 -2885.4717 5386.252 Bc0.185547 -0.321377 3.46013 1.99771 104.8008 206.9478 Bm0.185547 -0.321377 3.46013 1.99771 104.9863 206.6265 Bm2990.2725 -5179.3042 3.46013 1.99771 105.1719 206.3052 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k106.6362 206.9614 m106.5137 206.9937 L106.1089 207.2212 l106.0059 207.2788 105.9575 207.4014 105.9932 207.5142 C106.1221 207.9224 l106.1548 208.0264 106.2515 208.0972 106.3604 208.0972 C107.1538 208.0972 L107.3613 207.9868 L107.5547 207.6992 L107.5889 207.4946 L107.457 207.335 L106.7461 206.9868 L106.6362 206.9614 Lf107.8647 207.3179 m108.1558 207.2422 L107.9614 207.061 L107.6709 207.1055 L107.8647 207.3179 LBb1 (Unnamed gradient 58) 0 -0.00293 0 1 0.135254 0.234267 0.234267 -0.135254 5126.5161 7435.0542 Bg0.135254 -0.234267 1.35984 0.785107 107.1587 206.9106 Xm1089.8759 -1887.7206 1.35984 0.785107 -982.7173 2094.6313 Bc0.067627 -0.117133 1.35984 0.785107 107.1587 206.9106 Bm0.067627 -0.117133 1.35984 0.785107 107.2261 206.7935 Bm1089.8759 -1887.7206 1.35984 0.785107 107.2939 206.6763 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k107.9614 206.811 m107.9238 206.814 L107.6333 206.8584 l107.542 206.8721 107.4658 206.9351 107.4351 207.022 C107.4863 207.2739 L107.6802 207.4863 l107.7422 207.5552 107.8369 207.5835 107.9277 207.5601 C108.2188 207.4844 L108.3979 207.3037 L108.3262 207.0591 L108.1318 206.8779 L107.9614 206.811 Lf117.3452 217.1577 m117.6729 217.1577 L117.9512 216.9082 L118.7407 216.3862 L118.813 215.8984 L118.522 215.8984 L118.3281 216.0801 L118.291 216.3291 L117.9644 216.6021 L117.5518 216.7603 L117.2847 216.9307 L117.3452 217.1577 LBb1 (Unnamed gradient 59) 0 0 0 1.00098 0.912109 1.57982 1.57982 -0.912109 -12441.208 3079.1199 Bg0.913 -1.58136 7.17553 4.14279 114.0415 215.251 Xm7349.7764 -12730.1875 7.17553 4.14279 -7235.7349 12945.4385 Bc0.4565 -0.790681 7.17553 4.14279 114.0415 215.251 Bm0.4565 -0.790681 7.17553 4.14279 114.498 214.4604 Bm7349.7764 -12730.1875 7.17553 4.14279 114.9546 213.6694 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k118.813 215.6484 m118.522 215.6484 L118.3511 215.7158 L118.1572 215.8975 L118.0811 216.0435 L118.0576 216.1982 L117.8042 216.4102 L117.4624 216.5269 L117.1504 216.7197 l117.0586 216.7783 117.0151 216.8896 117.043 216.9951 C117.1035 217.2222 l117.1328 217.3315 117.2319 217.4077 117.3452 217.4077 C117.6729 217.4077 L117.8398 217.3438 L118.1182 217.0942 L118.8784 216.5947 L118.9878 216.4229 L119.0601 215.9351 L119.0024 215.7354 L118.813 215.6484 Lf117.5518 216.3975 m117.8916 216.4204 L117.9644 216.2383 L118.1338 216.1479 L118.0181 215.96 L117.7251 215.8018 L117.7251 216.1367 L117.5518 216.2383 L117.5518 216.3975 LBb1 (Unnamed gradient 60) -0.000977 0 0 1 0.305664 0.529426 0.529426 -0.305664 1280.5454 6472.5869 Bg0.305664 -0.529426 2.57423 1.48623 116.3647 215.7129 Xm2463.0405 -4266.1118 2.57423 1.48623 -2346.6758 4481.8247 Bc0.152832 -0.264713 2.57423 1.48623 116.3647 215.7129 Bm0.152832 -0.264713 2.57423 1.48623 116.5176 215.4482 Bm2463.0405 -4266.1118 2.57423 1.48623 116.6704 215.1836 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k117.7251 215.5518 m117.5972 215.5869 L117.4751 215.8018 L117.4253 216.0225 L117.3018 216.2383 L117.3018 216.3975 l117.3018 216.5288 117.4038 216.6382 117.5352 216.647 C117.875 216.6699 l117.9829 216.6802 118.0835 216.6133 118.1235 216.5132 C118.1626 216.416 L118.2515 216.3687 L118.375 216.2134 L118.3467 216.0171 L118.231 215.8291 L118.1367 215.7397 L117.8438 215.5815 L117.7251 215.5518 Lf*u1 D0 g124.5 196.5 m124.5 203.5 L123.5 204.5 L114.5 204.5 L113.5 203.5 L113.5 196.4995 L114.5 195.5 L123.5 195.5 L124.5 196.5 Lf0 D116.5 198.5 m116.5 201.5 L121.5 201.5 L121.5 198.5 L116.5 198.5 LBb1 (Unnamed gradient 61) 0 0 0 1 -11.2812 6.51318 6.51318 11.2812 44639.9414 -139174.7813 Bg-11.2812 -6.51318 32.2002 -55.7724 108.5439 231.1455 Xm-90903.625 -52483.2266 32.2002 -55.7724 91012.1719 52714.3711 Bc-5.64058 -3.25659 32.2002 -55.7724 108.5439 231.1455 Bm-5.64058 -3.25659 32.2002 -55.7724 102.9033 227.8892 Bm-90903.625 -52483.2266 32.2002 -55.7724 97.2627 224.6323 Bcf0 BB*U*u0.367188 0.507813 1 0.183594 k123.5 195.25 m114.5 195.25 L114.3232 195.3232 L113.3232 196.3228 L113.25 196.4995 L113.25 203.5 L113.3232 203.6768 L114.3232 204.6768 L114.5 204.75 L123.5 204.75 L123.6768 204.6768 L124.6768 203.6768 L124.75 203.5 L124.75 196.5 L124.6768 196.3232 L123.6768 195.3232 L123.5 195.25 Lf1 D114.6035 195.75 m123.3965 195.75 L124.25 196.6035 L124.25 203.3965 L123.3965 204.25 L114.6035 204.25 L113.75 203.3965 L113.75 196.603 L114.6035 195.75 Lf0 D121.5 198.25 m116.5 198.25 l116.3618 198.25 116.25 198.3618 116.25 198.5 C116.25 201.5 l116.25 201.6382 116.3618 201.75 116.5 201.75 C121.5 201.75 l121.6382 201.75 121.75 201.6382 121.75 201.5 C121.75 198.5 l121.75 198.3618 121.6382 198.25 121.5 198.25 Cf1 D116.75 198.75 m121.25 198.75 L121.25 201.25 L116.75 201.25 L116.75 198.75 Lf*U*u0 g110.5 196.6357 m110.5 203.5 L109.5 204.5 L100.5 204.5 L99.5 203.5 L99.5 196.6357 L100.5 195.5 L109.5 195.5 L110.5 196.6357 Lf0 D102.5 198.5 m102.5 201.5 L107.5 201.5 L107.5 198.5 L102.5 198.5 LBb1 (Unnamed gradient 62) -0.000488 0 0 1 -11.222 6.479 6.479 11.222 44434.7422 -138401.4063 Bg-11.222 -6.479 32.0628 -55.5345 94.6123 231.0254 Xm-90426.5703 -52207.8047 32.0628 -55.5345 90521.1797 52438.8281 Bc-5.61098 -3.2395 32.0628 -55.5345 94.6123 231.0254 Bm-5.61098 -3.2395 32.0628 -55.5345 89.0015 227.7861 Bm-90426.5703 -52207.8047 32.0628 -55.5345 83.3901 224.5464 Bcf0 BB*U*u0.367188 0.507813 1 0.183594 k109.5 195.25 m100.5 195.25 L100.3125 195.335 L99.3125 196.4707 L99.25 196.6357 L99.25 203.5 L99.3232 203.6768 L100.3232 204.6768 L100.5 204.75 L109.5 204.75 L109.6768 204.6768 L110.6768 203.6768 L110.75 203.5 L110.75 196.6357 L110.6875 196.4707 L109.6875 195.335 L109.5 195.25 Lf1 D100.6128 195.75 m109.3872 195.75 L110.25 196.73 L110.25 203.3965 L109.3965 204.25 L100.6035 204.25 L99.75 203.3965 L99.75 196.73 L100.6128 195.75 Lf0 D107.5 198.25 m102.5 198.25 l102.3618 198.25 102.25 198.3618 102.25 198.5 C102.25 201.5 l102.25 201.6382 102.3618 201.75 102.5 201.75 C107.5 201.75 l107.6382 201.75 107.75 201.6382 107.75 201.5 C107.75 198.5 l107.75 198.3618 107.6382 198.25 107.5 198.25 Cf1 D102.75 198.75 m107.25 198.75 L107.25 201.25 L102.75 201.25 L102.75 198.75 Lf*U0 D106.5 198.5 m106.5 201.5 L117.5 201.5 L117.5 198.5 L106.5 198.5 LBb1 (Unnamed gradient 63) 0.000488 0 0 1 -9.54911 5.51318 5.51318 9.54911 39037.8438 -116547.7813 Bg-9.54911 -5.51318 26.1018 -45.2097 103.7231 225.3613 Xm-76946.7656 -44425.2305 26.1018 -45.2097 77050.4922 44650.5938 Bc-4.77456 -2.75659 26.1018 -45.2097 103.7231 225.3613 Bm-4.77456 -2.75659 26.1018 -45.2097 98.9487 222.605 Bm-76946.7656 -44425.2305 26.1018 -45.2097 94.1738 219.8481 Bcf0 BB*u0.367188 0.507813 1 0.183594 k117.5 198.25 m106.5 198.25 l106.3618 198.25 106.25 198.3618 106.25 198.5 C106.25 201.5 l106.25 201.6382 106.3618 201.75 106.5 201.75 C117.5 201.75 l117.6382 201.75 117.75 201.6382 117.75 201.5 C117.75 198.5 l117.75 198.3618 117.6382 198.25 117.5 198.25 Cf1 D106.75 198.75 m117.25 198.75 L117.25 201.25 L106.75 201.25 L106.75 198.75 Lf*UULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF