%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (Nick La) ()%%Title: (timer clock.eps)%%CreationDate: 1/7/10 10:09 AM%%Canvassize: 16383%%BoundingBox: 97 240 127 272%%HiResBoundingBox: 97.6655 240 126.335 271.75%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 112.5 255.5 112.5 255.5%AI3_TileBox: -194 -140 418 652%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 32 32%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 1%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: 77 277 23.95 1893 1050 18 0 0 18 96 0 0%AI5_OpenViewLayers: 77%%PageOrigin:0 0%AI7_GridSettings: 4 4 4 4 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 116 128 8%%BeginData: 22586 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD29FF7D7D527D597D527D597D527D597D527D597D527D597D527D%597D527D597D527D7DA8FD51FF527D527D527D527D527D527D527D527D52%7D527D527D527D527D527D527D527D527D52A8FD4FFF7D7DFD0552535259%527D527D52FD077D527DFD065228522852527D52A8FD4DFFA87D52522752%275228FD04527D527D527D7D7D527D5253FD045227522752FD04272E7D7D%FD4DFFA8537D27FD0452535259527D527D53FD077D527DFD065227522752%2752537DFD4DFF847D525227522EFD06527D527D527D7D7D527D5259FD04%522852275227522727277D52FD4EFF527D525227FD04527D527D52FD077D%527D527D525352522E52285227522752527DFD4EFF7D527D2E5227FD0652%53527D527D597D527D527DFD04522E5227522727275252527EFD4EFFA87D%527D527D5253527D527D52FD077D597D527D527DFD05527D527D597D7DFD%50FFA884527D527D525252595259527D537D7D7D597D527DFD07527D527D%527DA8FD54FFA8A87D7D5359527D527D52FD077D527DFD05527D52A8A8FD%5AFF527D5252527D527D527D7D7D527D5253FD0452277D52A8FD5CFFA852%7D527D527D53FD077D527D52525259537DFD5DFFA87D5252527D527D527D%7D7D527D5259FD05527D52FD5DFFA8527D527D52FD077D527D527D525352%52527DFD5DFFA85352525259527D527D597D527D527DFD05525952FD5AFF%A8A87D7D527D527D52FD077D597D527D527D527D527D7DA8A8FD36FFA8A8%A8FD1BFFA8A87D7D527D527D527D5259527D537D7D7D597D527D52525259%527D527D527D527D84FD1CFFA8A8FD13FFA87D7D537D7DFD17FFA8A87D7D%527D537D527D537D527D537D527D537D527D537D527D527D527D537D527D%537D527D537DA8FD17FF7D7D537D52A8FD10FFA852595253525952A8FD12%FFA8A87D59527D527D527D5253527D527D527D527D527D5259527D527D52%7D527D527D5252527D527D527D52525284A8FD13FF7D52527D527D527DA8%FD0DFFA8527D52522752527D53A8FD10FFA87D527D527D597D527D537D7D%A8A8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8A87D847D7D527D59%7D527D527D7DFD11FF7D7D52535252527D527DA8FD0BFFA8527D52522752%2727527D52A8FD0DFFA85253527D527D527D527D7DFD1DFFA87D527D527D%527D5253527DA8FD0DFF7D7D525227FD04527D527DA8FD09FFA8527D5253%525227522727527D52A8FD0AFFA87D527D537D527D527D7DFD23FFA8A859%7D527D537D527D7DFD0BFF7D7D525228525259527D527D527DA8FD07FFA8%527D5253FD045227522727527D52A8FD08FF7D7D527D527D52597DA8FD0A%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD05FF7D%7D527D527D527D52A8FD08FF7D7D525227FD04527D527D527D527DA8FD05%FFA8527D7D7D537D5253FD04522752527D52FD06FFA8527D597D527D52A8%A8FD2CFFA87D7D527D597D527DA8FD05FF7D7D7D5227525253527D597D7D%7E7D7D527DFD04FFA8527D527D7D7D527DFD045227522727527D52A8FFFF%A87D527D527D52597DFD23FFA9FFFFFFA9FFFFFFA9FD05FF7E7D527D527D%527D7DFFFFFF7D53525227FD045253527D7D7D537D527D527DA8FFA9527D%527D537D7D7D527DFD06522752527D52FFA87D527D537D527DA8FD34FFA8%527D537D527D7DFF7D7D595227FD04527D53FD057D527D527D527DFF7D53%5252527D527D7D7D527D52522852272E2727527D527D527D527D52A8A8FD%0BFFA8FFFFFFA8FD07FFA8FFFFFFA8FD07FFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFA85359527D527D527D5252275228FD04527D597D527DFD%05527D52A87D527D527D52FD077D527D525228522752527D537D527D7DFD%15FFA8A87D7D585852582D585158527D7CA7A8FD15FF847D527D597DFD05%527D527D52FD057D527DFD05527D7D527D2EFD04527D527D7D7D5259FD04%5227522727527D52537DFD12FFA87C7C2D2D272D272D262D272D262D272D%042D272D2D5858A7A8FFFFFFA8FFFFFFA8FFFFFFA8FD05FFA87D527D5252%27FD04527D527D537D7D7D525952522752275252A87D53522852525952FD%077D5259525227522752527DA8FD10FFCF7C582D2D272D2D515158587C58%827C825882585851582D2D272D2D5152A7FD11FF7D527D52525259527D52%FD057D527DFD04522752527D7D7D59525227FD04527D527D597D5253FD04%522752275952FD0BFFA8FFFFFF7D582D2D042D2D58588382A783ADA7A783%ADA7A782ADA7A782A77C582D51272D265158A8A8FFA8FFA8FFA8FFA8FFA8%FFA8FFA859FD05527D527D527D537DFD0452275227272E7D52FFFF7D7DFD%05527D527D597D7D7D537D5253525228525284FD0DFFA751FD042D7C82AD%A7CFA7ADA7ADA7ADA7ADA7ADA7ADA7ADA7ADA7ADA7AD838251512D2D2D7C%A8FD0DFF527D5252527D59FD057D527DFD04522752527D52A8FFFFFF7D59%525227525253527D527D7D7D527D5252285252527DFD0BFF7D58272D2758%7CA7A7ADA7A783ADA7A782AD83A782AD83A782AD82A782AD82A782AD83A7%827C2D2D262D52AEFD04FFA8FFFFFFA8FFFF7D527D5253527D7D7D537DFD%045228522727527D52A8FD05FF7D7DFD05527D527D537D7D7D527D527D52%7D7DFD0BFF522D275157A7A7ADA7ADA7ADA7ADA7ADA7ADA7ADA7AD83ADA7%AD83ADA7AD82ADA7AD82AD83ADA7AD7C57272D2D7DFD0AFFA87D527D53FD%057D527DFD04522728527D52A8FD07FF5953525227FD04527D527D7D7D52%7D52527DFFFFFFA8FFFFFFA8FFFF7D272D27587CADA7A782AD83A782AD83%A782ADA7A782AD83A782A782A782AD82A782A782A782A782A782A7827C2D%2D2652A7FFA8FFA8FFA8FFA8FFA859527D537D527DFD045227522727527D%52A8FD09FF7D7D59525253527D52FD057D597D7DFD09FFCF582D2D5183A7%CFA7ADA7ADA7ADA7ADA7ADA7A77C7C5758515851585158517C7C8382ADA7%AD82AD83AD82AD83AD83AD585127517DFD09FFA87D527D7D7D527DFD0452%2752527D52A8FD0BFF537D525227FD04527D527D527D7DFD09FF8351272D%51ADA7A783ADA7A783ADA7AD828251512D2D272D042D272D262D272D26FD%042D7C7CA782A782A782A782A782AD7C51262D52FFA8FFFFFFA8FFFFFFA8%7D527D5259525227522727527D52A8FD0DFF7D7D535228525259527D537D%7DFD09FF7D2D27517CADA7ADA7ADA7ADA7ADA7835751FD052D58587D7CA7%7D837D7D58582D512D2D2751517C82ADA7A782AD82A782AD82582D2D51FD%09FFA87D527DFD04522752527D52A8FD0FFF527D525227FD0452597DFD05%FFA8FFFFFF582D265182AD83A782AD83A7A7AD5851262D262D517D83FFA8%FFFFFFA87E7DFD05FFA8A75851262D262D518282A782A7828382A7825827%2D2DA8A8FFA8FFA8FFA8FF7E7D5253275227272E7D52A8FD11FF7D7D527D%527D527D7DFD09FF582D2D58A7AEA7ADA7ADA7ADA783512D275152A7A8FD%08FFA87D7DA8FD08FFAE7C582D2D2D5882AD82AD82AD82AD82832D2D2DCF%FD08FFA87D527D5252527D53A8FD13FF527D527D52537DFD09FF582D2658%A7AD83ADA7A783AD8257272D2D5883A8A8FD05FFA8FFFFA8527D7D7DFD04%FFA8FFFFFFA8A8A8832D2D272D57A7828382A7FD04822D2D2DA8FFFFA8FF%A8FFA8FFA87D527D527D527DFD13FF7D7D537D52A8A8FD09FF7C2D2D7CA7%ADA7ADA7ADA7AD58512D2D52AEFFA8527D7EFD07FFA87D7D847DFD07FFA8%7D527DFFFF7D582D2D2D8382A782AD82A782832D2D2DCFFD08FFA8A87D7D%537D52FD12FFA853527D527DFD04FFA8FFFFFFA8FF7D2D2658A7A782AD83%A783A7512D04517DFFA8FF7D7D597DA8FFA8FD04FFA8527D7D7DA8FFA8FF%A8FFA87D527D52AFFFFFA87C272D277C82828283FD04822D2D2DFFA8FFA8%FFA8FFA8FFFFA8527D525359FD11FF7D527D537DFD0AFFA8512D58A7ADA7%ADA7ADA7A7512D2D7DFD05FFA87DA87D7EFD06FFA8FD047DFD07FFFD047D%A8FD04FFA82D2D2D5882AD82A782AD82822D2D52FD0AFFA8527D527DA8FD%0FFFA8527D527DA8FD09FFA851275183ADA7A782ADA7832D2D2D83FD04FF%A8FFA87D7D7E7DFD05FFA8FF7D7D52A8FFFFA8FFFFFFFD057DFFFFFFA8FF%FFFF512D275782A782828283827C272D58FFA8FFA8FFA8FFA8FFA87D527D%527DFD0FFF7D7D537D7DFD0AFF58275183ADA7ADA7ADA7832D2D2DA8FD08%FFFD047DA8FD07FFA8A8FD07FFA859847DA8FD08FF582D2D5882AD828382%A78258275183FFA8FFFFFFA9FFFFFFA87D537D52A8FD0DFFA852527D52A8%FD04FFA8FD04FF83262D58AD83A782A7A783272D2DCFFD04FFA8FD05FF59%7D52FFFFFFA8FFA8FFFFFFA8FFA8FFA8FFA8FF7D7D52A8FFFFA8FFA8FFA8%FFFFFF582D2757FD0782512651A8FFA8FFA8FFA8FFA8FF7D7D525952FD0D%FF7D527D527DFD0AFF2D2D51AEA7ADA7ADA7A72D2D51FF7EA8A8FD09FF7E%FD09FF7DA8FD08FFA8A8FD09FFA87DA87D2D2D5882A782AD82A782512D7C%FD0AFF527D527DA8FD0BFFA9527D527DA8FD09FF522D2DA783AD83A782AD%2D2D2DFFA87D527D7DFD05FFA8FD07FFA8FD04FF7D7DFFA8FFFFFFA8FD05%FFA8FFA8FFAFFFA87D527D52FF7C2D267CFD0682572D2DA8A8FFA8FFA8FF%A8FFA87D527D527DFD0BFF7D7D537D7DFD09FFA82D2782A7ADA7ADA7AD51%2D2DA8FFA8FD047D7EFD11FF527EFD10FFA87D59847D7DA8FF582D2DFD04%828382822D2D51FFA8FFFFFFA8FFFFFFA87D537D52FD0AFFA87D527D52A8%FD04FFA8FD04FF58265182A782A782AD582D267DFFFFA8FD057DA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA82752FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A88452FD047DFFA8FF2D2D2DFD0782262D7DFFA8FFA8FFA8FFA8FF527D52%527DFD09FFA8527D537DA8FD08FFA82D2D7CADA7ADA7AD83512D7CFD04FF%A87D7DA87DA8FD0FFFA8277DFD10FFFD057DFD04FFAE2D2D57A782838282%82582D58FD09FFA8527D527DFD09FF7D59527D7DFD09FF512D51A782AD83%A783582751A8FFFFFFA8FFA87D527DA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8%FF7D2727FFFFFFA8FFAFFFA8FFAFFFA8FFA8FFA87E527D7DFFFFFFA8FFFF%7D262D58FD0582572D2783A8FFA8FFA8FFA8FFA87D527D52A8FD07FFA87D%537D52A9FD08FFA82D2D83A7AD83ADA7832D2D7DFD08FFAFA8FD10FF7D27%52A8FD0FFFA8A9A8FD05FFA9FFFF582758FD0682512D52FFA8FFFFFFA8FF%FFFF7D7D537D7DFD07FFA8527D527DA8FFFFFFA8FD04FF7C265182A782A7%82AD512D2DFFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FF522727A8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FF832D267C82825882827C262DA7FFA8FFA8FFA8FFFFA8527D527DA8FD%06FF7D7D597D7DFD09FF2D2D58ADA7AD83AD82512DA8FD1BFF7D27277DFD%1BFF522D51FD0682582D7DFD08FFA87D537D52FD07FF7D527D52A8FD08FF%7D2D2DA782AD82A782582752FD08FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFF2752277DFFFFAFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFFFA8272D57FD0582512D2DFFA8FFA8FFA8FFA8FF7D7D52537D%FD06FF527D527DA8FD08FF7C2758A7AD82ADA7A72D2D83A87DA87EFD17FF%A852272752FD0DFFA9FFFFFFA9FD05FFA8A87DA8A8582758FD06822D51A7%FFA8FFFFFFA8FFFFA8527D527DFD05FF7D7D525952FFFFFFA8FFFFFFA8FF%2D2D57AD82A782AD572D2DFF527D527D52A8A8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFFFA827272752A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8A87D7D527D527D7D2D2782828257828251047CA8FFA8FFA8FF%A8FFA859527D52FD05FFA8527D52A8FD08FFA82D2DA7A7AD83ADA758277D%FF7D7DA87D7D59A8FD14FF7D52275227FD15FF7D7D7DA87D7DA8FF2D5157%FD0582572D51FD05FFA8FFFFFF537D537DA8FD04FF7D7D52537DFFFFFFA9%FD04FF7D275182AD82A782832D2D83FFA87D52FD047DFFFFFFA8FFFFFFA8%FFFFFFA8FFAFFFA8FFAFFFFF7D275227277DFFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA87D53FD047DFFFF5826578282578282582751A8FFA8FF%A8FFA8FFA87D527D52A8FD04FF7D527D52A8FD08FF522D58AD82AD83AD58%2D51FD04FFA87D7D7DA8FD14FFFD04522784FD06FFA9FFFFFFA9FFFFFFA8%FD05FF7D7D7DA8A8FFFFFF7D2D2DFD0682512DA8FFFFA8FFFFFFA8FF7D7D%527D7DFD04FF527D527DA8FFA8FFFFFFA8FFA851267C82A782A78257047C%FFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA852%2752272752FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8AE2D2D5782578257822D2D58FFA8FFA8FFA8FFA8A8527D527DFFFF%FFA87D527D7DFD09FF2D5182AD83ADA7AD2D2D7DFD1CFFA84B524B51277C%FD1DFF582D7CFD058258277CFFFFA8FFFFFFA8FFA87D527D7DFFFFFFA852%7D527DFFFFA8FFFFFFA8FF832D2DA782A782A7822D27A8FFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFAFFFA8FFAFFFA8FFA8FFA8A84B4B446F444B4476A8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF522D2D%825D825782572D2DFFA8FFA8FFA8FFA8A8527D527DFFFFFF7E7D537D7DFD%08FFA72D5182AD83A782832D51A8FD1AFFA74A6F4A6F6F996E6F4475FFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD04FF832D57FD0482%5D822D51A8FFFFFFA8FFFFFFA87D537D52FFFFFF84527D527DFD04FFA8FF%A8FF582D2DA782A782A7572D2DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8CA4A4A4A9999BB99BB6E4B4475A8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7D2D2D8257825782572D2DA8%A8FFA8FFA8FFA8AF527D527DA8FFFF7D7D597D7DFD08FF7D2D5883AD83AD%A77C2D58FD1AFF756F6EC2BBC1BBC1BBC1936F4AA7FD19FFA82D515E8282%825E822D51A8FFFFFFA8FFFFFFA87D537D52FFFFFF7D527D52A8FD04FFA8%FFFFFF522D51A782A782A7512D52FFA8A87DA87EFFFFFFA8FFAFFFA8FFAF%FFA8FFA8FFA8FFA8FFA86F449999BBBBBB98BBBBBB6E4B75FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87DA8A8FFA8512D5E57825782572D2D%A8A8FFA8FFA8FFA8FF537D527DA8FFFF7D7D527D84FD08FF7C277CA7A782%ADA758277CA87D53FD047DA9FD11FFA1446FBBC1FD07BB994475FFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFFD047D537D7DFF2D51578257825E822D%51A8FFA8FFFFFFA8FFA87D527D52AFFFFF7D527D52A8FFFFA8FFA8FFA8FF%522D51A7828382A7512D52A852FD067DFFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FF764A4ABB99BB98BB98BB92BB924B4AFFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA87D527D7D7D527DA82D265E57825782572D26A7A8FFA8FFA8%FFA8FF5959527DA8FFFF7D7D527DA8FD08FF7C277CA7AD82ADA77C277CA8%FD067DA8FD11FFA1446FFD06BB99BBBB994475FD12FFFD077DFF2D515782%5D825E822D51A8FFA8FFFFFFA8FFFF7D527D53FFFFFF84527D52A8FFFFA8%FFFFFFA8FF522D51A7828382A7512D52FFA8A87DA87DA8A9FFAFFFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA84B4499BABB92BB92BB92BB6E4B6FFFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF84A87DA8A8FFA82D27825782578257%2D27A8A8FFA8FFA8FFA8FF7D7D527DA8FFFF7D7D537D7DFD08FF7D2D5882%AD82A7827C2D58FD14FFA9FD05FF6F4B6EBBBBBB98BB99BB6E6F4AA1FD04%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FD07FFA8A82D5157825D8257822D51A7%FFAFFFA8FFAFFFA87D527D52FFFFFF84527D527EFFFFA8FFA8FFA8FF582D%2DA782A782A7572D2DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8A8444B4A9992BB92BB6E4B4475A8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FF7D2D2D825782575E572D2DA8A8FFA8FF%A8FFA8A9527D527DA8FFFF847D597D7DFD08FFA72D5882AD82AD82822D51%A8FD1AFFA14A6F4A6F6E996F6F4475A8FD0DFFA8FFFFFFA8FFFFFFA8FD04%FF832D575D825D825D822D52A8FFFFFFA8FFFFFFA87D537D53FFFFFFA852%7D527DA8FFFFFFA8FFFFFF7D2D2D8282A782837C2D2DA8A8FFAFFFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA14A6F444B444B4475A8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF522D2D%8257825782512D51FFA8FFA8FFA8FFA8A8527D527DA8FFFFA87D527D7DFD%08FFCF2D5182A782AD82A72D2D7DFD0DFFA9FFFFFFA9FFFFFFA8FFFFFFA8%FFFFFF7C9A757676CAFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFF5827585D8257825D57277CFFFFA8FFA8FFA8FFA87D52%7D7DFD04FF527D527DA8FFA8FFA8FFA8FFA851267C828282838257047CA8%FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8AE2D2D5782575D57822D2D52FFA8FFA8FFA8FFA8A8527D527DFD04FF%7D527D53FD09FF522D57AD82AD82AD582D51FD04FFA87D7D7DFD21FFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFA87D7DA8A8FFFFFF832D2D825D8257825D51%2DA7FFFFA8FFFFFFA8FF7D7D527D7DFD04FF7D7D527D7EFFA8FFFFFFA8FF%FF7C2657828282838282272DA7FFA87D527D597D7DFFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA87D527D527D7DFFA87C27515782575D57582D2DA8FFA8FF%A8FFA8FFA87D527D52A8FD04FFA8527D52A8FD08FFA72D2D83828382A782%57277DFF7D537E7D7D59A8FFFFA9FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF7D7D7D%7E7D7DA8FF2D2D578257825D82572D51FFA8FFA8FFA8FFFFFF527D537DA8%FD04FF7D59525959FFA8FFA8FFA8FFA8FF2D2D57A7828282A7512D2DA952%7D7D7D5384A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8527D7D7D527D7D%2D275E575D575E5751047CA8FFA8FFA8FFA8FFA859527D52FD06FF537D52%7DA8FD08FF7C275882A782AD82822D51A7A87DA87DA8FD1CFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FD05FFA87E7DA8A87C2D585D8257825D5E2D%5183FFA8FFFFFFA8FFFFA8527D527DFD05FFA87D527D52A8FFFFA8FFAFFF%A8FF7D2D2DFD0682512658FFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8A82D2D5782575D5782572D2DFFA8FFA8FFA8FFA8%FF7D59527D7DFD06FF7D7D537D7DFD09FF2D2D57AD828382A7582D2DA8FF%FFA9FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF522D2D%825782575E57572D7CA8FFA8FFA8FFA8FFA87D537D52FD07FFA8527D527D%A8FFA8FFA8FFA8FFA87C2651FD06822D2D51FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF832D2657575D575E5757262D7DFFA8%FFA8FFA8FFA8A8527D527DA8FD06FFA87D537D52FD09FFA82D2D82828382%AD82822D5183FD09FFA8FD0FFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFA8FFA8FFFFFFA8FFFF582D585D82578257822D2D51FFA8FFA9%FFA8FFA9FF7D7D597D7DFD08FF7D7D52537DFFA8FFA8FFA8FFA8FF512D2D%83FD0582572651A8FFA8FFA8FFA87D527DA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87D527D7DFFA8FFA8%FFA883272D575E575D575E572D2683A8FFA8FFA8FFA8FFA87D527D52A8FD%08FFA8527D527DA8FD08FFA82D2D58A7828282838251277CFFFFA8FFA87D%527D7DA8FD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFD057DFFA8FFFFCF2D2D51825782575E57582D52A8FFA8%FFA8FFA8FFA9A8527D527DFD09FFA87D527D52A8FFFFA8FFA8FFA8FFA858%2651FD0682572D2683A8FFA87D527D7D7DA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87D52FD047DFFA8FF%512D2D5E575D575D5757272D7CFFA8FFA8FFA8FFA8FF527D52527DFD0AFF%7D7D597D7DFD09FF832D2DFD0482838282512D2DA8FFA8FD057DFD05FFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8%7D7DA87D7DA8FF7C2D2D585D825782575E2D2D51FFA8FFA8FFA8FFA8FFA8%7D597D52FD0BFFA8527D5259A8FFA8FFA8FFA8FFA8FF512D2DFD07822D2D%2DFFFD057DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFAFFFA8FFA8FFA8FFA87D527D53FF7C2D2757575E575D575E572D%26A7A8FFA8FFA8FFA8FFA87D527D527DFD0CFF7D527D527DFD04FFA9FD04%FFCF2D2D5183FD06822D2D51FF7DA8A8FD05FFA8FFFFFF7EFFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8A8FFFFA8FFAFFFA8FFA8A87DA87D2D27%585D5E5782575E57512D58A8FFA8FFA8FFA8FFA8A8527D527DA8FD0CFF7E%52527D52A8A8FFA8FFA8FFA8FFA87D262D5782828257828258272D51FFA8%FFA8FFA8FFA8FFA8AF597D52FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7D%5952A8A8FFA8FFA8FFA8FFA8FF7C2D272D575D575D575D57512651A8FFA8%FFA8FFA8FFA8FF7D7D525952FD0EFF7D7D597D7DFD0AFF582D58FD08822D%2D2DFFFFFFA8FD05FFFD047DA8FFA8FD05FFA8A8FD04FFA8FFFFA8537D7D%A8FD04FFA8FFFFFF7D512D575782575E57825D582D517DFFA8FFA8FFA8FF%A8FFA87D597D52A8FD0EFFA8527D52597DFFA8FFA8FFA8FFA8FFA82D2657%828258FD04827C2D2D2DA8A8FFA8FFA8FFA87D7D7D53A8A8FFA8FFA8FF7D%7D52A8A8FFA8FFA8FFFD057DFFA8FFA8FFA8FF522D2651575D575E575D57%572D2D52FFA8FFA8FFA8FFA8FFA87D527D527DA8FD0FFF7D527D527DA8FF%FFFFA8FFFFFFA8FF832D2758FD08822D2D2D7DFFFFA8FFFFA852847D7DA8%FFFFFFA8FFA8FD047DFFA8FFAFFFFFA8FD047DA8FFA8FFFFA8512D2D5757%5E575E575E575E2D2D51FFA8FFA8FFA8FFA8FFA8A8527D527DA8FD10FFA8%53527D527EA8FFA8FFA8FFA8FFA8FF7C2D265882825782578257822D2D26%5283FFA8FFFD057DFFA8FFA8FFA8A8527D597DA8FFA8FFA8FFA87D527D52%A8A8FFA87D2D2D2657575D575D5757575D2D2D2DA8A8FFA8FFA8FFA8FFA8%A8527D525352FD12FF7D7D597D52FD0BFF582D2D58FD088257512D5158FF%FFA8527D7DFFA8FFFFFFA8FFA87D7D847DFFA8FFFFFFA8FFA87D527DA8FF%7D582D2D2D5E5D5E5782575E575E2D2D2DA8FFFFA8FFA8FFA8FFA8FF7D7D%597D52FD14FF527D525952FFFFFFA8FFA8FFA8FFA8FF512D27575D825D82%57825D825751272D2D7DA8A87DFFA8FFA8FFA8FFA8A8527D597DA8FFA8FF%A8FFA8FFFD04A8512D262D2D5D575D575D575D57572D2D2DA7A8FFA8FFA8%FFA8FFA8FF8459527D527DFD14FFA8527D537D7DFFFFFFA8FFFFFFA8FFFF%FF522D2D58FD04825D8282825D582D2D275158A8A8FFFFFFA8FFFFFFA87D%7D7D7EFFAFFFA8FFFFFFA8FF7D582D2D2D575782575E575E575E575E2D2D%2DA8AFFFA8FFA8FFA8FFA8FFA87D527D527DFD16FF7D527D52537DFFA8FF%A8FFA8FFA8FFA8FF522D275157825782578257825782512D262D27515283%A8FFA8FFA8FFA87D7DFFA8FFA8FFA8A87C52272D262D2D57575D575D5757%575D57572D2D2DA7A8FFA8FFA8FFA8FFA8FFA87D527D52527DFD16FFA87D%537D527DA8FD0BFF7C2D2D5858825E8282825D825E825D7C51512D2D2D51%517C587D7DA883A87D837C7C51582D2D27512D5857825D5E5782575E575E%57572D2D2DA8A8FFA8FFA8FFA8FFA8FFFFA8527D597D7DFD18FFA87D527D%527DA8FFA8FFA8FFA8FFA8FFA8FF7D2D262D578257825782578257825782%57572D512D2D262D272D272D2D2D262D272D272D2D57575E575D575E575D%575D575D5757272D2DA8A8FFA8FFA8FFA8FFA8FFA8A8527D527D53FD1AFF%7D7D537D527DFFFFA8FFFFFFA8FFFFFFA8FFA858272D2D825D825D825782%5D8257825D82578257572D582D512D572D572D57575857825D5E575E575E%575E575D575E5751272D58FFA8FFA8FFA8FFA8FFA8FFFFA8527D537D52FD%1CFF7D59527D527DA8FFA8FFA8FFA8FFA8FFA8FFA87C262D2D575782575E%5782575E575E575D575E575D575E575D575E575D575D575D575D575D575D%5757575D57572D2D26517DFFA8AFA8FFA8FFA8FFA8AFA8A85259527D52A8%FD1DFF7D7D527D527DA8FFFFFFA8FFFFFFA8FD04FFA8512D2D5157825D82%5D8257825D8257825D8257825D8257825D825782575E5782575E575E575E%575E57572D2D2D7CA8FFA8FFA8FFA8FFA8FFA8FFFFA8597D527D52A8FD1F%FF5259527D527DA8FFA8FFA8FFA8FFA8FFA8FFA8FF7C51262D2D57578257%5E5782575D575E575D575E575D575E575D575E575D575D575D575D57572D%2D272D51A8A8FFA8FFA8FFA8FFA8FFA8FFA8A8527D527D5284FD21FF537D%527D527DA8FFFFFFA8FFFFFFA8FFFFFFA8FFA87DFD052D58578257825D82%5782575E5782575E5782575E575E575E575E57572D512D2D2D587DFFA8FF%A8FFA8FFA8FFA8FFA8FFA8A8527D527D5284FD22FFA95253527D527DA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8AE5852272D262D2D57575D575D575D575D%575D575D575D575D575D57572D51272D262D51A7A8FFA8FFA8FFA8FFA8FF%A8AFA8FFA884527D527D527DFD25FF527D597D527DA8FD05FFA8FFFFFFA8%FFFFFFA8FFFFA858582D2D27512D572D58575857585758575857582D582D%512D2D2D515183A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8527D597D52%A8FD27FF527D527D527D7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8%58522D2D272D262D272D272D2D2D272D272D262D2D51527DA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA87D527D527D527EFD29FF7D7D537D527D7D%FD05FFA8FFAFFFA8FFAFFFA8FFA8FFA8FFAFFF7D835858515851512D512D%525158587D7DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87D52%7D537D52A8FD2BFF7D59527D527D52A8A8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8AFA8FFA8A87D7D527D527D52A8FD2DFFA87D527D597D52%7DA8FD05FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA9FFA8FFFFFFA8FFA9FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8537D597D527D7D%FD30FFA87D527D527D527D7DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FF7D7D527D527D52597DFD33FFA8527D537D527D53A8A8FFFFFFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8A87D7D527D537D527DA8FD35FFA85259527D527D527D7D%A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8AFA8FFA8FFA8AF7D7D527D527D527D527DA8FD38FFA87D527D59%7D527D537D7EFFFFFFA8FFA9FFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFFFFFA8A87D7D527D597D527D7DFD3CFFA884527D52%7D527D5259527D7DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8AFA8A87D7D527D527D527D527DA8FD40FF7D7D527D527D53%7D527D597D7DA8A8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8A87D%A87D7D527D537D527D527D7DA8FD43FFA8A85353527D527D527D5253527D%527D7DA87DA87EFD07A87DA87D7D527D5253527D527D527D5252527DA8FD%48FFA8A87D7D527D597D527D537D527D527D527D7D7D527D7D7D527D527D%527D537D527D597D527D537D7DFD4EFFA87D527D5259527D527D527D527D%527D527D527D527D527D527D527D527D527D527D7DFD54FFA8A87D7D527D%527D527D527D527D537D527D537D527D527D527D7DA8A8FD5CFFA8A87D7D%527D527D527D527D527D537D7DFD04A8FD2EFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
userdict /lv1Fix true putuserdict /_contoneDevice true put%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--17 Bn%AI5_BeginGradient: (Unnamed gradient 1)(Unnamed gradient 1) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6>0 %_Br[0 0 0 0.098039 1 50 100 %_BS%_0 0 0 0.098039 1 50 100 Bs0 0 0 0 1 48.2359 0 %_BS%_0 0 0 0 1 48.2359 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 2)(Unnamed gradient 2) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F707171727374747576777778797A7A7B7C7C7D7E7F7F808182828384858586878888898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020303030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576777878797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.5323 50 %_BS%_0.356863 0 0.686275 0 1 49.5323 50 Bs0.192157 0 0.443137 0 1 50.8974 0 %_BS%_0.192157 0 0.443137 0 1 50.8974 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 3)(Unnamed gradient 3) 1 2 Bd[<666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A>0 %_Br[0.4 0 50 0.549451 %_BS%_0.4 0 50 0.549451 Bs0.1 0 50 100 %_BS%_0.1 0 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 33)(Unnamed gradient 33) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6>0 %_Br[0 0 0 0.098039 1 50 100 %_BS%_0 0 0 0.098039 1 50 100 Bs0 0 0 0 1 48.3253 0 %_BS%_0 0 0 0 1 48.3253 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 34)(Unnamed gradient 34) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 35)(Unnamed gradient 35) 0 3 Bd[<666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A>0 %_Br0.40 %_Br[0 0 0 0.898039 1 50 100 %_BS%_0 0 0 0.898039 1 50 100 Bs0 0 0 0.6 1 49.2541 0.549451 %_BS%_0 0 0 0.6 1 49.2541 0.549451 Bs0 0 0 0.6 1 50 0 %_BS%_0 0 0 0.6 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 36)(Unnamed gradient 36) 0 3 Bd[<5251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423232221201F1E1D1C1B1A191818171615>0 %_Br0.3215690 %_Br[0 0 0 0.917647 1 50 100 %_BS%_0 0 0 0.917647 1 50 100 Bs0 0 0 0.678431 1 48.3545 0.549451 %_BS%_0 0 0 0.678431 1 48.3545 0.549451 Bs0 0 0 0.678431 1 50 0 %_BS%_0 0 0 0.678431 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 37)(Unnamed gradient 37) 0 3 Bd[<000102030405060708090A0B0C0D0F101112131415161718191A1B1C1D1E1F><AAABABACACADADAEAFAFB0B0B1B1B2B3B3B4B4B5B5B6B6B7B8B8B9B9BABABB><FCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9><00000000010101010101010102020202020202030303030303030304040404>1 %_Br0<8081818283838485858687878889898A8B8B8C8D8D8E8F8F9091919292939494959696979898999A9A9B9C9C9D9E9E9FA0A0A1A2A2A3A4A4A5A5A6A7A7A8A9A9AA><BCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC>01 %_Br[0.121569 0.733333 0.976471 0.015686 1 50 100 %_BS%_0.121569 0.733333 0.976471 0.015686 1 50 100 Bs0 0.666667 0.988235 0 1 49.823 50 %_BS%_0 0.666667 0.988235 0 1 49.823 50 Bs0 0.501961 0.737255 0 1 49.7228 0 %_BS%_0 0.501961 0.737255 0 1 49.7228 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 38)(Unnamed gradient 38) 0 3 Bd[<999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787877767574737271706F6E6D6C6B6A69686766656564636261605F5E5D5C5B5A5959585756555453525150504F4E4D4C4B4A4949484746454443424241403F3E3D3D3C3B3A393838373635343433323130302F2E2D2C2C2B2A2929282726262524242322222120201F1E1E1D1C1C1B1B1A1A>0 %_Br<333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596979899>0 %_Br[0 0 0 0.898039 1 50 100 %_BS%_0 0 0 0.898039 1 50 100 Bs0 0 0 0.4 1 44.8836 46.6667 %_BS%_0 0 0 0.4 1 44.8836 46.6667 Bs0 0 0 0.8 1 50.064 0 %_BS%_0 0 0 0.8 1 50.064 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 39)(Unnamed gradient 39) 0 3 Bd[<999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787877767574737271706F6E6D6C6B6A69686766656564636261605F5E5D5C5B5A5959585756555453525150504F4E4D4C4B4A4949484746454443424241403F3E3D3D3C3B3A393838373635343433323130302F2E2D2C2C2B2A2929282726262524242322222120201F1E1E1D1C1C1B1B1A1A>0 %_Br<333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596979899>0 %_Br[0 0 0 0.898039 1 50 100 %_BS%_0 0 0 0.898039 1 50 100 Bs0 0 0 0.4 1 44.8836 46.6667 %_BS%_0 0 0 0.4 1 44.8836 46.6667 Bs0 0 0 0.8 1 50.064 0 %_BS%_0 0 0 0.8 1 50.064 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 4)(Unnamed gradient 4) 0 3 Bd[<666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A>0 %_Br0.40 %_Br[0 0 0 0.898039 1 50 100 %_BS%_0 0 0 0.898039 1 50 100 Bs0 0 0 0.6 1 49.4046 0.549451 %_BS%_0 0 0 0.6 1 49.4046 0.549451 Bs0 0 0 0.6 1 50 0 %_BS%_0 0 0 0.6 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 40)(Unnamed gradient 40) 0 3 Bd[<999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787877767574737271706F6E6D6C6B6A69686766656564636261605F5E5D5C5B5A5959585756555453525150504F4E4D4C4B4A4949484746454443424241403F3E3D3D3C3B3A393838373635343433323130302F2E2D2C2C2B2A2929282726262524242322222120201F1E1E1D1C1C1B1B1A1A>0 %_Br<333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596979899>0 %_Br[0 0 0 0.898039 1 50 100 %_BS%_0 0 0 0.898039 1 50 100 Bs0 0 0 0.4 1 44.8836 46.6667 %_BS%_0 0 0 0.4 1 44.8836 46.6667 Bs0 0 0 0.8 1 50.064 0 %_BS%_0 0 0 0.8 1 50.064 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 5)(Unnamed gradient 5) 0 3 Bd[<5251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726262524232221201F1E1D1C1B1A191818171615>0 %_Br0.3215690 %_Br[0 0 0 0.917647 1 50 100 %_BS%_0 0 0 0.917647 1 50 100 Bs0 0 0 0.678431 1 48.5347 0.549451 %_BS%_0 0 0 0.678431 1 48.5347 0.549451 Bs0 0 0 0.678431 1 50 0 %_BS%_0 0 0 0.678431 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 6)(Unnamed gradient 6) 0 3 Bd[<000102030405060708090A0B0C0D0E0F1112131415161718191A1B1C1D1E1F><AAABABACACADADAEAFAFB0B0B1B1B2B2B3B4B4B5B5B6B6B7B8B8B9B9BABABB><FCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9><00000000010101010101010102020202020202030303030303030304040404>1 %_Br0<8081818283838485858687878889898A8B8B8C8D8D8E8E8F9090919292939494959696979898999A9A9B9C9C9D9E9E9FA0A0A1A2A2A3A3A4A5A5A6A7A7A8A9A9AA><BCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC>01 %_Br[0.121569 0.733333 0.976471 0.015686 1 50 100 %_BS%_0.121569 0.733333 0.976471 0.015686 1 50 100 Bs0 0.666667 0.988235 0 1 50.0926 50 %_BS%_0 0.666667 0.988235 0 1 50.0926 50 Bs0 0.501961 0.737255 0 1 49.8523 0 %_BS%_0 0.501961 0.737255 0 1 49.8523 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 7)(Unnamed gradient 7) 0 3 Bd[<999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787877767574737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A5A59585756555453525150504F4E4D4C4B4A4949484746454443424241403F3E3D3D3C3B3A393838373635343433323130302F2E2D2C2C2B2A2929282726262524242322222120201F1E1E1D1C1C1B1B1A1A>0 %_Br<333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596979899>0 %_Br[0 0 0 0.898039 1 50 100 %_BS%_0 0 0 0.898039 1 50 100 Bs0 0 0 0.4 1 44.9056 46.6667 %_BS%_0 0 0 0.4 1 44.9056 46.6667 Bs0 0 0 0.8 1 50.0974 0 %_BS%_0 0 0 0.8 1 50.0974 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 8)(Unnamed gradient 8) 0 3 Bd[<999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787877767574737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A5A59585756555453525150504F4E4D4C4B4A4949484746454443424241403F3E3D3D3C3B3A393838373635343433323130302F2E2D2C2C2B2A2929282726262524242322222120201F1E1E1D1C1C1B1B1A1A>0 %_Br<333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596979899>0 %_Br[0 0 0 0.898039 1 50 100 %_BS%_0 0 0 0.898039 1 50 100 Bs0 0 0 0.4 1 44.9056 46.6667 %_BS%_0 0 0 0.4 1 44.9056 46.6667 Bs0 0 0 0.8 1 50.0974 0 %_BS%_0 0 0 0.8 1 50.0974 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 9)(Unnamed gradient 9) 0 3 Bd[<999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787877767574737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A5A59585756555453525150504F4E4D4C4B4A4949484746454443424241403F3E3D3D3C3B3A393838373635343433323130302F2E2D2C2C2B2A2929282726262524242322222120201F1E1E1D1C1C1B1B1A1A>0 %_Br<333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596979899>0 %_Br[0 0 0 0.898039 1 50 100 %_BS%_0 0 0 0.898039 1 50 100 Bs0 0 0 0.4 1 44.9056 46.6667 %_BS%_0 0 0 0.4 1 44.9056 46.6667 Bs0 0 0 0.8 1 50.0974 0 %_BS%_0 0 0 0.8 1 50.0974 0 BsBD%AI5_EndGradient%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 1 255 79 79 0 50 Lb(Layer 3) Ln0 Au*u0 O0 J 0 j 1 w 4 M []0 d0 XR0 g112 246 m111.7236 246 111.5 246.3984 111.5 246.8887 c111.5 247.3789 111.7236 247.7773 112 247.7773 c112.2764 247.7773 112.5 247.3789 112.5 246.8887 c112.5 246.3984 112.2764 246 112 246 CF0 g114.9473 246.5869 m114.708 246.5869 114.4209 246.8496 114.2598 247.2383 c114.0723 247.6914 114.126 248.1455 114.3809 248.251 c114.417 248.2666 114.4561 248.2734 114.4951 248.2734 c114.7354 248.2734 115.0225 248.0098 115.1836 247.6211 c115.3711 247.168 115.3164 246.7148 115.0615 246.6094 c115.0254 246.5947 114.9873 246.5869 114.9473 246.5869 CF0 g109.0532 246.5869 m109.0132 246.5869 108.9746 246.5938 108.9385 246.6094 c108.6841 246.7148 108.6289 247.168 108.8169 247.6221 c108.9775 248.0107 109.2661 248.2734 109.5063 248.2734 c109.5454 248.2734 109.5835 248.2666 109.6191 248.252 c109.874 248.1445 109.9282 247.6914 109.7402 247.2383 c109.5796 246.8496 109.2925 246.5869 109.0532 246.5869 CF0 g117.4023 248.251 m117.1875 248.251 116.9102 248.3828 116.6748 248.6182 c116.3281 248.9648 116.2051 249.4043 116.4004 249.5996 c116.4629 249.6621 116.5518 249.6924 116.6533 249.6924 c116.8691 249.6924 117.1465 249.5596 117.3818 249.3242 c117.7285 248.9785 117.8525 248.5391 117.6563 248.3438 c117.5938 248.2813 117.5049 248.251 117.4023 248.251 CF0 g106.5967 248.251 m106.4941 248.251 106.4063 248.2803 106.3433 248.3438 c106.1484 248.5391 106.271 248.9785 106.6187 249.3262 c106.853 249.5605 107.1309 249.6924 107.3467 249.6924 c107.4492 249.6924 107.5376 249.6621 107.6006 249.5996 c107.7954 249.4043 107.6719 248.9648 107.3247 248.6182 c107.0898 248.3828 106.812 248.251 106.5967 248.251 CF0 g105.0981 250.7051 m104.8604 250.7051 104.6719 250.7861 104.6089 250.9385 c104.5039 251.1934 104.7852 251.5527 105.2393 251.7402 c105.4209 251.8154 105.6025 251.8516 105.7622 251.8516 c106 251.8516 106.1885 251.7715 106.2515 251.6191 c106.3569 251.3633 106.0747 251.0039 105.6211 250.8164 c105.4395 250.7412 105.2573 250.7051 105.0981 250.7051 CF0 g118.9014 250.7051 m118.7422 250.7051 118.5605 250.7412 118.3789 250.8164 c117.9258 251.0039 117.6426 251.3633 117.749 251.6191 c117.8125 251.7715 118 251.8516 118.2373 251.8516 c118.3975 251.8516 118.5791 251.8154 118.7617 251.7402 c119.2148 251.5527 119.4971 251.1934 119.3906 250.9385 c119.3271 250.7861 119.1396 250.7051 118.9014 250.7051 CF0 g104.8887 253.5 m104.3979 253.5 103.9995 253.7236 104 254 c104.0005 254.2754 104.3979 254.5 104.8892 254.5 c105.3789 254.5 105.7778 254.2754 105.7778 254 c105.7773 253.7236 105.3794 253.5 104.8887 253.5 CF0 g119.1113 253.5 m118.6211 253.5 118.2227 253.7246 118.2227 254 c118.2227 254.2764 118.6211 254.5 119.1113 254.5 c119.6016 254.5 120 254.2764 120 254 c120 253.7246 119.6016 253.5 119.1113 253.5 CF0 g105.7622 256.1479 m105.603 256.1479 105.4209 256.1841 105.2388 256.2598 c104.7852 256.4473 104.5029 256.8062 104.6089 257.0615 c104.6724 257.2139 104.8604 257.2949 105.0981 257.2949 c105.2573 257.2949 105.4395 257.2588 105.6216 257.1831 c106.0742 256.9956 106.3569 256.6362 106.2515 256.3813 c106.188 256.2285 106 256.1479 105.7622 256.1479 CF0 g118.2383 256.1479 m118 256.1479 117.8115 256.229 117.749 256.3818 c117.6426 256.6367 117.9258 256.9956 118.3789 257.1826 c118.5615 257.2583 118.7432 257.2949 118.9033 257.2949 c119.1406 257.2949 119.3271 257.2144 119.3906 257.0615 c119.4961 256.8066 119.2148 256.4473 118.7607 256.2593 c118.5791 256.1841 118.3975 256.1479 118.2383 256.1479 CF0 g107.3467 258.3071 m107.1313 258.3071 106.8535 258.4399 106.6182 258.6753 c106.271 259.022 106.1475 259.4614 106.3433 259.6567 c106.4063 259.7197 106.4946 259.7495 106.5967 259.7495 c106.812 259.7495 107.0898 259.6172 107.3252 259.3818 c107.6719 259.0352 107.7954 258.5952 107.6001 258.3999 c107.5371 258.3369 107.4487 258.3071 107.3467 258.3071 CF0 g116.6533 258.3076 m116.5508 258.3076 116.4629 258.3374 116.4004 258.4004 c116.2051 258.5957 116.3281 259.0352 116.6758 259.3813 c116.9102 259.6172 117.1885 259.7495 117.4033 259.7495 c117.5059 259.7495 117.5938 259.7197 117.6563 259.6567 c117.8516 259.4614 117.7285 259.022 117.3809 258.6743 c117.1465 258.4395 116.8691 258.3076 116.6533 258.3076 CF0 g111 254 m112 260 L113 254 L111 254 LF0 g109.5044 259.7266 m109.2646 259.7266 108.9775 259.9897 108.8169 260.3789 c108.6289 260.832 108.6831 261.2852 108.9385 261.3911 c108.9746 261.4063 109.0132 261.4131 109.0527 261.4131 c109.292 261.4131 109.5796 261.1504 109.7407 260.7612 c109.9282 260.3081 109.874 259.8545 109.6187 259.749 c109.5825 259.7339 109.5439 259.7266 109.5044 259.7266 CF0 g114.4951 259.7271 m114.4551 259.7271 114.417 259.7339 114.3809 259.749 c114.126 259.855 114.0723 260.3081 114.2598 260.7607 c114.4209 261.1504 114.708 261.4136 114.9473 261.4136 c114.9873 261.4136 115.0254 261.4063 115.0615 261.3911 c115.3164 261.2852 115.3711 260.832 115.1836 260.3779 c115.0225 259.9897 114.7344 259.7271 114.4951 259.7271 CF0 g112 260.2227 m111.7236 260.2227 111.5 260.6206 111.5 261.1113 c111.5 261.6021 111.7236 262 112 262 c112.2764 262 112.5 261.6021 112.5 261.1113 c112.5 260.6206 112.2764 260.2227 112 260.2227 CF1 D0 g112 262.25 m107.4512 262.25 103.75 258.5488 103.75 254 c103.75 249.4512 107.4512 245.75 112 245.75 c116.5488 245.75 120.25 249.4512 120.25 254 c120.25 258.5488 116.5488 262.25 112 262.25 CF0 D0 g101.25 254 m101.25 254 l101.25 259.9277 106.0723 264.75 112 264.75 c117.9277 264.75 122.75 259.9277 122.75 254 C122.75 254 L122.75 254 l122.75 248.0723 117.9277 243.25 112 243.25 c106.0723 243.25 101.25 248.0723 101.25 254 C101.25 254 LF1 D112 267.5 m104.5449 267.5 98.5 261.4551 98.5 254 c98.5 246.5449 104.5449 240.5 112 240.5 c119.4551 240.5 125.5 246.5449 125.5 254 c125.5 261.4551 119.4551 267.5 112 267.5 CBb1 (Unnamed gradient 1) 0 0.000977 0 1 13.4954 23.3747 -23.3747 13.4954 96600.8359 -294658.295 Bg13.4954 -23.3747 -120.2047 -69.4004 165.4316 300.2544 Xm109070.9297 -188915.9688 -120.2047 -69.4004 -108905.5 189216.2188 Bc13.4954 -23.3747 -120.2047 -69.4004 165.4316 300.2544 Bm109070.9297 -188915.9688 -120.2047 -69.4004 178.9268 276.8799 BcF0 BB*U*u0 D0 0 0 0.5 k112 240 m104.2803 240 98 246.2803 98 254 c98 261.7197 104.2803 268 112 268 c119.7197 268 126 261.7197 126 254 c126 246.2803 119.7197 240 112 240 Cf1 D112 267 m104.8315 267 99 261.1685 99 254 c99 246.8311 104.8315 241 112 241 c119.1689 241 125 246.8311 125 254 c125 261.1685 119.1689 267 112 267 Cf*U*u0 D0 g103.25 254 m103.25 254 l103.25 258.8247 107.1753 262.75 112 262.75 c116.8242 262.75 120.75 258.8247 120.75 254 C120.75 254 L120.75 254 l120.75 249.1758 116.8242 245.25 112 245.25 c107.1753 245.25 103.25 249.1758 103.25 254 C103.25 254 LF1 D112 264.25 m106.3481 264.25 101.75 259.6519 101.75 254 c101.75 248.3477 106.3481 243.75 112 243.75 c117.6523 243.75 122.25 248.3477 122.25 254 c122.25 259.6519 117.6523 264.25 112 264.25 CBb1 (Unnamed gradient 2) 0 0 0 1 10.5015 18.1891 -18.1891 10.5015 76987.5703 -227471.815 Bg10.5015 -18.1891 -93.0262 -53.7088 153.3711 289.7603 Xm84873.8281 -147005.5313 -93.0262 -53.7088 -84720.4531 147295.2969 Bc5.25075 -9.09455 -93.0262 -53.7088 153.3711 289.7603 Bm5.25075 -9.09455 -93.0262 -53.7088 158.6221 280.6655 Bm84873.8281 -147005.5313 -93.0262 -53.7088 163.873 271.5713 BcF0 BB*U*u0 D0.6875 0.351563 0.914063 0.214844 k112 243.25 m106.0723 243.25 101.25 248.0723 101.25 254 c101.25 259.9277 106.0723 264.75 112 264.75 c117.9277 264.75 122.75 259.9277 122.75 254 c122.75 248.0723 117.9277 243.25 112 243.25 CF1 D112 264.25 m106.3481 264.25 101.75 259.6519 101.75 254 c101.75 248.3477 106.3481 243.75 112 243.75 c117.6523 243.75 122.25 248.3477 122.25 254 c122.25 259.6519 117.6523 264.25 112 264.25 CF0 D112 245.25 m107.1753 245.25 103.25 249.1758 103.25 254 c103.25 258.8247 107.1753 262.75 112 262.75 c116.8242 262.75 120.75 258.8247 120.75 254 c120.75 249.1758 116.8242 245.25 112 245.25 CF1 D112 262.25 m107.4512 262.25 103.75 258.5488 103.75 254 c103.75 249.4512 107.4512 245.75 112 245.75 c116.5488 245.75 120.25 249.4512 120.25 254 c120.25 258.5488 116.5488 262.25 112 262.25 CF*U0 D112 256.9585 m111.5903 254.5 L112.4097 254.5 L112 256.9585 LBb1 (Unnamed gradient 4) 0 0 0 1 2 0 0 2 -7968 -8702.7305 Bg2 0 0 -10.4585 111 260.9585 Xm16163.4102 0 0 -10.4585 -16052.4102 260.9585 Bc0.010989 0 0 -10.4585 111 260.9585 Bm1.98901 0 0 -10.4585 111.0112 260.9585 Bm16163.4102 0 0 -10.4585 113 260.9585 BcF0 BB*u0 g111.5903 254.5 m112 256.9585 L112.4097 254.5 L111.5903 254.5 LF1 D112 260 m111 254 L113 254 L112 260 LBb1 (Unnamed gradient 5) 0 0 0 1 2 0 0 2 -7968 -8704 Bg2 0 0 -14 111 264 Xm16164 0 0 -14 -16053 264 Bc0.010989 0 0 -14 111 264 Bm1.98901 0 0 -14 111.0112 264 Bm16164 0 0 -14 113 264 BcF0 BB*U0 D113.5 254 m113.5 253.1729 112.8271 252.5 112 252.5 c111.1729 252.5 110.5 253.1729 110.5 254 c110.5 254.8271 111.1729 255.5 112 255.5 c112.8271 255.5 113.5 254.8271 113.5 254 CBb1 (Unnamed gradient 6) -0.000488 0.000977 0 0.999512 1.50024 2.5985 -2.5985 1.50024 18019.3086 -25474.1094 Bg1.49951 -2.59723 -13.3604 -7.71365 117.9297 259.1563 Xm12125.0625 -21001.2441 -13.3604 -7.71365 -12007.1328 21260.4004 Bc0.749755 -1.29861 -13.3604 -7.71365 117.9297 259.1563 Bm0.749755 -1.29861 -13.3604 -7.71365 118.6797 257.8574 Bm12125.0625 -21001.2441 -13.3604 -7.71365 119.4287 256.5591 Bcf0 BB*u0.289063 0.851563 1 0.292969 k112 252.25 m111.0352 252.25 110.25 253.0352 110.25 254 c110.25 254.9648 111.0352 255.75 112 255.75 c112.9648 255.75 113.75 254.9648 113.75 254 c113.75 253.0352 112.9648 252.25 112 252.25 Cf1 D112 255.25 m111.3105 255.25 110.75 254.6895 110.75 254 c110.75 253.3105 111.3105 252.75 112 252.75 c112.6895 252.75 113.25 253.3105 113.25 254 c113.25 254.6895 112.6895 255.25 112 255.25 Cf*U0 D108.5 271.5 m107.9502 271.5 107.5 271.0498 107.5 270.5 c107.5 269.9502 107.9502 269.5 108.5 269.5 c109.0498 269.5 109.5 269.0498 109.5 268.5 C109.5 268 l109.5 267.4502 109.9502 267 110.5 267 C113.5 267 l114.0498 267 114.5 267.4502 114.5 268 C114.5 268.5 l114.5 269.0498 114.9502 269.5 115.5 269.5 c116.0498 269.5 116.5 269.9502 116.5 270.5 c116.5 271.0498 116.0498 271.5 115.5 271.5 C108.5 271.5 LBb1 (Unnamed gradient 7) -0.000488 0 0 1 9 0 0 9 -64524.4922 -67845.25 Bg9 0 0 -40.5 107.5 289.5 Xm72737.9922 0 0 -40.5 -72630.4922 289.5 Bc4.2 0 0 -40.5 107.5 289.5 Bm4.8 0 0 -40.5 111.7002 289.5 Bm72737.9922 0 0 -40.5 116.5 289.5 Bcf0 BB*u0 0 0 0.5 k113.5 266.75 m110.5 266.75 l109.8105 266.75 109.25 267.3105 109.25 268 C109.25 268.5 l109.25 268.9136 108.9136 269.25 108.5 269.25 c107.8105 269.25 107.25 269.8105 107.25 270.5 c107.25 271.1895 107.8105 271.75 108.5 271.75 C115.5 271.75 l116.1895 271.75 116.75 271.1895 116.75 270.5 c116.75 269.8105 116.1895 269.25 115.5 269.25 c115.0859 269.25 114.75 268.9136 114.75 268.5 C114.75 268 l114.75 267.3105 114.1895 266.75 113.5 266.75 Cf1 D108.5 271.25 m108.0864 271.25 107.75 270.9136 107.75 270.5 c107.75 270.0864 108.0864 269.75 108.5 269.75 c109.1895 269.75 109.75 269.1895 109.75 268.5 C109.75 268 l109.75 267.5864 110.0864 267.25 110.5 267.25 C113.5 267.25 l113.9141 267.25 114.25 267.5864 114.25 268 C114.25 268.5 l114.25 269.1895 114.8105 269.75 115.5 269.75 c115.9141 269.75 116.25 270.0864 116.25 270.5 c116.25 270.9136 115.9141 271.25 115.5 271.25 C108.5 271.25 Lf*U0 D98.207 263.793 m97.8184 264.1816 97.8184 264.8184 98.207 265.207 C99.793 266.793 l100.1816 267.1816 100.8184 267.1816 101.207 266.793 C103.293 264.707 l103.6816 264.3184 103.6816 263.6816 103.293 263.293 C101.707 261.707 l101.3184 261.3184 100.6816 261.3184 100.293 261.707 C98.207 263.793 LBb1 (Unnamed gradient 8) 0 -0.000977 0 1 3.00002 -3.00002 3.00002 3.00002 -41400.125 7080.2813 Bg3.00002 3.00002 15.4996 -15.4996 91.4604 270.4595 Xm24246.1211 24246.1211 15.4996 -15.4996 -24154.6602 -23975.6621 Bc1.40001 1.40001 15.4996 -15.4996 91.4604 270.4595 Bm1.60001 1.60001 15.4996 -15.4996 92.8604 271.8594 Bm24246.1211 24246.1211 15.4996 -15.4996 94.4604 273.4595 Bcf0 BB*u0 0 0 0.5 k101 261.1655 m100.665 261.1655 100.3516 261.2949 100.1162 261.5303 C98.0303 263.6162 l97.7949 263.8516 97.6655 264.165 97.6655 264.5 c97.6655 264.835 97.7949 265.1484 98.0303 265.3838 C99.6162 266.9697 l100.0869 267.4404 100.9131 267.4404 101.3838 266.9697 C103.4697 264.8838 l103.7051 264.6484 103.8345 264.335 103.8345 264 c103.8345 263.665 103.7051 263.3516 103.4697 263.1162 C101.8838 261.5303 l101.6484 261.2949 101.335 261.1655 101 261.1655 Cf1 D100.5 266.8345 m100.2988 266.8345 100.1104 266.7568 99.9697 266.6162 C98.3838 265.0303 l98.0913 264.7378 98.0913 264.2622 98.3838 263.9697 C100.4697 261.8838 l100.751 261.6025 101.249 261.6025 101.5303 261.8838 C103.1162 263.4697 l103.4087 263.7622 103.4087 264.2378 103.1162 264.5303 C101.0303 266.6162 l100.8896 266.7568 100.7012 266.8345 100.5 266.8345 Cf*U0 D120.707 264.707 m120.3184 264.3184 120.3184 263.6816 120.707 263.293 C122.293 261.707 l122.6816 261.3184 123.3184 261.3184 123.707 261.707 C125.793 263.793 l126.1816 264.1816 126.1816 264.8184 125.793 265.207 C124.207 266.793 l123.8184 267.1816 123.1816 267.1816 122.793 266.793 C120.707 264.707 LBb1 (Unnamed gradient 9) 0.000977 0 0 1 2.99959 2.99959 2.99959 -2.99959 -41370.5547 9285.0977 Bg2.99959 -2.99959 15.4985 15.4985 114.001 258.001 Xm24242.7266 -24242.7266 15.4985 15.4985 -24128.7266 24500.7266 Bc1.39981 -1.39981 15.4985 15.4985 114.001 258.001 Bm1.59978 -1.59978 15.4985 15.4985 115.4004 256.6011 Bm24242.7266 -24242.7266 15.4985 15.4985 117.001 255.0015 Bcf0 BB*u0 0 0 0.5 k123 261.1655 m122.665 261.1655 122.3516 261.2949 122.1162 261.5303 C120.5303 263.1162 l120.2949 263.3516 120.165 263.665 120.165 264 c120.165 264.335 120.2949 264.6484 120.5303 264.8838 C122.6162 266.9697 l123.0869 267.4404 123.9131 267.4404 124.3838 266.9697 C125.9697 265.3838 l126.2051 265.1484 126.335 264.835 126.335 264.5 c126.335 264.165 126.2051 263.8516 125.9697 263.6162 C123.8838 261.5303 l123.6484 261.2949 123.335 261.1655 123 261.1655 Cf1 D123.5 266.8345 m123.2988 266.8345 123.1104 266.7568 122.9697 266.6162 C120.8838 264.5303 l120.5908 264.2378 120.5908 263.7622 120.8838 263.4697 C122.4697 261.8838 l122.751 261.6025 123.249 261.6025 123.5303 261.8838 C125.6162 263.9697 l125.9092 264.2622 125.9092 264.7378 125.6162 265.0303 C124.0303 266.6162 l123.8896 266.7568 123.7012 266.8345 123.5 266.8345 Cf*Uq0 D109.5063 248.2734 m109.2661 248.2734 108.9775 248.0107 108.8169 247.6221 c108.6289 247.168 108.6841 246.7148 108.9385 246.6094 c108.9746 246.5938 109.0132 246.5869 109.0532 246.5869 c109.2925 246.5869 109.5796 246.8496 109.7402 247.2383 c109.9282 247.6914 109.874 248.1445 109.6191 248.252 c109.5835 248.2666 109.5454 248.2734 109.5063 248.2734 CHWN1 Ap0 O0 g%AI5_File:%AI5_BeginRaster() 1 XG[ 0.48 0 0 -0.48 108 245.7598 ] 6 7 0 Xh[ 0.48 0 0 -0.48 108 245.7598 ] 0 0 6 7 6 7 8 4 0 0 0 0%%BeginData: 351XI%0000007C0000007C0000007C0000007C0000007C0000007C0000007B0000%007B0000007C0000007C0000007C0000007C0000007B0000007B00000077%0000007B0000007C0000007C0000007B0000007B0000006B000000680000%007B0000007C0000007B0000007B00000073000000620000007B0000007B%0000007B0000007B0000007B000000760000007B0000007B0000007A0000%007A0000007B0000007B0000007B0000007B%%EndDataXH%AI5_EndRasterFQ0 Aq0 Ap0 J 0 j 1 w 4 M []0 d0 XR114.9473 261.4136 m114.708 261.4136 114.4209 261.1504 114.2598 260.7607 c114.0723 260.3081 114.126 259.855 114.3809 259.749 c114.417 259.7339 114.4551 259.7271 114.4951 259.7271 c114.7344 259.7271 115.0225 259.9897 115.1836 260.3779 c115.3711 260.832 115.3164 261.2852 115.0615 261.3911 c115.0254 261.4063 114.9873 261.4136 114.9473 261.4136 CHWN1 Ap0 O0 g%AI5_File:%AI5_BeginRaster() 1 XG[ 0.48 0 0 -0.48 113.2803 259.2002 ] 6 6 0 Xh[ 0.48 0 0 -0.48 113.2803 259.2002 ] 0 0 6 6 6 6 8 4 0 0 0 0%%BeginData: 301XI%000000770000007700000078000000780000007800000078000000770000%007700000077000000770000007800000078000000770000007700000072%000000650000007700000077000000770000007700000075000000550000%0073000000770000007700000077000000770000006C0000007300000077%000000760000007600000077000000770000007700000077%%EndDataXH%AI5_EndRasterFQ0 Aq0 Ap0 J 0 j 1 w 4 M []0 d0 XR107.3467 249.6924 m107.1309 249.6924 106.853 249.5605 106.6187 249.3262 c106.271 248.9785 106.1484 248.5391 106.3433 248.3438 c106.4063 248.2803 106.4941 248.251 106.5967 248.251 c106.812 248.251 107.0898 248.3828 107.3247 248.6182 c107.6719 248.9648 107.7954 249.4043 107.6006 249.5996 c107.5376 249.6621 107.4492 249.6924 107.3467 249.6924 CHWN1 Ap0 O0 g%AI5_File:%AI5_BeginRaster() 1 XG[ 0.48 0 0 -0.48 105.6001 247.6797 ] 6 6 0 Xh[ 0.48 0 0 -0.48 105.6001 247.6797 ] 0 0 6 6 6 6 8 4 0 0 0 0%%BeginData: 301XI%0000007A0000007A0000007A0000007B0000007B0000007B0000007A0000%007A0000007A0000007A0000007A0000007B0000007A0000007A0000006B%0000006B0000007A0000007A0000007A0000007A000000730000005B0000%00720000007A000000790000007A0000007A00000079000000780000007A%0000007900000079000000790000007A0000007A0000007A%%EndDataXH%AI5_EndRasterFQ0 Aq0 Ap0 J 0 j 1 w 4 M []0 d0 XR117.4033 259.7495 m117.1885 259.7495 116.9102 259.6172 116.6758 259.3813 c116.3281 259.0352 116.2051 258.5957 116.4004 258.4004 c116.4629 258.3374 116.5508 258.3076 116.6533 258.3076 c116.8691 258.3076 117.1465 258.4395 117.3809 258.6743 c117.7285 259.022 117.8516 259.4614 117.6563 259.6567 c117.5938 259.7197 117.5059 259.7495 117.4033 259.7495 CHWN1 Ap0 O0 g%AI5_File:%AI5_BeginRaster() 1 XG[ 0.48 0 0 -0.48 115.6797 257.7598 ] 6 6 0 Xh[ 0.48 0 0 -0.48 115.6797 257.7598 ] 0 0 6 6 6 6 8 4 0 0 0 0%%BeginData: 301XI%000000780000007900000079000000790000007900000079000000780000%007800000078000000790000007900000079000000780000007800000068%0000006900000079000000790000007800000078000000710000005B0000%007100000078000000780000007800000078000000780000007800000078%000000770000007800000078000000780000007800000078%%EndDataXH%AI5_EndRasterFQ0 Aq0 Ap0 J 0 j 1 w 4 M []0 d0 XR105.7622 251.8516 m105.6025 251.8516 105.4209 251.8154 105.2393 251.7402 c104.7852 251.5527 104.5039 251.1934 104.6089 250.9385 c104.6719 250.7861 104.8604 250.7051 105.0981 250.7051 c105.2573 250.7051 105.4395 250.7412 105.6211 250.8164 c106.0747 251.0039 106.3569 251.3633 106.2515 251.6191 c106.1885 251.7715 106 251.8516 105.7622 251.8516 CHWN1 Ap0 O0 g%AI5_File:%AI5_BeginRaster() 1 XG[ 0.48 0 0 -0.48 103.6802 250.0801 ] 7 5 0 Xh[ 0.48 0 0 -0.48 103.6802 250.0801 ] 0 0 7 5 7 5 8 4 0 0 0 0%%BeginData: 293XI%000000790000007900000079000000790000007900000079000000790000%007900000079000000790000007900000079000000790000007900000078%000000780000007700000065000000690000007900000079000000780000%0078000000780000006E0000006300000071000000790000007800000078%0000007800000078000000780000007900000079%%EndDataXH%AI5_EndRasterFQ0 Aq0 Ap0 J 0 j 1 w 4 M []0 d0 XR118.9033 257.2949 m118.7432 257.2949 118.5615 257.2583 118.3789 257.1826 c117.9258 256.9956 117.6426 256.6367 117.749 256.3818 c117.8115 256.229 118 256.1479 118.2383 256.1479 c118.3975 256.1479 118.5791 256.1841 118.7607 256.2593 c119.2148 256.4473 119.4961 256.8066 119.3906 257.0615 c119.3271 257.2144 119.1406 257.2949 118.9033 257.2949 CHWN1 Ap0 O0 g%AI5_File:%AI5_BeginRaster() 1 XG[ 0.48 0 0 -0.48 117.1201 255.3599 ] 6 6 0 Xh[ 0.48 0 0 -0.48 117.1201 255.3599 ] 0 0 6 6 6 6 8 4 0 0 0 0%%BeginData: 301XI%0000007A0000007A0000007A0000007A0000007A0000007A0000007A0000%007A0000007A0000007A0000007A0000007A000000790000007900000071%000000710000007A0000007A00000079000000790000006E000000590000%00690000007A00000079000000790000007900000079000000790000007A%000000790000007900000079000000790000007900000079%%EndDataXH%AI5_EndRasterFQ0 Aq0 Ap0 J 0 j 1 w 4 M []0 d0 XR104.8892 254.5 m104.3979 254.5 104.0005 254.2754 104 254 c103.9995 253.7236 104.3979 253.5 104.8887 253.5 c105.3794 253.5 105.7773 253.7236 105.7778 254 c105.7778 254.2754 105.3789 254.5 104.8892 254.5 CHWN1 Ap0 O0 g%AI5_File:%AI5_BeginRaster() 1 XG[ 0.48 0 0 -0.48 103.2002 252.96 ] 7 5 0 Xh[ 0.48 0 0 -0.48 103.2002 252.96 ] 0 0 7 5 7 5 8 4 0 0 0 0%%BeginData: 293XI%000000770000007800000078000000780000007800000078000000780000%007700000077000000780000007800000078000000780000007800000077%00000077000000710000005D0000005D0000007100000078000000770000%007700000077000000720000007100000077000000780000007700000077%0000007700000077000000770000007700000077%%EndDataXH%AI5_EndRasterFQ0 Aq0 Ap0 J 0 j 1 w 4 M []0 d0 XR119.1113 254.5 m118.6211 254.5 118.2227 254.2764 118.2227 254 c118.2227 253.7246 118.6211 253.5 119.1113 253.5 c119.6016 253.5 120 253.7246 120 254 c120 254.2764 119.6016 254.5 119.1113 254.5 CHWN1 Ap0 O0 g%AI5_File:%AI5_BeginRaster() 1 XG[ 0.48 0 0 -0.48 117.5996 252.96 ] 6 5 0 Xh[ 0.48 0 0 -0.48 117.5996 252.96 ] 0 0 6 5 6 5 8 4 0 0 0 0%%BeginData: 251XI%0000007B0000007B0000007B0000007B0000007B0000007B0000007B0000%007B0000007B0000007B0000007B0000007B0000007A0000007B0000006D%0000005B000000670000007B0000007A0000007A0000007B000000730000%00780000007B0000007A0000007A0000007A0000007A0000007B0000007B%%EndDataXH%AI5_EndRasterFQ0 Aq0 Ap0 J 0 j 1 w 4 M []0 d0 XR105.0981 257.2949 m104.8604 257.2949 104.6724 257.2139 104.6089 257.0615 c104.5029 256.8062 104.7852 256.4473 105.2388 256.2598 c105.4209 256.1841 105.603 256.1479 105.7622 256.1479 c106 256.1479 106.188 256.2285 106.2515 256.3813 c106.3569 256.6362 106.0742 256.9956 105.6216 257.1831 c105.4395 257.2588 105.2573 257.2949 105.0981 257.2949 CHWN1 Ap0 O0 g%AI5_File:%AI5_BeginRaster() 1 XG[ 0.48 0 0 -0.48 103.6802 255.3599 ] 7 6 0 Xh[ 0.48 0 0 -0.48 103.6802 255.3599 ] 0 0 7 6 7 6 8 4 0 0 0 0%%BeginData: 351XI%000000770000007700000077000000770000007700000077000000770000%007600000077000000770000007700000077000000770000007700000076%0000007600000076000000770000006C0000007200000077000000760000%0076000000750000005E0000005C00000073000000770000007600000076%000000760000007600000076000000760000007600000076000000760000%007600000076000000760000007600000076%%EndDataXH%AI5_EndRasterFQ0 Aq0 Ap0 J 0 j 1 w 4 M []0 d0 XR118.2373 251.8516 m118 251.8516 117.8125 251.7715 117.749 251.6191 c117.6426 251.3633 117.9258 251.0039 118.3789 250.8164 c118.5605 250.7412 118.7422 250.7051 118.9014 250.7051 c119.1396 250.7051 119.3271 250.7861 119.3906 250.9385 c119.4971 251.1934 119.2148 251.5527 118.7617 251.7402 c118.5791 251.8154 118.3975 251.8516 118.2373 251.8516 CHWN1 Ap0 O0 g%AI5_File:%AI5_BeginRaster() 1 XG[ 0.48 0 0 -0.48 117.1201 250.0801 ] 6 5 0 Xh[ 0.48 0 0 -0.48 117.1201 250.0801 ] 0 0 6 5 6 5 8 4 0 0 0 0%%BeginData: 251XI%0000007C0000007C0000007C0000007C0000007C0000007C0000007C0000%007C0000007C0000007C0000007C0000007C0000007C0000007C00000079%000000670000006C0000007C0000007B0000007B0000006D000000670000%00780000007C0000007B0000007B0000007B0000007B0000007C0000007C%%EndDataXH%AI5_EndRasterFQ0 Aq0 Ap0 J 0 j 1 w 4 M []0 d0 XR106.5967 259.7495 m106.4946 259.7495 106.4063 259.7197 106.3433 259.6567 c106.1475 259.4614 106.271 259.022 106.6182 258.6753 c106.8535 258.4399 107.1313 258.3071 107.3467 258.3071 c107.4487 258.3071 107.5371 258.3369 107.6001 258.3999 c107.7954 258.5952 107.6719 259.0352 107.3252 259.3818 c107.0898 259.6172 106.812 259.7495 106.5967 259.7495 CHWN1 Ap0 O0 g%AI5_File:%AI5_BeginRaster() 1 XG[ 0.48 0 0 -0.48 105.6001 257.7598 ] 6 6 0 Xh[ 0.48 0 0 -0.48 105.6001 257.7598 ] 0 0 6 6 6 6 8 4 0 0 0 0%%BeginData: 301XI%000000760000007600000076000000760000007700000077000000760000%007600000076000000760000007600000076000000760000007600000076%000000610000006D000000760000007500000076000000660000005D0000%007600000076000000750000007500000073000000760000007600000076%000000750000007500000075000000750000007600000076%%EndDataXH%AI5_EndRasterFQ0 Aq0 Ap0 J 0 j 1 w 4 M []0 d0 XR116.6533 249.6924 m116.5518 249.6924 116.4629 249.6621 116.4004 249.5996 c116.2051 249.4043 116.3281 248.9648 116.6748 248.6182 c116.9102 248.3828 117.1875 248.251 117.4023 248.251 c117.5049 248.251 117.5938 248.2813 117.6563 248.3438 c117.8525 248.5391 117.7285 248.9785 117.3818 249.3242 c117.1465 249.5596 116.8691 249.6924 116.6533 249.6924 CHWN1 Ap0 O0 g%AI5_File:%AI5_BeginRaster() 1 XG[ 0.48 0 0 -0.48 115.6797 247.6797 ] 6 6 0 Xh[ 0.48 0 0 -0.48 115.6797 247.6797 ] 0 0 6 6 6 6 8 4 0 0 0 0%%BeginData: 301XI%0000007D0000007D0000007D0000007D0000007D0000007D0000007C0000%007C0000007D0000007D0000007D0000007D0000007C0000007C0000007C%00000068000000750000007D0000007C0000007C0000006B000000630000%007C0000007D0000007C0000007C000000770000007C0000007C0000007C%0000007C0000007C0000007C0000007C0000007C0000007C%%EndDataXH%AI5_EndRasterFQ0 Aq0 Ap0 J 0 j 1 w 4 M []0 d0 XR109.0527 261.4131 m109.0132 261.4131 108.9746 261.4063 108.9385 261.3911 c108.6831 261.2852 108.6289 260.832 108.8169 260.3789 c108.9775 259.9897 109.2646 259.7266 109.5044 259.7266 c109.5439 259.7266 109.5825 259.7339 109.6187 259.749 c109.874 259.8545 109.9282 260.3081 109.7407 260.7612 c109.5796 261.1504 109.292 261.4131 109.0527 261.4131 CHWN1 Ap0 O0 g%AI5_File:%AI5_BeginRaster() 1 XG[ 0.48 0 0 -0.48 108 259.2002 ] 6 6 0 Xh[ 0.48 0 0 -0.48 108 259.2002 ] 0 0 6 6 6 6 8 4 0 0 0 0%%BeginData: 301XI%000000760000007600000076000000760000007700000077000000760000%007600000076000000760000007600000076000000760000007600000074%0000006300000076000000760000007500000076000000660000005D0000%00760000007600000075000000750000006B000000710000007600000076%000000750000007500000075000000750000007600000076%%EndDataXH%AI5_EndRasterFQ0 Aq0 Ap0 J 0 j 1 w 4 M []0 d0 XR114.4951 248.2734 m114.4561 248.2734 114.417 248.2666 114.3809 248.251 c114.126 248.1455 114.0723 247.6914 114.2598 247.2383 c114.4209 246.8496 114.708 246.5869 114.9473 246.5869 c114.9873 246.5869 115.0254 246.5947 115.0615 246.6094 c115.3164 246.7148 115.3711 247.168 115.1836 247.6211 c115.0225 248.0098 114.7354 248.2734 114.4951 248.2734 CHWN1 Ap0 O0 g%AI5_File:%AI5_BeginRaster() 1 XG[ 0.48 0 0 -0.48 113.2803 245.7598 ] 6 7 0 Xh[ 0.48 0 0 -0.48 113.2803 245.7598 ] 0 0 6 7 6 7 8 4 0 0 0 0%%BeginData: 351XI%0000007D0000007D0000007D0000007D0000007D0000007D0000007D0000%007D0000007D0000007D0000007D0000007D0000007C0000007C0000007D%0000007A0000007D0000007D0000007C0000007C0000007C000000620000%00770000007D0000007C0000007C00000076000000620000007C0000007D%0000007C0000007C0000007C0000007A0000007C0000007C0000007C0000%007C0000007C0000007C0000007C0000007C%%EndDataXH%AI5_EndRasterFQ0 Aq0 Ap0 J 0 j 1 w 4 M []0 d0 XR112 262 m111.7236 262 111.5 261.6021 111.5 261.1113 c111.5 260.6206 111.7236 260.2227 112 260.2227 c112.2764 260.2227 112.5 260.6206 112.5 261.1113 c112.5 261.6021 112.2764 262 112 262 CHWN1 Ap0 O0 g%AI5_File:%AI5_BeginRaster() 1 XG[ 0.48 0 0 -0.48 110.8799 259.6802 ] 5 6 0 Xh[ 0.48 0 0 -0.48 110.8799 259.6802 ] 0 0 5 6 5 6 8 4 0 0 0 0%%BeginData: 251XI%000000770000007700000077000000770000007700000076000000760000%007700000077000000770000007600000076000000680000007000000077%00000076000000760000005C000000690000007600000076000000760000%006800000070000000760000007600000076000000760000007600000076%%EndDataXH%AI5_EndRasterFQ0 Aq0 Ap0 J 0 j 1 w 4 M []0 d0 XR112 247.7773 m111.7236 247.7773 111.5 247.3789 111.5 246.8887 c111.5 246.3984 111.7236 246 112 246 c112.2764 246 112.5 246.3984 112.5 246.8887 c112.5 247.3789 112.2764 247.7773 112 247.7773 CHWN1 Ap0 O0 g%AI5_File:%AI5_BeginRaster() 1 XG[ 0.48 0 0 -0.48 110.8799 245.2803 ] 5 7 0 Xh[ 0.48 0 0 -0.48 110.8799 245.2803 ] 0 0 5 7 5 7 8 4 0 0 0 0%%BeginData: 293XI%0000007C0000007C0000007D0000007D0000007D0000007C0000007C0000%007C0000007D0000007D0000007C0000007C000000750000007B0000007C%0000007C0000007C00000064000000700000007C0000007C0000007C0000%0068000000720000007C0000007B0000007C0000007A0000007C0000007C%0000007B0000007B0000007B0000007C0000007C%%EndDataXH%AI5_EndRasterFQULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF