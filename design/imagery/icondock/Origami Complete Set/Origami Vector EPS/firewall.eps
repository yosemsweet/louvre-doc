%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (Nick La) ()%%Title: (firewall.eps)%%CreationDate: 1/6/10 3:39 PM%%Canvassize: 16383%%BoundingBox: 96 0 128 32%%HiResBoundingBox: 96 0 128 32%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 112.5 15.5 112.5 15.5%AI3_TileBox: -194 -380 418 412%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 32 32%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 1%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: 77 37 24 1893 1050 26 0 0 18 96 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 4 4 4 4 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 128 8%%BeginData: 26632 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD35FFA8A87EA8FD047D597D527D597D527D7D7E7DA8A8FD66FFA8%A87D7D527D5252527D527D527D527D527D527D527D5253527D527D59A884%A8FD5DFFA8A87D7D527D527D527D537D527D537D527D537D527D537D527D%537D527D527D527D537D7DA8FD57FF7D7D5253527D527D527D5259527D52%53527D527D527D527D527D525952595253527D527D527D5252527D7DA8A8%FD50FFA8A8597D527D527D597D527D527D597E7DA8A8FFA8FFA8FFA8FFA8%FFA8FFA8A884A87D7D597D527D537D527D537D527D7DFD4DFFA87D7D527D%527D527D527D527D7DA8A8FD15FFA8FFA8847D7D5253527D527D527D527D%A8FD48FFA87D527D527D537D527D7DA8A8FD1FFFA8A87D7D527D527D527D%527D7DA8FD44FFA85952527D527D527D527DA8FD0BFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FD05FFA8A87D7D5253527D5253527DA8FD%40FFA87E527D527D597D527DA8FD2CFFA87D7D527D527D527D7DFD3EFF7D%7D527D527D527D7DA8FD28FFA9FD07FFA87D5259527D525952A8AFFD39FF%A8537D537D527D527DA8FD35FF7D7D527D537D527DA8FD36FFA87D525952%7D525253A8FD0AFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD05FFA87D527D527D527D%7DFD34FFA87D527D527D527DA8FD1BFFA9FFA9FFA9FD1CFFA87D7D527D59%7D7DFD32FF7E7D527D527D5284A8FD15FF7E7D53522E52272E272E272E27%2E282E2E5959A8A8FD07FFA8FFFFFFA8FFFFFFA8FD05FF7D59527D525952%A8FD2FFF7D7D527D527D7DA8FD12FFA9A852522D2D272D2D2D27FD042D51%FD052D2E0528062E2E7D7EFD13FFA87D527D537D52A8FD2DFF7D52527D52%527DFD0BFFA8FD05FFA87D2D2D272D262D262D262D2D512D572D51FD042D%262D2D2F062805060528065359FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A87D527D527D527DA8FD2AFF7D7D527D527D84FD10FFA8532E2D2D2D512D%58587C7CA783AD83ADA7AD82582D512D512D58365B365A2F2F282E062E28%537EFD10FFA8537D527D527DA8FD28FF527D527D527DA8FD0FFF7D520528%272D2D7C7CA782ADA7ADA7AD83A782A782A72D2D272D272D2E5A365A365A%365A2F2E052E0528287EA9FFA8FFFFFFA8FFFFFFA8FD04FFA85259527D52%7DA8FD26FF597D527D527DA8FD0EFF7DFD052D512DA7A7ADA7ADA7A77C7C%5158588282AD82A77C7C512D2D59365A365B365A365B2E512D512D2D0552%7DFD0FFF7D7D527D527DA8FD24FF527D527D527DA8FD09FFA8FFFFFF7D52%272D262D2D2D2783A7A782A78258262D272D262D275182A782A782A7512D%26523636305A3636302E26512D51272D262D287EA8FFA8FFA8FFA8FFA8FF%A8FFFFFF7D52527D527DA8FD22FF7D7D597D5284FD0DFFA851FD042D7C2D%2D2D83A7AD83ADA7AD512D2D512D512D512D7CA7AD82AD82AD51512D5836%5B365A365B2E2D2DA7A77C2D512D2D2753A8FD0DFF7D7D597D527DFD21FF%5953527D527DFD0DFF58272D27587CA783512D7CA7AD82A782A782A75858%2D2D272D2D2D27FD04828382A7512D2735365A3636365A2D2D2DA7A7A757%51272D272E53FFA8FFFFFFA8FFFFFFA8FFFFFF7D7D527D527DFD1FFF7D7D%537D527DFD0CFFA85227515183A7ADA7AD7CA7A7AD83ADA7AD82AD83AD82%AD7C512D592E2D2DAD828382AD82572D5135592E592E59365A2D2D2D83A7%AD827C2D512D2E52FD0DFF7D7D537D527DFD1DFF7D52527D527DA8FD07FF%A8FFFFFF7D2D262D58ADA7A782A782A782AD82A782AD82A782A7828382A7%2D2D2E592651828382825851262D2F52262D262D2D3630362D2D278282A7%8251272D262D277EA8FFA8FFA8FFA8FFA8FFFFFF537D527D527EFD1BFFA8%7D527D527DFD0CFF7D2E2D517CCFA7ADA7ADA7ADA7AD7C582D7C58585158%51A782AD7C512D592D2D57AD82A782572D51355B2D512D512D52365B365A%2D512D7C82AD2D512D512D2D277EFD0CFF7D7D527D52A8FD19FFA87D527D%527DA8FD0BFF522D262D7CAD82AD83A782ADA7A7512D272D262D272D272D%2D7C512D272D2F58275182838258262D2F3636582D2D262D2D3630363636%2D2D2D5751512D2D27512D2D0559FFFFA8FFAFFFA8FFAFFFFFFF527D527D%52A8FD18FF7D527D527DA8FD0BFF522D2D517CADA7AD83ADA7ADA7832D2D%2D582F522D512D2D2D512D2D2D58355A35512D7C82AD572D2D5B365A3659%2D522D593636365A365A2D512D2D2D512D2D2D582D2D2759FD0BFFA8527D%527D7DFD17FF7D527D52597DFD05FFA8FD05FF2E2D26517CA782A782A782%A78258262D2D59365A2D2D27512D2D262D272E305A36362E2D2D7C825826%2E30363636303636363036363630362D2D262D2D2E2E352D2D57822D2D04%52A8FFA8FFA8FFA8FFA8FFFFA8527D52597DFD15FFA8527D527D7DFD0BFF%522D2D5883ADA7ADA7AD83ADA7AD2D512D59366135512D82A7822D512D51%2D59365A365A2D2D2D582D2D2E5B365A365B365A365B365A365B36522D51%2D512D5A2E512D8282822D512D58FD0BFF7E527D597DA8FD14FF527D527D%52FD0BFF2E2D2D2D7CAD83A782AD82A782A782822D2D2D5A3652275782A7%822D26512D2D2E5A363636592D2D262D2D35FD0436303636363036363630%362F2D272D2D2D272D2D7CFD04822D2D2752A8FFA8FFA8FFA8FFA8FFA87D%527D527DA8FD12FF7D7D527D52A8FD0AFF532E2D517CAD83ADA7AD82AD83%AD82ADA7832D512D522D2D58A782AD57517C582D52365A365A365A35582E%5A365A365A3636365AFD08362D512D512D512D58FD06822D512D59FD08FF%A9FFA87D527D52A8FD11FFA87D527D527DFFFFA8FFFFFFA8FFFFFF53282D%2D51AD82A782A782A782A782A782A78258262D272D2D83FD0682512D262E%303636363036363630363636303630363036303630363036302E262D26FD%042D825E8257825D822D2D277DA8FFA8FFA8FFA8FFA8FF7D53527D52A8FD%10FF7E527D527DFD0AFF7E2E2D2D51ADA7AD83ADA7AD82AD83AD82AD82AD%57512D5157AD82A782AD82A782AD572D2D58365A365B365A365B365A365B%3636365B3636365B3636363735512D512D512D58FD06825E822D2D2DA8FD%0AFF597D597D7DFD0FFFA8527D52537EFD09FFA82E272D2DA782AD82A782%A782A782A7828382A78257262D2D828283FD0882572D2658363630363636%3036363630363636303636363036363630362E2E2F352E2D27825E825782%5D8257822D2D27A9A8FFA8FFA8FFA8FFFFA8527D5253A8FD0EFF7D7D527D%7DFD0AFF53272D2DA7A7AD82AD83AD82AD82A782AD82A782AD7C572D8282%8382A782827C827C8282A7512D2D5A3636365A3636365AFD14362D2D2D82%82825D8257825D572D2E2EFFFFFFA9FFFFFFA8FFFF7D527D527DFD0DFF7D%59527D52A8FFFFA8FFFFFFA8FFFF7D052D277C82A782A782A782A782A782%83828382828283FD0882572D262D2D2D5751262E30363636303630363036%30363036303630363036303630360E3630360E35272D2D825757272D2D57%2D2D050653FFA8FFA8FFA8FFA8FFA853527D52A8FD0CFF7D527D52A8FD09%FFA927512D7CA7ADA7AD82AD83AD82AD82AD82AD82A782AD82A782AD8283%82AD82582D512D512D582D512D5A365A365B3636365B3636365BFD113635%2D5151822D512D512D512D2F062EA8FD09FF7D7D597D7DFD0BFFA8527D52%7DA8FD09FF2E2D265883A782A782A782A7828382A78282828382828283FD%0882512D2E5A2F2D27512D2D2E3636363036363630363636303636363036%3636303630360E3630360E362F2D2757572D27352D2D262E0E2E0553A8FF%A8FFA8FFA8FFFFA8527D5253A8FD0AFF7D7D527D7DFD09FF7D2D2D5182AD%83A782AD82A782AD82A782AD82A782A7828382A782828283828282582D52%2F5B2E2D2D512D5A365AFD1636303636362F512D5757822D2D2E362E2E0E%362F2806A8FFFFA8FFFFFFA8FFFF7D527D527DFD09FFA87D527D52A8FFFF%A8FFFFFFA8FFA952262D7CA782A7828382A782828283FD10822D512D2D27%2D2E362D2E2F3636363036303630363036303630360E3630360E3630360D%360E360D360E2F262D575D5757272D0D360E360D36060628FFA8FFA8FFA8%FFA8FFA853527D52A8FD08FFA8527D527DFD09FF7D2D517CAD82AD83AD82%AD82AD82AD82A782AD82A782AD828382A7828282582D2D2D512D512D5936%5A365B3636365BFD1A362F522D585D8257512D5914352D581436062E7DFD%09FF7D7D597D7DFD08FF527D52537DFD09FF2D2D2DAD82A782A7828382A7%8282828382828283FD098258272D2D2E2D2D2D2E30363636303636363036%363630363636303630360E3630360E3630360E360E360E360E362E2D2D57%575E2D2D2E2E2D2D26350E2F0552A8FFA8FFA8FFA8FFFFA8527D527DA8FD%06FFA87D527D7DFD09FF7D2D2D8282AD82A782AD82A782AD828382A78283%828382828283828251582D2D2E5A365A2F593636365AFD1636303636360E%3636360E3636362D512D5E33512D512D512D2D2D352E51277DFFFFA8FFFF%FFA8FFA87D527D52A8FD06FF7D527D527DFFFFA8FFFFFFA8FFFF52262D82%A782A782828283FD10822D2D262D2D363036363630363036303630363036%3036303630360E3630360E360E360D360E360D360E360D360E360D360E2E%262D2D2D262D272D57A72D2D262D272D2DFFA8FFA8FFA8FFA8FF7D53527D%7DFD06FF7D7D527DA8FD08FFA805512D5158AD82A782AD82A782AD828382%AD82838283FD04822D2D2D592F5A365B365A365B3636365BFD1E360E3636%360E582D512D512D2D58ADA7A751572D582D2D7DFD08FFA8527D537DFD05%FFA87D527D52FD09FF52062751275182A782828283FD0D827C272D2D2EFD%043630363636303636363036363630363636303630360E3630360E363036%0E360E360E360E360E360E360E360E360D350D2E262D58AD82ADA7A78283%82512658A8FFA8FFA8FFA8FFA87D527D52A8FD04FFA8527D52A8FD08FFA8%2E062F2D5158A782AD828382A782828283FD08822D2D2D5AFD1236303636%36303636360E3636360E3636360E3614360E3614360E3614360E360E360E%362D2D58ADA7AD82AD83AD82AD7C2D2DA8FFFFA9FFFFFFA9FF7D7D527D7D%FD04FF5259527DA8FFA8FFFFFFA8FFFF7D052E2D2D2DA7FD0A827C828282%588282822D2D2D35365A36362F3630362F3630362F3630362F3630362F36%30362F3630362F3630362F3630360D3630360D360D360D360D360D360D36%2E2D2DA782A782A782A782A782A72D2D52FFA8FFA8FFA8FFA8A8527D527D%FFFFFFA87D527D7DFD09FF2E2E2E582D8282A782AD82A7828282837C7D7D%7D527D7D7D527D527D537D597D537D597D537D597D537D597D537D597D53%7D597D537D597D537D597D537D597D537D597D537D597D537D597D537D59%7D537D527D597D7D7D597D7D7D597D7D7D527D7D7D59FD047DA87D7D527D%53FFFFFFA8527D527DFFFFA9FFFFFFA9FFA82805352D2D57A78282828382%827C7D5259527D527D527D527D527D527D527D527D527D527D527D527D52%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52%7D527D527D527D527D84FFFF7D7D537D7DFD08FFA8062E36522D8282A782%A75751527D527D537D527D537D527D537D527D537D527D537D527D537D52%7D537D527D537D527D537D527D537D527D537D527D537D527D537D527D53%7D527D537D527D537D527D537D527D537D527D537D527D537D527D537D52%7D537D527D537D527D537D52A8FFFF7D527D52A8FD04FFA8FFFFFF520606%362D2D57828282572D517D527D527D527D527D527D527D527D527D527D52%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52%7D527D527D527D527D527D527D527D527D525953FFFF537D537DA8FD08FF%53062F36522D8282AD822D517D597D527D7DFFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8527D597D527DFFA87D527D52FD%05FFA9FFFFFF06282F5A2D2D5782827C2D7D527D527DA8FD4BFFA9FFFFFF%A9FFFFFFA9FFFFFFA8FFFFA8527D527D52A9A8527D527DFD08FF842E065A%3652277C82822D52527D527DA8FD5CFFA8527D537D7E7D5952537DFFFFFF%A8FFFFFFA87D052E365A2D2D57822D2D527D52537DFD07FFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF7D527D527DA8527D52%A8FD08FF53282E6136522D7C82512D7D537D52FD5FFFA87D597D537D7D52%537DFFFFFFA8FD04FF53052F365A2D2D57822D2D527D527DA8FD1BFFA9FF%FFFFA9FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFAFFFA8FFAFFFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFFFA8527D527D7D527D52A8FD08FF2E2E2F5A36582D5882572D7D%527D7DFD55FFA9FFFFFFA9FFFFFFA9FFA87D527D53527D527DA8FFA8FFFF%FFA8FFA82E052F36362E2D2D822D2D527D527DA8FFA8FFFFFFA8FFCAFFA8%FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFA8FFA8FFCAFFA8FFCA%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF527D527D7D%527D59FD09FF282E2F5A365A2D2D2D582D7D527D7DFD08FFC2BBC2C1C2BB%C2BBC2BBC2BBC1BBC2BBC1BBC1BBC1BBBBBBFD0452C2BBC2C1C2BBC2BBC2%BBC2BBC1BBC2BBC1BBC1FD05BB52275252C2BBC2BBC2BBC2BBC2BBC2BBC1%BBC2BBC1BBC1FD05BBFD08FF7D527D59527D527DA8FFA8FFFFFFA8FFA828%05FD0436592D2D2D51527D527DFD08FFBBBB99C1BBBB99BBBBBB99BBBBBB%98BBBBBB98BB98BB92BB2752275299BB99C1BBBB99BBBBBB99BBBBBB98BB%BBBB98BB98BB92BB2727275299BB99C1BBBB99BBBBBB99BBBBBB98BBBBBB%98BB98BB92BBA8FFA8FFA8FFA8FF527D527D7D537D52FD09FF282E2F5B36%3636592D51517D527D53FD07FFCFC2BBC1BBC2BBC1BBC1BBBBBBC1FD0ABB%9952275227C2BBC1BBC2BBC1BBC1BBBBBBC1FD0ABB9952275227C2BBC1BB%C2BBC1BBC1BBBBBBC1FD0ABB99FFFFFFA8FFFFFFA87D527D52527D527DA8%FFA8FFA8FFA8FFA82E053630363636302E262D527D527DA8FFFFFFA8FFFF%FF99BB99BB99BB99BB99BB99BB98BB98BB92BB98BB92BB92BB2752275299%BB99BB99BB99BB99BB99BB98BB98BB92BB98BB92BB92BB2728275299BB99%BB99BB99BB99BB99BB98BB98BB92BB98BB92BB92BBA8FFA8FFA8FFA8FF52%7D527D7D597D52FD09FF282E2F5B365A365B35522D7D537D59FD07FFCFC2%BBC1BBC2BBC1BBC1BBBBBBC1FD0ABB9952275252C2BBC1BBC2BBC1BBC1BB%BBBBC1FD0ABB9952275227C2BBC1BBC2BBC1BBC1BBBBBBC1FD0ABB99FD07%FFA87D537D52527D527DA8FFFFFFA8FFFFFFA82E06FD05363036302E527D%527DA8FD07FF99BBBBBB99BBBBBB99BBBBBB98BB98BB92BB98BB92BB9299%2752275299BBBBBB99BBBBBB99BBBBBB98BB98BB92BB98BB92BB92992752%275299BBBBBB99BBBBBB99BBBBBB98BB98BB92BB98BB92BB92BBA8FFA8FF%A8FFA8FF527D527D7D527D59FD09FF062E30FD08367D527D7DFD08FFC1BB%C1FD0EBB98BBBBBB98BB9952275252C1BBC1FD0EBB98BBBBBB98BB995227%5227C1BBC1FD0EBB98BBBBBB98BB99FFA8FFFFFFA8FFA87D527D53527D52%7DA8FFA8FFA8FFA8FFA82805363636303630360E36527D527DA8FFA8FFFF%FFA8FF99BB98BB99BB98BB98BB92BB98BB92BB92BB92BB92BB9299272827%5299BB98BB99BB98BB98BB92BB98BB92BB92BB92BB92BB92992727275299%BB98BB99BB98BB98BB92BB98BB92BB92BB92BB92BB92BBA8FFA8FFA8FFA8%FF527D527D7D527D53A9FD08FF282E2F5A365BFD05367D527D7DFD08FFC1%BBC1FD0EBB99BBBBBB99BB9952275252C1BBC1FD0EBB99BBBBBB99BB9952%275227C1BBC1FD0EBB99BBBBBB99BB99FD07FFA97D527D597D7D527DA8FF%A8FFFFFFA8FFFF2E052F3636303636360E36527D527DA8FD05FFA9FFBBBB%98BBBBBB98BB98BB92BB98BB92BB92BB92BB92BB9299272E275299BB98BB%BBBB98BB98BB92BB98BB92BB98BB92BB92BB92992727275299BB98BBBBBB%98BB98BB92BB98BB92BB92BB92BB92BB92BBA8FFA8FFA8FFA8FF527D527D%84527D52A8FD08FF52062F5BFD07367D527D52FD07FFCAC1FD06BBBABBBB%BB98BBBBBB98BB99BB92BB99BB9952275227C1FD06BBBABBBBBB98BBBBBB%98BB99BB92BB99BB9952272827C1FD06BBBABBBBBB98BBBBBB98BB99BB92%BB99BB99FFFFFFA8FFFFFFA87D527D527D7D52527DFFA8FFA8FFA8FFA859%052F303630360E360E36527D527DA8FFFFFFA8FFFFFF98BB98BB92BB98BB%92BB92BB92BB92BB92BB929992BB92992752275298BB98BB92BB98BB92BB%92BB92BB92BB92BB929992BB9299FD042798BB98BB92BB98BB92BB92BB92%BB92BB92BB929992BB9299A8FFA8FFA8FFA8FF527D527DA8527D52A8FD08%FF7D2806FD08367D537D59FD07FFCFC1FD0ABB99BBBBBB99BB99BB99BB99%BB9952275227C1FD0ABB99BB99BB99BB99BB99BB99BB9952275227FD0BBB%99BBBBBB99BB99BB99BB99BB99FD07FFA87D537D52A87D527D7DFFFFFFA8%FFFFFFA8A806282F36363630360E36527D527DA8FFFFFFA9FFFFFF98BB98%BB92BB98BB92BB92BB92BB92BB92BB929992BB92992752275298BB98BB92%BB98BB92BB92BB92BB92BB92BB929992BB9299FD042798BB98BB92BB98BB%92BB92BB92BB92BB92BB929992BB9299A8FFA8FFA8FFA8FF527D527DFF52%7D527DA8FD07FFA82E06FD08367D527D7DFD07FFCFBB92BBBBBB98BBBBBB%92BB99BB92BB99BB92BB99BB92BB995227524BBB92BBBBBB98BBBBBB92BB%99BB92BB99BB92BB99BB92BB9952275227BB92BBBBBB98BBBBBB92BB99BB%92BB99BB92BB99BB92BB99FFA8FFFFFFA8FFA87D527D53A87D527D52A8A8%FFA8FFA8FFA8FF28060D360E360E360D36527D527DA8FFA8FFFFFFA8FF99%BB92BB989992BB929992999299929992999299929992992727275299BB92%BB989992BB929992999299929992999299929992992727275299BB92BB98%9992BB92999299929992999299929992996E99A8FFA8FFA8FFA8FF527D52%7DFF7D7D597DA8FD08FF7D062FFD07367D527D7DFD08FF5227FD07524B52%5252275252522752525227524B5227522752275227522752275227522752%275227522752275227522752275227522752275227522752275227522752%275227522752275227FD05FFA8FFA87D527D59FF7D527D527EFFFFAFFFA8%FFAFFF7D2806360E3630360E36527D527DA8FFA8FD05FF272E2752275227%5227522752272E27522727275227272752272827522727275227272728FD%2A27F827A8FFA8FFA8FFA8FF527D527DFFA87D527D7DFD09FF282E2F3630%363636307D527D52FD07FFA8522752275227522752275227522752275227%522752275227522752275227522752275227522752275227282752272727%522727275227272728FD072752FD0F27FFFFFFA8FFFFFFA87D527D52FFFF%527D527DA8FFA8FFA8FFA8FFA853052F0E360D360E36527D527DA8FFFFFF%A8FFFFFF2752275227522752275227522752275227522752275227522752%2752275227522752274BFD05275227272752272727522727274BFD1A27A8%FFA8FFA8FFA8FF527D527DFFFF7D527D52A8FD08FF7D2E28FD06367D537D%59FD07FFA8A0BBC299C2BBC17652275227C2BBC299C2BBC299C2BBC299C2%BBC199C1BBBB99C1BBBB99522752277CBBC299C2BBC299C2BBC299C2BBC1%99C1BBBB99C1BBBB9952272727C2BBC299C2BBC299C2BBBB99FFFFFFA8FF%FFFFA87D537D52FFFF7D53527D7DFFA8FFAFFFA8FFAFA906280D360E360E%36527D527DA8FFFFFFA8FFFFA875BBBBBB99BB99762752275299C1BBBB99%C1BBBB99BBBBBB99BBBBBB98BB98BB92BB92BBFD042775BBBBBB99C1BBBB%99BBBBBB99BBBBBB98BB99BB92BB92BBFD042799C1BBBB99BBBBBB99BBBB%BBA8FFA8FFA8FFA8FF527D527DFFFFA8527D527DFD09FF53052F36360E36%367D527D7DFD07FFA87CBBC2BBC1BBBB762727524BC2BBC2BBC1BBC1BBC1%BBC1FD0ABBBABB995227522776BBC2BBC1BBC1BBC1BBC1FD0ABBBABB994B%272727C2BBC2BBC1BBC1FD05BBFFA8FFFFFFA8FFA87D527D53FFFFA87D52%7D52A8FFFFA8FFA8FFA8FF7D0605360E360D36527D527DA8FFA8FFA8FFA8%A875BB99BB99BB92762728275299BB99BB99BB99BB99BB98BB99BB98BB98%BB92BB98BB92BBFD042775BB99BB99BB99BB99BB98BB99BB98BB98BB92BB%98BB92BB2727212799BB99BB99BB98BB99BB92BBA8FFA8FFA8FFA8FF527D%527DFFFFFF7D7D527D7DFD09FF2E2E2F360E36367D527D7DFD07FFA8A0BB%C1FD04BB752727524BC2BBC2BBC1BBC1BBBBBBC1FD0CBB995227522776BB%C2BBC1BBC1BBC1BBC1FD0CBB9952272727C2BBC1BBBBBBC1FD05BBFFA8FF%FFFFA8FFA87D527D59FFFFFFA8527D527DA8FFA8FFA8FFA8FFFF7D052E0D%360D36527D527DA8FFA8FD04FFA875BB99BBBBBB9276272E275299BB99BB%BBBB99BBBBBB98BBBBBB98BB98BB92BB98BB92BBFD042775BB99BBBBBB99%BBBBBB98BBBBBB98BB98BB92BB98BB92BBFD042799BB99BBBBBB98BB99BB%92BBA8FFA8FFA8FFA8FF527D527DFD04FF7D527D52A8FD06FFA9FFFF2E05%2F1436307D527D52FD07FFA8A0FD06BB7528275227C2BBBBBBC1FD0ABBBA%BBBBBB98BBBBBB995227282776BBBBBBC1FD0ABBBABBBBBB98BBBBBB9952%272727C1FD0ABB99FFFFFFA8FFFFFFA87D527D52FD04FF7D7D525952FFA8%FFA8FFA8FFA8FF590605360E36527D527DA8FFA8FFA8FFFFA875BB98BB92%BB92752752275299BB99BB98BB99BB98BB98BB92BB92BB92BB92BB92BB92%99FD042751BB99BB98BB99BB98BB98BB92BB92BB92BB92BB92BB9299FD04%2799BB98BB92BB98BB92BB92BBA8FFA8FFA8FFA8AF527D527DFD05FF527D%527DA8FD09FF282E2E36307D537D59FD07FFA8A0FD06BB7552275227C2BB%BBBBC1FD0ABB99BBBBBB99BB99BB99522752277CBBBBBBC1FD0EBB99BB99%BB9952272727C1FD0ABB99FFFFFFA8FFFFFFA87D537D52FD05FF7D527D52%7DFFFFA8FFA8FFA8FFA87E05280D36527D527DA8FFFFFFA8FFFFA875BB98%BB92BB92752752275299BBBBBB98BB99BB92BB98BB92BB98BB92BB92BB92%BB9299FD042751BBBBBB98BBBBBB98BB98BB92BB98BB92BB92BB92BB9299%FD042798BB98BB92BB98BB92BB92BBA8FFA8FFA8FFA8FF527D527DFD05FF%A87D537D52A9FFFFA9FFFFFFA8FFFF53052F367D527D7DFD07FFA87692BB%BBBB98BB7527275227FD09BB98BBBBBB98BB99BB99BB99BB93BB99522752%2776BAFD07BBBABBBBBB98BBBBBB98BB99BB92BB99FD0427BBBABBBBBB98%BB99BB99BB99FFA8FFFFFFA8FFA87D527D53FD06FF527D52537DFFA8FFA8%FFA8FFA8FFA828052F527D527DA8FFA8FFA8FFA8A875BB92BB92BB927627%27275299BB92BB98BB92BB92BB92BB92BB92BB929992BB92999299FD0427%51BB98BB98BB92BB92BB92BB92BB92BB92BB92BB929992992727F82798BB%92BB92BB92BB929992BBA8FFA8FFA8FFA8FF527D527DFD06FFA8527D527D%A8FD09FF592E287D527D7DFD07FFA87693BB99BB99BB7527275227FD09BB%99BBBBBB99BB99BB99BB99BB99BB995227522776FD08BB99BBBBBB99BB99%BB99BB99BB99BB99FD0427BB99BBBBBB99BB99BB99BB99FFA8FFFFFFA8FF%A87D527D59FD07FF7D527D527DA8FFA8FFA8FFA8FFA8FF2828527D527DA8%FFA8FD04FFA875BB92BB929992762727275299BB92BB98BB92BB98BB92BB%92BB92BB929992BB92999299FD042775BB92BB98BB92BB98BB92BB92BB92%BB929992BB929992992727F82799BB92BB92BB92BB92999299A8FFA8FFA8%FFA8FF527D527DFD07FFA87D537D52A8FFFFA8FFFFFFA8FFFFAF287D537D%52FD07FFA87693BB92BB99997527272827BBBBBB98BBBBBB92BB99BB92BB%99BB92BB99BB92BB939993522727F876B5BB98BBBBBB92BB99BB92BB99BB%92BB99BB92BB9399934B272727BB99BB92BB99BB92BB99BB93FFA8FFA8FF%AFFFA87D527D52FD08FF597D525952FFA8FFA8FFA8FFA8FFA87E527D527D%A8FFA8FFA8FFFFA851BB929992999275FD042792BB989992BB9299929992%99929992999299929992999299FD04274BBB989992BB9299929992999299%929992999299929992992727F82792BB92999299929992999299A8FFA8FF%A8FFA8A8527D527DFD09FF527D527D7DFD09FFA87D537D59FD07FFA85227%522752275227522752275227522752275227522752275227522752275227%522752275227272752275227522752275227512752274B275227272752FD%07274B2727274BFD0727FFFFFFA8FFFFFFA87D537D52FD09FFA8527D527D%A8FFA8FFA8FFA8FFA8FF527D527DA8FFAFFFA8FFFFFFFD092752FD2A27F8%272727F8272727F827272721272727F827F827F827F827F827F827A8FFA8%FFA8FFA8AF527D527DFD0AFF7D527D527DA8FFA8FFFFFFA8FFA87D527D7D%FD07FFA85227522728275227272752272727522727275227272728272727%52FD2A2720272727F8272727F82727FFA8FFA8FFA8FFA87D527D53FD0AFF%7E7D527D527DA8FFA8FFA8FFA8FF527D527DA8FFA8FFA8FFA8FF27272752%2727275227272752272727522727274BFD2227F8FD132720272727F827A8%FFA8FFA8FFA8FF527D527DFD0BFF7D7D527D52A8FD06FFA97D527D7DFD08%FFC299C2BBC299C2BBC299C2BBC199C2BBBB99C1BBBB99BB5127275227C2%BBC2BBC299C2BBC299C2BBC199C1BBBB99C1BBBB99BB99FD0427C2BBC2BB%C299C2BBC299C2BBC199C2BBBB99C199BB99BB99FFA8FFFFFFA8FFA87D52%7D59FD0CFF5359527D52A8FFFFA8FFA8FF527D527DA8FFA8FFA8FFA8FFBB%BB99C1BBBB99BBBBBB99BBBBBB98BBBBBB98BB98BB92522727274C99BB99%C1BBBB99BBBBBB99BBBBBB98BBBBBB98BB98BB92BB2727F82799BB99C1BB%BB99BBBBBB99BBBBBB98BBBBBB98BB98BB92BBA8FFA8FFA8FFA8FF527D52%7DFD0DFF527D527D59FD05FFA87D527D52FD07FFCAC2BBC1BBC2BBC1BBC1%BBBBBBC1FD0ABB4BFD0427C2BBC1BBC2BBC1BBC1BBBBBBC1FD0ABB99FD04%27C2BBC1BBC2BBC1BBC1BBBBBBC1FD0ABB99FFA8FFA8FFA8FFA87D527D52%FD0DFFA8527D527D52FFA8FFA8FF527D527DA8FFA8FFA8FFA8FF99BB99BB%99BB99BB99BB99BB98BB98BB92BB98BB92BB9251F827272799BB99BB99BB%99BB99BB99BB98BB98BB92BB98BB92BB92992727F82799BB99BB99BB99BB%99BB99BB98BB98BB92BB98BB92BB92BBA8FFA8FFA8FFA8A8527D527DFD0E%FFA8527D597D7DFFFFFFA87D537D59FD07FFCAC2BBC1BBC2BBC1BBC1BBBB%BBC1FD0ABB4BFD0427C2BBC1BBC2BBC1BBC1BBBBBBC1FD0ABB9952272727%C2BBC1BBC1BBC1BBC1BBBBBBC1FD0ABB99FFA8FFA8FFA9FFA87D537D52FD%0FFF7D527D52537DFFFFFF527D527DA8FFA8FFA8FFA8FF99BBBBBB99BBBB%BB99BBBBBB98BB98BB92BB98BB92BB9251F827272799BBBBBB99BBBBBB99%BBBBBB98BB98BB92BB98BB92BB92992727F82799BBBBBB99BBBBBB99BBBB%BB98BB98BB92BB98BB92BB92BBA8FFA8FFA8FFA8A8527D527DFD10FF7D52%7D537D7DFFFF7D527D7DFD05FFA9FFCFC1BBC1FD0EBB98BBBBBB98BB51FD%0427C1BBC1FD0EBB98BBBBBB98BB99FD0427C1BBC1FD0EBB98BBBBBB98BB%99FFA8FFA8FFA8FFA87D527D53FD10FFA87D527D52527DFF527D527DA8FF%A8FFA8FFA8FF99BB98BB99BB98BB98BB92BB98BB92BB92BB92BB92BB9252%F827F82799BB98BB99BB98BB98BB92BB98BB92BB92BB92BB92BB92992727%F82799BB98BB99BB98BB98BB92BB98BB92BB92BB92BB92BB92BBA8FFA8FF%A8FFA8FF527D527DFD11FFA87D527D527D7D7D527D7DFD07FFCFC1BBC1FD%0EBB99BBBBBB99BB51FD0427C1BBC1FD0EBB99BBBBBB99BB99FD0427C1BB%C1FD0EBB99BBBBBB99BB99FFA8FFA8FFA8FFA87D527D59FD12FFA87D527D%527D527D527DA8FFA8FFA8FFA8FFBBBB98BBBBBB98BB98BB92BB98BB92BB%92BB92BB92BB9252FD042799BB98BBBBBB98BB98BB92BB98BB92BB98BB92%BB92BB92992727F82799BB98BBBBBB98BB98BB92BB98BB92BB92BB92BB92%BB92BBA8FFA8FFA8FFA8FF527D527DFD13FFA87D527D527D537D52FFFFFF%A9FFFFFFA8C1FD06BBBABBBBBB98BBBBBB98BB99BB92BB99BB4BFD0427C1%FD06BBBABBBBBB98BBBBBB98BB99BB92BB99BB99FD0427FD07BBBABBBBBB%98BBBBBB98BB99BB92BB99BB99FFA8FFA8FFA8FFA87D527D52FD14FFA87D%527D527D527DA8FFA8FFA8FFA8FF98BB98BB92BB98BB92BB92BB92BB92BB%92BB929992BB9251F827272798BB98BB92BB98BB92BB92BB92BB92BB92BB%929992BB92992027F82798BB98BB92BB98BB92BB92BB92BB92BB92BB9299%92BB9299A8FFA8FFA8FFA8A8527D527DFD16FF7D527D597D59FD07FFCAC1%FD0ABB99BB99BB99BB99BB99BB99BB4BFD0427FD0BBB99BB99BB99BB99BB%99BB99BB99FD0427FD0BBB99BBBBBB99BB99BB99BB99BB99FFA8FFA8FFA8%FFA87D537D52FD17FF7D527D527DA8FFA8FFA8FFA8CF98BB98BB92BB98BB%92BB92BB92BB92BB92BB929992BB9251F827272798BB98BB92BB98BB92BB%92BB92BB92BB92BB929992BB92992727F82798BB98BB92BB98BB92BB92BB%92BB92BB92BB929992BB9299A8FFA8FFA8FFA8A8527D527DFD18FF7D527D%7DFD05FFA8FFCABBB4BBBBBB92BB99BB92BB99BB92BB99BB92BB939992BB%4BFD0427BB92BBBBBB98BB99BB92BB99BB92BB99BB92BB939992BB9927F8%2727BB92BBBBBB98BBBBBB92BB99BB92BB99BB92BB93BB92BB99CFA8FFA8%FFA8FFA87D527D53FD18FF527D527DA8FFA8FFA8FFA8FF99BB92BB98BB92%BB98BB92BB939992999399929993999252FD042799BB92BB98BB92BB98BB%92BB939992BB93999299939992992727F82799BB92BB98BB92BB98BB92BB%939992BB9399929993999299A8FFA8FFA8FFA8A9527D527DFD18FF7D527D%7DFD09FFCAFFCAFFCAFFCAFFCAFFCAFFA8FFCAFFA8FFCAFFA8FFA8FFA8FF%A8FFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFA8FFA8FFA8FF%A8FFCAFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A87D527D59FD18FF527D527DA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF527D527DFD18FF7D527D52FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFAFFFA8FFAFFFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA87D537D52FD18FF527D525984FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8AFA8FFA8AFA8FFA8A8527D527DFD18FFA8%527D52A8FD0EFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA9FFA8FFA9FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7D7D59%7D7DFD18FF7D7D527D52A8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA87D527D52A8FD19FF537D537D52A8FD06%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFAFFFA8FFAF%FFA8FFAFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA87D527D52%7DFD1AFFA8527D5259527DA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8AFA8FFA8AFA8FFA8AFA8FFA8A9A8FFA8A9A8FFA8A8A8FFA8A8A8FFA8%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8%AFA8A8A8AFFD04A87D59527D52527DFD1BFFA8527D527D527D527D7D7D59%7D7D7D597D7D7D597D7D7D597D7D7D597D7D7D597D7D7D597D7D7D597D7D%7D597D7D7D597D7D7D597D7D7D597D7D7D597D7D7D537D7D7D597D7D7D59%7D7D7D537D7D7D537D7D7D537D7D7D537D7D7D537D537D527D597D7DFD1D%FF84527D527D527D527D527D527D527D527D527D527D527D527D527D527D%527D527D527D527D527D527D527D527D527D527D527D527D527D527D527D%527D527D527D527D527D527D527D527D527D527D527D527D527D527D527D%527D527D527D527D7DFD1FFFA87D7D527D537D527D537D527D537D527D53%7D527D537D527D537D527D537D527D537D527D537D527D537D527D537D52%7D537D527D537D527D537D527D537D527D537D527D537D527D537D527D53%7D527D537D527D537D527D537D527D527DA8FD22FF7D7D527D527D527D52%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52%7D527D527D527D527D527D527D527D527D527D527D7DA8A8FD04FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
userdict /lv1Fix true putuserdict /_contoneDevice true put%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--24 Bn%AI5_BeginGradient: (Unnamed gradient 196)(Unnamed gradient 196) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6>0 %_Br[0 0 0 0.098039 1 50 100 %_BS%_0 0 0 0.098039 1 50 100 Bs0 0 0 0 1 48.3253 0 %_BS%_0 0 0 0 1 48.3253 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 197)(Unnamed gradient 197) 0 3 Bd[<C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCCCDCDCECECFCFCFD0D0D1D1D2D2D2D3D3D4D4D5D5><48494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C>001 %_Br<8F8F8F9090919191929293949495959696979898999A9A9B9C9D9D9E9F9FA0A1A2A3A3A4A5A6A7A7A8A9AAABACACADAEAFB0B1B2B3B4B5B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6><2F2F2F2F303030303031313131323232323333333434343435353536363637373838383939393A3A3A3B3B3C3C3C3D3D3E3E3E3F3F4040404141424243434344444545464647474848>001 %_Br[0.835294 0.423529 0 0 1 50 100 %_BS%_0.835294 0.423529 0 0 1 50 100 Bs0.776471 0.282353 0 0 1 51.2426 58.427 %_BS%_0.776471 0.282353 0 0 1 51.2426 58.427 Bs0.560784 0.184314 0 0 1 59.3303 0 %_BS%_0.560784 0.184314 0 0 1 59.3303 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 198)(Unnamed gradient 198) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 199)(Unnamed gradient 199) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 200)(Unnamed gradient 200) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 201)(Unnamed gradient 201) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 202)(Unnamed gradient 202) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 203)(Unnamed gradient 203) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 204)(Unnamed gradient 204) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 205)(Unnamed gradient 205) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 206)(Unnamed gradient 206) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 207)(Unnamed gradient 207) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 208)(Unnamed gradient 208) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6>0 %_Br[0 0 0 0.098039 1 50 100 %_BS%_0 0 0 0.098039 1 50 100 Bs0 0 0 0 1 48.3253 0 %_BS%_0 0 0 0 1 48.3253 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 209)(Unnamed gradient 209) 0 2 Bd[<4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0B0A09080706050403020100>0 %_Br[0 0 0 1 1 50 100 %_BS%_0 0 0 1 1 50 100 Bs0 0 0 0.698039 1 49.4378 0 %_BS%_0 0 0 0.698039 1 49.4378 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 210)(Unnamed gradient 210) 0 3 Bd[<000102030405060708090A0B0C0D0F101112131415161718191A1B1C1D1E1F><AAABABACACADADAEAFAFB0B0B1B1B2B3B3B4B4B5B5B6B6B7B8B8B9B9BABABB><FCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9><00000000010101010101010102020202020202030303030303030304040404>1 %_Br0<8081818283838485858687878889898A8B8B8C8D8D8E8F8F9091919292939494959696979898999A9A9B9C9C9D9E9E9FA0A0A1A2A2A3A4A4A5A5A6A7A7A8A9A9AA><BCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC>01 %_Br[0.121569 0.733333 0.976471 0.015686 1 50 100 %_BS%_0.121569 0.733333 0.976471 0.015686 1 50 100 Bs0 0.666667 0.988235 0 1 49.823 50 %_BS%_0 0.666667 0.988235 0 1 49.823 50 Bs0 0.501961 0.737255 0 1 49.7228 0 %_BS%_0 0.501961 0.737255 0 1 49.7228 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 211)(Unnamed gradient 211) 0 3 Bd[<000102030405060708090A0B0C0D0F101112131415161718191A1B1C1D1E1F><AAABABACACADADAEAFAFB0B0B1B1B2B3B3B4B4B5B5B6B6B7B8B8B9B9BABABB><FCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9><00000000010101010101010102020202020202030303030303030304040404>1 %_Br0<8081818283838485858687878889898A8B8B8C8D8D8E8F8F9091919292939494959696979898999A9A9B9C9C9D9E9E9FA0A0A1A2A2A3A4A4A5A5A6A7A7A8A9A9AA><BCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC>01 %_Br[0.121569 0.733333 0.976471 0.015686 1 50 100 %_BS%_0.121569 0.733333 0.976471 0.015686 1 50 100 Bs0 0.666667 0.988235 0 1 49.823 50 %_BS%_0 0.666667 0.988235 0 1 49.823 50 Bs0 0.501961 0.737255 0 1 49.7228 0 %_BS%_0 0.501961 0.737255 0 1 49.7228 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 212)(Unnamed gradient 212) 0 3 Bd[<000102030405060708090A0B0C0D0F101112131415161718191A1B1C1D1E1F><AAABABACACADADAEAFAFB0B0B1B1B2B3B3B4B4B5B5B6B6B7B8B8B9B9BABABB><FCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9><00000000010101010101010102020202020202030303030303030304040404>1 %_Br0<8081818283838485858687878889898A8B8B8C8D8D8E8F8F9091919292939494959696979898999A9A9B9C9C9D9E9E9FA0A0A1A2A2A3A4A4A5A5A6A7A7A8A9A9AA><BCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC>01 %_Br[0.121569 0.733333 0.976471 0.015686 1 50 100 %_BS%_0.121569 0.733333 0.976471 0.015686 1 50 100 Bs0 0.666667 0.988235 0 1 49.823 50 %_BS%_0 0.666667 0.988235 0 1 49.823 50 Bs0 0.501961 0.737255 0 1 49.7228 0 %_BS%_0 0.501961 0.737255 0 1 49.7228 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 213)(Unnamed gradient 213) 0 3 Bd[<000102030405060708090A0B0C0D0F101112131415161718191A1B1C1D1E1F><AAABABACACADADAEAFAFB0B0B1B1B2B3B3B4B4B5B5B6B6B7B8B8B9B9BABABB><FCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9><00000000010101010101010102020202020202030303030303030304040404>1 %_Br0<8081818283838485858687878889898A8B8B8C8D8D8E8F8F9091919292939494959696979898999A9A9B9C9C9D9E9E9FA0A0A1A2A2A3A4A4A5A5A6A7A7A8A9A9AA><BCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC>01 %_Br[0.121569 0.733333 0.976471 0.015686 1 50 100 %_BS%_0.121569 0.733333 0.976471 0.015686 1 50 100 Bs0 0.666667 0.988235 0 1 49.823 50 %_BS%_0 0.666667 0.988235 0 1 49.823 50 Bs0 0.501961 0.737255 0 1 49.7228 0 %_BS%_0 0.501961 0.737255 0 1 49.7228 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 214)(Unnamed gradient 214) 0 3 Bd[<000102030405060708090A0B0C0D0F101112131415161718191A1B1C1D1E1F><AAABABACACADADAEAFAFB0B0B1B1B2B3B3B4B4B5B5B6B6B7B8B8B9B9BABABB><FCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9><00000000010101010101010102020202020202030303030303030304040404>1 %_Br0<8081818283838485858687878889898A8B8B8C8D8D8E8F8F9091919292939494959696979898999A9A9B9C9C9D9E9E9FA0A0A1A2A2A3A4A4A5A5A6A7A7A8A9A9AA><BCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC>01 %_Br[0.121569 0.733333 0.976471 0.015686 1 50 100 %_BS%_0.121569 0.733333 0.976471 0.015686 1 50 100 Bs0 0.666667 0.988235 0 1 49.823 50 %_BS%_0 0.666667 0.988235 0 1 49.823 50 Bs0 0.501961 0.737255 0 1 49.7228 0 %_BS%_0 0.501961 0.737255 0 1 49.7228 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 215)(Unnamed gradient 215) 0 3 Bd[<000102030405060708090A0B0C0D0F101112131415161718191A1B1C1D1E1F><AAABABACACADADAEAFAFB0B0B1B1B2B3B3B4B4B5B5B6B6B7B8B8B9B9BABABB><FCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9><00000000010101010101010102020202020202030303030303030304040404>1 %_Br0<8081818283838485858687878889898A8B8B8C8D8D8E8F8F9091919292939494959696979898999A9A9B9C9C9D9E9E9FA0A0A1A2A2A3A4A4A5A5A6A7A7A8A9A9AA><BCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC>01 %_Br[0.121569 0.733333 0.976471 0.015686 1 50 100 %_BS%_0.121569 0.733333 0.976471 0.015686 1 50 100 Bs0 0.666667 0.988235 0 1 49.823 50 %_BS%_0 0.666667 0.988235 0 1 49.823 50 Bs0 0.501961 0.737255 0 1 49.7228 0 %_BS%_0 0.501961 0.737255 0 1 49.7228 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 216)(Unnamed gradient 216) 0 3 Bd[<000102030405060708090A0B0C0D0F101112131415161718191A1B1C1D1E1F><AAABABACACADADAEAFAFB0B0B1B1B2B3B3B4B4B5B5B6B6B7B8B8B9B9BABABB><FCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9><00000000010101010101010102020202020202030303030303030304040404>1 %_Br0<8081818283838485858687878889898A8B8B8C8D8D8E8F8F9091919292939494959696979898999A9A9B9C9C9D9E9E9FA0A0A1A2A2A3A4A4A5A5A6A7A7A8A9A9AA><BCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC>01 %_Br[0.121569 0.733333 0.976471 0.015686 1 50 100 %_BS%_0.121569 0.733333 0.976471 0.015686 1 50 100 Bs0 0.666667 0.988235 0 1 49.823 50 %_BS%_0 0.666667 0.988235 0 1 49.823 50 Bs0 0.501961 0.737255 0 1 49.7228 0 %_BS%_0 0.501961 0.737255 0 1 49.7228 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 217)(Unnamed gradient 217) 0 3 Bd[<000102030405060708090A0B0C0D0F101112131415161718191A1B1C1D1E1F><AAABABACACADADAEAFAFB0B0B1B1B2B3B3B4B4B5B5B6B6B7B8B8B9B9BABABB><FCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9><00000000010101010101010102020202020202030303030303030304040404>1 %_Br0<8081818283838485858687878889898A8B8B8C8D8D8E8F8F9091919292939494959696979898999A9A9B9C9C9D9E9E9FA0A0A1A2A2A3A4A4A5A5A6A7A7A8A9A9AA><BCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC>01 %_Br[0.121569 0.733333 0.976471 0.015686 1 50 100 %_BS%_0.121569 0.733333 0.976471 0.015686 1 50 100 Bs0 0.666667 0.988235 0 1 49.823 50 %_BS%_0 0.666667 0.988235 0 1 49.823 50 Bs0 0.501961 0.737255 0 1 49.7228 0 %_BS%_0 0.501961 0.737255 0 1 49.7228 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 218)(Unnamed gradient 218) 0 3 Bd[<000102030405060708090A0B0C0D0F101112131415161718191A1B1C1D1E1F><AAABABACACADADAEAFAFB0B0B1B1B2B3B3B4B4B5B5B6B6B7B8B8B9B9BABABB><FCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9><00000000010101010101010102020202020202030303030303030304040404>1 %_Br0<8081818283838485858687878889898A8B8B8C8D8D8E8F8F9091919292939494959696979898999A9A9B9C9C9D9E9E9FA0A0A1A2A2A3A4A4A5A5A6A7A7A8A9A9AA><BCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC>01 %_Br[0.121569 0.733333 0.976471 0.015686 1 50 100 %_BS%_0.121569 0.733333 0.976471 0.015686 1 50 100 Bs0 0.666667 0.988235 0 1 49.823 50 %_BS%_0 0.666667 0.988235 0 1 49.823 50 Bs0 0.501961 0.737255 0 1 49.7228 0 %_BS%_0 0.501961 0.737255 0 1 49.7228 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 219)(Unnamed gradient 219) 0 3 Bd[<000102030405060708090A0B0C0D0F101112131415161718191A1B1C1D1E1F><AAABABACACADADAEAFAFB0B0B1B1B2B3B3B4B4B5B5B6B6B7B8B8B9B9BABABB><FCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9><00000000010101010101010102020202020202030303030303030304040404>1 %_Br0<8081818283838485858687878889898A8B8B8C8D8D8E8F8F9091919292939494959696979898999A9A9B9C9C9D9E9E9FA0A0A1A2A2A3A4A4A5A5A6A7A7A8A9A9AA><BCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC>01 %_Br[0.121569 0.733333 0.976471 0.015686 1 50 100 %_BS%_0.121569 0.733333 0.976471 0.015686 1 50 100 Bs0 0.666667 0.988235 0 1 49.823 50 %_BS%_0 0.666667 0.988235 0 1 49.823 50 Bs0 0.501961 0.737255 0 1 49.7228 0 %_BS%_0 0.501961 0.737255 0 1 49.7228 0 BsBD%AI5_EndGradient%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 1 255 79 79 0 50 Lb(Layer 2) Ln0 Au0 O0 J 0 j 1 w 4 M []0 d0 XR96.5 16 m96.5 7.43945 103.4395 0.5 112 0.5 c120.5605 0.5 127.5 7.43945 127.5 16 c127.5 24.5605 120.5605 31.5 112 31.5 c103.4395 31.5 96.5 24.5605 96.5 16 CBb1 (Unnamed gradient 196) 0 -0.015625 0 1.00049 15.5024 26.851 26.851 -15.5024 -337427.265 -81523.25 Bg15.51 -26.8641 138.0674 79.7131 35.2026 -10.4092 Xm125291.4844 -217011.69 138.0674 79.7131 -125256.2813 217001.284 Bc15.51 -26.8641 138.0674 79.7131 35.2026 -10.4092 Bm125291.4844 -217011.69 138.0674 79.7131 50.7124 -37.2734 Bcf0 BB0 0 0 0.5 k96.5 16 m96 16 l96.0005 7.16309 103.1631 0 112 0 c120.8369 0 127.999 7.16309 128 16 c127.999 24.8369 120.8369 32 112 32 c103.1631 32 96.0005 24.8369 96 16 C96.5 16 L97 16 l97 20.1436 98.6782 23.8906 101.3936 26.6064 c104.1094 29.3223 107.856 31 112 31 c116.1436 31 119.8906 29.3223 122.6064 26.6064 c125.3223 23.8906 126.999 20.1436 127 16 c126.999 11.8564 125.3223 8.10938 122.6064 5.39355 c119.8906 2.67773 116.1436 1 112 1 c107.8564 1 104.1094 2.67773 101.3936 5.39355 c98.6782 8.10938 97 11.8564 97 16 C96.5 16 Lf99.5 16 m99.5 9.09668 105.0967 3.5 112 3.5 c118.9033 3.5 124.5 9.09668 124.5 16 c124.5 22.9033 118.9033 28.5 112 28.5 c105.0967 28.5 99.5 22.9033 99.5 16 CBb1 (Unnamed gradient 197) 0 0.019531 0 1 12.502 21.654 21.654 -12.502 -270533.076 -64159.125 Bg12.502 -21.654 111.3445 64.2851 49.8975 -5.00586 Xm101041.875 -175008.8594 111.3445 64.2851 -100991.9766 175003.8594 Bc7.30454 -12.6518 111.3445 64.2851 49.8975 -5.00586 Bm5.19746 -9.00222 111.3445 64.2851 57.2021 -17.6572 Bm101041.875 -175008.8594 111.3445 64.2851 62.3994 -26.6602 Bcf0 BB0.902344 0.652344 0.34375 0.164063 k99.5 16 m99.25 16 l99.25 8.95898 104.9585 3.25 112 3.25 c119.041 3.25 124.75 8.95898 124.75 16 c124.75 23.041 119.041 28.75 112 28.75 c104.9585 28.75 99.25 23.041 99.25 16 C99.5 16 L99.75 16 l99.75 19.3838 101.1206 22.4443 103.3379 24.6621 c105.5557 26.8789 108.6167 28.25 112 28.25 c115.3828 28.25 118.4443 26.8789 120.6621 24.6621 c122.8789 22.4443 124.25 19.3838 124.25 16 c124.25 12.6162 122.8789 9.55566 120.6621 7.33789 c118.4443 5.12109 115.3828 3.75 112 3.75 c108.6167 3.75 105.5557 5.12109 103.3379 7.33789 c101.1206 9.55566 99.75 12.6162 99.75 16 C99.5 16 Lf113.4355 28.2129 m112.8647 28.2852 112.2837 28.3262 111.6919 28.3262 c110.4297 28.3262 109.2104 28.1523 108.0581 27.834 C107.6226 27.3486 L106.9917 26.668 L106.9917 27.3633 L105.0752 26.4932 L103.4502 24.9727 L100.9434 21.8398 L100.6362 20.9014 L101.1855 20.6641 L100.7817 20.0088 L100.8457 17.2549 L101.6548 16.0898 L102.415 15.5137 L102.5444 15.1367 L103.1914 14.8027 L103.3447 14.0801 L103.6035 13.8193 L103.8096 13.8652 L103.8096 15.2148 L103.4585 15.5449 L102.9971 15.6807 L102.9243 15.748 L103.1431 15.9531 L103.1431 16.3496 L103.3608 16.7031 L102.7788 16.748 L102.5605 16.543 L102.0996 16.543 L101.8325 17.043 L101.7842 18.042 L102.0752 18.042 L102.2446 18.8359 L102.7065 19.2676 L103.5767 18.8848 L103.8223 19.0176 L104.8164 18.5859 L104.6953 17.9746 L104.6953 17.7012 L104.9614 17.5879 L105.2529 17.7012 L105.2529 19.1543 L106.3931 20.0176 L106.7271 20.5596 L107.1841 20.8066 L107.2959 20.9883 L107.5093 21.1875 L107.9707 21.1875 L108.0796 21.3623 L108.2852 21.6963 L108.7705 21.9238 L109.207 21.9238 L109.207 21.707 L109.6724 21.707 L109.8623 22.0137 L109.4014 22.1729 L109.4014 23.0117 L110.3472 23.0117 L110.6382 22.3096 L111.3901 22.6045 L110.9482 22.9414 L111.2441 23.4219 L110.3472 24.2617 L110.3472 24.8516 L109.8862 24.8965 L109.5708 24.5107 L109.4014 25.2822 L108.625 25.3281 L108.2368 24.9414 L107.9941 24.2383 L107.6543 24.2158 L107.4609 23.5801 L107.1211 23.5801 L107.145 24.375 L106.5386 24.9199 L107.7026 25.7148 L108.2368 25.5781 L109.1826 25.7148 L109.8965 25.2314 L110.832 25.7363 L110.832 26.5762 L109.5464 26.9844 L110.4932 27.167 L111.2202 26.9844 L111.73 26.2588 L111.5356 25.873 L112.0215 24.8965 L112.8125 24.5996 L113.1123 24.7598 L113.1855 25.6914 L114.1074 26.5537 L113.04 27.5527 L112.2148 27.8018 L113.4355 27.8018 L113.4355 28.2129 LBb1 (Unnamed gradient 198) 0.000488 0.003906 0 1 5.15137 8.92243 8.92243 -5.15137 -106660.2656 -21626.4863 Bg5.15137 -8.92243 49.8772 28.7966 80.0645 12.0381 Xm41633.3828 -72111.0938 49.8772 28.7966 -41553.3203 72123.1328 Bc2.57569 -4.46122 49.8772 28.7966 80.0645 12.0381 Bm2.57569 -4.46122 49.8772 28.7966 82.6401 7.57715 Bm41633.3828 -72111.0938 49.8772 28.7966 85.2158 3.11523 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k113.4355 28.2129 m113.4658 28.4609 l112.8867 28.5342 112.2954 28.5762 111.6919 28.5762 c110.4067 28.5762 109.165 28.3994 107.9917 28.0752 C107.8721 28.001 L107.438 27.5176 L107.2417 27.3057 L107.2417 27.3633 L107.127 27.5732 L106.8882 27.5908 L104.9717 26.7207 L104.9043 26.6758 L103.2793 25.1553 L103.2549 25.1289 L100.748 21.9961 L100.7056 21.918 L100.3984 20.9795 l100.3584 20.8564 100.4185 20.7227 100.5371 20.6719 C100.8213 20.5488 L100.5688 20.1396 L100.5317 20.0029 L100.5957 17.249 L100.6401 17.1123 L101.4492 15.9473 L101.5039 15.8906 L102.2031 15.3604 L102.3081 15.0557 L102.4297 14.915 L102.9717 14.6348 L103.1001 14.0283 L103.1675 13.9043 L103.4263 13.6436 L103.6577 13.5752 L103.8638 13.6211 l103.978 13.6465 104.0596 13.748 104.0596 13.8652 C104.0596 15.2148 L103.981 15.3975 L103.6299 15.7275 L103.5288 15.7852 L103.124 15.9043 L103.0942 15.9316 L102.9243 15.748 L103.0952 15.5654 L103.314 15.7705 L103.3931 15.9531 L103.3931 16.2783 L103.5737 16.5723 L103.5835 16.8164 L103.3799 16.9521 L102.7979 16.9971 L102.6074 16.9307 L102.4614 16.793 L102.2495 16.793 L102.0796 17.1113 L102.0464 17.792 L102.0752 17.792 l102.1929 17.792 102.2949 17.875 102.3198 17.9902 C102.4727 18.707 L102.7568 18.9727 L103.4761 18.6563 L103.6958 18.665 L103.834 18.7402 L104.5322 18.4365 L104.4502 18.0234 L104.4453 17.9746 L104.4453 17.7012 l104.4453 17.6006 104.5049 17.5107 104.5972 17.4707 C104.8633 17.3574 L105.0518 17.3545 L105.3433 17.4678 l105.4399 17.5059 105.5029 17.5977 105.5029 17.7012 C105.5029 19.0303 L106.5439 19.8184 L106.606 19.8867 L106.9048 20.3711 L107.3027 20.5869 L107.397 20.6758 L107.4912 20.8281 L107.6079 20.9375 L107.9707 20.9375 L108.1831 21.0557 L108.292 21.2305 L108.2925 21.2314 L108.459 21.502 L108.8262 21.6738 L109.207 21.6738 L109.207 21.9238 L108.957 21.9238 L108.957 21.707 L109.0303 21.5303 L109.207 21.457 L109.6724 21.457 L109.8848 21.5752 L110.0747 21.8818 L110.0977 22.0977 L109.9438 22.25 L109.6514 22.3506 L109.6514 22.7617 L110.1802 22.7617 L110.4072 22.2139 l110.4595 22.0879 110.6025 22.0273 110.7295 22.0771 C111.4814 22.3721 L111.6377 22.5703 L111.5415 22.8037 L111.2798 23.0029 L111.457 23.291 l111.5195 23.3926 111.502 23.5225 111.415 23.6045 C110.5972 24.3701 L110.5972 24.8516 l110.5972 24.9805 110.5 25.0879 110.3716 25.1006 C109.9106 25.1455 L109.6929 25.0547 L109.3774 24.6689 L109.5708 24.5107 L109.8149 24.5645 L109.6455 25.3359 l109.6216 25.4453 109.5278 25.5254 109.416 25.5322 C108.6396 25.5781 L108.4487 25.5049 L108.0605 25.1182 L108.0005 25.0234 L107.812 24.4766 L107.6377 24.4648 l107.5337 24.458 107.4453 24.3887 107.415 24.2881 C107.2759 23.8301 L107.1211 23.8301 L107.1211 23.5801 L107.3711 23.5723 L107.395 24.3672 L107.312 24.5605 L106.9424 24.8926 L107.75 25.4443 L108.1748 25.3359 L108.2725 25.3311 L109.1226 25.4531 L109.7563 25.0244 L110.0151 25.0117 L110.9507 25.5166 l111.0313 25.5596 111.082 25.6445 111.082 25.7363 C111.082 26.5762 l111.082 26.6846 111.0112 26.7813 110.9077 26.8145 C109.6221 27.2227 L109.5464 26.9844 L109.5938 26.7393 L110.4858 26.9111 L111.0693 26.7646 L111.4395 26.2373 L111.3125 25.9854 L111.312 25.7617 L111.7979 24.7852 L111.9336 24.6621 L112.7246 24.3652 L112.9302 24.3789 L113.2305 24.5391 L113.3613 24.7402 L113.4268 25.5752 L114.2783 26.3711 L114.3574 26.5537 L114.2783 26.7363 L113.21 27.7354 L113.1113 27.792 L112.2871 28.041 L112.2148 27.8018 L112.2148 27.5518 L113.4355 27.5518 L113.6113 27.625 L113.6855 27.8018 L113.6855 28.2129 l113.6855 28.3389 113.5908 28.4453 113.4658 28.4609 C113.4355 28.2129 L113.1855 28.2129 L113.1855 28.0518 L112.2148 28.0518 l112.0913 28.0518 111.9858 27.9609 111.9673 27.8379 c111.9492 27.7158 112.0239 27.5986 112.1426 27.5625 C112.9116 27.3301 L113.7412 26.5537 L113.0146 25.874 L112.9365 25.7109 L112.874 24.916 L112.7944 24.873 L112.2017 25.0957 L111.8154 25.8721 L111.9531 26.1465 L111.9346 26.4023 L111.4248 27.1279 L111.2813 27.2266 L110.5542 27.4092 L110.4458 27.4121 L109.499 27.2295 l109.3872 27.208 109.3037 27.1123 109.2969 26.999 c109.29 26.8848 109.3623 26.7803 109.4707 26.7461 C110.582 26.3936 L110.582 25.8857 L109.9111 25.5234 L109.3228 25.9219 L109.147 25.9619 L108.2505 25.833 L107.7646 25.957 L107.5615 25.9209 L106.3975 25.126 L106.2891 24.9365 L106.3716 24.7344 L106.8916 24.2666 L106.8711 23.5879 L106.9419 23.4063 L107.1211 23.3301 L107.4609 23.3301 l107.5713 23.3301 107.668 23.4023 107.7002 23.5078 C107.8433 23.9775 L108.0107 23.9893 l108.1108 23.9951 108.1978 24.0615 108.2305 24.1563 C108.4541 24.8047 L108.7222 25.0723 L109.1978 25.0439 L109.3267 24.457 l109.3472 24.3633 109.4194 24.29 109.5127 24.2676 c109.606 24.2451 109.7036 24.2783 109.7642 24.3525 C109.9951 24.6348 L110.0972 24.625 L110.0972 24.2617 L110.1763 24.0791 L110.9243 23.3789 L110.7354 23.0723 l110.668 22.9629 110.6948 22.8203 110.7969 22.7422 C110.8853 22.6748 L110.7754 22.6318 L110.5781 23.1074 l110.5396 23.2012 110.4482 23.2617 110.3472 23.2617 C109.4014 23.2617 L109.2246 23.1885 L109.1514 23.0117 L109.1514 22.1729 l109.1514 22.0664 109.2192 21.9717 109.3198 21.9365 C109.4849 21.8799 L109.46 21.8389 L109.6724 21.707 L109.6724 21.957 L109.207 21.957 L109.207 21.707 L109.457 21.707 L109.457 21.9238 L109.3838 22.1006 L109.207 22.1738 L108.7705 22.1738 L108.6646 22.1504 L108.1792 21.9229 L108.0723 21.8271 L107.8667 21.4932 L107.8672 21.4941 L107.832 21.4375 L107.5093 21.4375 L107.3389 21.3701 L107.1255 21.1709 L107.083 21.1191 L107.0063 20.9951 L106.6084 20.7793 L106.5142 20.6904 L106.2046 20.1885 L105.1021 19.3535 L105.0029 19.1543 L105.0029 17.8721 L104.9658 17.8574 L104.9453 17.8662 L104.9453 17.9502 L105.0615 18.5371 l105.0845 18.6533 105.0239 18.7686 104.916 18.8154 C103.9219 19.2471 L103.7031 19.2373 L103.5654 19.1631 L102.8071 19.4961 l102.7153 19.5371 102.6094 19.5186 102.5356 19.4502 C102.0737 19.0186 L102 18.8877 L101.873 18.292 L101.7842 18.292 L101.603 18.2148 L101.5347 18.0303 L101.583 17.0313 L101.6118 16.9248 L101.8789 16.4248 l101.9229 16.3438 102.0073 16.293 102.0996 16.293 C102.5605 16.293 L102.7319 16.3604 L102.8696 16.4902 L102.9331 16.4854 L102.9302 16.4805 L102.8931 16.3496 L102.8931 16.0615 L102.7534 15.9307 L102.6743 15.7471 L102.7544 15.5645 L102.8271 15.4971 L102.9268 15.4404 L103.3306 15.3223 L103.5596 15.1064 L103.5596 14.0654 L103.5493 14.0635 L103.6035 13.8193 L103.7808 13.9951 L103.5742 14.2041 L103.436 14.8545 L103.3062 15.0244 L102.748 15.3125 L102.6514 15.5947 L102.5659 15.7129 L101.8374 16.2646 L101.0938 17.3359 L101.0332 19.9404 L101.3984 20.5332 L101.4238 20.7393 L101.2847 20.8936 L100.9448 21.04 L101.167 21.7188 L103.6343 24.8027 L105.2158 26.2822 L106.7417 26.9756 L106.7417 26.668 l106.7417 26.5654 106.8047 26.4727 106.9004 26.4355 c106.9961 26.3975 107.1055 26.4229 107.1753 26.498 C107.8062 27.1787 L107.8086 27.1816 L108.2441 27.667 L108.0581 27.834 L108.1245 27.5928 l109.2559 27.9053 110.4526 28.0762 111.6919 28.0762 c112.272 28.0762 112.8428 28.0361 113.4033 27.9648 C113.4355 28.2129 L113.1855 28.2129 L113.4355 28.2129 Lf114.6162 26.0996 m115.4648 26.123 L115.4648 25.5781 L114.8105 25.5781 L114.4951 25.8496 L114.6162 26.0996 LBb1 (Unnamed gradient 199) -0.000977 -0.00293 0 1 0.437988 0.758618 0.758618 -0.437988 -1570.6445 5646.4653 Bg0.437988 -0.758618 3.88051 2.24041 112.8994 25.1094 Xm3539.8184 -6131.1494 3.88051 2.24041 -3426.9189 6156.2588 Bc0.218994 -0.379309 3.88051 2.24041 112.8994 25.1094 Bm0.218994 -0.379309 3.88051 2.24041 113.1182 24.73 Bm3539.8184 -6131.1494 3.88051 2.24041 113.3369 24.3506 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k114.6162 26.0996 m114.623 25.8496 L115.2148 25.8662 L115.2148 25.8281 L114.9033 25.8281 L114.8047 25.9141 L114.8408 25.9902 L114.6162 26.0996 L114.623 25.8496 L114.6162 26.0996 L114.3906 26.209 L114.2695 25.959 l114.2207 25.8564 114.2461 25.7334 114.332 25.6602 C114.6475 25.3887 L114.8105 25.3281 L115.4648 25.3281 L115.6426 25.4014 L115.7148 25.5781 L115.7148 26.123 L115.6396 26.3027 L115.459 26.373 L114.6094 26.3496 l114.5156 26.3467 114.4316 26.293 114.3906 26.209 C114.6162 26.0996 Lf120.4746 22.6953 m120.8262 23.126 L121.542 22.582 L121.8105 23.0176 L121.8164 23.6768 l120.5059 25.2598 118.7813 26.5254 116.7939 27.334 C116.0723 27.3252 L116.084 26.8945 L117.4004 25.6631 L117.8066 25.373 L118.6064 25.373 L118.498 26.1563 L119.3828 25.124 L118.8613 24.5342 L119.0313 23.376 L119.7031 22.7461 L119.1348 22.2129 L119.7822 20.9707 L120.4385 20.9707 L120.9229 21.582 L120.4746 22.6953 LBb1 (Unnamed gradient 200) 0 -0.003906 0 1 3.84326 6.65672 6.65672 -3.84326 -77485.1016 -14059.0918 Bg3.84326 -6.65672 29.5327 17.0507 102.5566 19.5796 Xm31061.1992 -53799.5625 29.5327 17.0507 -30958.6426 53819.1406 Bc1.92163 -3.32836 29.5327 17.0507 102.5566 19.5796 Bm1.92163 -3.32836 29.5327 17.0507 104.478 16.2515 Bm31061.1992 -53799.5625 29.5327 17.0507 106.3999 12.9229 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k120.4746 22.6953 m120.6689 22.5371 L120.8672 22.7813 L121.3906 22.3828 L121.5879 22.3359 L121.7549 22.4512 L122.0225 22.8867 L122.0605 23.0156 L122.0664 23.6748 L122.0088 23.8359 l120.6719 25.4521 118.9131 26.7412 116.8887 27.5654 C116.791 27.584 L116.0693 27.5752 L115.8926 27.498 L115.8223 27.3184 L115.834 26.8877 L115.9131 26.7119 L117.2295 25.4805 L117.2549 25.46 L117.6602 25.1699 L117.8066 25.123 L118.6064 25.123 L118.7949 25.209 L118.8535 25.4072 L118.7451 26.1904 L118.498 26.1563 L118.3076 25.9932 L119.0518 25.127 L118.6738 24.7002 L118.6143 24.498 L118.7832 23.3398 L118.8604 23.1934 L119.3379 22.7461 L118.9639 22.3955 l118.8809 22.3184 118.8604 22.1973 118.9121 22.0977 C119.5605 20.8555 l119.6045 20.7725 119.6895 20.7207 119.7822 20.7207 C120.4385 20.7207 L120.6338 20.8154 L121.1191 21.4268 L121.1553 21.6758 L120.7061 22.7891 L120.4746 22.6953 L120.6689 22.5371 L120.4746 22.6953 L120.2432 22.6016 L120.6367 21.623 L120.3174 21.2207 L119.9346 21.2207 L119.4434 22.1602 L119.874 22.5635 L119.9531 22.7461 L119.874 22.9287 L119.2656 23.499 L119.126 24.4551 L119.5703 24.958 l119.6523 25.0518 119.6533 25.1924 119.5732 25.2871 C118.6875 26.3193 l118.6152 26.4033 118.4961 26.4297 118.3945 26.3838 c118.2939 26.3389 118.2354 26.2314 118.25 26.1221 C118.3193 25.623 L117.8857 25.623 L117.5596 25.8564 L116.3311 27.0059 L116.3291 27.0781 L116.7979 27.084 L116.7939 27.334 L116.7002 27.1025 l118.6494 26.3096 120.3408 25.0674 121.624 23.5176 C121.8164 23.6768 L121.5664 23.6787 L121.5605 23.0898 L121.4736 22.9482 L120.9775 23.3252 l120.8701 23.4063 120.7178 23.3887 120.6318 23.2842 C120.2813 22.8535 L120.2432 22.6016 L120.4746 22.6953 Lf123.8154 20.2031 m123.2031 21.4355 L122.8994 20.9443 L122.3066 21.1738 L121.918 21.7754 L120.5898 20.5332 L120.2803 19.5508 L120.5957 19.3691 L119.8828 18.2148 L120.002 16.7813 L120.002 15.1016 L121.5547 13.6504 L123.4102 14.9434 L124.0039 14.6943 L124.0039 13.252 L124.0635 13.2363 l124.3467 14.2266 124.5 15.2666 124.5 16.3408 c124.5 17.6934 124.2568 18.9912 123.8154 20.2031 CBb1 (Unnamed gradient 201) -0.000977 0.005859 0 1 4.23389 7.33331 7.33331 -4.23389 -86190.8516 -16312.043 Bg4.23389 -7.33331 34.4767 19.9051 102.9307 10.7998 Xm34218.3008 -59267.8125 34.4767 19.9051 -34115.3711 59278.6133 Bc2.11695 -3.66665 34.4767 19.9051 102.9307 10.7998 Bm2.11695 -3.66665 34.4767 19.9051 105.0479 7.13281 Bm34218.3008 -59267.8125 34.4767 19.9051 107.1646 3.4668 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k123.8154 20.2031 m124.04 20.3145 L123.4277 21.5469 l123.3867 21.6279 123.3066 21.6807 123.2148 21.6855 c123.124 21.6895 123.0391 21.6445 122.9912 21.5674 C122.7969 21.252 L122.4727 21.3779 L122.1279 21.9111 L121.9482 22.0234 L121.7471 21.958 L120.4189 20.7158 L120.3516 20.6084 L120.041 19.626 l120.0059 19.5137 120.0527 19.3926 120.1553 19.334 C120.248 19.2813 L119.6699 18.3457 L119.6348 18.1943 L119.752 16.7705 L119.752 15.1016 L119.8311 14.9189 L121.3828 13.4678 l121.4697 13.3877 121.6006 13.3779 121.6973 13.4453 C123.4404 14.6592 L123.7539 14.5283 L123.7539 13.252 l123.7539 13.1377 123.8301 13.0391 123.9404 13.0098 C124 12.9941 l124.1309 12.96 124.2666 13.0371 124.3037 13.168 c124.5928 14.1797 124.75 15.2432 124.75 16.3408 c124.75 17.7236 124.502 19.0508 124.0508 20.2891 C124.04 20.3145 L123.8154 20.2031 L123.5811 20.1172 l124.0117 18.9316 124.25 17.6631 124.25 16.3408 c124.25 15.29 124.0996 14.2734 123.8232 13.3047 C124.0635 13.2363 L124.127 13.4785 L124.0674 13.4941 L124.0039 13.252 L124.2539 13.252 L124.2539 14.6943 l124.2539 14.7949 124.1934 14.8857 124.1006 14.9248 C123.5068 15.1738 L123.2676 15.1484 L121.5771 13.9707 L120.252 15.21 L120.252 16.7813 L120.251 16.8018 L120.1396 18.1533 L120.8086 19.2383 L120.8379 19.4307 L120.7197 19.5859 L120.5781 19.667 L120.8086 20.3955 L121.8701 21.3887 L122.0967 21.0381 L122.2158 20.9404 L122.8096 20.7109 l122.9219 20.668 123.0488 20.7109 123.1123 20.8125 C123.1797 20.9219 L123.5918 20.0918 L123.8154 20.2031 L123.5811 20.1172 L123.8154 20.2031 Lf112.1182 10.7178 m112.1182 11.0664 L111.1641 11.9736 L109.9507 12.0195 L108.6011 13.2822 L108.2046 12.9121 L107.8003 13.2891 L107.3638 13.3516 L106.9292 13.5098 L106.7002 13.1387 L106.3774 13.1387 L106.1826 13.7285 L105.7788 13.6377 L105.2446 13.1846 L105.0835 12.9268 L105.0425 11.8457 L104.356 11.2021 L104.3398 10.7627 L104.6787 10.0518 L105.439 9.18945 L105.8115 8.38672 L107.2827 7.38867 L107.4438 6.22266 L107.5903 5.13281 L108.146 4.8252 l108.4072 4.75488 108.6719 4.69141 108.9404 4.63672 C109.4507 4.67773 L110.21 5.08789 L111.6577 5.32227 L112.377 5.99609 L112.8618 6.46484 L113.8809 6.54102 L114.7217 7.32813 L114.8906 8.10742 L115.7402 8.90137 L115.8691 9.70313 L111.8511 10.4678 L112.1182 10.7178 LBb1 (Unnamed gradient 202) 0 -0.00293 0 1 5.09814 8.83025 8.83025 -5.09814 -105471.2031 -21306.7266 Bg5.09814 -8.83025 43.5632 25.1512 85.77 2.0166 Xm41203.1953 -71366.1328 43.5632 25.1512 -41117.4258 71368.1484 Bc2.54907 -4.41512 43.5632 25.1512 85.77 2.0166 Bm2.54907 -4.41512 43.5632 25.1512 88.3188 -2.39844 Bm41203.1953 -71366.1328 43.5632 25.1512 90.8682 -6.81348 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k112.1182 10.7178 m112.3682 10.7178 L112.3682 11.0664 L112.2905 11.248 L111.3364 12.1553 L111.1733 12.2236 L110.0532 12.2656 L108.772 13.4648 l108.6758 13.5547 108.5264 13.5547 108.4307 13.4648 C108.2046 13.2539 L107.9707 13.4717 L107.8359 13.5361 L107.4248 13.5957 L107.0146 13.7451 l106.9033 13.7852 106.7788 13.7422 106.7163 13.6406 C106.5605 13.3887 L106.5581 13.3887 L106.4199 13.8066 l106.3794 13.9297 106.2534 14.001 106.1279 13.9727 C105.7241 13.8818 L105.6172 13.8281 L105.083 13.375 L105.0327 13.3174 L104.8716 13.0596 L104.8335 12.9365 L104.7964 11.958 L104.1851 11.3848 L104.106 11.2109 L104.0898 10.7715 L104.1143 10.6553 L104.4531 9.94434 L104.4912 9.88672 L105.2275 9.05176 L105.585 8.28125 L105.6714 8.17969 L107.0503 7.24414 L107.1963 6.18848 L107.1963 6.18945 L107.3428 5.09961 L107.4692 4.91406 L108.0249 4.60645 L108.0811 4.58398 l108.3467 4.5127 108.6162 4.44727 108.8906 4.3916 C108.9604 4.3877 L109.4707 4.42871 L109.5693 4.45801 L110.2915 4.84766 L111.6978 5.0752 L111.8286 5.13965 L112.5479 5.81348 L112.5508 5.81641 L112.9707 6.22266 L113.8994 6.29199 L114.0518 6.3584 L114.8926 7.14551 L114.9658 7.27539 L115.1191 7.97852 L115.9111 8.71875 L115.9883 8.8623 L116.1162 9.66406 l116.1367 9.79688 116.0479 9.92383 115.916 9.94824 C111.8979 10.7129 L111.8511 10.4678 L112.022 10.2852 L112.2891 10.5352 L112.3682 10.7178 L112.1182 10.7178 L111.9473 10.9004 L111.6802 10.6504 l111.6113 10.5859 111.585 10.4883 111.6108 10.3984 c111.6372 10.3076 111.7119 10.2402 111.8042 10.2227 C115.584 9.50293 L115.5068 9.02539 L114.7197 8.29004 L114.6475 8.16016 L114.4941 7.45703 L113.7744 6.78418 L112.8433 6.71387 L112.688 6.64453 L112.2041 6.17676 L111.5425 5.55664 L110.1699 5.33496 L110.0913 5.30762 L109.3779 4.92285 L108.9204 4.88574 L108.9404 4.63672 L108.9902 4.88184 l108.7275 4.93555 108.4678 4.99707 108.2109 5.06641 C108.146 4.8252 L108.2671 5.04395 L107.8213 5.29102 L107.6914 6.25586 L107.6914 6.25684 L107.5303 7.42285 L107.4229 7.5957 L106.0093 8.55469 L105.6655 9.29492 L105.6265 9.35449 L104.8892 10.1904 L104.5918 10.8145 L104.6021 11.0898 L105.2134 11.6631 L105.2925 11.8359 L105.3306 12.8506 L105.436 13.0195 L105.8936 13.4072 L106.0161 13.4346 L106.1401 13.0605 l106.1738 12.958 106.2695 12.8887 106.3774 12.8887 C106.7002 12.8887 L106.9131 13.0078 L107.0352 13.2051 L107.2783 13.1162 L107.3281 13.1045 L107.687 13.0527 L108.0342 12.7295 l108.1299 12.6396 108.2793 12.6396 108.375 12.7295 C108.6011 12.9404 L109.7798 11.8369 L109.9414 11.7695 L111.0601 11.7275 L111.8682 10.959 L111.8682 10.7178 L112.1182 10.7178 L111.9473 10.9004 L112.1182 10.7178 Lf104.1128 16.9824 m104.6953 16.9521 L105.8926 16.1807 L105.3423 16.0293 L104.9868 16.3623 L104.1938 16.7402 L104.1128 16.9824 LBb1 (Unnamed gradient 203) 0.000977 -0.00293 0 1 0.791992 1.37177 1.37177 -0.791992 -9473.0439 3607.0879 Bg0.791992 -1.37177 6.51892 3.7637 101.3218 15.3799 Xm6400.8765 -11086.6396 6.51892 3.7637 -6299.5547 11102.0195 Bc0.395996 -0.685885 6.51892 3.7637 101.3218 15.3799 Bm0.395996 -0.685885 6.51892 3.7637 101.7178 14.6943 Bm6400.8765 -11086.6396 6.51892 3.7637 102.1138 14.0078 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k104.1128 16.9824 m104.0996 16.7324 L104.6157 16.7061 L105.2871 16.2734 L105.2759 16.2705 L105.3423 16.0293 L105.5132 16.2119 L105.1577 16.5449 L105.0942 16.5879 L104.3975 16.9199 L104.3501 17.0615 L104.1128 16.9824 L104.0996 16.7324 L104.1128 16.9824 L103.8755 16.9033 L103.9565 16.6611 L104.0864 16.5146 L104.8442 16.1533 L105.1714 15.8467 L105.4087 15.7881 L105.959 15.9395 l106.0542 15.9658 106.1245 16.0449 106.1396 16.1426 c106.1548 16.2402 106.1108 16.3369 106.0278 16.3906 C104.8306 17.1621 L104.7085 17.2021 L104.126 17.2324 L103.9136 17.1338 L103.8755 16.9033 L104.1128 16.9824 Lf106.3604 15.8477 m107.1538 15.8477 L107.3472 15.5596 L106.6362 15.2109 L106.2314 15.4395 L106.3604 15.8477 LBb1 (Unnamed gradient 204) 0.001465 0 0 1 0.371582 0.643599 0.643599 -0.371582 -98.4971 6040.9902 Bg0.371582 -0.643599 3.46343 1.99961 104.7998 14.9463 Xm3003.1262 -5201.5679 3.46343 1.99961 -2898.3262 5216.5142 Bc0.185791 -0.321799 3.46343 1.99961 104.7998 14.9463 Bm0.185791 -0.321799 3.46343 1.99961 104.9854 14.624 Bm3003.1262 -5201.5679 3.46343 1.99961 105.1714 14.3027 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k106.3604 15.8477 m106.3604 15.5977 L107.0205 15.5977 L107.1396 15.4199 L107.3472 15.5596 L107.2373 15.7842 L106.6445 15.4932 L106.5308 15.5576 L106.5986 15.7725 L106.3604 15.8477 L106.3604 15.5977 L106.3604 15.8477 L106.1221 15.9229 L105.9932 15.5146 l105.9575 15.4014 106.0054 15.2803 106.1084 15.2217 C106.5132 14.9932 L106.7461 14.9863 L107.457 15.335 L107.5889 15.4951 L107.5547 15.6992 L107.3613 15.9873 L107.1538 16.0977 L106.3604 16.0977 l106.2515 16.0977 106.1548 16.0264 106.1221 15.9229 C106.3604 15.8477 Lf107.8647 15.3184 m108.1558 15.2422 L107.9614 15.0605 L107.6709 15.1055 L107.8647 15.3184 LBb1 (Unnamed gradient 205) 0 -0.011719 0 1 0.135742 0.235112 0.235112 -0.135742 5160.6099 7406.2598 Bg0.135742 -0.235112 1.36337 0.787144 107.1548 14.9131 Xm1097.0647 -1900.1715 1.36337 0.787144 -989.9102 1915.0845 Bc0.067871 -0.117556 1.36337 0.787144 107.1548 14.9131 Bm0.067871 -0.117556 1.36337 0.787144 107.2227 14.7959 Bm1097.0647 -1900.1715 1.36337 0.787144 107.2905 14.6777 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k107.8647 15.3184 m107.8013 15.0762 L108.0923 15 L108.1558 15.2422 L107.9849 15.4248 L107.8794 15.3262 L107.709 15.3525 L107.6709 15.1055 L107.856 14.9375 L108.0498 15.1504 L107.8647 15.3184 L107.8013 15.0762 L107.8647 15.3184 L107.6797 15.4863 L107.4858 15.2734 L107.4351 15.0225 l107.4658 14.9355 107.542 14.8721 107.6328 14.8584 C107.9233 14.8135 L108.1323 14.8779 L108.3267 15.0596 L108.3979 15.3037 L108.2192 15.4844 L107.9282 15.5605 l107.8379 15.584 107.7427 15.5557 107.6797 15.4863 C107.8647 15.3184 Lf117.3447 25.1582 m117.6729 25.1582 L117.9512 24.9082 L118.7402 24.3867 L118.8135 23.8984 L118.5225 23.8984 L118.3281 24.0801 L118.291 24.3291 L117.9648 24.6016 L117.5518 24.7598 L117.2852 24.9307 L117.3447 25.1582 LBb1 (Unnamed gradient 206) 0 0.009766 0 1 0.912598 1.58067 1.58067 -0.912598 -12148.7695 2901.1694 Bg0.912598 -1.58067 7.17862 4.14457 114.0645 23.2085 Xm7375.6406 -12775.0156 7.17862 4.14457 -7261.5762 12798.2246 Bc0.456299 -0.790335 7.17862 4.14457 114.0645 23.2085 Bm0.456299 -0.790335 7.17862 4.14457 114.5205 22.418 Bm7375.6406 -12775.0156 7.17862 4.14457 114.9775 21.6279 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k117.3447 25.1582 m117.3447 24.9082 L117.5771 24.9082 L117.7842 24.7227 L117.8135 24.6992 L118.5098 24.2393 L118.5234 24.1484 L118.5225 24.1484 L118.5225 23.8984 L118.6934 24.0811 L118.5625 24.2031 L118.5381 24.3662 L118.4512 24.5215 L118.124 24.7939 L118.0537 24.835 L117.665 24.9844 L117.5732 25.043 L117.5869 25.0938 L117.3447 25.1582 L117.3447 24.9082 L117.3447 25.1582 L117.1035 25.2227 L117.043 24.9951 l117.0146 24.8896 117.0576 24.7783 117.1494 24.7197 C117.417 24.5488 L117.4619 24.5264 L117.8359 24.3828 L118.0576 24.1982 L118.0811 24.043 L118.1572 23.8975 L118.3516 23.7158 L118.5225 23.6484 L118.8135 23.6484 L119.002 23.7354 L119.0605 23.9346 L118.9883 24.4229 L118.8779 24.5957 L118.1045 25.1064 L117.8398 25.3438 L117.6729 25.4082 L117.3447 25.4082 l117.2314 25.4082 117.1328 25.332 117.1035 25.2227 C117.3447 25.1582 Lf117.5518 24.3975 m117.8916 24.4199 L117.9648 24.2383 L118.1338 24.1484 L118.0186 23.96 L117.7246 23.8018 L117.7246 24.1367 L117.5518 24.2383 L117.5518 24.3975 LBb1 (Unnamed gradient 207) 0 -0.006836 0 1 0.306152 0.530271 0.530271 -0.306152 1371.3098 6411.0723 Bg0.306152 -0.530271 2.57782 1.48831 116.3604 23.7158 Xm2474.3179 -4285.646 2.57782 1.48831 -2357.9575 4309.3618 Bc0.153076 -0.265135 2.57782 1.48831 116.3604 23.7158 Bm0.153076 -0.265135 2.57782 1.48831 116.5137 23.4507 Bm2474.3179 -4285.646 2.57782 1.48831 116.666 23.1855 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k117.5518 24.3975 m117.5684 24.1484 L117.7275 24.1582 L117.7324 24.1455 L117.8477 24.0176 L118.0166 23.9277 L118.1338 24.1484 L117.9209 24.2793 L117.8398 24.1484 L117.6064 24.0215 L117.7246 23.8018 L117.9746 23.8018 L117.9746 24.1367 L117.8516 24.3525 L117.8018 24.3818 L117.8018 24.3975 L117.5518 24.3975 L117.5684 24.1484 L117.5518 24.3975 L117.3018 24.3975 L117.3018 24.2383 L117.4258 24.0225 L117.4746 23.9932 L117.4746 23.8018 L117.5977 23.5869 L117.8438 23.582 L118.1367 23.7402 L118.2314 23.8291 L118.3467 24.0176 L118.375 24.2139 L118.251 24.3691 L118.1621 24.416 L118.123 24.5127 l118.084 24.6133 117.9824 24.6768 117.875 24.6689 C117.5352 24.6465 l117.4033 24.6387 117.3018 24.5293 117.3018 24.3975 C117.5518 24.3975 Lf102.5 17.5 m102.5 18.5996 103.3999 19.5 104.5 19.5 C125.5 19.5 l126.5996 19.5 127.5 18.5996 127.5 17.5 C127.5 2.5 l127.5 1.40039 126.5996 0.5 125.5 0.5 C104.5 0.5 l103.3999 0.5 102.5 1.40039 102.5 2.5 C102.5 17.5 LBb1 (Unnamed gradient 208) 0 0.019531 0 1 13.7437 23.8047 23.8047 -13.7437 -298213.045 -71338.9688 Bg13.7437 -23.8047 121.4161 70.0999 47.313 -12.9619 Xm111076.6172 -192389.6406 121.4161 70.0999 -111029.3047 192376.6719 Bc13.7437 -23.8047 121.4161 70.0999 47.313 -12.9619 Bm111076.6172 -192389.6406 121.4161 70.0999 61.0566 -36.7666 Bcf0 BB0 0 0 0.5 k102.5 17.5 m103 17.5 l103.0015 18.3213 103.6782 18.998 104.5 19 C125.5 19 l126.3223 18.998 126.998 18.3213 127 17.5 C127 2.5 l126.998 1.67871 126.3223 1.00195 125.5 1 C104.5 1 l103.6782 1.00195 103.0015 1.67871 103 2.5 C103 17.5 L102.5 17.5 L102 17.5 L102 2.5 l102.002 1.12207 103.1216 0.001953 104.5 0 C104.5 0 L125.5 0 L125.5 0 l126.8779 0.001953 127.998 1.12207 128 2.5 C128 17.5 l127.998 18.8779 126.8779 19.998 125.5 20 C104.5 20 l103.1216 19.998 102.002 18.8779 102 17.5 C102.5 17.5 Lf125 3 m105 3 L105 17 L125 17 L125 3 LBb1 (Unnamed gradient 209) -0.000488 -0.000977 0 1 11.062 19.16 19.16 -11.062 -238427.362 -55820.0117 Bg11.062 -19.16 97.7018 56.408 60.8203 -8.97363 Xm89403.2813 -154851.4531 97.7018 56.408 -89342.4609 154842.4844 Bc11.062 -19.16 97.7018 56.408 60.8203 -8.97363 Bm89403.2813 -154851.4531 97.7018 56.408 71.8823 -28.1338 Bcf0 BB118 17 m112 17 L112 13 L118 13 L118 17 LBb1 (Unnamed gradient 210) -0.000488 -0.006836 0 1 3.23193 5.59787 5.59787 -3.23193 -63860.1484 -10511.5391 Bg3.23193 -5.59787 28.6242 16.5262 99.0566 9.5625 Xm26120.4414 -45241.9531 28.6242 16.5262 -26021.3848 45251.5156 Bc1.61597 -2.79893 28.6242 16.5262 99.0566 9.5625 Bm1.61597 -2.79893 28.6242 16.5262 100.6724 6.76367 Bm26120.4414 -45241.9531 28.6242 16.5262 102.2886 3.96484 Bcf0 BB122 8 m125 8 L125 12 L122 12 L122 8 LBb1 (Unnamed gradient 211) 0 -0.009766 0 1 2.48193 4.29883 4.29883 -2.48193 -47130.8203 -6166.2095 Bg2.48193 -4.29883 21.1775 12.2268 111.647 6.07715 Xm20058.9336 -34743.1016 21.1775 12.2268 -19947.2871 34749.1797 Bc1.24097 -2.14942 21.1775 12.2268 111.647 6.07715 Bm1.24097 -2.14942 21.1775 12.2268 112.8877 3.92773 Bm20058.9336 -34743.1016 21.1775 12.2268 114.1289 1.77832 Bcf0 BB119 17 m119 13 L125 13 L125 17 L119 17 LBb1 (Unnamed gradient 212) 0 -0.007813 0 1 3.23193 5.59787 5.59787 -3.23193 -63853.1484 -10511.5391 Bg3.23193 -5.59787 28.6242 16.5262 106.0591 9.55664 Xm26120.4453 -45241.9609 28.6242 16.5262 -26014.3867 45251.5156 Bc1.61597 -2.79893 28.6242 16.5262 106.0591 9.55664 Bm1.61597 -2.79893 28.6242 16.5262 107.6748 6.75781 Bm26120.4453 -45241.9609 28.6242 16.5262 109.291 3.95898 Bcf0 BB108 8 m114 8 L114 12 L108 12 L108 8 LBb1 (Unnamed gradient 213) -0.000977 -0.006836 0 1 3.23193 5.59787 5.59787 -3.23193 -63864.1484 -10506.5381 Bg3.23193 -5.59787 28.6238 16.526 95.0557 4.56445 Xm26120.4395 -45241.9531 28.6238 16.526 -26025.3828 45246.5156 Bc1.61597 -2.79893 28.6238 16.526 95.0557 4.56445 Bm1.61597 -2.79893 28.6238 16.526 96.6714 1.76563 Bm26120.4395 -45241.9531 28.6238 16.526 98.2876 -1.0332 Bcf0 BB112 3 m118 3 L118 7 L112 7 L112 3 LBb1 (Unnamed gradient 214) -0.000488 -0.006836 0 1.00049 3.23193 5.59787 5.59787 -3.23193 -63860.1484 -10501.5391 Bg3.23351 -5.6006 28.6238 16.526 99.0566 -0.4375 Xm26120.4434 -45241.957 28.6238 16.526 -26021.3867 45241.5195 Bc1.61675 -2.8003 28.6238 16.526 99.0566 -0.4375 Bm1.61675 -2.8003 28.6238 16.526 100.6733 -3.23828 Bm26120.4434 -45241.957 28.6238 16.526 102.29 -6.03809 Bcf0 BB119 3 m125 3 L125 7 L119 7 L119 3 LBb1 (Unnamed gradient 215) 0 -0.006836 0 1.00049 3.23193 5.59787 5.59787 -3.23193 -63853.1484 -10501.5391 Bg3.23351 -5.6006 28.6238 16.526 106.0586 -0.44043 Xm26120.4453 -45241.9609 28.6238 16.526 -26014.3867 45241.5195 Bc1.61675 -2.8003 28.6238 16.526 106.0586 -0.44043 Bm1.61675 -2.8003 28.6238 16.526 107.6753 -3.24121 Bm26120.4453 -45241.9609 28.6238 16.526 109.292 -6.04102 Bcf0 BB115.1309 8 m121 8 L121 12 L115.1309 12 L115.1309 8 LBb1 (Unnamed gradient 216) -0.000488 0.003906 0 1.00049 3.19922 5.54121 5.54121 -3.19922 -63127.7227 -10317.2148 Bg3.20078 -5.54392 28.2983 16.338 102.3159 4.60254 Xm25856.0938 -44784.0547 28.2983 16.338 -25753.7773 44788.6563 Bc1.60039 -2.77196 28.2983 16.338 102.3159 4.60254 Bm1.60039 -2.77196 28.2983 16.338 103.9165 1.83105 Bm25856.0938 -44784.0547 28.2983 16.338 105.5166 -0.941406 Bcf0 BB105 3 m110.79 3 L110.79 7 L105 7 L105 3 LBb1 (Unnamed gradient 217) 0.000977 0.003906 0 1 3.17969 5.50738 5.50738 -3.17969 -62702.457 -10199.1826 Bg3.17969 -5.50738 28.1046 16.2262 92.2524 -0.358398 Xm25698.2559 -44510.6484 28.1046 16.2262 -25606.0039 44510.2891 Bc1.58984 -2.75369 28.1046 16.2262 92.2524 -0.358398 Bm1.58984 -2.75369 28.1046 16.2262 93.8423 -3.1123 Bm25698.2559 -44510.6484 28.1046 16.2262 95.4321 -5.86621 Bcf0 BB111 17 m105 17 L105 13 L111 13 L111 17 LBb1 (Unnamed gradient 218) 0 -0.007813 0 1 3.23193 5.59787 5.59787 -3.23193 -63867.1484 -10511.5391 Bg3.23193 -5.59787 28.6235 16.5258 92.0601 9.55762 Xm26120.4453 -45241.9609 28.6235 16.5258 -26028.3848 45251.5195 Bc1.61597 -2.79893 28.6235 16.5258 92.0601 9.55762 Bm1.61597 -2.79893 28.6235 16.5258 93.6758 6.75879 Bm26120.4453 -45241.9609 28.6235 16.5258 95.292 3.95996 Bcf0 BB106.875 12 m105.125 12 L105.125 8 L106.875 8 L106.875 12 LBb1 (Unnamed gradient 219) -0.000488 -0.007813 0 1 2.16943 3.75757 3.75757 -2.16943 -40181.3047 -4357.7402 Bg2.16943 -3.75757 18.0746 10.4354 95.8857 6.64844 Xm17533.3398 -30368.6895 18.0746 10.4354 -17437.4531 30375.3379 Bc1.08472 -1.87878 18.0746 10.4354 95.8857 6.64844 Bm1.08472 -1.87878 18.0746 10.4354 96.9702 4.76953 Bm17533.3398 -30368.6895 18.0746 10.4354 98.0552 2.89063 Bcf0 BBULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF