%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (Nick La) ()%%Title: (2-02.eps)%%CreationDate: 1/6/10 3:42 PM%%Canvassize: 16383%%BoundingBox: 48 240 80 272%%HiResBoundingBox: 48 240 80 272%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_Cropmarks: 48 240 80 272%AI3_TemplateBox: 64.5 255.5 64.5 255.5%AI3_TileBox: -242 -140 370 652%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 32 32%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 1%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: 26 277 24.71 1893 1050 18 0 0 18 96 0 0%AI5_OpenViewLayers: 77%%PageOrigin:0 0%AI7_GridSettings: 4 4 4 4 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 128 8%%BeginData: 26378 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD35FFA8A8FD047D527D597D527D597D52FD047D7E7DA8A8FD64FF%A87E597D527D527D527D527D527D527D527D527D527D527D527D527D527D%7DA8FD5DFF7D7D537D527D537D527D537D527D537D527D537D527D537D52%7D537D527D537D527D537D59A8A8FD56FF7D7D527D527D527D527D527D52%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52%7DA8FD50FFA87D527D597D527D597D527D597D527D7DA87EA8A8FFA8FFA8%FFA8FFA8FFA8A8FD047D597D527D597D527D597D527D7DA8FD4CFF7E527D%527D527D527D527D527D7DA8A8FD15FFA8A97D7D527D527D527D527D527D%527D7DFD48FF7D7D537D527D537D527D537DA8FD1FFFA8A87D7D527D537D%527D537D52A8FD43FFA87E527D527D527D527D527D7EFD0BFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8A8537D527D527D52%7D527D7DFD40FFA87D597D527D597D527D7EFD2CFFA8597D597D527D597D%53A8FD3DFF597D527D527D527D7DA8FD28FFA9FFFFFFA9FFFFFF7E7D527D%527D527D527DA8FD39FFA8527D537D527D537DA8FD34FFA87D7D527D537D%527D7DFD36FFA87D527D527D527D52A8FD0AFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFA87D527D527D527D52FD34FF847D597D527D597D84FD3CFFA8%597D527D597D52A8FD31FF7D7D527D527D527DA8FD15FF7D7D522E272E27%2E272E272E052E052E28595384A8FFFFFFA9FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FF7D7D527D527D527DFD2FFF537D537D527D7DA8FD12FFA97D2E%522D2D2D512D512D512D512D512D512D512D2E062E062E28597DFD13FFA8%7D527D537D527DFD2CFFA8527D527D527D59FD0BFFA8FFFFFFA8FFA85927%2D2D2D262D2D2D26FD042D512D51FD042D262D2D2E062806280528062E53%A8FFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA87D527D527D527DA8FD2AFF59%7D527D597D7DFD10FFA8522E2D512D512D58517C7C8383AD83ADA7AD8251%2D512D512D52365B365A2F2F282E062E28537DFD10FFA8597D527D597DA8%FD27FFA8527D527D527DA8FD0FFF532E052E2D2D2D7C7CA782AD83A782AD%82A782A782A7FD042D272D2E5A365A365A365A2F2E272E272E287DA8FFA8%FFFFFFA8FFFFFFA8FFFFFFA8A8527D527D527DA8FD25FFA8537D527D537D%A8FD0DFFA95927512D512D512D83A7ADA7AD8383587C2D58588282AD82A7%7C7C2D512D58365A365B365A365B2D512D512D51272E53FD0FFF7D7D527D%537D7EFD23FFA8527D527D527DA8FD09FFA8FFFFFF522D2D2D262D2D2D26%7C83A782A78257262D2D2D262D2D5182A782838282512D26523636365A36%36302E2D51FD042D262D287DA8FFA8FFA8FFA8FFA8FFA8FFA8A8527D527D%527DA8FD22FF527D597D527DFD0DFF7D2D512D512D582D512D82A7ADA7AD%A7AD51512D512D512D512D5882AD82AD82A751512D52365B365A365B2D51%2DA7837C2D512D512753A8FD0DFF7D7D597D527DA8FD20FF527D527D527D%A8FD0BFFA8512D2D275158A782512D7C82AD83A782AD828357582D2D272D%2D2D277C8282828382822D2D2D58365A3636365A2D2D2D8382A751512D2D%272E53FFA8FFFFFFA8FFFFFFA8FFFFFF597D527D527DA8FD1EFF527D537D%527DFD0CFFA8512D515182A7ADA7AD7CA7A7AD83ADA7AD82AD83A782A77C%512D592D512DAD82A782A77C512D5135582E592E59365A2D512D7C83AD82%7C2D512D522EA9FD0CFF7D7D537D527DFD1DFF527D527D527DA8FD07FFA8%FFFFFF522D2D2D58AD83A782A782A782A782A782A782A782A7828382A72D%2D2E522D2D82838282572D2D2D2E2E2D2D262D2D3630592D2D267C82A782%2D2D2D262D277EA8FFA8FFA8FFA8FFA8FFA8FF527D527D527DFD1BFF7D7D%527D597DA8FD0BFF52512D5158ADA7ADA7ADA7ADA7AD58512D5858582D51%518382AD7C512D592D5151AD82A782512D512F5B2D512D512D51365B365A%2D512D7C82AD2D512D512D512D59FD0CFF7D7D527D597DFD19FF7D7D527D%527DA8FD0BFF2E2D272D58A782AD83A782AD82A7FD042D272D2D2D272D2D%58FD042D2F522D2D7C838258272D2F3636522D2D272D2DFD05362D2D2D51%512D2D2D272D2D2D2752A8FFA8FFAFFFA8FFAFFFA8AF527D527D52A8FD17%FFA87D527D537DA8FD0BFF28512D517CADA7AD83ADA7AD82822D512D582E%522D512D512D512D512D52355A35512D7C828357512D5A365A36582D522D%59365A365A36592D512D512D512D512D582D512D52A8FD0AFFA8537D527D%53FD17FF7D527D527D7DFD05FFA8FFFFFFA8FF282D26517CA782A782A782%A78258262D2D58365A2D2D26512D2D262D2D2D365A36362D2D2D5882582D%2E30363636303636363036363630362D2D262D2D2E2D352D2D517C2D2D26%2EA8FFA8FFA8FFA8FFA8FFA87E527D527D52FD15FFA8597D527D7DFD0BFF%2E512D5182ADA7ADA7AD83ADA7AD2D512D59365B35512D8282822D512D51%2D59365A365A2D512D582D512E5B365A365B365A365B365A365B36522D51%2D512D592D512D8282822D512D52A8FD0AFF7D527D597D7DFD14FF527D52%7D52FD0BFF282D2D2D7CAD83A782AD82A782A7827C272D2D5936522D5182%A7822D27512D2D2E5A363636592D2D272D2D35365A363630363636303636%3630362F2D272D2D2D272D2D58FD04822D2D2D2EA8FFA8FFA8FFA8FFA8FF%A87D527D527DA8FD12FF7D7D527D53A8FD0AFF532E2D517CAD83ADA7AD82%AD83AD82AD83822D512D512D5158A782AD575157582D52365B365A365A35%582E59365A365A365A365A3636365AFD04362D512D512D512D58FD06822D%512D52FD08FFA9FFA87D527D537DFD11FF7D7D527D527DFFFFA8FFFFFFA8%FFFFFF522E2D2D2DA782A782A782A782A782A782A7825826FD042DFD0782%512D2D2E305A36363036363630363636303636363036303630363036302E%2D2D26FD042D828282578257822D2D2D52A8FFA8FFA8FFA8FFA8FF7D7D52%7D52A8FD10FF7D597D527DFD0AFF7D2E2D512DADA7AD83ADA7AD82AD83AD%82AD82AD57512D5157A782A782AD828382AD51512D58365A365B365A365B%365A365B365A365B3636365B3636365B35512D512D512D51FD06825E822D%512D7EFD0AFF527D597D53FD0FFF7D527D527D7DFD09FFA828272D2DA782%AD82A782A782A782A7828382A78251272D2D828283FD08822D2D27523636%365A36363036363630363636303636363036363630362D2E2F352E2D2782%5E825782578257582D2D27A8A8FFA8FFA8FFA8FFA8A8527D527D7DFD0EFF%537D527D7DFD0AFF532D512D83A7AD82AD83AD82AD82A782AD82A782AD7C%572D7C828382A78282588258827C8251512D5A365A365A3636365A363636%5AFD10362D512D8282825782578257572D2E28FFFFFFA9FFFFFFA8FFA87D%527D537DFD0DFF7D7D527D52A8FFFFA8FFFFFFA8FFFF59272D2D7C82A782%A782A782A782A7828382A782828283FD0882572D262D2D2D512D2D2E3036%363630363636303630363036303630363036303630360E3630360E2E2D2D%2D825757262D2D57262D052852FFA8FFA8FFA8FFA8FF7E7D527D527DFD0C%FF7D597D527DFD09FFA827512D5883ADA7AD82AD83AD82AD82AD82AD82A7%82AD82A782AD828382AD82582D512D512D512D512D5A365A365B365A365B%3636365B3636365AFD0D36592D512D822D512D512D512D2E062EA8FD09FF%7D7D597D52FD0BFF7E527D527DA8FD09FF2E2D275182A782A782A782A782%8382A78282828382828283FD0882512D2D5A2F2D27FD042D363636303636%36303636363036363630363636303630360E3630360E362E2D2751572D27%2E2D2D272E0D280553A8FFA8FFA8FFA8FFA8A8527D527D7DFD0AFF7D7D52%7D7DFD09FF59512D5182AD83AD82AD82A782AD82A782AD82A782A7828382%A782828283828282582D512F5A2D512D512D5A365A3636365AFD16362F51%2D5157822D512E362E2E2F362F2E067EFFFFA8FFFFFFA8FFFF7D527D537D%FD09FF7D7D527D52A8FFFFA8FFFFFFA8FFA82D262D7CA782A7828382A782%83828382828283FD0B827C2D51FD042D2E352D2E2F363636303630363036%303630363036303630360E3630360E360E360D360E2E262D575D57572D2D%0D360E350D36062828FFA8FFA8FFA8FFA8FF7D7D527D52A8FD08FF7D597D%527DFD09FF582D5158AD82AD83AD82AD82AD82AD82A782AD82A782AD8283%82A7828282582D512D512D512D59365A365B365A365B3636365BFD16362F%512D57578257512D5936582D523636062E53FD09FF597D597D7DFD08FF52%7D527D7DFD09FF272D2DA782A782A7828382A78282828382828283FD0982%58272D2D2E272D2D2D303636363036363630363636303636363036363630%3630360E3630360E3630360E360E362E2D2D57575E2D2D2D2E2D2D272E0E%2E272EA8FFA8FFA8FFA8FFA87E527D527DA8FD06FF7D7D527D53FD09FF53%512D7C82AD82A782AD82A782AD828382A7828382838282828382822D582D%512D5A365A2F593636365AFD163630363636303636360E3636362D512D5E%2D512D512D512D512D352D512D7DFFFFA8FFFFFFA8FFA87D527D53A8FD06%FF7D527D527DFFFFA8FFFFFFA8FFFF2E262D7C8382A782828283FD10822D%2D262D2D363036363630363636303630363036303630363036303630360E%3630360E360E360D360E360D360E360D360E2E262D2D2D262D2D2D51A72D%2D262D2D2D27FFA8FFA8FFA8FFA8FF7D7D527D52FD06FF597D527DA8FD08%FF8427512D5158AD82AD82AD82A782AD82A782AD82838283FD04822D512D%582E5A365B365A365B365A365B3636365BFD1E3630522D512D512D5151AD%A7A751512D512D5159FD08FFA8527D597DA8FD04FF7D7D527D52FD09FF2E%28272D2D5182A782828283FD0D8258272D2D2EFD04363036363630363636%303636363036363630363636303630360E3630360E3630360E360E360E36%0E360E360E360D352F2E272D58A782AD83A7828382512752A8FFA8FFA8FF%A8FFA87D527D527EFD04FF7D527D537DFD08FFA82E062F2D5158A782AD82%8382A78283828382828283FD04822D512D59365A365A3636365AFD163630%363636303636360E3636360E3636360E3614360E362D5158ADA7AD83ADA7%AD82AD58512D83FFFFA8FFFFFFA8FF7D7D527D7DFD04FF527D527D7DFFA8%FFFFFFA8FFFF7D05282D2D2D83FD0E827C8282822D2D2D35303636363036%3036303630363036303630363036303630360E3630360D360E360D360E36%0D360E360D360E360D360E360D360E362E2D2DA782A782A782A782A782A7%2D2D2DFFA8FFA8FFA8FFA8A8527D527DFFFFFFA87D527D59FD09FF282E2E%512D8282A782AD828382AD82838283FD06822D512D58365B365A365B3636%365B3636365BFD1A36143636360E3636360E3614360E582D58A7ADA7AD83%AD83AD82AD82582D51FD06FFA8FFA87D527D59A8FFFF7E527D527DFD06FF%A9FFA828052F2D2D5783FD0E825E582D2D27593636303636363036363630%3636363036363630363636303630360E3630360E360E360E360E360E360E%360E360E360E360E360E360E362D2D2DA782A782A782A782A782A77C2D27%A7A8FFA8FFA8FFA8FF527D527D7DFFFF7D7D537D7DFD08FF7E062E36512D%8282A7828257512D587CFD0682572D512D5A365A3636365AFD1636303636%36303636360E3636360E3636360E3614360E3614360E36142E2D5158AD82%AD83A782AD82A782AD2D5152FFFFFFA8FFFFFFA884537D527DFFFF7D527D%52A8A8FFFFFFA8FFFFFF2E280636262D57828282572D262D2D2D262D2D58%57822D2D2D363636303630363036303630363036303630360E3630360E36%30360D360E360D360E360D360E360D360E360D360E360D360E360D360E14%0D362E2D268382A782A782838283828282572D2DA8FFA8FFA8FFA8FF7D7D%527D52FFFF527D597DA8FD08FF2F282F36512D8282AD7C512D582E512D51%2D512D5157512D59365A365B3636365B3636365AFD1A36143636360E3636%360E3614360E3614360E362F512D7C83AD82AD82AD82AD82A782AD58512D%FFFFFFA8FFFFFFA8AF597D527DFFA87D527D52FFA9FFFFFFA9FFFFFF052E%2F362D2D578282582D2D2F5A36352E592D2D272D2D2D2F36363630363636%303636363036363630363636303630360E3630360E360E360E360E360E36%0E360E360E360E360E360E360E360D360E140D2E2D5182A7828382A78282%8283FD04822D2D7DFFA8FFA8FFA8FFA87D527D52A8A8537D527DFD08FF7E%2E065A36522D58828251512D5A365A365A365A35512D512D59365AFD1636%30363636303636360E3636360E3636360E3614360E3614360E3614360E36%0E352D517CA782AD82A782AD828382A7828382512D7CA8FFFFFFA8FFFFFF%7D7D53FD047D527D7DFFFFFFA8FFFFFFA8590628305A2D2D51822D2D2652%36363036363630592D2D262D2F363036303630363036303630360E363036%0E3630360D360E360D360E360D360E360D360E360D360E360D360E140D36%0E140D360E140D142E2D2DA782838283FD0A822D2D2DFFA8FFA8FFA8FFA8%7D527D527D7D597D52A8FD08FF532E285B36522D5882512D58355A365B36%5A365B35512D512D59365BFD1E360E3636360E3636360E3614360E361436%0E3614360E3614352D5882AD82AD82A782AD828382AD828282582D52A8FF%FFFFA8FFFFFF7D7D597D7D527D527D7DFFFFFFA8FFFFFFA853062F365A2D%2D51822D2D2F5A36363036363630592D2D272D2F36303636363036363630%3630360E3630360E3630360E360E360E360E360E360E360E360E360E360E%360E360E140D360E140D360E140D362E2D2DA782828283FD0A82512D2DFF%A8FFA8FFA8FFA8A8527D527D7D527D53A8FD08FF282E2F5A36582D588257%2D58365A3636365A363636592E522FFD1336303636360E3636360E363636%0E3614360E3614360E3614360E360E360E360E360E360E360E352D5182AD%828382A782828283FD06822D51FFFFA8FFFFFFA8FFA87D527D59527D527D%A8FFA8FFFFFFA8FFA828052F36362D2D2D582D2D2E363036363630352D2D%262E2F3630363036303630360E3630360E360E360D360E360D360E360D36%0E360D360E360D360E360D360E140D360E140D360E140D140E140D140D14%0C2D2DFD0D825782572D26FFA8FFA8FFA8FFA8A8527D527D7D527D59FD09%FF062E2F5A365A2D512D582D512F522D512D592E512D512D512EFD1B360E%3636360E3614360E3614360E3614360E3614360E360E360E360E360E352D%5182AD828382AD82828283FD06822D51FFFFA8FFFFFFA8FFA87D527D5952%7D527DA8FFA8FFFFFFA8FFFF2805FD043659FD062D272D2D2D2E592D2D27%FD042D353636303630360E3630360E3630360E360E360E360E360E360E36%0E360E360E360E360D360E140D360E140D360E140D360E140D360E140D2D%2D7CFD0C825782572D27FFA8FFA8FFA8FFA8A8527D527D7D537D52FD09FF%062E2F5A365A36582D512D512D512D512D3636592E512D512D512D59FD06%3630363636303636360E3636360E3636360E3614360E3614360E3614360E%360E360E360E360E360E360E360E360E360E362D5158828283FD0A825E82%2D51A8FFFFFFA8FFFFFFA87D537D52527D527DA8FFA8FFA8FFA8FFA82806%2F303636362FFD042D825757262E303630362F2E26FD042DFD042E360E36%0D360E360D360E360D360E360D360E360D360E360D360E140D360E140D36%0E140D140E140D140D140D140D140D140D2D267CFD068257825E82578257%82572D2DFFA8FFA8FFA8FFA8A8527D527D7D597D52FD09FF282E2F5B365A%365B35512D5151582D512D5AFD0536582D522E582D512D512DFD0D360E36%36360E3614360E3614360E3614360E3614360E360E360E360E360E360E36%0E360E362D5158FD0D825D822D51A8FFFFFFA8FFFFFFA87D597D52527D52%7DA8FFFFFFA8FFFFFFA82E062F303636363036352D272D2D2D272D2D3530%36363630363036272D2D2D272D2E352F360E360E360E360E360E360E360E%360E360E360D360E140D360E140D360E140D360E140D360E140D360E140D%360E2D278282825E82828257825D8257825782572D2DFFA8FFA8FFA8FFA8%A8527D527D7D527D53A8FD08FF062E2F36365AFD0536522D5157572D512D%FD0836512D512D512D522D512E3636360E3636360E3614360E3614360E36%14360E360E360E360E360E360E360E360E360E360E360E360E360E362D51%57FD07825D825E8257825D582D51FFFFA8FFAFFFA8FFA87D527D53527D52%7DA8FFA8FFA8FFA8FFA828053530363036303630362F2D262D2D57262D2F%360E3630360D362E2D262D2E2F262D2D2E0D360E360D360E360D360E360D%360E140D360E140D360E140D140E140D140D140D140D140D140D140D140D%0E0D2D2D57578257825782578257822D512D572D2D27FFA8FFA8FFA8FFA8%A8527D527D7D527D59FD09FF062E2F36365B3636365B36362F522D512D51%2D59FD093659363630582D58303636360E3636360E3614360E3614360E36%14360E3614360E360E360E360E360E360E360E360E360E360E360E362E51%2D5882825E8282825D822D512D512D512D52FFFFA8FFFFFFA8FFA87D527D%59527D527DA8FFA8FFFFFFA8FFFF2E052F363630363636303636362F2E2D%2D272D2F360E3630360E360E360E360E360E360E360E360E360E360E360E%360E360D360E140D360E140D360E140D360E140D360E140D360E140D360E%140D360E140D362E2D27515782578257572D2D2D2EFD042D27FFA8FFA8FF%A8FFA8A8527D527D7D537D52A8FD08FF2E2E2FFD0B362F512D512D593636%30363636303636360E3636360E3636360E3614360E3614360E3614360E36%0E360E360E360E360E360E360E360E360E360E360E360E360E360E360E36%0E362E512D57588257582D512D350E362D512D52A8FFAFFFA8FFA8FF7D7D%537D53527D527D7DFFA8FFA8FFA8FFA853062E30363036303630360E3630%36FD042D2F360E360D360E360D360E360D360E360D360E360D360E140D36%0E140D360E140D140E140D140D140D140D140D140D140D140D140D140D0E%0D360D0E0D360D0E0D362D2D2651572D262D2D2F0D300D2D262D2EFFA8FF%A8FFA8FFA87D527D527D7E597D5284FD08FF532E06FD0C36592D512D59FD%0536592D512E36143636360E3636360E3614360E3614360E3614360E3614%360E360E360E360E360E360E360E360E360E360E360E360E360E360E360E%360E362E512D512D512E360E360E362D512D59A8FFFFFFA8FFFFFF7D7D59%FD047D527D52FFFFFFA8FFFFFFA8A806282F363636303630360E3630360E%352D2E0E360E360D2E2D2D272D2E2D2D2E2E350E360E360E360E140D360E%140D360E140D360E140D360E140D360E140D360E140D360E140D360D140D%360D0E0D360D0E0D360D0E0C2D2D2D0C360D0E0D360D2D272D7DFFA8FFA8%FFA8FFA87D527D527EA8527D537DA8FD07FFA82E06FD0D36303636360E36%36522D5151512D512D512D512D2E2D512E360E360E360E360E360E360E36%0E360E360E360E360E360E360E360E360E360E360E360E360E360E360D36%0E360D360E360D350D360D360E360D362D5127FFA8FFA8FFA8FFA8FF537D%527DA8A87D527D52A8A8FFA8FFA8FFA8FF28280C360E3630360E360E360D%360E360D360E360D2E2D2D51AD512D262D5151272D2D2D262D2D360D360E%140D140E140D140D140D140D140D140D140D140D0E0D140D0E0D140D0E0D%360D0E0D360D0E0D360D0E0D300D0E0D300D0E0D300D0E0D2D272EA8FFA8%FFA8FFA8FF7E7D527D52FFFF527D597D7DFD08FF59282FFD12362D5151AD%A7A7587C7CADA7AD51512D582D512D3614360E360E360E360E360E360E36%0E360E360E360E360E360E360E360E360E360E360E360E360E360E360E36%0E360E360E360E360E360D36282E52FFFFFFA8FFFFFFA8A8597D527DFFFF%7D527D527DA8FFFFFFA8FFAFFF592E06360E3630360E3630360E360E360E%360E360E2E2D5882AD83A782AD82A782A77C8282582D2D2D360E140D360E%140D360E140D360E140D360E140D360E140D360D140D360D0E0D360D0E0D%360D0E0D360D0E0D360D0E0D360D0E0D360D0E0D2E067DA8FFA8FFA8FFA8%FF7D7D527D52FFFF7D7D527D7DFD09FF062E2F3630363636303636360E36%36360E3636362D5158AD83ADA7AD82AD83AD82AD83A7827C2D512D352F36%0E360E360E360E360E360E360E360E360E360E360E360E360E360E360D36%0E360D360E360D360E360D360E360D360E360D360E2F062EA8FFA8FFA8FF%A8FFA87D527D5384FFFFA8527D527DA8FFA8FFA8FFA8FFA82E052F0E360D%360E360D360E360D360E360D360E2D268282A782A782A782A782A782A782%83827C2D2D262D2D2D262E0D140D140D140D140D0E0D140D0E0D140D0E0D%140D0E0D360D0E0D360D0E0D300D0E0D300D0E0D300D0E0D300D0E0D3006%2828FFA8FFA8FFA8FFA8A8527D527DA8FFFFFF7D527D59A8FD08FF592E28%FD0D360E3636352D517CAD83ADA7AD82AD83AD82AD82AD82AD827C2D512D%512D512D520D360E360E360E360E360E360E360E360E360E360E360E360E%360E360E360E360E360E360E360E360D360E360D360D2E067DA9FFA8FFA9%FFA8FFA87D527D59FD04FF537D527D7DFFA8FFAFFFA8FFA8A8052E2F360E%360E360E360E360E360E360E2E2D2D2DA782A782A782A782A782A782A782%8382A7FD0482587CFD042D0D360E140D360E140D360D0E0D360D0E0D360D%0E0D360D0E0D360D0E0D360D0E0D360D0E0D360D0E0D300D0E0D2F06287E%FFA8FFA8FFA8FFA87D527D527DFD04FFA8537D527DFD09FF53062F36360E%3636360E3636360E3614342D512DA782AD83AD82AD83A782AD82A782AD82%A782AD828382A7828251512D2E0D360E360E360E360E360E360E360E360D%360E360D360E360D360E360D360E360D360E360D360E360D360E36062E2E%FFA8FFA8FFA8FFA8FF527D537D7DFD04FFA87D527D52A8A8FFA8FFA8FFA8%FF7D28052F0E360D360E360D360E360D362D2D2DA782A782A782A782A782%8382A782828283FD0A82512D2D2E0D360D0E0D140D0E0D140D0E0D360D0E%0D360D0E0D300D0E0D300D0E0D300D0E0D300D0E0D300D0E0D300D28057E%A8FFA8FFA8FFA8FF7D7D527D52FD06FF7D7D527D7DFD09FF282E2E361436%36360E3636360E3614522D7CA7AD82AD83AD82AD82AD82AD82A782AD82A7%82AD828382AD828282832D512E360E360E360E360E360E360E360E360E36%0E360E360E360E360E360D360E360D360E360D360E360D360E2F062FA9FF%A8FFA8FFA8FFA87D527D597DFD06FFA8527D527DA8FFA8FFA8FFA8FFA87D%052E0D360E360E360E360E360E362E2D2DA782A782A7828382A7828382A7%82828283FD0A82512D2D2E2E350D0E0D360D0E0D360D0E0D360D0E0D360D%0E0D360D0E0D360D0E0D300D0E0D300D0E0D300D0E0D30062853FFA8FFA8%FFA8FFA8A8527D527D7DFD06FFA87D537D52A8FD06FFA9FFA82E062F3636%0E3614360E3614360E362D5158AD82A782AD82A782AD82A782A7828382A7%82828283FD0582582D512D512D512D2E2E352F360D360E360D360E360D36%0E360D360E360D360E360D360E360D360E360D360E30062E28AFA8FFA8FF%A8FFA8FF7D7D537D52FD08FF527D527D52FFA8FFA8FFA8FFA8FF53280530%0E360D360E360D360E140D2E2D2D7CA78283828382828283FD0E82588282%582D572D2D262D2D2D262D2D2E2E2F0D0E0D300D0E0D300D0E0D300D0E0D%300D0E0D300D0E0D300D0E0D300D280559A8FFA8FFA8FFA8FFA87D527D52%7DFD08FFA8597D527DA8FD09FF282E28360E3614360E3614360E362F512D%5882AD82AD82A782AD82A782AD828382AD82828283FD0A825E8257582D51%2D512D512D512D360E360E360E360D360E360D360E360D360E360D360E36%0D360E2F062FA8FFA8FFA8FFA8FFA8A8527D597DA8FD09FF7D527D527DA8%FFA8FFA8FFA8FFA87D052E0D360E360E360D360E140D362E2D2751828282%8382828283FD0E8257825E8257825D825782578257585157FD042D2E360D%0E0D360D0E0D300D0E0D300D0E0D300D0E0D300D0E0D2F062853FFA8FFA8%FFA8FFA8FF597D527D52FD0AFF7D7D537D52A8FFFFA9FFFFFFA8FFFF5306%2E0E360E360E360E360E360E362E512D5882A782A78283828382828283FD%0E825D825E8257825D8257825D8257512D2F0D360E360D360E360D360E36%0D360E300D360E300D360D30062E2EFFA8FFA8FFA8FFA8FF7E7D537D52A8%FD0BFF527D527D52FFA8FFA8FFA8FFA8FF7E28052F0E140D360E140D140E%140D142D2D26FD0F8257825E825782578257825782578257825782575E57%5E5757262D0C0E0D300D0E0D300D0E0D300D0E0D300D0E0D300D0E0D3006%2805A8A8FFA8FFA8FFA8FFA87D527D527DA8FD0BFFA8597D527DA8FD09FF%532E282F0E3614360E360E360E360E362D5151A782AD828382A782828283%FD0A825E8282825D825E8257825D8257825D822D512D360D360E360D360E%360D360E360D360E360D360E360D360D2E067DA8FFA8FFA8FFA8FFA8A852%7D597D7DFD0CFFA87D527D527DA8FFA8FFA8FFA8FFA8FF282E062F0D360E%140D360E140D360E2E272D58FD0D8257825E825782578257825782578257%5E5782575D575E2D2D272F0D0E0D300D0E0D300D0E0D300D0E0D300D0E0D%300D0E0D2E062EA8FFA8FFA8FFA8FFA8FF597D527D52FD0EFF7D7D537D52%A8FFFFA8FFFFFFA8FFFFA8282E06360E360E360E360E360E360E512D5157%828283FD0A825E8282825D825E8257825D8257825D825782575E2D512D2F%0D360E360D360E360D360E300D360E300D360D300D360D2E062EA8FFA8FF%A8FFA8FFA8FF7D7D537D52A8FD0FFF527D527D52FFA8FFA8FFA8FFA8FFA8%7D052806140D140D140D140D140D140C2D262D2D827C82828257825E8257%825782578257825782575E5782575D575E575D575D2D2D262F0D0E0D300D%0E0D300D0E0D300D0E0D300D0E0D0E0D0E0D2E062859FFA8FFA8FFA8FFA8%FFA87D527D527DA8FD0FFFA8597D527D7DFD0AFF59282E0C360E360E360E%360E360E360D582D512D7CFD0A825E8282825D825E8257825D8257825D82%578257512D580E360D360E360D360E360D360E360D360E360D360E360D2F%282E53FFA8FFA8FFA8FFA8FFA87D527D597DA8FD11FF7D527D527D7DFFA8%FFA8FFA8FFA8FFA85306280C360E140D360E140D360E140D2F2D2D275782%8257825E8257825782578257825782575E5782575D575E575D575E2D2D0C%300D0E0D300D0E0D300D0E0D300D0E0D300D0E0D300D2F052E2EFFA8FFA8%FFA8FFA8FFA8A8527D527D59FD12FFA87D537D527DA8FFA8FFFFFFA8FFFF%FFA853062E0D360E360E360E360E360E360E362D512D8282825E8282825D%825E8257825D8257825D825782575E5782575E2D512D2F0D360E360D360E%300D360D300D360D300D360D300D2F062E28FFA8FFA8FFA8FFA8FFA8A852%7D537D52FD14FF7D7D527D527DA8FFA8FFA8FFA8FFA8FFA82E062806140D%140D140D0E0D360D0E0D142D2D2D825782578257825782575E5782575D57%5E575D575D575D575D2D2D262E0D0E0D300D0E0D300D0E0D300D0E0D0E0D%0E0D0E0D0D052828A8A8FFA8FFA8FFA8FFA8FF597D527D527DFD15FF7D7D%527D59A8FD0AFFA82F062E0C360E360E360E360E360E360E522D5882825E%825E825D825D8257825D8257825D825782575E57582D512D520E360D360E%360D360E360D360E360D360E360D360D2F062E2EAFA8FFA8FFA8FFA8FFA8%FF7D7D527D597DFD17FF527D527D52A8A8FFA8FFA8FFA8FFA8FFA82E052E%060E0D360E140D360D0E0D362E2D2D825782578257825782575E5782575D%575E575DFD042D272D2D2E0D300D0E0D300D0E0D300D0E0D300D0E0D300D%0E0D2F062828A9A8FFA8FFA8FFA8FFA8FF7D7D527D527DA8FD17FFA8537D%527D53A9A8FFFFFFA8FFFFFFA8FFA853062E06300E360E360E360E360D35%2D5157825E8257825D82578257825782575E575E2D512D512D512D2E0E36%0D360E300D360D300D360D300D360D300D360D2E062E52A9A8FFA8FFA8FF%A8FFA8FFA87D527D537D7EFD19FF7D527D527D52A8A8FFA8FFA8FFA8FFA8%FFA8530528062F0D360D0E0D360D0E0C2D2D825782575E5782575D575E57%5D575D575D2D2D2D2E0C2F0D0E0D300D0E0D300D0E0D300D0E0D0E0D0E0D%0E0D0E062806282EFFA8FFA8FFA8FFA8FFA8AFA87D527D527D7DFD1BFF7D%527D597D7DFFFFFFA8FFFFFFA8FFFFFFA884282E062F0E360E360E360E35%2D5157825D8257825D82578257825782575E2D512D2E0D360E360D360E36%0D360E360D360E360D360E360D360D30062E282E7DFFA8FFA8FFA8FFA8FF%A8FFA87D597D527D7DFD1DFF7D527D527D59FFA8FFA8FFA8FFA8FFA8FFA8%A82828052E0D0E0D360D0E0D2D2D575782575D575E575D575E575D57572D%2D272E0D0E0D300D0E0D300D0E0D300D0E0D300D0E0D300D0E0D2F062805%2E84FFA8FFA8FFA8FFA8FFA8FFA87D527D527D52FD1EFFA87D527D537D7D%FFFFFFA8FFFFFFA8FFFFFFA8FF532E062E06300D360E362D515782578257%82578257572D572D512D512D2E0D360E300D360E300D360D300D360D300D%360D300D360D2E062E0659A8FFA8FFA8FFA8FFA8FFA8FFA87D537D527D53%FD20FFA87D527D527D52FFA8FFA8FFA8FFA8FFA8FFA8FF7D2E0528062E0D%360D2E262D2D57575E575DFD042D262D2D2D272E0D0E0D300D0E0D300D0E%0D300D0E0D0E0D0E0D0E0D0D0628062828A8A8FFA8FFA8AFA8FFA8AFA8FF%A87D527D527D52A8FD21FFA87D597D527D7DFFA8FFFFFFA8FFFFFFA8FFFF%FFA87E282E062E0C2F2F522D512D512D572D512D512D352E350D360E360D%360E360D360E360D360E360D360E360D360D2F062E282E59FFA8FFA8FFA8%FFA8FFA8FFA8FFA87D527D597D52FD24FF7D7D527D527D52A8A8FFA8FFA8%FFA8FFA8FFA8FFA8AF5328052E062E062E2D2D272D2D2D272E0D0E0D300D%0E0D300D0E0D300D0E0D300D0E0D300D0E0D300D2F062E06280659A8FFA8%FFA8FFA8FFA8FFA8FFA8FFA87D527D527D52A8FD25FFA87D537D527D53A8%A8FFFFFFA8FFFFFFA8FFFFFFA8FFA87D282E062E062F2F2F2E2E2E2F0D36%0E360D360E300D360E300D360D300D360D300D360D2F062E062E062E59A9%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA87D527D537D52A8FD27FFA87D527D52%7D527DA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF595306280528062E062F0D%0E0D300D0E0D300D0E0D300D0E0D300D0E0D300D0D0628062805282E7DA8%FFA8FFA8FFA8AFA8FFA8AFA8FFA8AF7D7D527D527D52A8FD29FFA87D527D%597D527DA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA85353282E062E282E%062F0D2F0D300D2F0D300D2F0D2F0D2F062F282E062E282E287DA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8A87D7D597D527D7DFD2DFF7D527D527D52%7D7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A95953282E0628052E06%28052E0628052E0628052E0628052E062E2E7DA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8A8527D527D527D52FD2FFF7D527D537D527D7DFFA8FF%AFFFA8FFAFFFA8FFA8FFA8FFA8FFA8FFA8FFA8A853532E53062E062E062E%062E062E285353597DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A87D527D537D527D7DFD31FFA8527D527D527D5284A8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8AFA8FFA8AFA8FFA8A87D7D527D527D527D7D%FD34FF7D7D527D597D527DA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA9FFA8%FFA9FFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8A87D7D597D527D597DA8FD36FF7D7D527D527D527D59%A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7D7D527D527D52%7D5284FD39FFA87D527D537D527D537D7EFFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8A87D7D527D537D527D7DFD3DFFA8527D527D527D527D5284A8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8AFA8FFA8AFA8A87D7D527D527D527D527D7DFD40FF7D7D52%7D597D527D597D7DA8A8FFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF847D597D527D597D527D59A8FD%44FF7D527D527D527D527D527D7DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87D7D527D527D527D527D527D7D%FD48FF7D7D537D527D537D527D537D52847DA8A8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8A87D7D537D527D537D527D537D52A8FD4CFF%A8537D527D527D527D527D527D527D527D7D847DA8A8A87EA8A8A87EA8A8%A87D7E7D7D527D527D527D527D527D527D527D7DFD50FFA8A87D7D527D59%7D527D597D527D597D527D597D527D597D527D597D527D597D527D597D52%7D597D527D597D7DFD56FFA87E527D527D527D527D527D527D527D527D52%7D527D527D527D527D527D527D527D527D527D7DFD5DFFA87D7D527D537D%527D537D527D537D527D537D527D537D527D537D527D7D84A8FD64FFA8A8%7D7D527D527D527D527D527D527D527D527D7D84A8FD34FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
userdict /lv1Fix true putuserdict /_contoneDevice true put%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--37 Bn%AI5_BeginGradient: (Unnamed gradient 1)(Unnamed gradient 1) 0 2 Bd[<666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A>0 %_Br[0.1 0 50 100 %_BS%_0.1 0 50 100 Bs0.4 0 50 0 %_BS%_0.4 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 10)(Unnamed gradient 10) 0 2 Bd[<E6E5E5E5E4E4E3E3E2E2E1E1E0E0DFDEDEDDDDDCDBDBDAD9D9D8D8D7D6D6D5D4D3D3D2D1D1D0CFCFCECDCCCCCBCAC9C9C8C7C6C6C5C4C3C3C2C1C0BFBFBEBDBCBBBBBAB9B8B7B6B6B5B4B3B2B2B1B0AFAEADACACABAAA9A8A7A6A6A5A4A3A2A1A09F9F9E9D9C9B9A99989796969594939291908F8E8D8C8C8B8A898887868584838281807F7E7D7C7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59>0 %_Br[0.35 0 50 100 %_BS%_0.35 0 50 100 Bs0.9 0 56.7568 59.3407 %_BS%_0.9 0 56.7568 59.3407 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 11)(Unnamed gradient 11) 0 2 Bd[<000000010101010202030303040405050506060707080809090A0A0B0C0C0D0D0E0E0F101011111213131414151616171818191A1A1B1C1C1D1E1F1F202121222324242526262728292A2A2B2C2D2D2E2F303031323334343536373839393A3B3C3D3E3E3F40414243434445464748494A4A4B4C4D4E4F50515252535455565758595A5B5C5D5E5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C><00000000000000010101010101010202020202020203030303030304040404040505050505060606060607070707070808080808090909090A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0F0F0F101010101111111112121212131313141414141515151516161617171717181818191919191A1A1A1B1B1B1C1C1C1C1D1D1D1E1E1E1F1F1F202020202121212222222323232424242525252626262727272828282929>0<0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0A09090909090909090909090909080808080808080808080808070707070707070707070707060606060606060606060606050505050505050505050504040404040404040404030303030303030303030302020202020202020202010101010101010101010000000000>1 %_Br[0.484375 0.160156 0 0 1 50 100 %_BS%_0.484375 0.160156 0 0 1 50 100 Bs0.95 0 59.5506 0 %_BS%_0.95 0 59.5506 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 12)(Unnamed gradient 12) 0 3 Bd[<C6C7C7C8C8C8C9C9CACACACBCBCCCCCDCDCDCECECFCFD0D0D0D1D1D2D2D3D3D3D4D4D5D5><48494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667696A6B6C>001 %_Br<292929292A2A2A2B2B2B2C2C2C2D2D2D2E2E2F2F30303131313232333334353536363737383839393A3B3B3C3C3D3D3E3F3F4041414242434444454646474848494A4A4B4C4C4D4E4E4F50515152535354555656575859595A5B5C5C5D5E5F5F6061626263646566666768696A6A6B6C6D6E6E6F7071727273747576777778797A7B7C7D7D7E7F80818283838485868788898A8B8B8C8D8E8F90919293949495969798999A9B9C9D9E9F9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6><0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F101010101010111111111111121212121213131313131414141414151515151616161616171717171818181819191919191A1A1A1A1B1B1B1B1C1C1C1D1D1D1D1E1E1E1E1F1F1F1F202020212121212222222323232324242425252525262626272727272828282929292A2A2A2B2B2B2B2C2C2C2D2D2D2E2E2E2F2F2F303030313131313232323333333434343535353636363737373838383939393A3A3B3B3B3C3C3C3D3D3D3E3E3E3F3F3F4040404141424242434343444444454546464647474748>001 %_Br[0.835938 0.421875 0 0 1 50 100 %_BS%_0.835938 0.421875 0 0 1 50 100 Bs0.777344 0.28125 0 0 1 50 58.427 %_BS%_0.777344 0.28125 0 0 1 50 58.427 Bs0.160156 0.054688 0 0 1 59.5506 0 %_BS%_0.160156 0.054688 0 0 1 59.5506 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 13)(Unnamed gradient 13) 0 3 Bd[<5B5B5C5D5E5E5F606161626364646566676868696A6B6B6C6D6E6E6F707171727374747576777778797A7A7B7C7D7D7E7F808081828383848586878788898A8A8B8C8D8D8E8F90909192939394959696><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<313132333434353636373838393A3A3B3C3C3D3E3E3F4040414242434444454646474848494A4A4B4C4C4D4E4E4F5051515253535455555657575859595A5B>0<7172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.589844 0.042969 1 0 1 50 100 %_BS%_0.589844 0.042969 1 0 1 50 100 Bs0.355469 0 0.6875 0 1 50 50 %_BS%_0.355469 0 0.6875 0 1 50 50 Bs0.191406 0 0.441406 0 1 50 0 %_BS%_0.191406 0 0.441406 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 14)(Unnamed gradient 14) 1 3 Bd[<292929292A2A2A2B2B2B2C2C2C2D2D2D2E2E2F2F30303131313232333334353536363737383839393A3B3B3C3C3D3D3E3F3F4041414242434444454646474848494A4A4B4C4C4D4E4E4F50515152535354555656575859595A5B5C5C5D5E5F5F6061626263646566666768696A6A6B6C6D6E6E6F7071727273747576777778797A7B7C7D7D7E7F80818283838485868788898A8B8B8C8D8E8F90919293949495969798999A9B9C9D9E9F9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6><0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F101010101010111111111111121212121213131313131414141414151515151616161616171717171818181819191919191A1A1A1A1B1B1B1B1C1C1C1D1D1D1D1E1E1E1E1F1F1F1F202020212121212222222323232324242425252525262626272727272828282929292A2A2A2B2B2B2B2C2C2C2D2D2D2E2E2E2F2F2F303030313131313232323333333434343535353636363737373838383939393A3A3B3B3B3C3C3C3D3D3D3E3E3E3F3F3F4040404141424242434343444444454546464647474748>001 %_Br<C6C7C7C8C8C8C9C9CACACACBCBCCCCCDCDCDCECECFCFD0D0D0D1D1D2D2D3D3D3D4D4D5D5><48494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667696A6B6C>001 %_Br[0.160156 0.054688 0 0 1 59.5506 0 %_BS%_0.160156 0.054688 0 0 1 59.5506 0 Bs0.777344 0.28125 0 0 1 50 58.427 %_BS%_0.777344 0.28125 0 0 1 50 58.427 Bs0.835938 0.421875 0 0 1 50 100 %_BS%_0.835938 0.421875 0 0 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 15)(Unnamed gradient 15) 0 3 Bd[<0102030405060708090A0B0C0D0E0F1011121415161718191A1B1C1D1E1F20><AAABABACACADAEAEAFAFB0B0B1B1B2B2B3B3B4B4B5B5B6B7B7B8B8B9B9BABA><FBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9><00000000010101010101020202020202030303030303040404040404050505>1 %_Br<0000000000000000000000000000000000000000000000000000000000000000000101010101010101010101010101010101010101010101010101010101010101><8080818282838484858686878888898A8A8B8C8C8D8E8E8F9090919292939494959696979898999A9A9B9C9C9D9E9E9FA0A0A1A2A2A3A4A4A5A6A6A7A8A8A9AAAA><BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFB>01 %_Br[0.125 0.730469 0.976563 0.019531 1 50 100 %_BS%_0.125 0.730469 0.976563 0.019531 1 50 100 Bs0.003906 0.667969 0.984375 0 1 50 50 %_BS%_0.003906 0.667969 0.984375 0 1 50 50 Bs0 0.5 0.730469 0 1 50 0 %_BS%_0 0.5 0.730469 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 16)(Unnamed gradient 16) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6>0 %_Br[0.9 0 50 100 %_BS%_0.9 0 50 100 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 17)(Unnamed gradient 17) 0 3 Bd[<C6C7C7C8C8C8C9C9CACACACBCBCCCCCDCDCDCECECFCFD0D0D0D1D1D2D2D3D3D3D4D4D5D5><48494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667696A6B6C>001 %_Br<8F90909091919192929393949495969697979899999A9B9B9C9D9D9E9FA0A0A1A2A3A4A4A5A6A7A8A8A9AAABACADAEAEAFB0B1B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C1C2C3C4C5C6><2F2F2F2F2F303030303031313131323232323333333434343535353636363737373838383939393A3A3B3B3B3C3C3C3D3D3E3E3F3F3F40404141414242434344444545454646474748>001 %_Br[0.835938 0.421875 0 0 1 50 100 %_BS%_0.835938 0.421875 0 0 1 50 100 Bs0.777344 0.28125 0 0 1 50 58.427 %_BS%_0.777344 0.28125 0 0 1 50 58.427 Bs0.5625 0.183594 0 0 1 59.5506 0 %_BS%_0.5625 0.183594 0 0 1 59.5506 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 2)(Unnamed gradient 2) 0 3 Bd[<2F2F3030313131323233333434343535363636373738383839393A3A3A3B3B3C3C3C3D3D3D3E3E><171717181818181919191A1A1A1A1B1B1B1B1C1C1C1C1C1D1D1D1D1E1E1E1E1F1F1F1F1F202020><6465666768696A6B6C6D6E6F70717273747576767778797A7B7C7D7E7F80808182838484858686>01 %_Br<1A1A1B1B1C1C1D1D1D1E1E1F1F2020202121222223232324242525262626272728282829292A2A2B2B2B2C2C2D2D2D2E2E2E2F><0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F1010101011111111111212121213131313131414141414151515151616161616171717><333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061626364>01 %_Br[0.242188 0.125 0.527344 0 1 50 100 %_BS%_0.242188 0.125 0.527344 0 1 50 100 Bs0.183594 0.089844 0.390625 0 1 46.0674 50 %_BS%_0.183594 0.089844 0.390625 0 1 46.0674 50 Bs0.101563 0.046875 0.199219 0 1 48.3146 0 %_BS%_0.101563 0.046875 0.199219 0 1 48.3146 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 20)(Unnamed gradient 20) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6>0 %_Br[0 0 0 0.098039 1 50 100 %_BS%_0 0 0 0.098039 1 50 100 Bs0 0 0 0 1 48.3253 0 %_BS%_0 0 0 0 1 48.3253 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 21)(Unnamed gradient 21) 0 3 Bd[<C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCCCDCDCECECFCFCFD0D0D1D1D2D2D2D3D3D4D4D5D5><48494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C>001 %_Br<8F8F8F9090919191929293949495959696979898999A9A9B9C9D9D9E9F9FA0A1A2A3A3A4A5A6A7A7A8A9AAABACACADAEAFB0B1B2B3B4B5B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6><2F2F2F2F303030303031313131323232323333333434343435353536363637373838383939393A3A3A3B3B3C3C3C3D3D3E3E3E3F3F4040404141424243434344444545464647474848>001 %_Br[0.835294 0.423529 0 0 1 50 100 %_BS%_0.835294 0.423529 0 0 1 50 100 Bs0.776471 0.282353 0 0 1 51.2426 58.427 %_BS%_0.776471 0.282353 0 0 1 51.2426 58.427 Bs0.560784 0.184314 0 0 1 59.3303 0 %_BS%_0.560784 0.184314 0 0 1 59.3303 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 22)(Unnamed gradient 22) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 23)(Unnamed gradient 23) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 24)(Unnamed gradient 24) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 25)(Unnamed gradient 25) 0 2 Bd[<CCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCACACACACACAC9C9C9C9C8C8C8C8C8C7C7C7C7C6C6C6C5C5C5C5C4C4C4C3C3C3C2C2C2C1C1C1C0C0BFBFBFBEBEBEBDBDBCBCBCBBBBBABABAB9B9B8B8B7B7B7B6B6B5B5B4B4B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A8A8A7A6A6A5A5A4A4A3A2A2A1A1A0A09F9E9E9D9D9C9B9B9A999998989796969594949392929190908F8F8E8D8C8C8B8A8A89888887868685848383828181807F7E7E7D7C7B7B7A797878777675757473727271706F6F6E6D6C6B6B6A6968676766656463626261605F5E5E5D5C5B5A5958585756555453525251504F4E4D4C4B4B4A49484746454443434241403F3E3D3C3B3A39383737363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A1A>0 %_Br[0.1 0 50 85 %_BS%_0.1 0 50 85 Bs0.8 0 65 50 %_BS%_0.8 0 65 50 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 26)(Unnamed gradient 26) 0 5 Bd[<FFFEFDFCFBFAF9F8F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E0DFDEDDDCDCDBDAD9D8D7D6D6D5D4D3D2D1D1D0CFCECDCDCCCBCAC9C9C8C7C6C6C5C4C3C3C2C1C1C0BFBFBEBDBCBCBBBABAB9B9B8B7B7B6B5B5B4B4B3B2B2B1B1B0AFAFAEAEADADACABABAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A2A1A1A0A09F9F9E9E9E9D9D9C9C9C9B9B9A9A9A99999998989897979796969695959594949493939392929292919191909090908F8F8F8F8E8E8E8E8E8D8D8D8D8D8C8C8C8C8C8B8B8B8B8B8A8A8A8A8A8A89898989898989888888888888888887878787878787878787878686868686868686868686868686858585858585858585858585858585858585858585858585858585858585858585858585858585858585>0 %_Br<7978777675747371706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><5F5E5D5C5B5B5A595858575655545453525150504F4E4D4C4C4B4A494948474645454443424141403F3E3E3D3C3B3A3A3938373636353433323231302F2F2E2D2C2B2B2A292827272625242323222120201F1E1D1C1C1B1A191818171615151413121111100F0E0D0D0C0B0A09090807060605040302020100><5C5B5A595958575656555453525251504F4F4E4D4C4C4B4A494948474645454443424241403F3F3E3D3C3C3B3A393938373635353433323231302F2F2E2D2C2C2B2A292828272625252423222221201F1F1E1D1C1B1B1A191818171615151413121211100F0F0E0D0C0B0B0A09080807060505040302020100><05050505050505050505050504040404040404040404040404040404040404040404040403030303030303030303030303030303030303030303030302020202020202020202020202020202020202020202020201010101010101010101010101010101010101010101010100000000000000000000000000>1 %_Br<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707173747576777879><000102020304050606070809090A0B0C0D0D0E0F101111121314151516171818191A1B1C1C1D1E1F202021222323242526272728292A2B2B2C2D2E2F2F3031323233343536363738393A3A3B3C3D3E3E3F404141424344454546474849494A4B4C4C4D4E4F505051525354545556575858595A5B5B5C5D5E5F><000102020304050506070808090A0B0B0C0D0E0F0F101112121314151516171818191A1B1B1C1D1E1F1F202122222324252526272828292A2B2C2C2D2E2F2F303132323334353536373839393A3B3C3C3D3E3F3F404142424344454546474849494A4B4C4C4D4E4F4F505152525354555656575859595A5B5C><00000000000000000000000000010101010101010101010101010101010101010101010101020202020202020202020202020202020202020202020202030303030303030303030303030303030303030303030303040404040404040404040404040404040404040404040404050505050505050505050505>1 %_Br<363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>0 %_Br[0.52 0 50 100 %_BS%_0.52 0 50 100 Bs1 0 23.8095 90.1099 %_BS%_1 0 23.8095 90.1099 Bs0.472656 0.371094 0.359375 0.019531 1 50 70.3297 %_BS%_0.472656 0.371094 0.359375 0.019531 1 50 70.3297 Bs0 0 0 0 1 50 50 %_BS%_0 0 0 0 1 50 50 Bs0.21 0 50 0 %_BS%_0.21 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 27)(Unnamed gradient 27) 0 2 Bd[<4D4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs0.3 0 50 0 %_BS%_0.3 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 28)(Unnamed gradient 28) 0 3 Bd[<C6C7C7C8C8C8C9C9CACACACBCBCCCCCDCDCDCECECFCFD0D0D0D1D1D2D2D3D3D3D4D4D5D5><48494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667696A6B6C>001 %_Br<8F90909091919192929393949495969697979899999A9B9B9C9D9D9E9FA0A0A1A2A3A4A4A5A6A7A8A8A9AAABACADAEAEAFB0B1B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C1C2C3C4C5C6><2F2F2F2F2F303030303031313131323232323333333434343535353636363737373838383939393A3A3B3B3B3C3C3C3D3D3E3E3F3F3F40404141414242434344444545454646474748>001 %_Br[0.835938 0.421875 0 0 1 50 100 %_BS%_0.835938 0.421875 0 0 1 50 100 Bs0.777344 0.28125 0 0 1 50 58.427 %_BS%_0.777344 0.28125 0 0 1 50 58.427 Bs0.5625 0.183594 0 0 1 59.5506 0 %_BS%_0.5625 0.183594 0 0 1 59.5506 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 29)(Unnamed gradient 29) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6>0 %_Br[0.9 0 50 100 %_BS%_0.9 0 50 100 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 3)(Unnamed gradient 3) 0 3 Bd[<000102030405060708090A0B0C0D0E0F1011131415161718191A1B1C1D1E1F><AAABABACADADAEAEAFAFB0B1B1B2B2B3B3B4B4B5B6B6B7B7B8B8B9BABABBBB><FCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9><00000000010101010101010102020202020202030303030303030304040404>1 %_Br0<8080818282838484858686878888898A8A8B8C8C8D8E8E8F9090919293939495959697979899999A9B9B9C9D9D9E9F9FA0A1A1A2A3A4A4A5A6A6A7A8A8A9AAAA><BCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC>01 %_Br[0.121094 0.734375 0.976563 0.015625 1 50 100 %_BS%_0.121094 0.734375 0.976563 0.015625 1 50 100 Bs0 0.667969 0.988281 0 1 50 50 %_BS%_0 0.667969 0.988281 0 1 50 50 Bs0 0.5 0.738281 0 1 50 0 %_BS%_0 0.5 0.738281 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 30)(Unnamed gradient 30) 0 3 Bd[<5B5B5C5D5E5E5F606161626364646566676868696A6B6B6C6D6E6E6F707171727374747576777778797A7A7B7C7D7D7E7F808081828383848586878788898A8A8B8C8D8D8E8F90909192939394959696><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<313132333434353636373838393A3A3B3C3C3D3E3E3F4040414242434444454646474848494A4A4B4C4C4D4E4E4F5051515253535455555657575859595A5B>0<7172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.589844 0.042969 1 0 1 50 100 %_BS%_0.589844 0.042969 1 0 1 50 100 Bs0.355469 0 0.6875 0 1 50 50 %_BS%_0.355469 0 0.6875 0 1 50 50 Bs0.191406 0 0.441406 0 1 50 0 %_BS%_0.191406 0 0.441406 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 31)(Unnamed gradient 31) 0 3 Bd[<000102030405060708090A0B0C0D0E0F1011131415161718191A1B1C1D1E1F><AAABABACADADAEAEAFAFB0B1B1B2B2B3B3B4B4B5B6B6B7B7B8B8B9BABABBBB><FCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9><00000000010101010101010102020202020202030303030303030304040404>1 %_Br0<8080818282838484858686878888898A8A8B8C8C8D8E8E8F9090919293939495959697979899999A9B9B9C9D9D9E9F9FA0A1A1A2A3A4A4A5A6A6A7A8A8A9AAAA><BCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC>01 %_Br[0.121094 0.734375 0.976563 0.015625 1 50 100 %_BS%_0.121094 0.734375 0.976563 0.015625 1 50 100 Bs0 0.667969 0.988281 0 1 50 50 %_BS%_0 0.667969 0.988281 0 1 50 50 Bs0 0.5 0.738281 0 1 50 0 %_BS%_0 0.5 0.738281 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 32)(Unnamed gradient 32) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 33)(Unnamed gradient 33) 0 3 Bd[<000000000000000000000001010101010101010101010101010101010101010202020202020202020202><333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555758595A5B5C5D>0.99218801 %_Br<0202020202020202020202020202020202020202020202020202020202020202020202020101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000><1313131414141414151515151616161616171717171818181818191919191A1A1A1A1A1B1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F2020202021212121212222222223232323232424242425252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B2B2C2C2C2C2C2D2D2D2D2E2E2E2E2E2F2F2F2F30303030303131313131323232323333><6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFD>01 %_Br[0.007813 0.363281 0.992188 0 1 50 100 %_BS%_0.007813 0.363281 0.992188 0 1 50 100 Bs0 0.199219 0.992188 0 1 50 50 %_BS%_0 0.199219 0.992188 0 1 50 50 Bs0.007813 0.074219 0.421875 0 1 50 0 %_BS%_0.007813 0.074219 0.421875 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 34)(Unnamed gradient 34) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 35)(Unnamed gradient 35) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 36)(Unnamed gradient 36) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 37)(Unnamed gradient 37) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 38)(Unnamed gradient 38) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 39)(Unnamed gradient 39) 0 3 Bd[<5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F70717172737474757676777879797A7B7C7C7D7E7F7F808182828384858586878788898A8A8B8C8D8D8E8F90909192929394959596><0000000001010101010101020202020202020203030303030303040404040404040505050505050506060606060606070707070707070708080808080808090909090909090A0A0A0A0A0A0A0A0B0B0B0B><AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>01 %_Br<31323233333435353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4F4F50515152535354555656575858595A5A5B>0<717273747576767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF>01 %_Br[0.588235 0.043137 1 0 1 50 100 %_BS%_0.588235 0.043137 1 0 1 50 100 Bs0.356863 0 0.686275 0 1 49.664 50 %_BS%_0.356863 0 0.686275 0 1 49.664 50 Bs0.192157 0 0.443137 0 1 51.0363 0 %_BS%_0.192157 0 0.443137 0 1 51.0363 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 4)(Unnamed gradient 4) 0 2 Bd[<4D4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs0.3 0 50 0 %_BS%_0.3 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 5)(Unnamed gradient 5) 0 3 Bd[<1919191A1A1A1A1A1B1B1B1B1B1C1C1C1C1C1C1D1D1D1D1D1E1E1E1E1E1E1F1F1F1F1F1F202020><46464747484849494A4A4B4B4C4C4D4D4E4E4F4F50505151525253535454555555565657575758><8082838485868788898A8B8C8D8E8F90909192939495969798999A9B9C9C9D9E9FA0A1A1A2A3A3>01 %_Br<0E0E0E0E0F0F0F0F0F0F10101010101011111111111112121212121212131313131313141414141414151515151515151616161616161717171717171718181818181819191919><3C3C3C3C3C3D3D3D3D3D3D3D3E3E3E3E3E3E3E3F3F3F3F3F3F3F404040404040404141414141414142424242424242434343434343434444444444444445454545454545454646><3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6A6B6C6D6E6F707172737475767778797A7A7B7C7D7E7F8080>01 %_Br[0.125 0.34375 0.640625 0 1 50 100 %_BS%_0.125 0.34375 0.640625 0 1 50 100 Bs0.097656 0.273438 0.503906 0 1 46.0674 50 %_BS%_0.097656 0.273438 0.503906 0 1 46.0674 50 Bs0.054688 0.234375 0.238281 0 1 48.3146 0 %_BS%_0.054688 0.234375 0.238281 0 1 48.3146 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 6)(Unnamed gradient 6) 0 3 Bd[<0C0D0E0F1011121314><0708090A0B0C0C0D0E><6F6E6D6C6B6A696868>01 %_Br<080808080808080808090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C><0606060606060606060606060606060606060606060606060606060606060606060606070707070707070707070707070707070707070707070707070707070707070707><2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5A5B5C5D5E5F60616263646566676869696A6B6C6D6E6F>01 %_Br[0.078125 0.054688 0.40625 0 1 50 100 %_BS%_0.078125 0.054688 0.40625 0 1 50 100 Bs0.046875 0.027344 0.433594 0 1 46.0674 50 %_BS%_0.046875 0.027344 0.433594 0 1 46.0674 50 Bs0.03125 0.023438 0.179688 0 1 48.3146 0 %_BS%_0.03125 0.023438 0.179688 0 1 48.3146 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 7)(Unnamed gradient 7) 0 3 Bd[<000000000000000000000001010101010101010101010101010101010101010202020202020202020202><333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555758595A5B5C5D>0.99218801 %_Br<0202020202020202020202020202020202020202020202020202020202020202020202020101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000><1313131414141414151515151616161616171717171818181818191919191A1A1A1A1A1B1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F2020202021212121212222222223232323232424242425252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B2B2C2C2C2C2C2D2D2D2D2E2E2E2E2E2F2F2F2F30303030303131313131323232323333><6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFD>01 %_Br[0.007813 0.363281 0.992188 0 1 50 100 %_BS%_0.007813 0.363281 0.992188 0 1 50 100 Bs0 0.199219 0.992188 0 1 50 50 %_BS%_0 0.199219 0.992188 0 1 50 50 Bs0.007813 0.074219 0.421875 0 1 50 0 %_BS%_0.007813 0.074219 0.421875 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 8)(Unnamed gradient 8) 1 3 Bd[<0B0B0B0C0C0C0C0D0D0D0D0D0E0E0E0E0F0F0F0F10101010101111111112121212121313131313141414141515151515161616><18181919191A1A1B1B1B1C1C1C1D1D1E1E1E1F1F1F202020212122222223232324242425252526262727272828282929292A2A><3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263646565666768696A6B6C6D>01 %_Br<16161617171717181818191919191A1A1A1A1B1B1B1B1B1C1C1C1C1D1D1D1D1E1E1E1E1E1F1F1F><2A2A2B2B2B2C2C2D2D2D2E2E2F2F2F303031313132323333333434343535353636363737373838><6D6E6F707172737475767778797A7B7C7D7E7E7F80818283848586878889898A8B8C8D8D8E8F8F>01 %_Br[0.042969 0.09375 0.234375 0 1 48.3146 0 %_BS%_0.042969 0.09375 0.234375 0 1 48.3146 0 Bs0.085938 0.164063 0.425781 0 1 46.0674 50 %_BS%_0.085938 0.164063 0.425781 0 1 46.0674 50 Bs0.121094 0.21875 0.5625 0 1 50 100 %_BS%_0.121094 0.21875 0.5625 0 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 9)(Unnamed gradient 9) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BF>0 %_Br[0.75 0 50 100 %_BS%_0.75 0 50 100 Bs1 0 50 53.8462 %_BS%_1 0 50 53.8462 BsBD%AI5_EndGradient%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 1 255 79 79 0 50 Lb(Layer 2) Ln0 Au0 O0 J 0 j 1 w 4 M []0 d0 XR48.5 256 m48.5 247.4395 55.4395 240.5 64 240.5 c72.5605 240.5 79.5 247.4395 79.5 256 c79.5 264.5605 72.5605 271.5 64 271.5 c55.4395 271.5 48.5 264.5605 48.5 256 CBb1 (Unnamed gradient 20) 0 -0.000977 0 1.00049 15.5024 26.851 26.851 -15.5024 -344615.63 -79091.5078 Bg15.51 -26.8641 138.0679 79.7135 -12.7935 229.583 Xm124919.7578 -216367.388 138.0679 79.7135 -124932.5547 216596.956 Bc15.51 -26.8641 138.0679 79.7135 -12.7935 229.583 Bm124919.7578 -216367.388 138.0679 79.7135 2.7168 202.7188 Bcf0 BB0 0 0 0.5 k48.5 256 m48 256 l48.0005 247.1631 55.1631 240.0005 64 240 c72.8369 240.0005 79.9995 247.1631 80 256 c79.9995 264.8369 72.8369 271.9995 64 272 c55.1631 271.9995 48.0005 264.8369 48 256 C48.5 256 L49 256 l49 260.1436 50.6782 263.8906 53.3936 266.6064 c56.1094 269.3218 59.856 271 64 271 c68.1436 271 71.8906 269.3218 74.6064 266.6064 c77.3218 263.8906 78.9995 260.144 79 256 c78.9995 251.8564 77.3218 248.1094 74.6064 245.3936 c71.8906 242.6782 68.1436 241.0005 64 241 c59.8564 241.0005 56.1094 242.6782 53.3936 245.3936 c50.6782 248.1094 49 251.8564 49 256 C48.5 256 Lf51.5 256 m51.5 249.0967 57.0967 243.5 64 243.5 c70.9033 243.5 76.5 249.0967 76.5 256 c76.5 262.9033 70.9033 268.5 64 268.5 c57.0967 268.5 51.5 262.9033 51.5 256 CBb1 (Unnamed gradient 21) 0 -0.001953 0 1.00049 12.502 21.654 21.654 -12.502 -276330.139 -62198.0508 Bg12.5081 -21.6646 111.3443 64.2846 2.07422 234.689 Xm100741.6172 -174489.6094 111.3443 64.2846 -100739.5469 174724.2969 Bc7.30808 -12.658 111.3443 64.2846 2.07422 234.689 Bm5.19997 -9.00662 111.3443 64.2846 9.38232 222.0308 Bm100741.6172 -174489.6094 111.3443 64.2846 14.582 213.0244 Bcf0 BB0.902344 0.652344 0.34375 0.164063 k51.5 256 m51.25 256 l51.25 248.9585 56.9585 243.25 64 243.25 c71.0415 243.25 76.75 248.9585 76.75 256 c76.75 263.0415 71.0415 268.75 64 268.75 c56.9585 268.75 51.25 263.0415 51.25 256 C51.5 256 L51.75 256 l51.75 259.3833 53.1206 262.4443 55.3379 264.6621 c57.5557 266.8794 60.6167 268.25 64 268.25 c67.3833 268.25 70.4443 266.8794 72.6621 264.6621 c74.8794 262.4443 76.25 259.3833 76.25 256 c76.25 252.6167 74.8794 249.5557 72.6621 247.3379 c70.4443 245.1206 67.3833 243.75 64 243.75 c60.6167 243.75 57.5557 245.1206 55.3379 247.3379 c53.1206 249.5557 51.75 252.6167 51.75 256 C51.5 256 Lf65.4355 268.2129 m64.8652 268.2852 64.2832 268.3262 63.6914 268.3262 c62.4297 268.3262 61.2109 268.1523 60.0586 267.834 C59.623 267.3486 L58.9922 266.668 L58.9922 267.3633 L57.0752 266.4932 L55.4502 264.9727 L52.9434 261.8398 L52.6367 260.9014 L53.1855 260.6641 L52.7813 260.0088 L52.8457 257.2549 L53.6543 256.0898 L54.415 255.5137 L54.5449 255.1367 L55.1914 254.8027 L55.3447 254.0801 L55.6035 253.8193 L55.8096 253.8652 L55.8096 255.2148 L55.459 255.5449 L54.9971 255.6807 L54.9238 255.748 L55.1426 255.9531 L55.1426 256.3496 L55.3613 256.7031 L54.7793 256.748 L54.5605 256.543 L54.0996 256.543 L53.832 257.043 L53.7842 258.042 L54.0752 258.042 L54.2441 258.8359 L54.707 259.2676 L55.5762 258.8848 L55.8223 259.0176 L56.8164 258.5859 L56.6953 257.9746 L56.6953 257.7012 L56.9609 257.5879 L57.2529 257.7012 L57.2529 259.1543 L58.3926 260.0176 L58.7266 260.5596 L59.1836 260.8066 L59.2959 260.9883 L59.5098 261.1875 L59.9707 261.1875 L60.0801 261.3623 L60.2852 261.6963 L60.7705 261.9238 L61.207 261.9238 L61.207 261.707 L61.6719 261.707 L61.8623 262.0137 L61.4014 262.1729 L61.4014 263.0117 L62.3477 263.0117 L62.6387 262.3096 L63.3906 262.6045 L62.9482 262.9414 L63.2441 263.4219 L62.3477 264.2617 L62.3477 264.8516 L61.8867 264.8965 L61.5703 264.5107 L61.4014 265.2822 L60.625 265.3281 L60.2363 264.9414 L59.9941 264.2383 L59.6543 264.2158 L59.4609 263.5801 L59.1211 263.5801 L59.1445 264.375 L58.5391 264.9199 L59.7031 265.7148 L60.2363 265.5781 L61.1826 265.7148 L61.8965 265.2314 L62.832 265.7363 L62.832 266.5762 L61.5469 266.9844 L62.4932 267.167 L63.2207 266.9844 L63.7305 266.2588 L63.5352 265.873 L64.0215 264.8965 L64.8125 264.5996 L65.1123 264.7598 L65.1855 265.6914 L66.1074 266.5537 L65.0391 267.5527 L64.2148 267.8018 L65.4355 267.8018 L65.4355 268.2129 LBb1 (Unnamed gradient 22) -0.000488 0 0 1 5.15185 8.92327 8.92327 -5.15185 -109060.0313 -20821.1836 Bg5.15185 -8.92327 49.8811 28.7989 32.0547 252.0513 Xm41513.6406 -71903.7422 49.8811 28.7989 -41481.5859 72155.7969 Bc2.57593 -4.46164 49.8811 28.7989 32.0547 252.0513 Bm2.57593 -4.46164 49.8811 28.7989 34.6304 247.5898 Bm41513.6406 -71903.7422 49.8811 28.7989 37.2065 243.1279 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k65.4355 268.2129 m65.4668 268.4609 l64.8872 268.5342 64.2949 268.5762 63.6914 268.5762 c62.4067 268.5762 61.1655 268.3994 59.9922 268.0752 C59.8726 268.001 L59.4375 267.5166 L59.2422 267.3057 L59.2422 267.3633 L59.1274 267.5732 L58.8887 267.5908 L56.9717 266.7207 L56.9043 266.6758 L55.2793 265.1553 L55.2549 265.1289 L52.748 261.9961 L52.7056 261.9175 L52.3989 260.979 l52.3589 260.8564 52.4189 260.7231 52.5376 260.6719 C52.8208 260.5493 L52.5684 260.1401 L52.5313 260.0029 L52.5957 257.249 L52.6401 257.1123 L53.4487 255.9473 L53.5034 255.8906 L54.2036 255.3604 L54.3086 255.0552 L54.4302 254.9146 L54.9712 254.6348 L55.1001 254.0283 L55.1675 253.9038 L55.4263 253.6431 L55.6577 253.5752 L55.8638 253.6211 l55.978 253.6465 56.0596 253.748 56.0596 253.8652 C56.0596 255.2148 L55.981 255.397 L55.6304 255.7271 L55.5293 255.7847 L55.1235 255.9043 L55.0933 255.9321 L54.9238 255.748 L55.0947 255.5654 L55.3135 255.7705 L55.3926 255.9531 L55.3926 256.2783 L55.5737 256.5718 L55.5845 256.8164 L55.3804 256.9521 L54.7983 256.9971 L54.6084 256.9307 L54.4614 256.793 L54.2495 256.793 L54.0791 257.1113 L54.0464 257.792 L54.0752 257.792 l54.1929 257.792 54.2954 257.875 54.3198 257.9897 C54.4722 258.707 L54.7568 258.9722 L55.4756 258.6558 L55.6948 258.6646 L55.834 258.7397 L56.5322 258.437 L56.4502 258.0234 L56.4453 257.9746 L56.4453 257.7012 l56.4453 257.6011 56.5049 257.5107 56.5972 257.4712 C56.8628 257.3579 L57.0513 257.355 L57.3433 257.4683 l57.4399 257.5054 57.5029 257.5977 57.5029 257.7012 C57.5029 259.0303 L58.5435 259.8184 L58.6055 259.8862 L58.9043 260.3716 L59.3022 260.5869 L59.396 260.6753 L59.4907 260.8281 L59.6084 260.9375 L59.9707 260.9375 L60.1826 261.0547 L60.292 261.2295 L60.293 261.2314 L60.459 261.502 L60.8262 261.6738 L61.207 261.6738 L61.207 261.9238 L60.957 261.9238 L60.957 261.707 L61.0303 261.5303 L61.207 261.457 L61.6719 261.457 L61.8843 261.5752 L62.0747 261.8818 L62.0977 262.0972 L61.9438 262.25 L61.6514 262.3511 L61.6514 262.7617 L62.1807 262.7617 L62.4077 262.2139 l62.46 262.0879 62.603 262.0269 62.73 262.0767 C63.4819 262.3716 L63.6382 262.5698 L63.542 262.8032 L63.2798 263.0029 L63.457 263.291 l63.519 263.3916 63.5015 263.5234 63.415 263.6045 C62.5977 264.3701 L62.5977 264.8516 l62.5977 264.9805 62.5005 265.0879 62.3721 265.1006 C61.9111 265.1455 L61.6934 265.0552 L61.377 264.6694 L61.5703 264.5107 L61.8145 264.5645 L61.6455 265.3359 l61.6216 265.4448 61.5278 265.5254 61.416 265.5317 C60.6396 265.5776 L60.4487 265.5054 L60.0601 265.1187 L60 265.0229 L59.812 264.4766 L59.6377 264.4653 l59.5337 264.4585 59.4453 264.3882 59.415 264.2886 C59.2759 263.8301 L59.1211 263.8301 L59.1211 263.5801 L59.3711 263.5728 L59.3945 264.3677 L59.312 264.561 L58.9429 264.8931 L59.7505 265.4443 L60.1743 265.3359 L60.272 265.3306 L61.1226 265.4536 L61.7563 265.0244 L62.0151 265.0112 L62.9507 265.5161 l63.0313 265.5601 63.082 265.6445 63.082 265.7363 C63.082 266.5762 l63.082 266.6851 63.0112 266.7817 62.9077 266.8145 C61.6226 267.2227 L61.5469 266.9844 L61.5942 266.7388 L62.4858 266.9111 L63.0698 266.7646 L63.4395 266.2378 L63.312 265.9858 L63.3115 265.7617 L63.7979 264.7852 L63.9336 264.6626 L64.7246 264.3657 L64.9302 264.3789 L65.23 264.5391 L65.3613 264.7402 L65.4272 265.5752 L66.2783 266.3711 L66.3574 266.5537 L66.2783 266.7363 L65.21 267.7354 L65.1113 267.792 L64.2871 268.041 L64.2148 267.8018 L64.2148 267.5518 L65.4355 267.5518 L65.6123 267.625 L65.6855 267.8018 L65.6855 268.2129 l65.6855 268.3389 65.5918 268.4453 65.4668 268.4609 C65.4355 268.2129 L65.1855 268.2129 L65.1855 268.0518 L64.2148 268.0518 l64.0913 268.0518 63.9858 267.9609 63.9678 267.8384 c63.9492 267.7158 64.0239 267.5981 64.1426 267.5625 C64.9106 267.3306 L65.7412 266.5537 L65.0146 265.874 L64.9365 265.7109 L64.874 264.916 L64.7944 264.8735 L64.2012 265.0962 L63.8149 265.8721 L63.9536 266.146 L63.9351 266.4023 L63.4253 267.1279 L63.2817 267.2271 L62.5542 267.4097 L62.4458 267.4126 L61.4995 267.23 l61.3877 267.2085 61.3042 267.1128 61.2974 266.999 c61.2905 266.8853 61.3623 266.7808 61.4712 266.7461 C62.582 266.3936 L62.582 265.8857 L61.9111 265.5234 L61.3228 265.9219 L61.147 265.9624 L60.25 265.8325 L59.7651 265.957 L59.562 265.9214 L58.3979 265.1265 L58.2896 264.9365 L58.3716 264.7339 L58.8911 264.2666 L58.8711 263.5874 L58.9419 263.4058 L59.1211 263.3301 L59.4609 263.3301 l59.5713 263.3301 59.668 263.4019 59.7002 263.5073 C59.8433 263.9775 L60.0107 263.9888 l60.1108 263.9956 60.1978 264.062 60.2305 264.1567 C60.4536 264.8052 L60.7222 265.0718 L61.1978 265.0439 L61.3262 264.457 l61.3467 264.3638 61.4189 264.29 61.5117 264.2676 c61.605 264.2451 61.7031 264.2783 61.7637 264.3521 C61.9951 264.6348 L62.0977 264.625 L62.0977 264.2617 L62.1768 264.0791 L62.9243 263.3789 L62.7354 263.0723 l62.668 262.9634 62.6948 262.8203 62.7969 262.7427 C62.8857 262.6748 L62.7759 262.6318 L62.5786 263.1074 l62.54 263.2007 62.4487 263.2617 62.3477 263.2617 C61.4014 263.2617 L61.2246 263.1885 L61.1514 263.0117 L61.1514 262.1729 l61.1514 262.0664 61.2192 261.9712 61.3198 261.9365 C61.4849 261.8794 L61.4595 261.8389 L61.6719 261.707 L61.6719 261.957 L61.207 261.957 L61.207 261.707 L61.457 261.707 L61.457 261.9238 L61.3838 262.1006 L61.207 262.1738 L60.7705 262.1738 L60.6646 262.1504 L60.1792 261.9229 L60.0723 261.8271 L59.8672 261.4932 L59.8682 261.4951 L59.832 261.4375 L59.5098 261.4375 L59.3394 261.3706 L59.1255 261.1714 L59.0835 261.1196 L59.0059 260.9951 L58.6079 260.7793 L58.5137 260.6909 L58.2041 260.1885 L57.1021 259.3535 L57.0029 259.1543 L57.0029 257.8726 L56.9653 257.8579 L56.9453 257.8662 L56.9453 257.9502 L57.0615 258.5376 l57.0845 258.6528 57.0239 258.7686 56.916 258.8154 C55.9219 259.2471 L55.7036 259.2378 L55.5649 259.1631 L54.8076 259.4966 l54.7168 259.5366 54.6094 259.5186 54.5366 259.4502 C54.0737 259.0186 L53.9995 258.8882 L53.8726 258.292 L53.7842 258.292 L53.603 258.2144 L53.5347 258.0303 L53.5825 257.0313 L53.6118 256.9248 L53.8794 256.4248 l53.9229 256.3433 54.0073 256.293 54.0996 256.293 C54.5605 256.293 L54.7314 256.3604 L54.8701 256.4902 L54.9326 256.4854 L54.9302 256.481 L54.8926 256.3496 L54.8926 256.0615 L54.7529 255.9307 L54.6738 255.7471 L54.7544 255.564 L54.8276 255.4966 L54.9268 255.4409 L55.3311 255.3218 L55.5596 255.1069 L55.5596 254.0659 L55.5493 254.0635 L55.6035 253.8193 L55.7808 253.9956 L55.5742 254.2041 L55.436 254.8545 L55.3062 255.0249 L54.7485 255.313 L54.6514 255.5952 L54.5659 255.7129 L53.8369 256.2651 L53.0938 257.3359 L53.0327 259.9404 L53.3984 260.5327 L53.4238 260.7393 L53.2847 260.8936 L52.9453 261.0405 L53.167 261.7192 L55.6343 264.8027 L57.2158 266.2827 L58.7422 266.9751 L58.7422 266.668 l58.7422 266.5654 58.8052 266.4727 58.9009 266.4351 c58.9966 266.3979 59.106 266.4229 59.1758 266.498 C59.8066 267.1787 L59.8091 267.1816 L60.2446 267.667 L60.0586 267.834 L60.125 267.5928 l61.2563 267.9058 62.4526 268.0762 63.6914 268.0762 c64.2715 268.0762 64.8433 268.0361 65.4043 267.9648 C65.4355 268.2129 L65.1855 268.2129 L65.4355 268.2129 Lf66.6162 266.0996 m67.4648 266.123 L67.4648 265.5781 L66.8105 265.5781 L66.4951 265.8496 L66.6162 266.0996 LBb1 (Unnamed gradient 23) 0 0 0 1 0.437988 0.758618 0.758618 -0.437988 -1773.7373 5715.1694 Bg0.437988 -0.758618 3.88014 2.2402 64.8994 265.1099 Xm3529.3088 -6112.9424 3.88014 2.2402 -3464.4092 6378.0522 Bc0.218994 -0.379309 3.88014 2.2402 64.8994 265.1099 Bm0.218994 -0.379309 3.88014 2.2402 65.1182 264.7305 Bm3529.3088 -6112.9424 3.88014 2.2402 65.3374 264.3511 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k66.6162 266.0996 m66.623 265.8496 L67.2148 265.8662 L67.2148 265.8281 L66.9033 265.8281 L66.8037 265.9136 L66.8413 265.9907 L66.6162 266.0996 L66.623 265.8496 L66.6162 266.0996 L66.3911 266.2085 L66.27 265.9585 l66.2207 265.8569 66.2461 265.7339 66.332 265.6602 C66.6475 265.3887 L66.8105 265.3281 L67.4648 265.3281 L67.6416 265.4014 L67.7148 265.5781 L67.7148 266.123 L67.6392 266.3022 L67.458 266.373 L66.6094 266.3496 l66.5161 266.3472 66.4321 266.2925 66.3911 266.2085 C66.6162 266.0996 Lf72.4746 262.6953 m72.8262 263.126 L73.542 262.582 L73.8105 263.0176 L73.8164 263.6768 l72.5059 265.2598 70.7813 266.5254 68.7949 267.334 C68.0723 267.3252 L68.084 266.8945 L69.4004 265.6631 L69.8066 265.373 L70.6064 265.373 L70.498 266.1563 L71.3828 265.124 L70.8613 264.5342 L71.0313 263.376 L71.7031 262.7461 L71.1348 262.2129 L71.7832 260.9707 L72.4375 260.9707 L72.9238 261.582 L72.4746 262.6953 LBb1 (Unnamed gradient 24) 0 0 0 1 3.84277 6.65588 6.65588 -3.84277 -79256.0781 -13453.4824 Bg3.84277 -6.65588 29.5294 17.0488 54.5815 259.5386 Xm30965.0664 -53633.0703 29.5294 17.0488 -30910.4844 53892.6094 Bc1.92139 -3.32794 29.5294 17.0488 54.5815 259.5386 Bm1.92139 -3.32794 29.5294 17.0488 56.5029 256.2104 Bm30965.0664 -53633.0703 29.5294 17.0488 58.4243 252.8828 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k72.4746 262.6953 m72.6685 262.5371 L72.8672 262.7808 L73.3906 262.3828 L73.5879 262.3364 L73.7549 262.4507 L74.0234 262.8862 L74.0605 263.0156 L74.0664 263.6748 L74.0088 263.8364 l72.6714 265.4517 70.9131 266.7417 68.8892 267.5654 C68.792 267.584 L68.0693 267.5752 L67.8921 267.4985 L67.8223 267.3184 L67.834 266.8877 L67.9131 266.7119 L69.2295 265.4805 L69.2549 265.4595 L69.6611 265.1694 L69.8066 265.123 L70.6064 265.123 L70.7949 265.209 L70.854 265.4072 L70.7456 266.1904 L70.498 266.1563 L70.3081 265.9937 L71.0513 265.1265 L70.6738 264.6997 L70.6138 264.498 L70.7837 263.3398 L70.8604 263.1934 L71.3379 262.7461 L70.9639 262.395 l70.8818 262.3184 70.8613 262.1968 70.9131 262.0972 C71.5615 260.855 l71.605 260.7725 71.6899 260.7207 71.7832 260.7207 C72.4375 260.7207 L72.6333 260.8149 L73.1196 261.4263 L73.1558 261.6758 L72.7065 262.7891 L72.4746 262.6953 L72.6685 262.5371 L72.4746 262.6953 L72.2427 262.6016 L72.6377 261.6235 L72.3169 261.2207 L71.9346 261.2207 L71.4443 262.1602 L71.874 262.564 L71.9531 262.7461 L71.874 262.9287 L71.2661 263.4985 L71.1255 264.4556 L71.5703 264.9585 l71.6523 265.0518 71.6538 265.1924 71.5728 265.2866 C70.688 266.3188 l70.6157 266.4033 70.4966 266.4297 70.3955 266.3843 c70.2939 266.3389 70.2354 266.2319 70.2505 266.1221 C70.3193 265.623 L69.8867 265.623 L69.5591 265.8569 L68.3311 267.0059 L68.3291 267.0781 L68.7979 267.084 L68.7949 267.334 L68.7007 267.1025 l70.6494 266.3091 72.3403 265.0679 73.624 263.5176 C73.8164 263.6768 L73.5664 263.6792 L73.561 263.0894 L73.4736 262.9478 L72.9775 263.3252 l72.8701 263.4067 72.7178 263.3887 72.6323 263.2842 C72.2808 262.8535 L72.2427 262.6016 L72.4746 262.6953 Lf75.8164 260.2031 m75.2031 261.4355 L74.9004 260.9443 L74.3066 261.1738 L73.918 261.7754 L72.5898 260.5332 L72.2793 259.5508 L72.5957 259.3691 L71.8828 258.2148 L72.002 256.7813 L72.002 255.1016 L73.5547 253.6504 L75.4102 254.9434 L76.0039 254.6943 L76.0039 253.252 L76.0635 253.2363 l76.3457 254.2266 76.5 255.2666 76.5 256.3408 c76.5 257.6934 76.2568 258.9912 75.8164 260.2031 CBb1 (Unnamed gradient 32) -0.000977 0 0 1 4.23389 7.33331 7.33331 -4.23389 -88154.0703 -15647.9092 Bg4.23389 -7.33331 34.4769 19.9053 54.9194 250.8188 Xm34116.6484 -59091.7734 34.4769 19.9053 -34061.7266 59342.5938 Bc2.11694 -3.66665 34.4769 19.9053 54.9194 250.8188 Bm2.11694 -3.66665 34.4769 19.9053 57.0361 247.1523 Bm34116.6484 -59091.7734 34.4769 19.9053 59.1533 243.4854 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k75.8164 260.2031 m76.04 260.3145 L75.4268 261.5469 l75.3862 261.6284 75.3052 261.6812 75.2144 261.6855 c75.1235 261.6895 75.0381 261.644 74.9902 261.5669 C74.7964 261.2524 L74.4727 261.3779 L74.1279 261.9111 L73.9487 262.0234 L73.7471 261.958 L72.4189 260.7158 L72.3516 260.6084 L72.041 259.626 l72.0054 259.5137 72.0527 259.3926 72.1548 259.334 C72.2476 259.2808 L71.6699 258.3462 L71.6338 258.1943 L71.752 256.771 L71.752 255.1016 L71.8311 254.9189 L73.3838 253.4678 l73.4702 253.3872 73.6011 253.3779 73.6978 253.4453 C75.4404 254.6597 L75.7539 254.5283 L75.7539 253.252 l75.7539 253.1382 75.8301 253.0391 75.9404 253.0103 C76 252.9946 l76.1313 252.96 76.2666 253.0371 76.3037 253.168 c76.5923 254.1792 76.75 255.2427 76.75 256.3408 c76.75 257.7236 76.5015 259.0508 76.0513 260.2886 C76.04 260.3145 L75.8164 260.2031 L75.5815 260.1177 l76.0122 258.9316 76.25 257.6636 76.25 256.3408 c76.25 255.2905 76.0991 254.2739 75.8232 253.3047 C76.0635 253.2363 L76.127 253.478 L76.0674 253.4937 L76.0039 253.252 L76.2539 253.252 L76.2539 254.6943 l76.2539 254.7949 76.1934 254.8862 76.1006 254.9248 C75.5068 255.1738 L75.2671 255.1484 L73.5776 253.9712 L72.252 255.21 L72.252 256.7813 L72.251 256.8018 L72.1387 258.1533 L72.8086 259.2378 L72.8379 259.4307 L72.7202 259.5859 L72.5781 259.6675 L72.8086 260.3955 L73.8701 261.3887 L74.0967 261.0381 L74.2163 260.9404 L74.8101 260.7109 l74.9229 260.6675 75.0498 260.7104 75.1133 260.813 C75.1797 260.9214 L75.5928 260.0918 L75.8164 260.2031 L75.5815 260.1177 L75.8164 260.2031 Lf64.1182 250.7178 m64.1182 251.0664 L63.1641 251.9736 L61.9512 252.0195 L60.6016 253.2822 L60.2051 252.9121 L59.8008 253.2891 L59.3633 253.3516 L58.9297 253.5098 L58.7002 253.1387 L58.377 253.1387 L58.1826 253.7285 L57.7793 253.6377 L57.2441 253.1846 L57.084 252.9268 L57.043 251.8457 L56.3555 251.2021 L56.3398 250.7627 L56.6787 250.0518 L57.4395 249.1895 L57.8115 248.3867 L59.2832 247.3887 L59.4434 246.2227 L59.5898 245.1328 L60.1465 244.8252 l60.4072 244.7549 60.6719 244.6914 60.9404 244.6367 C61.4512 244.6777 L62.21 245.0879 L63.6582 245.3223 L64.377 245.9961 L64.8613 246.4648 L65.8809 246.541 L66.7217 247.3281 L66.8906 248.1074 L67.7402 248.9014 L67.8691 249.7031 L63.8516 250.4678 L64.1182 250.7178 LBb1 (Unnamed gradient 34) -0.000977 0 0 1 5.09863 8.83109 8.83109 -5.09863 -107846.2891 -20509.7715 Bg5.09863 -8.83109 43.5663 25.153 37.7334 242.0762 Xm41084.7695 -71160.9141 43.5663 25.153 -41047.0352 71402.9922 Bc2.54932 -4.41555 43.5663 25.153 37.7334 242.0762 Bm2.54932 -4.41555 43.5663 25.153 40.2827 237.6606 Bm41084.7695 -71160.9141 43.5663 25.153 42.832 233.2451 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k64.1182 250.7178 m64.3682 250.7178 L64.3682 251.0664 L64.2905 251.2476 L63.3364 252.1548 L63.1733 252.2236 L62.0537 252.2656 L60.7725 253.4648 l60.6763 253.5547 60.5269 253.5547 60.4312 253.4648 C60.2051 253.2539 L59.9712 253.4717 L59.8359 253.5366 L59.4243 253.5952 L59.0151 253.7446 l58.9043 253.7852 58.7793 253.7422 58.7173 253.6411 C58.561 253.3887 L58.5576 253.3887 L58.4199 253.8066 l58.3799 253.9292 58.2534 254.001 58.1279 253.9727 C57.7246 253.8818 L57.6177 253.8286 L57.0825 253.3755 L57.0317 253.3164 L56.8716 253.0586 L56.834 252.936 L56.7969 251.958 L56.1846 251.3848 L56.1055 251.2109 L56.0898 250.7715 L56.1143 250.6553 L56.4531 249.9443 L56.4912 249.8862 L57.228 249.0513 L57.5845 248.2817 L57.6714 248.1797 L59.0508 247.2441 L59.1958 246.1885 L59.3423 245.0996 L59.4688 244.9141 L60.0254 244.6064 L60.0815 244.584 l60.3467 244.5122 60.6162 244.4478 60.8906 244.3916 C60.9604 244.3877 L61.4712 244.4287 L61.5698 244.458 L62.2915 244.8477 L63.6982 245.0757 L63.8291 245.1396 L64.5479 245.8135 L64.5508 245.8164 L64.9702 246.2222 L65.8994 246.2915 L66.0518 246.3584 L66.8926 247.1455 L66.9658 247.2754 L67.1182 247.978 L67.9111 248.7188 L67.9873 248.8618 L68.1162 249.6636 l68.1372 249.7969 68.0483 249.9233 67.916 249.9487 C63.8984 250.7134 L63.8516 250.4678 L64.0225 250.2856 L64.2891 250.5356 L64.3682 250.7178 L64.1182 250.7178 L63.9473 250.9004 L63.6807 250.6504 l63.6118 250.5859 63.5854 250.4883 63.6113 250.3979 c63.6377 250.3076 63.7124 250.2397 63.8047 250.2222 C67.584 249.5029 L67.5068 249.0254 L66.7197 248.29 L66.6465 248.1602 L66.4937 247.4575 L65.7744 246.7837 L64.8428 246.7144 L64.6875 246.6445 L64.2036 246.1763 L63.543 245.5566 L62.1699 245.3345 L62.0913 245.3076 L61.3789 244.9229 L60.9204 244.8857 L60.9404 244.6367 L60.9902 244.8818 l60.7275 244.9351 60.4678 244.9976 60.2114 245.0664 C60.1465 244.8252 L60.2676 245.0439 L59.8208 245.291 L59.6909 246.2559 L59.5308 247.4229 L59.4233 247.5957 L58.0093 248.5547 L57.6665 249.2944 L57.627 249.355 L56.8892 250.1909 L56.5918 250.8149 L56.6016 251.0903 L57.2139 251.6631 L57.293 251.8364 L57.3311 252.8511 L57.4355 253.019 L57.894 253.4072 L58.0161 253.4346 L58.1396 253.0605 l58.1733 252.958 58.269 252.8887 58.377 252.8887 C58.7002 252.8887 L58.9126 253.0073 L59.0352 253.2051 L59.2773 253.1167 L59.3281 253.104 L59.6875 253.0527 L60.0347 252.7295 l60.1304 252.6396 60.2798 252.6396 60.3755 252.7295 C60.6016 252.9399 L61.7803 251.8369 L61.9419 251.7695 L63.0601 251.7275 L63.8682 250.959 L63.8682 250.7178 L64.1182 250.7178 L63.9473 250.9004 L64.1182 250.7178 Lf56.1133 256.9824 m56.6953 256.9521 L57.8926 256.1807 L57.3418 256.0293 L56.9863 256.3623 L56.1934 256.7402 L56.1133 256.9824 LBb1 (Unnamed gradient 35) 0.000488 -0.000977 0 1.00049 0.791992 1.37177 1.37177 -0.791992 -9840.2842 3731.3218 Bg0.792379 -1.37244 6.5196 3.76409 53.3252 255.3721 Xm6381.8735 -11053.7305 6.5196 3.76409 -6328.5483 11309.1025 Bc0.396189 -0.68622 6.5196 3.76409 53.3252 255.3721 Bm0.396189 -0.68622 6.5196 3.76409 53.7212 254.686 Bm6381.8735 -11053.7305 6.5196 3.76409 54.1177 253.9995 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k56.1133 256.9824 m56.1001 256.7329 L56.6157 256.7061 L57.2871 256.2734 L57.2754 256.2705 L57.3418 256.0293 L57.5127 256.2119 L57.1572 256.5449 L57.0938 256.5879 L56.397 256.9199 L56.3506 257.061 L56.1133 256.9824 L56.1001 256.7329 L56.1133 256.9824 L55.876 256.9038 L55.9561 256.6616 L56.0859 256.5146 L56.8438 256.1533 L57.1709 255.8467 L57.4082 255.7881 L57.959 255.9395 l58.0542 255.9658 58.1245 256.0449 58.1396 256.1426 c58.1548 256.2402 58.1108 256.3374 58.0278 256.3906 C56.8306 257.1621 L56.7085 257.2017 L56.1265 257.2319 L55.9146 257.1343 L55.876 256.9038 L56.1133 256.9824 Lf58.3604 255.8477 m59.1543 255.8477 L59.3477 255.5596 L58.6367 255.2109 L58.2314 255.4395 L58.3604 255.8477 LBb1 (Unnamed gradient 36) 0.000488 0.000977 0 1 0.371582 0.643599 0.643599 -0.371582 -270.7963 6099.2769 Bg0.371582 -0.643599 3.46343 1.99961 56.7998 254.9468 Xm2994.208 -5186.1206 3.46343 1.99961 -2937.4082 5441.0674 Bc0.185791 -0.321799 3.46343 1.99961 56.7998 254.9468 Bm0.185791 -0.321799 3.46343 1.99961 56.9854 254.625 Bm2994.208 -5186.1206 3.46343 1.99961 57.1714 254.3032 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k58.3604 255.8477 m58.3604 255.5977 L59.021 255.5977 L59.1401 255.4204 L59.3477 255.5596 L59.2378 255.7842 L58.645 255.4932 L58.5308 255.5576 L58.5986 255.7725 L58.3604 255.8477 L58.3604 255.5977 L58.3604 255.8477 L58.1221 255.9229 L57.9932 255.5146 l57.9575 255.4019 58.0054 255.2798 58.1089 255.2217 C58.5142 254.9932 L58.7466 254.9863 L59.4575 255.335 L59.5894 255.4946 L59.5552 255.6987 L59.3618 255.9868 L59.1543 256.0977 L58.3604 256.0977 l58.2515 256.0977 58.1548 256.0269 58.1221 255.9229 C58.3604 255.8477 Lf59.8652 255.3184 m60.1563 255.2422 L59.9609 255.0605 L59.6709 255.1055 L59.8652 255.3184 LBb1 (Unnamed gradient 37) 0 0 0 1 0.135254 0.234267 0.234267 -0.135254 5108.7798 7430.3008 Bg0.135254 -0.234267 1.36053 0.785503 59.1582 254.9111 Xm1089.8754 -1887.7196 1.36053 0.785503 -1030.7173 2142.6309 Bc0.067627 -0.117133 1.36053 0.785503 59.1582 254.9111 Bm0.067627 -0.117133 1.36053 0.785503 59.2256 254.7939 Bm1089.8754 -1887.7196 1.36053 0.785503 59.2935 254.6768 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k59.8652 255.3184 m59.8018 255.0767 L60.0928 255.0005 L60.1563 255.2422 L59.9858 255.4253 L59.8794 255.3262 L59.709 255.3525 L59.6709 255.1055 L59.8555 254.937 L60.0498 255.1499 L59.8652 255.3184 L59.8018 255.0767 L59.8652 255.3184 L59.6807 255.4868 L59.4863 255.2739 L59.4351 255.0225 l59.4658 254.9351 59.541 254.8726 59.6328 254.8584 C59.9229 254.8135 L60.1313 254.8774 L60.3267 255.0591 L60.3989 255.3032 L60.2197 255.4839 L59.9287 255.5601 L59.6807 255.4868 L59.8652 255.3184 Lf69.3457 265.1582 m69.6729 265.1582 L69.9512 264.9082 L70.7402 264.3867 L70.8125 263.8984 L70.5215 263.8984 L70.3281 264.0801 L70.291 264.3291 L69.9648 264.6016 L69.5518 264.7598 L69.2852 264.9307 L69.3457 265.1582 LBb1 (Unnamed gradient 38) 0 0 0 1 0.912109 1.57982 1.57982 -0.912109 -12560.8203 3047.0698 Bg0.912109 -1.57982 7.17476 4.14235 66.0425 263.2515 Xm7349.7769 -12730.1875 7.17476 4.14235 -7283.7344 12993.4395 Bc0.456055 -0.78991 7.17476 4.14235 66.0425 263.2515 Bm0.456055 -0.78991 7.17476 4.14235 66.4985 262.4614 Bm7349.7769 -12730.1875 7.17476 4.14235 66.9546 261.6719 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k69.3457 265.1582 m69.3457 264.9082 L69.5771 264.9082 L69.7842 264.7222 L69.8135 264.6997 L70.5093 264.2397 L70.5229 264.1484 L70.5215 264.1484 L70.5215 263.8984 L70.6929 264.0806 L70.5625 264.2026 L70.5381 264.3662 L70.4512 264.521 L70.125 264.7935 L70.0542 264.835 L69.665 264.9844 L69.5737 265.0425 L69.5874 265.0938 L69.3457 265.1582 L69.3457 264.9082 L69.3457 265.1582 L69.104 265.2227 L69.0435 264.9951 l69.0156 264.8896 69.0586 264.7788 69.1504 264.7202 C69.417 264.5493 L69.4624 264.5264 L69.8364 264.3828 L70.0576 264.1982 L70.0811 264.0435 L70.1567 263.8979 L70.3501 263.7163 L70.5215 263.6484 L70.8125 263.6484 L71.002 263.7354 L71.0596 263.9351 L70.9873 264.4233 L70.8779 264.5952 L70.1045 265.1064 L69.8398 265.3442 L69.6729 265.4082 L69.3457 265.4082 l69.2324 265.4082 69.1333 265.332 69.104 265.2227 C69.3457 265.1582 Lf69.5518 264.3975 m69.8916 264.4199 L69.9648 264.2383 L70.1338 264.1484 L70.0176 263.96 L69.7246 263.8018 L69.7246 264.1367 L69.5518 264.2383 L69.5518 264.3975 LBb1 (Unnamed gradient 39) 0 0.000977 0 1 0.305664 0.529426 0.529426 -0.305664 1240.4611 6461.8452 Bg0.305664 -0.529426 2.575 1.48668 68.3638 263.7129 Xm2463.0408 -4266.1123 2.575 1.48668 -2394.6768 4529.8252 Bc0.152832 -0.264713 2.575 1.48668 68.3638 263.7129 Bm0.152832 -0.264713 2.575 1.48668 68.5166 263.4482 Bm2463.0408 -4266.1123 2.575 1.48668 68.6694 263.1836 Bcf0 BB0.6875 0.351563 0.914063 0.214844 k69.5518 264.3975 m69.5684 264.1479 L69.7275 264.1587 L69.7329 264.145 L69.8477 264.0176 L70.0166 263.9277 L70.1338 264.1484 L69.9209 264.2798 L69.8398 264.1479 L69.606 264.022 L69.7246 263.8018 L69.9746 263.8018 L69.9746 264.1367 L69.8511 264.3525 L69.8018 264.3813 L69.8018 264.3975 L69.5518 264.3975 L69.5684 264.1479 L69.5518 264.3975 L69.3018 264.3975 L69.3018 264.2383 L69.4253 264.0229 L69.4746 263.9937 L69.4746 263.8018 L69.5967 263.5869 L69.8433 263.582 L70.1362 263.7402 L70.2305 263.8286 L70.3467 264.0171 L70.375 264.2139 L70.251 264.3691 L70.1626 264.416 L70.1235 264.5137 l70.083 264.6138 69.9829 264.6768 69.875 264.6694 C69.5352 264.647 l69.4033 264.6382 69.3018 264.5293 69.3018 264.3975 C69.5518 264.3975 LfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF