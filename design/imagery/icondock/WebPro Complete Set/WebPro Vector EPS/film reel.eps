%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: film reel.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Nick La
%%CreationDate: 3/10/10
%%BoundingBox: 0 0 64 64
%%HiResBoundingBox: 0 0 64 64
%%CropBox: 0 0 64 64
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 28364 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD3BFFA8A87D7E597D5359537D5359537D7D847EA8A8FD68FFA8A8%7D7D52532E5352535259525952595259525952535259537D7DA8A8FD60FF%A8A8597D5259527D597D597E7D847D847D847D847D847D7E597D537D5259%527D7DA8A8FD5AFFA8A8535952535259597D59847D847D847D847D847D84%7D847D847D847D84597E59595253525959A8A8FD56FF7E7D5259537D5984%7E847EA87E847E847E847EA87E847EA884847EA884847EA884A87E847D7D%5359537D7DFD52FFA8845253525959847D847D847D847D847D847D847D84%7D847E847D847E847D847E847D847E847E847E84597D52535284A8FD4EFF%7E7D5359537E7D847D847D847D847E847E847E847E847E847E847E847EA8%84847EA884847EA884847EA884A87E845959527D7DFD4AFFA8A85959537D%5959537D5359537D5359537D597D597E7D847D847D847D847D847D847D84%7D847D847D847E847D847E847D847D7D52595284A8FD44FFA884597D597D%597E597D597E597D597E597D597E597D597D597D59847D847EA884A87EA8%84A87EA884A87EA884A884A884A884A884A88484597D527DA8FD40FF847D%53595359537D597D597D597D597D597D597D597D597D597D597D5959537D%597D59847E847D847E847D847E847E847E847E847E847E847E847EA87D59%52597DFD3CFFA884597D597D597E597D597D597D59847D847D847E847D84%7D7E597E597D597E597D597D597D597E7D847EA884A87EA884A87EA884A8%7EA884A87EA884A87EA8847E535959A8FD38FFA859595359537D597D537D%597E7DA8A8AFA8FFAFFFA8FFAFFFA8FFA8AFA8A87E7E597D597D597D5959%5359597D7D847E847D847E847D847E847D847E847D847E847D847E7E5259%5284FD35FFA87E597D597E597E597E7DA8A8FD17FFA8A87D7E597E597E59%7D597D597D7DA8A8A884A884A884A884A884A884A884A884A884A87D7D52%84FD32FFAF7D595359597D597D59A8A8FD05FFA8FFAFFFA8FFA9FFA8FFA9%FFA8FFA9FFA8FFA9FFA8FFFFFFA8A87D7D597D597D537D535227537DA884%A87E847EA87E847EA87E847EA87E847EA87D59527DA8FD2FFFA85959597E%597D5984A8FD05FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFA9FF%FFFFA9FD05FFA884597E597D597D595927272E7D84A984A884A884A884A8%84A884A884A884A87E7D527DA8FD2CFFA87D5259597D537D7DA8A8FFAFFF%A8FFA8FFA8FFA8FFA8FFA9FFA8FFAFFFA8FFAFFFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8A97D7D597D597D597D2E27F82852A884847EA87E847EA87E84%7EA87E847EA87E7D525984FD2AFFA87D597E597E5984A8FD21FFAFFFFFFF%AFFD05FFA8A8597E7D7E597E59520027277DA8A984A884A884A884A884A8%84A884A8847E537DA8FD28FF7D59597D597D5984A8FFAFFFA8FFA9FFA8FF%FFFFAFFFFFFFA9FFFFFFAFFFFFFFAFFFFFFFA9FFFFFFA9FFFFFFA8FFA8FF%A8FFA8FFA8FFAFA97D7D597D597D59590505F82E7DA884847EA884847EA8%84847EA884A87E7E52597EFD26FF7D59597E7D7D7DAFFFFFAFFFFFFFAFFD%23FFA8FFAFFFA8FFFFFFA884597E597D597D2727002752A8A8A884A884A8%84A884A884A884A88484535984FD24FF5959597D597D7DFFA8FFA8FFA8FF%A8FFA8FFAFFFA8FFFFFFA8FFA8AFA8AFA8A8A8A9A8A8A8AFA8AFA8FFAFFF%A8FFAFFFA8FFAFFFA8FFA8AFA8FFA8FFA884597D597D597D2E27F805277D%A8A87EA87E847EA87E847EA87E847E7E525984FD22FF597D597E597E84FD%05FFAFFD0BFFA8FFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FD0BFF%A9FFAFFFA8FFFFA97D7E7D7E5984592E05272753A8AF84A884A984A884A9%84A884A9847E537DA8FD20FF5959597D597D84FFA9FFA8FFA8FFA9FFFFFF%A9FFFFFFA8AFA8A884A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8AF%A8FFA8FFFFFFA8FFFFFFA8FFA8AFA8FFA8AF7D7D597D537D592E0527F828%7DFFA8A87EA884A87EA884A87EA8847D527DA8FD1EFF597D597E5984A8FF%A9FFFFFFA9FD07FFAFFFA8A9A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF%A8AFA8AFA8AFA8AFA8AFA8FD07FFAFFFA8FFA8FFAFFF7E7E7D7E597E5953%272700277DFFA8A984A884A884A884A884A9847D527DFD1DFF5959537D59%7DA8FFA8FFA8FFA8FFA8FFAFFFA8FFA8A884A9A8A884A9A8A8A8A9A8A8A8%A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8FFA9FFA8FFA9FFA8FFA8%AFA8FFA8FF7E7D597D537D59522727F82752FFA8A884A884A87EA884A87E%A87E7D527EFD1BFF7D7D597E597EA8FFFFFFAFFD09FFA8AFA8AFA8AFA8AF%A8AFA8AFA8AFA8AFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8AFA8AFA8AFA8AF%A9FD07FFA8FFA9FFA8FFA87E5984597D59592E28052752FFA8AFA8AF84A9%84A884A984A97E7D53A8FD19FF7D59597D597EA8FFA8FFA8FFA8FFFFFFA8%FFFFAF84A9A8A8A8A9A8A8A8A9A8A8A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8%A9A8AFA8A8A8AFA8A8A8A9A8A8A8FFFFFFA8FFFFFFA8FFA8AFA8FFA87D59%7E597D53532827F82728A9A8A9A8A884A884A884A884A87D7D52A8FD17FF%A87D597E597DA8FFAFFFA8FD07FFA9AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF%A8AFA8AFA8FFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FD%07FFA8FFA8FFA8FFA87E597E597D59532E2E052728A9A8AFA8AFA8A984A8%84A884A8597D7DFD16FFA87D537D597D84FFA8FFA8FFA8FFA9FFA8FFA8A8%84A9A8A884A9A8A8A8A9A8A8A8AFA8AFA8FFA8FFA8FFA8FFA8FFA8A8A8A9%A8A8A8A9A8A8A8A9A8A8A8A9A8A884AFA8FFA8FFA8FFA8AFA8A9A8FFA87D%597D595952522828F82727A9A8A9A8A884A884A87EA8848452597DFD15FF%84597D597E84FFAFFFAFFD07FFAFAFA8AFA8AFA8AFA8AFA8FFA8FFA9FFAF%AF847D52532E522852285359FFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8%FFA8AFAFFD05FFAFFFA8FFA8FFA8847D7E597E59522E5227272EFFA8AFA8%AFA8AFA8A984A884A8597DA8FD13FFA8537D597D7DFFA8FFA8FFA8FFA8FF%FFFFA8A9A8A8A8A9A8A8A8AFA8AFA8FFA87D2E2E0000FD09F8007DFFA8AF%A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A8A8FFAFFFA8FFA8A9A8AFA8AF%847E597D537D522E282E050528FFA8A8A8A9A8A884A884A8847E527DFD13%FF597D597E7DAFA9FFAFFFA8FD05FFA9A9A8AFA8AFA8AFA8FFA9FF845927%27F8F8F805F805F827052705270505F87DFFAFA8FFA8AFA8FFA8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8FFFFFFAFFFAFAFA8FFA8FF847E7D7D597E52522E%2E272752FFA8AFA8AFA8AFA8A984A8847D53A8FD11FF7D59597D53A8A8FF%A8FFA8FFA8FFA9FFFD05A8A9A8A8A8FF84532705F8F8F800F80500280528%052E0528052EF8F852FFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8A9A8A8A8A9%A8A8A8FFA8FFA8FFA8A8A8AFA8AF7D7D597D537D2E2E2828F82752FFA8A8%84A9A8A884A884A87D5953FD10FFA87D597E5984AFFFA8FFAFFD05FFAFAF%A8AFA8AFA8AFA8FF5305F805F8050528272E272E282E272E282E052E2705%F87EFFFFA8FFA8FFA8FFA8FFA8FFA8AFA8FFA8AFA8FFA8AFA8AFA9FD05FF%A8FFA8AFA8FF7E7E597E597D2E522E2800277EFFA8AFA8AFA8AFA8A984A9%7D7D7DFD0FFF7D537D597DA8FFA8FFA8FFFFFFA8FFA9A8A8A9A8A8A8AFA8%FF59F8F800F8270528052E052805280528052E272E272EF8007DFFA8AFA8%AFA8AFA8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8A9A8FFA8FFA9FFA8AFA8%A8A8A9597D597D595327522E27F828A8AFA8A9A8A8A8A9A8A884845359A8%FD0DFFA9597D597E84FFA8FFA9FD07FFA8AFA8AFA8AFA8AFFF52F827272E%272E282E052E272E28535259527D597D522727A8A8FFA8FFA8FFA8FFA8FF%A8AFA8FFA8AFA8FFA8AFA8AFA8AFA8AFA9FFAFFFFFFFA8AFA8AFA8A97D7E%597D595328522E27F852A9AFA8AFA8AFA8AFA8A9847E5384FD0DFF595959%7D59AFA8AFA8FFA8FFA8FFAFAF84A9A8A8A8A9A8A8A8FF52F8F828052805%28052E2E535259537D535952595353F827A8AFA8AFA8A9A8AFA8A9A8AFA8%A9A8AFA8A9A8AFA8A9A8A9A8A8A8A9A8FFA8FFA8FFA8A9A8A8A884597D53%7D532E28522727F87DA8A884A9A8A884A8A8A87D7D52AFFD0BFFA87D597E%59A8FFFFA8FFAFFD05FFA8AFA8AFA8FFA8AFA8FFA9AF0505052E2753527D%597D597D597D597D537D597D522727AFA9FFA9FFA8FFA9FFA8FFA9FFA8FF%A8FFA8FFA8FFA8FFA8AFA8FFA8AFAFFD05FFA8AFA8FFA8845984597D5252%2E52272727A8A8AFA8AFA8AFA8AFA8AF7D7D7DFD0BFF7D537D597DA8FFA8%AFA8FFAFFFA8FFA8A8A8AFA8A9A8AFA8A9A8AFFF53F8052E59537D535952%7D5359527D535952595352F828A8AFA8FFA8AFA8FFA8AFA8FFA8AFA8AFA8%AFA8AFA8A9A8AFA8A9A8AFA8A9A8FFA9FFA8AFA8A8A8AF847D597D59592E%522E2E05272EFFA8A9A8A8A8A9FD04A8537DA8FD0AFF597D597E84FFA8FF%A8FD05FFA8AFA8AFA8AFA8AFA8AFA8AFA8FFA827F8527D7D537D597D537D%597D537D597D537D522727FFAFFFA8FFA9FFA8FFA9FFA8FFA8FFA8FFA8FF%A8FFA8AFA8FFA8AFA8AFA8FFAFFFFFFFA9AFA8AFA8FF7E7D597D59592852%2E2E00277DFFA8AFA8AFA8AFA8A9A87E53A8FD09FF7D59597D59A9A8AFA8%AFA8FFA8FFA8A884A9A8A8A8A9A8A9A8AFA8A9A8FF5905F8535359525952%5952595259525952595252F82EA8FFA8AFA8FFA8AFA8AFA8AFA8AFA8AFA8%AFA8A9A8AFA8A9A8AFA8A9A8A9A8AFA8FFA8FFFD06A8597D597D59522752%2827F828A8A9A8A9A8A884A8A8A87D7D59FD08FFAF7E597E59A8AFFFA8FF%AFFD05FFA8AFA8AFA8FFA8AFA8FFA8FFA8FFA9FF2727277D537D597D537D%597D537D597D537D2E2728FFAFFFA8FFAFFFA8FFA9FFA8FFA9FFA8FFA9FF%A9FFA9FFA8FFA8AFA8FFA8AFA8FFFFFFAFFFA8AFA8AFA8A85984597D5352%2E522827057DA9AFA8AFA8AFA8AFA8AF7D7DA8FD07FFA8537D597D84FFA8%AFA8FFAFFFA8FFA8A8A8AFA8A9A8AFA8A9A8AFA8A9A8AFA87DF827525952%7D535952595359525953595252F852A8FFA8AFA8FFA8AFA8FFA8AFA8FFA8%AFA8FFA9A87DFFA8A9A8AFA8A9A8AFA8A8A8FFA8FFA8FFA8A8A8A9A87E59%7D59592E522E52272727A8A8A9A8A8A8A9A8A8A884527DFD07FF7D7D597E%7DAFA8FFA8FFAFFFFFFFA8AFA8AFA8AFA8AFA8FFA8AFA8FFA8FFA8FFFF52%F82E597D537D597D537D5959537D597D272752FFA8FFAFFFA8FFA9FFA8FF%A9FFA8FFA9FFFF59F80027A8FFAFA8FFA8AFA8AFA8AFA8FFFFFFAFFFA8A9%A8AF847E597D595928522E52272752FFA8AFA8AFA8AFA8AF847D59FD06FF%A87D537D5384A8A9A8AFA8FFA8FFA8A984A9A8A8A8A9A8A9A8AFA8A9A8AF%A8A9A8FF7D27F8525359525952595259525952595228F853FFAFA8FFA8AF%A8FFA8AFA8FFA8AFA8FFFF52FD05F87EFFA9A8AFA8A9A8A9A8A9A8FFA8FF%FD04A884A8597D597D595228522E27F827A8A9A8A9A8A884A8A8A8597D84%FD05FFA9597D597EA8FFA8FFA8FD05FFA8AFA8AFA8FFA8AFA8FFA8FFA8FF%A8FFA8FFA9FF2E27277D537D597D537D597D597D597D272752FFA9FFAFFF%A9FFAFFFA9FFAFFFA8FFFF7DF8050528F80500A8FFFFA8FFA8FFA8AFA8FF%FFFFAFFFA8A9A8AFA8A85984597D53522E522E27057DA9AFA8AFA8AFA8AF%A8A85984FD05FF7D59597D59AFA8A9A8FFAFFFA8FFA8A8A8AFA8A9A8AFA8%A9A8AFA8AFA8AFA8AFA8FFAF84F8272E595259535952532E2E27522727F8%7DFFFFA8FFA8FFA8FFA8FFA8FFA8AFFF7DF8F8F82E2728F8F800A8A8AFA8%A9A8AFA8A9A8FFA8FFA8FFA8A884A8A87E597D59592E522E52272727A9A8%A9A8A8A8A9A8A8847D59FD05FF7D597E5984A8FFA8AFA8FFFFFFAFAFA8AF%A8AFA8AFA8FFA8AFA8FFA8FFA8FFA9FFA8FFFF52F828597D525227270527%0027F82700277DFFAFFFA8FFAFFFA8FFAFFFA8FFFF84F805002E272E2728%F80027FFA8FFA8AFA8FFA8AFA8FFFFFFA9FFA8A8A8AF847D597D59592852%2E5205277DFFA8AFA8AFA8AFA8A97D7DA8FFFFFFA95359597D84AFA8AFA8%FFA8FFA8FFA8A9A8A8A8A9A8A9A8AFA8A9A8AFA8AFA8AFA8AFA8FF7D27F8%282727F805F827275252522E5227A9A8FFA8FFA8FFA8FFA8FFA8AFA8A8F8%F8F8280528052E2827F8F852FFA8AFA8A9A8AFA8A8A8FFA8FFA8A884A884%A8597D597D532E28522E27F852A8A884A9A8A884A8A87E5284FFFFFF847D%597E7DAFA8FFA8FFAFFFFFFFA8AFA8AFA8FFA8AFA8FFA8FFA8FFA9FFA8FF%A9FFA8FFAFFF52270027002E527EA8FD0BFFAFFFFFFFA9FFAFFFFFFF2700%F82E282E055353595228F80584FFA8FFA8FFA8AFA8FFFFFFAFFFA8A9A8AF%A8845984597D2E522E52282727A8A8AFA8AFA8AFA8AF847D7DFFFFFF8453%7D5984A8A9A8AFA8FFA8FFA9A9A8AFA8A9A8AFA8A9A8AFA8AFA8FFA8AFA8%FFA8AFA8FFA8FF5352527DA8FD0DFFAFFFA8FFA8FFA8FFFFFF27F8F82705%2E052E525952595227F828A8FFA8A9A8AFA8A9A8FFA8FFA8FF84A884A87E%7D597D595328522E52052752FFA8A9A8A8A8A9A8A8537DA8FFFF597D597D%7DFFA8AFA8FFFFFFAFFFA8AFA8FFAFFFA8FFA8AFA8FFA8FFA8FFA9FFA8FF%A9FFA8FFAFFD15FFAFFFFFFFAFFF2EF8F828282E05525359525953592E05%F87DFFFFA8AFA8FFA8AFA8FFAFFFA8AFA8A8A8A97D7E597D59522E522E2E%F852A8AFA8AFA8A9A8AFA87E53A8FFA859537D5984A8A9A8A8A8FFA8FFA8%A9A87D2E7DA8FFA8AFA8A9A8AFA8AFA8FFA8AFA8FFA8AFA8FFAFFFA8FFAF%FFA8FFFFFFA8FD07FFA8FFFFFFA8FFA8FF52F8F8050528052E525952532E%59525927F805FFA8AFA8A9A8AFA8A9A8FFA8FFA8A884A88484597D537D2E%2E2852272700A8A8A884A9A8A884A97D597DFFAF597E7D7E84FFA8AFA8FD%05FFAF7DF805F82753FFFFFFA8FFA9FFA8FFA9FFA8FFAFFFA9FD09FFA9AF%A8AFA8A9A8FD0BFFA827F827272E272E527D5359525953595359050059FF%A8FFA8FFA8AFA8FFFFFFAFFFA8A8A8AF847E597E59592E532E52272759FF%A8AFA8AFA8AFA8A85984FF8459597D59A8A8A9A8A9A8FFA9FFA8AF05F8F8%05F8F8057DA8FFA8FFA8AFA8FFA8AFA8FFA8FFAFFD05FFA8A87EA87E847E%A87E847EA884AFFD04FFA9FFFF7DF8050528052E52595259525352595253%522EF827A8FFA8A9A8AFA8A9A8FFA8FFA8A984A884A8597D597D53522852%2E27F852A8A8A8A9A8A884A9847D59FFA8597D5984A8AFA8AFA8FFA9FFFF%FF7D05F8280527F8F8F8287DFFFFFFA9FFA8FFA9FFA8FD07FFA8A884A884%A884A884A884A884A884A8A8FD05FF7D00F82E272E2E5953595259535952%5953592E27F87DFFFFA8AFA8FFA8AFA8FFAFFFFD05A8847D7E597D2E522E%53282727AFA8AFA8AFA8A9A8A97D7DA87D59597D59A9A8A884AFA8FFA8FF%A859F8050528052800F8F8F8277DA8FFA8AFA8FFA8FFA8FFAFFFFFFF8484%7DA87E847EA87E847EA87E847EA87E8484FD05FF00F8F8282E592E595253%2E5952532E595253270027FFA8AFA8A9A8A9A8AFA8FFA8AF7EA884A87D7D%595953532852285200277DAFA8A884A9A8A8847D52A884597E5984A8AFA8%AFA9FFAFFFAFFF5200052E272E282E0527F800F82E7DFFFFFFAFFD07FF84%A884A884A884A984A884A984A884A984A884A8A8FD04FF84F805277D5259%53595259535952595359525227277EFFA8FFA8FFA8AFA8FFAFFFA9AFFD04%A87D7E597E53522E532E27007DAFAFA8AFA8AFA8AF7D7DA8597D597D7DAF%A8A8A8FFA9FFA8FFA82EF82727280528052805280000F8F8277DA8FFA8FF%A8FFFFFF84A884A87EA884A87EA884A87EA884A87EA884A87EA884FD04FF%52F8272E59525952532E5952532E5952532E27F852A8AFA8A9A8AFA8A9A8%FFA8FFA8A884A8847E597D59592E522E5227052EFFA8A8A8A9A8A8A88452%A87D597E5984A8AFA8A9A8FFFFFFA8FF27F8052E282E2E532E2E052E2727%F800F852A8FD05FFA8A884A884A884A884A884A9A8A884A984A884A984A8%84A8A8FD04FF52F8285359525953595259525952595259272727FFA8FFA8%AFA8AFA8FFA8FFAFAF84A8A8A87D7E597D59532E522E520552A8AFA8AFA8%AFA8AF7D7D7D5359597D7DA884A8A8FFA8FFA8FF8427F82705282E595259%2E2E05280527F800F853FFFFA9FFA8A87EA87EA884A87EA8A8A87D847DA8%A8A884A87EA884A87EA8A8FFA8FFA827F82E52532E5952532E532E532E53%5252F8277DFFA8AFA8A9A8A9A8FFA8FFA8A87EA88484597D59592E522E52%272727A8A8A9A8A884A8A884527D7D59847DA8A8AFA8AFA9FFFFFFA9AF05%05052E287D537D597D53592E2E272E00F852FD04FFA984A884A984A884FF%7D522727002705527DAFA8A9A8A984A9A8A8A9FFFFFF5927275352595359%5259535952595359522E0052FFFFA8FFA8FFA8FFA9FFAFFF84A9A8A87E84%7D7D59592E522E5227277EFFA8AFA8AFA8AF847D7D5959597D7EA8A8A9A8%FFA8FFA9FF8405F827052E53595259525952592E2E0500F8A8FFFFFFAF7E%A884A884A884A82E05F8F8F805F8F8F8002784A8A884A884A884A8A9FFFF%FF272727532E5952532E5952532E595253272727A9A8AFA8A9A8AFA8FFA8%FFA8A87EA88484597E597D52522E522827007DA8A9A8A884A9A8A8537D7D%597E59A8A8A9A8AFAFFFA9FFAFA8F805272E2E7D5359537D5359537D592E%F827FD04FFA8A884A984A884AF2EF8F8270528052E0505F800057EA8A9A8%A884A984FD04FF7D0027525952595259525952595259535305277EFFA8FF%A8AFA8FFAFFFA8FFA8A884A8847E597E59592E522E52272759FFA8AFA8A9%A8AFA87D59537D597D7DA8A8A884FFA8FFA8FF7D00F82805525259525952%5952595259270028FFA9FFA8A884A87EA884A82EF8F827272E2728052E05%05F8F8F87EA8A884A884A8A8FFA8FFFF28F82E52532E532E532E5952532E%522727F859A8A9A8AFA8A9A8FFA8AFA8A87EA87EA8597D597D535228522E%27F853A8A884A9A8A884A8597D7E597E59A8A8A9A8AFAFFFAFFFFF84F827%282E527D5359537D5359537D532EF87DFD04FF84A884A9A8AF7D27F82728%2E282E272E282E272EF80005AFA8A9A8AFA8A9AFFFFFFF53272759525953%5952532E2EFD0427002753FFA8FFA8AFA8FFAFFFA9FFA8A884A88484597E%597D2E532E52272752FFA8AFA8AFA8AFA87D59537D597D7DA9A8A884FFA8%FFA8FF7D00F82E27535259525952595259525927277DFFAFFFA8A884A884%A8A82EF827282E272E0528052E05280527F8F82EFF84A884A884AFFFFFFF%A800272852272E2727F827F8050027275252A9A8A9A8AFA8A9A8FFA8AFA8%AF84A87EA87D7D597D595228522E28F852A8A8A8A9FD04A8597D7D597E59%84A8A9A8A8A8FFAFFFAF84F805052E5359525953595259535952280584FF%FFFFAF84A9FD04A805052752282E285352592E5328280527F80584AFA8A9%A8A9A8FD04FF2EF8270527F8FD04275359A8A8FFFFFFA8FFA8AFA8FFA8AF%A8FFA9FFA8A884A884847D7E597D52522E53272728FFA8A9A8AFA8A9847D%7D5959597D7DA884A884AFA8FFA8FF7D00F8282759525952595259525952%5300277DFFA8FFA8A884A884A85300F82E272E2E59525952532E592E2805%05F853A8A884A884A8A9FFA8FF7D280027275252A8A8FFA8FFA8FFA8AFA8%A9A8AFA8A9A8A9A8A9A8FFA8AF7DA87EA87D7D595953532852282EF82EA8%A9A8A884A8A8A8537D7E597E7D84A8AFA8A9A8FFAFFFFFA8F80505525359%537D5359537D5359522727A8FFFFFFAF84AFA8A9A87DF8272E2E2E7D537D%5359525953592E2E00F827FFA8AFA8AFA8FD07FFA9FD05FFA9FFAFFFA8FF%A9FFA8FFA8FFA8FFA8AFA8FFAFFFA8A884A884A87D7E597E52522E532827%27FFA8AFA8AFA8AF847D7D7D59597D7DA884A884A9A8FFA8FF7D05F82828%595259525952595259525305277DFFA8FFA8A884A884AF5200002E285953%59525952532E592E532E27F82784A9A8A884A9A8FFA8FFA9FFA8FFA8FFA8%FFA8AFA8FFA8AFA8FFA8AFA8AFA8A9A8AFA8A9A8FFA8AF7EA87EA87D7E59%7D59592E522E2EF82EA8AFA8A884A9A8A8537DA8597D5984A8A8A8A9A8FF%A8FFFF84F805272E52595359525953595259532700A8FFFFFFAFA8A9A8AF%A859F8272E59537D53595259535952595259270505A8A8AFA8A9A8FD07FF%A8FFAFFFA8FFAFFFA8FFA9FFA8FFA8AFA8FFA8AFA8AFA8FFA8FFA9A87EA8%8484597E597D52522E52272728AFA8AFA8A9A8AF847D7D7D59597D59A884%A87EA8A8FFA8FF7E00F828285952595253525952535259270553FFA8FFA8%A884A884AF52F8F82E5259525952532E592E532E532E2EF80584A884A9A8%A8A8FFA9FFA8FFA8FFA8FFA8AFA8FFA8AFA8FFA8AFA8AFA8A9A8AFA8A9A8%AFA8AFA8AF84847DA87D7D597D595328522E28F852A8A884A8A8A8848452%7DAF597D598484A9A8A9A8FFA9FFFFAFF8270552537D535953595359537D%532EF87DFD04FFA8A9A8AFA8A8F827287D537D535953595359525952592E%0505A9A8AFA8AFA8FD07FFAFFFAFFFA9FFAFFFA8FFA9FFA8FFA8FFA8FFA8%AFA8FFA8FFA8FFA9A884A884845984597DFD0452272752FFA8AFA8AFA8AF%7E7D7DA87D597D5984A8A884A8A8FFA8FFA805F8272E5952595259525952%532E52270052FFA9FFA8A9A8A884A9A827F827535952595259525952532E%532E2EF828A8A9A8A9A8A8A8FFAFFFA8FFA8FFA8FFA8FFA8FFA8AFA8FFA8%AFA8AFA8A9A8AFA8A9A8AFA8AFA8FF84847DA87D7D597D595328522E28F8%52A8A8A8A9A8A8848452A8FF59FD047DA9A8A884FFAFFFAFFF0505055353%5952592E52272E2727002727A9FD04FFA8AFA8A9A8FF53F8F85959595359%5359525952592E59270552FFA8AFA8AFA8FD05FFA8FFAFFFA8FFAFFFA8FF%A9FFA8FFA8FFA8FFA8AFA8FFA8AFA8FFA9FFA8A884A87E847D7E597D5252%2E53272752FFA8A9A8AFA8A97D7DA8FF7D537D597E84A884A8A8FFA8FFA8%27F805052E2727F827F800F827002727A8A8FFA8FFA9AF84FD04A8A905F8%05595259525952532E532E532727F884A8A9A8A884AFA9FFA8FFA8FFA8FF%A8FFA8FFA8AFA8FFA8AFA8AFA8A9A8AFA8A9A8A9A8A9A8FFA8A97D847D84%7D7D595953532E522827F859A8A9A8A884A8847D52A9FF7E7D597E7DA9A8%A884AFAFFFA9FF59F8F827002705272752527D7DA8A8FFFFFFA9FD04FFAF%A8AFA8AFA984F827277D537D5359525953592E270052A9FFA8AFA8AFAFFD%05FFAFFFAFFFA9FFAFFFA8FFA9FFA8FFA9FFA8FFA8FFA8FFA8AFA8FFA9FF%A8A884A884847D7E597E52522E5327277DFFA8AFA8AFA8A8597DFFFFA853%7D597D7EA884A884FFA8FFA8FF53282753537D7EAFA8FFA8FFA8FFA8FFA8%FFA8FFA9FFA8A9A8A8A8A9A859F82727525259525952592827F82EA8AFA8%AFA8A8A8FFAFFFA8FFA8FFA8FFA8FFA8FFA8AFA8FFA8AFA8AFA8AFA8AFA8%A9A8AFA8AFA8FFA8A97D847E847D7D595953522E522827057EA8A9A8A884%A97E7D59FFFFA87D597E7D8484FD04A8FFAFFFA8FFA9FFA9FFAFFFA8FFA8%FFA8FFA9FFA8FFAFFFAFFFFFFFA8AFA8AFA8AFFF7D0027272828522E5227%27002E84FFA8AFA8AFA8FD05FFAFFFFFFFA8FFAFFFA8FFA9FFA8FFA8FFA8%FFA8AFA8FFA8AFA8AFA8FFA8FFA8A87EA88484597E597D2E5352520528A8%AFA8AFA8A9A8A859A8FFFFFF5959597D7DA87EA87EA8A8FFA8AFA8AFA8A9%A8AFA8A9A8AFA8AFA8FFA8AFA8FFA8FFA8FFA8FF84A9A8A8A8A9A87E2727%F805F827F8000052A8AFA8A9A8A9A8AFA8FFA8FFFFFFA8FFFFFFA8FFA8AF%A8FFA8AFA8AFA8A9A8AFA8A9A8A9A8A8A8AFA8AFA8A87D847D84597D597D%53522852272727A9A8A884A884A8597D84FFFFFF84597E7D8484A9A8A8A8%FFAFFFA9FFA8AFA8FFA8FFA8FFA9FFA8FFA9FFA8FFAFFFA9FD05FFA8AFA8%AFA8AFA8FF7D592852275252A8FFFFA8FFA8AFA8FFAFFD04FFA827272759%A8FFFFFFA8FFA9FFA8FFA9FFA8FFA8FFA8FFA8AFA8FFA9FFA8FFA8847EA8%8484597E597D2E53522EF853A8AFA8AFA8AFA87E59FD04FF8459597E5984%84A884A8A8FFA8FFA8AFA8A9A8AFA8A9A8AFA8AFA8FFA8AFA8FFA8FFA8FF%A8FFA8FFA8A9A8AFA8A9A8FFA8AFA8AFA8FFA8AFA8A9A8AFA8A9A8FFA9FF%A8FF27F8F800F82752FFFFFFA8FFA8AFA8AFA8AFA8AFA8A9A8AFA8A9A8FF%A8AFA8A87D847D84597D597D52522E52270552FFA8A884A9A8A8537DFD05%FF597D597E7EA884A884AFA8FFAFFFA8AFA8AFA8FFA8AFA8FFA8FFA8FFA9%FFA8FFAFFFA9FFFFFFAFFFA8AFA8AFA8AFA8FFA8FFA8FFA8AFA8FFA8AFA8%AFA8FFAFFFFFFF5305F8270527F800277EFFFFA8FFA8FFA8FFA8AFA8FFA8%AFA8AFA8AFA8FFA8FF7EA87E847D7E7D7D59592E522E272784A8AFA8A9A8%AF7D7D7DFD05FF7E537D597E7EA87EA884AFA8FFA8AFA8A9A8A9A8AFA8A9%A8AFA8AFA8FFA8AFA8FFA8FFA8FFA8FFA8FFA8A8A8AFA8A9A8AFA8A9A8AF%A8A9A8AFA8A9A8FFA8FFA8FFA805F80505280505F8F8F82E7DFFA8AFA8A9%A8AFA8A9A8AFA8A8A8A9A8AFA8AFA8847D847D7E597D59592E522E2EF827%84A884A884A8847D52A8FD05FF847D59847DA884A884A8A8FFAFFFA8FFA8%AFA8FFA8FFA8FFA9FFA8FFA9FFA8FFAFFD05FFAFFFFFFFA8FFA8AFA8FFA8%FFA8FFA8FFA8FFA8FFA9FFFFFFAFFFFF52F827272E272E282E0527F8052E%A8FFFFA8FFA8FFA8FFA8AFA8FFA8FFA8FFA9AF7EA87EA87D7E7D7D595952%53272752FFA8AFA8AFA8A87D7DA9FD06FF5959597D7DA87EA87EA8A8FFA8%FFA8AFA8A9A8AFA8A9A8AFA8AFA8FFA8AFA8FFAF7D53FFFFFFA8FFA8FFA8%FFA8A9A8AFA8A9A8AFA8A9A8FFA8FFA8FFA8FFFF7DF800052E052805522E%532727F8F8F852A8FFA8AFA8A9A8AFA8A9A8AFA8AFA8FF84847D847D7D59%7D59592E522E27F87DA8A884A9A8A87D7D7DFD07FF84597D598484A884A8%84FFA8FFA9FFA8AFA8AFA8FFA8AFA8FFA8FFA8FFA9FFFF7DF8F828FFFFFF%A8FFAFFFA9FFAFFFA8FFA8FFA8FFAFFFAFFFFFFFA8FFFF84F805052E052E%052E2E592E532E2E0500F82759FFA8FFA8AFA8AFA8AFA8FFA8AFA8A87E84%7D847D7E597E53522E52052784AFA8A9A8AFA87D53A8FD07FF8459597D59%847E847DA8A8AFA8FFA8A9A8A9A8A9A8AFA8A9A8AFA8AFA8AFFF7DF800F8%F827A8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8F8F8F8%280528052E2E522E532E522E532705F8F853FFA8A9A8A8A8A9A8A9A8AFA8%A87D847D84597D595953592852272727A984A884A884A8537DA8FD08FF7D%7D59847DA884A884A8A8FFA9FFA8FFA8AFA8FFA8FFA8FFA8FFA8FFFFA8F8%050527F805007DA9FFFFFFA9FFAFFFAFFFFFFFAFFFFFFFAFFFAFFFFFA800%05F82E282E052E2E592E592E532E5952592E28F82EA8FFA8AFA8FFA8AFA8%FFA8FFA8847E847E847D7E597E52522E27057DA8AFA8A9A8AF7D7D7DFD09%FFA8537D597E7DA87EA87EA8A8FFA8AFA8AFA8A9A8AFA8A9A8AFA8AFA8AF%05F8F82E2727F800F82752FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA852%F800F827052E052827532E522E532E522E532E52272727AFA8AFA8A9A8A9%A8AFA8AFA8847D847D84597D595953522E2EF82784A884A9A8A8847D53A8%FD09FFA87D597E598484A87EA884FFA8FFA9FFA8AFA8AFA8FFA8AFA8FFAF%FF2705F828272E282E0527F8000559A8FFFFFFAFFFA8FFAFFFA8FFAFFFFF%52F805002E282E052E28532E532E532E532E532E532E27F87DFFAFA8AFA8%AFA8FFA8AFA8AF7E847D847D7E597E59592E53272752FFA8A9A8AFA88453%84FD0BFF7D59597D59847E847D84A8AFA8FFA8A9A8A9A8A9A8AFA8A9A8FF%28F8F827052827532E280527F8F8F8052759A8FFA8AFA8FFA8AFA8FFA8FF%27F8F8280528052805522E522E522E522E522E522E2EF8277EAFA8A8A8A9%A8A8A8AFA8A97E847D7E7D7E597D537D525227270584A8A884A884A85959%A8FD0CFF597D59847DA884A884A8A8FFA9FFA8FFA8AFA8FFA8FFA8FF5305%F828282E285952592E2E272E0527F805F852AFFFA9FFAFFFA9FFAFFFFF7E%F805052E282E275352532E592E532E592E532E53272752FFA8AFA8FFA8AF%A8FFA8FFA8A87E847D847D7E597E5953522E0052A8AFA8A9A8AF7D7D7DFD%0DFF84537D597E7D847DA87DA8A8FFA8AFA8AFA8A9A8AFA8FF7D05F80505%2E27522E532E532E2E052805280500F859FFAFA8FFA8AFA8FFA8FFA828F8%050528272E2E532E522E532E522E532E52272727A9A8AFA8A9A8A9A8A9A8%AFA8A87D847D7E597E597D59592E2EF8277DA984A9A8A8847D53A8FD0DFF%A87D597E598484A87EA884AFA8FFA9FFA8AFA8AFA8FF8427F827282E0553%52532E5952532E53282E052E050027FFAFFFA8FFA9FFA8FFA9FF7D05F827%28532E532E532E532E532E532E592E27007DAFAFA8AFA8AFA8AFA8AFA8FF%84847D847E7E597E597D5252272728FFA8A9A8AFA8845384FD0FFF7D5959%7D59847E847D847EAFA8AFA8AFA8A9A8AFA827F805052E052E2E532E522E%532E522E532E2E0527F827A8FFA8AFA8FFA8AFA8FFA8FF27F8F8522E522E%522E522E522E522E522E27F852A8AFA8A8A8A9A8A8A8AFA8A984847D7E7D%7E597D537D53522727007EA8A884A884A85359A8FD10FF597D59847DA87E%A884A8A8FFA9FFA8FFA8AFA952F805052E272E525952592E5952592E5952%592E59270528FFAFFFA8FFA9FFA8FFA9FFFFA8000527592E532E592E532E%592E532E2E052784FFA8AFA8FFA8AFA8FFA8AFA8A87D847D847D7E597E59%592E280052A8AFA8A9A8AF7D7D7DFD11FFA85359597D7D847D847D84A8FF%A8AFA8AFA87DF8050528052E2E532E532E522E532E522E532E522E2EF852%A8FFA8AFA8FFA8AFA8FFA8AFFF52F8272E532E522E532E522E532E2EF827%53FFA8AFA8A8A8A9A8A9A8AFA8A87D847D7E597E597D537D5227F82784A8%84A9A8A87D7D59FD13FF7E597D597E7EA87EA87EA8A8FFA8FFA8FF52F8F8%2E272E2E5952532E5952532E5952532E592E53272753FFA8FFA8FFA8FFA9%FFA8FFA8FFA827F82E2E532E532E532E532E5227272EFFA8AFA8AFA8AFA8%AFA8AFA8FF7E847D847D7E597E597D5352272752FFA8A9A8AF847D53A8FD%13FFA859537D597D7D847D847DA8A8AFA8AFA884F8F8F82E2E532E532E52%2E532E522E532E522E532E27F87DA8AFA8AFA8AFA8AFA8AFA8AFA8FF52F8%F82E2E522E522E522E2E052727A8A8A9A8A8A8A9A8A8A8A9A8A97E7E7D7E%597E597D537D5952002727A884A884A8847D527DFD15FF7E7D59847D847E%A884A87EAFA9FFA8FFFF7DF8052752525952592E5952532E5952532E5952%5327277DFFA8FFA9FFA8FFA9FFA8FFA8FFA8FF270527592E532E59525327%2727A8A8AFA8AFA8AFA8AFA8FFA8AFA8847D847D847D7E597E597D272727%A8A8AFA8A9A884597DAFFD16FF5959597E597E7D847D847DA9A8A9A8FFFF%7D0027052E2E532E522E532E522E532E522E532E270084A8AFA8AFA8AFA8%AFA8AFA8AFA8A9A87DF80528532E522E522727007EA8A8A8AFA8A8A8A9A8%A9A8AFA88459847D7E597D597D537D2727F87DA8A884A8A884527DA8FD18%FF597D597E7D847EA87E847EAFA9AFA8FFFFA827270527285952532E592E%532E532E532E53272784FFA8AFA8FFA8AFA8FFA8AFA8FFA8FFA852F8272E%5952522727277EA8AFA8AFA8AFA8AFA8AFA8AFA8A87D847D847D7E597E59%7E2E270052A8AFA8A9A8A8597D7EFD19FFA85359597D597E7D847D7E7DA9%A8A9A8AFA8A95227F82727522E522E532E522E532E52282705A8A8AFA8A9%A8AFA8A9A8AFA8A9A8AFA8FF7D00F82E2E280005057EA8A8A8A9A8A884A9%A8A8A8A9A8A8597E597E597E597D537D5227F82EA8A884A8A8A8537D7DFD%1BFF84597E7D7E7DA87E847E8484AFA8FFA8FFA8FF84520527272E2E5952%532E592E532E522728A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8AFA8FF2EF805%27052727A8FFAFA8AFA8AFA8AFA8AFA8AFA8AF7D847D847D847D7E597E59%28F82E84AFA8AFA8A87D7D7DFD1CFFAF7D537D597D59847D847D847DA9A8%AFA8A9A8FFA87D2727F82727522E522E532E52272727A9A8AFA8A9A8AFA8%A9A8AFA8A9A8AFA8A9A8A827F8F82E53AFA8A9A8A8A8A9A8A8A8AFA8A8A8%AF7D7D597E7D7E597D59595952F8277DAF84A884A8595959FD1EFFA97D59%7E7D7E7D847E847D847EAFA8FFA8AFA8FFA9FF7D520527002828532E5952%2EF852A8AFA8FFA8AFA8FFA8AFA8AFA8AFA8AFA8AFA8AF7D84A8FFA8AFA8%AFA8AFA8AFA8AFA8AFA8AF7E847D7E7D847D7E597D595300277DFFA8A9A8%A8597D7DFD20FFA859537D597D59847D7E7D847DA8A8AFA8A9A8AFA8AFA8%7D2727F82705272753270028FFA8A8A8A9A8A8A8A9A8A9A8A9A8A8A8A9A8%A8A8FFA8A8A8A9A8A884A9A8A8A8A9A8A8A8A97D7D597E597D597DFD0459%052759AF84A884A8595959FD22FFA87D597E59847D847D847E847DAFA9FF%A8FFA8AFA8FFAFFF7E59272700272727F859FFAFA8FFA8AFA8FFA8AFA8FF%A8AFA8FFA8AFA8FFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF847E7D847D84%7D7E7D7E597E27277DFFA8A9A8A87D7D7DFD24FF7E59597D597D597E7D84%7D7E7DA8A8A9A8AFA8A9A8AFA8AFA8A8532E0027F8277DFFA8A9A8AFA8A9%A8AFA8A9A8AFA8A9A8AFA8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A87D7E%597D597E597D597D597D27277DA984A9847E527D7DFD26FF847D597D597E%7D847D847E847DA8A8AFA8AFA8AFA8AFA8AFA8FFA8A852597DFFA8AFA8AF%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF%7E7E7D847D7E597E7D7D597E2E287EFFA8A9847E597D7DFD28FF7E59537D%597D597E7D847D7E598484A9A8A9A8A8A8A9A8A884A9A8FFA8AFA8A8A8A9%A8A8A8A9A8A8A8A9A8A8A8A9A8A884A9A8A884A9A8A884A9A8A884A9A8A8%597D597D597E597D597D59592E5284A884A87D7D527DA8FD2AFFA87D597E%7D7E59847E847D847D847EAFA8AFA8FFA8AFA8FFA8AFA8AFA8AFA8AFA8AF%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8A87D84%7D847D847D7E597E597D527DA8AFA8A87D7D5384AFFD2CFFA859537D597D%597E7D7E7D847D7E7DA8A8A9A8AFA8A9A8AFA8A8A8A9A8A8A8A9A8A8A8A9%A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A98484597D597E597D%597D597D537D597EA8A9847E537D59A8FD2FFFA87D537D597E59847D847D%847D847D8484AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF847E59847D7E597E7D7E597E597D59%A9A8A87D7D597D7DFD32FFA87D5259597D597D597E597E7D7E597E7DA884%AFA8A8A8A9A8A8A8A9A8A8A8A9A8A884A9A8A884A9A8A884A9A8A884A9A8%A8A8A98484597D597D597D597D597D597D53597DA87E7E5359527DA8FD35%FFA8597D597E7D7E7D847D847D847D847D8484A9A8FFA8AFA8AFA8AFA8AF%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8A9848459847D7E7D847D7E%597E7D7D597E7DA87D7D597D7DAFFD38FFA95959537D597D597E7D7E597E%7D7E597E59847EA8A8A9A8AFA8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A9%A8A87E7E597D597D597E597D597D597D597D5959597D53595384A8FD3CFF%7E59597D597E597E7D7E7D847D7E7D847D7E7D8484A884AFA8AFA8AFA8AF%A8AFA8AFA8AFA8A9A8A88484597E7D7E597E7D7E597E7D7E597E597D597D%597D5984A8FD40FFA87D5259597D597D597D597E597D597E597D597D597D%59847D847DA87E847DA87E847D84597D597D597D597D597D597D597D597D%597D5359537D597E84FD45FFA8597D597E7D7E59847D7E7D847D847D847D%7E7D847D7E59847D7E59847D7E597E7D7E59847D7E59847D7E59847D7E59%7E597D597D7DA8A8FD4AFF7D59537D597D597D597D597E597D597E597D59%7E597D597E597D597E597D597E597D597E597D597D597D597D597D597D53%7D7EFD4EFFA884597D597D597E7D7D597E7D7E597E7D7E597E7D7E597E7D%7E597E7D7E597E7D7E597E7D7E597E7D7E597D595959A8FD53FF7D7D5359%537D597D597D597D597D597D597D597D597D597D597D597D597D597D597D%597D597D5359527D7DFD57FFA87D7E597D597E597E59847D7E597E7D7E59%7E7D7E597E7D7E597E7D7E597E597D597D597D7DA9FD5BFFA8A87D7D5359%5959537D597D597D597D597D597D597D597D597D59595359535959A8A8FD%61FFA87E84597D537D597D597D597D597D597D597D5959537D597E7DA8A9%FD68FFA8A87D84597D537D5359537D537D597E7DA884FD3AFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">film reel</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2010-03-10T07:27:24-05:00</xmp:MetadataDate>
         <xmp:ModifyDate>2010-03-10T07:27:24-05:00</xmp:ModifyDate>
         <xmp:CreateDate>2010-03-10T07:27:24-05:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FUj13zt5Z0Tkt9eoJx/wAe0f7yWvgVWvH/AGVMkIksTIBgmq/ngxYx6Nptf5JbpiSf&#xA;+eUf/NeTGNrOVj9z53/MjUq0uHtoz+zEiQ0+TEc/xyYgGs5Cl01n5pvTyvdTlkr19SaWQ/jtkuFi&#xA;ZqH+FJ2PJ7kFj1PEn8a40jib/wAJy9rla9vhP9caXiV4dK8xWp5WeovGw3BSWSM/8LjwpEkwtvNH&#xA;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&#xA;/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6130475D092068118F62AD85486E0984</stEvt:instanceID>
                  <stEvt:when>2010-02-26T06:45:32-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:53E1D1E40720681191099E58DF288A56</stEvt:instanceID>
                  <stEvt:when>2010-03-10T07:27:24-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:OriginalDocumentID>uuid:953B3C3055EADD1189F1AFE7ABDE5CE7</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:6130475D092068118F62AD85486E0984</stRef:instanceID>
            <stRef:documentID>xmp.did:6130475D092068118F62AD85486E0984</stRef:documentID>
            <stRef:originalDocumentID>uuid:953B3C3055EADD1189F1AFE7ABDE5CE7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:InstanceID>xmp.iid:53E1D1E40720681191099E58DF288A56</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:53E1D1E40720681191099E58DF288A56</xmpMM:DocumentID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>64.000000</stDim:w>
            <stDim:h>64.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 8.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -64 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 64 li
64 64 li
64 0 li
cp
clp
[1 0 0 1 0 0 ]ct
45.2376 58.6517 mo
45.9676 58.0705 46.6642 57.4492 47.327 56.7899 cv
54.4353 52.0031 58.8288 43.7399 58.8428 34.5986 cv
58.8467 32.5742 58.6348 30.5059 58.1914 28.4238 cv
56.4852 20.4221 51.6762 13.8022 45.3805 9.70131 cv
50.9115 11.1844 56.0112 14.4457 60.013 18.9704 cv
60.9931 21.1323 61.7478 23.4101 62.251 25.7598 cv
64.0312 34.0186 62.5449 42.4697 58.1758 48.9443 cv
54.9798 53.6812 50.4554 57.057 45.2376 58.6517 cv
false sop
/0 
[/DeviceCMYK] /CSA add_res
gsave
[28.6559 0 0 28.5418 36.2012 30.3438 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzz!!**$!<E3%!<E3%!<N<(!WiE)!WrN,!s8W-!s8W-!sA`0"9\i1"9er4"U,&5"U,&5"U,)7"pP89"p
P;;#6tJ=#6tM?#RC\A#RC\A#RC_C#mgnE#mgqG$47+I$47+I$47.K$O[=M$O[@O$k*OQ$k*OQ$k*OR%1
NaU%1NaV%LrsY%LrsY%LrsZ%hB0]%hB0^&.fBa&.fBa&.fBb&J5Te&J5Tf&eYfi&eYfi&eYfi',)#m',
)#m'GM5q'GM5q'GM5q'bqGu'bqGu()@Z$()@Z$()@Z$(Ddl((Ddl((`4),(`4),)&X;0~>
0 0 <~zz!!**$!<N<(!WiE)!WrN,!sA`0"9er4"U,&5"U5/8"pYA<#6tJ=#7(S@#RLeD#mgnE#mq"H$47.K$O[
=M$O[@O$k*RS%1NaU%1NdW%Ls![%hB3_&.fBa&.fEc&J5Wg&eYfi&eYik',)&o'GM5q'GM8s'bqH!()@
Z$()@Z%(Ddl)(`4),(`4)-)&X;1)B'M5)]K_8)]K_9*#oq=*??.@*??.A*Zc@E+!2RH+!2RI+<VdL+X&
!P+X&!P+sJ3T,9nEX,9nEX,U=W\,pai`-71&d-71&d-RU8h-n$Jl-n$Jl.4H\p.Olnt.Olnt~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
np
38.2685 59.6826 mo
31.9902 59.6826 25.7036 57.2217 20.562 52.749 cv
15.3423 48.2119 11.644 41.8799 10.1494 34.9189 cv
8.36915 26.6543 9.85938 18.2012 14.2324 11.7266 cv
17.9814 6.17578 23.5581 2.49805 29.935 1.3711 cv
31.3193 1.12499 32.7393 1 34.1475 1 cv
40.418 1 46.7051 3.46094 51.8467 7.92969 cv
57.0625 12.4687 60.7607 18.8008 62.251 25.7598 cv
64.0312 34.0186 62.5449 42.4697 58.1758 48.9443 cv
54.4268 54.501 48.8496 58.1846 42.4697 59.3174 cv
41.0889 59.5596 39.6768 59.6826 38.2685 59.6826 cv
34.1514 0 mo
34.1475 0 li
32.6924 0 31.2256 .126949 29.7588 .38672 cv
16.9853 2.64454 8.39257 14.3535 8.4043 28.0508 cv
8.4043 30.3652 8.65136 32.7363 9.16503 35.1299 cv
12.3735 50.0557 24.8838 60.6826 38.2685 60.6826 cv
39.7197 60.6826 41.1826 60.5596 42.6455 60.3018 cv
55.415 58.0361 64.0117 46.3232 64 32.6269 cv
63.9961 30.3125 63.749 27.9414 63.2353 25.5508 cv
60.0313 10.6289 47.5244 0 34.1514 0 cv
.1 0 0 .49 cmyk
f
50.7409 52.613 mo
51.365 51.6698 51.9341 50.6832 52.4458 49.6571 cv
52.4461 49.6564 52.4467 49.6553 52.447 49.6546 cv
52.4486 49.6513 52.4503 49.6481 52.4519 49.6449 cv
54.4823 45.5688 55.5999 40.8827 55.5957 35.9385 cv
55.5952 35.6587 55.5912 35.378 55.5836 35.0965 cv
55.5366 33.3244 55.3458 31.5228 55.0015 29.7058 cv
54.9484 29.4246 54.8916 29.1432 54.8311 28.8613 cv
53.0647 20.6354 48.4722 13.7152 42.465 9.1605 cv
44.2167 10.068 45.8876 11.173 47.4424 12.4629 cv
52.3955 16.5664 55.8623 22.3105 57.2109 28.6328 cv
58.7803 36.001 57.4228 43.3506 53.3877 49.3272 cv
52.5897 50.5086 51.704 51.6062 50.7409 52.613 cv
gsave
[.666508 -50.5849 53.4767 -.666512 31.4385 58.6299 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~,pjrc-71&d-7:/g-R^Ak-n$Jl-n-So.4H\p.4Qes.P!#".k<,#.kE5&/1iG*/M/P+/M8Y./hSb//h\k2
0/#"50JG170JG490ekC;0ekF=1,:XA1G^gC1G^jE1c.$G1c.'I2)R9M2E!HO2E!KQ2`EZS2`E]U3&ioY
3B9)[3B9)\3]];_3]];`4$,Md4?P_g4?P_h4Ztql5!D.o5!D.p5<h@s5<h@t5X7S#5s[e&5s[e'6:+"*
6:+"*6UO4.6psF26psF277BX677BX67Rfj:7n6'>7n6'>84Z9B84Z9B8P)KF8kM]J8kM]J91qoN91qoN
~>
0 0 <~YHP.5YHP.5YHY78Yct@9Yct@9Yct@9Yct@9Yd(I<Z*CR=Z*CR=Z*CR=Z*CR=Z*L[@ZEgdAZEgdAZEgdA
ZEgdAZEggCZa7!EZa7!EZa7!EZa7!EZa7$G['[3I['[3I['[3I['[3I['[6K[C*EM[C*EM[C*EM[C*EM
[C*EN[^NWQ[^NWQ[^NWQ[^NWQ[^NWR\$riU\$riU\$riU\$riU\$riV\@B&Y\@B&Y\@B&Y\@B&Y\@B&Z
\[f8]\[f8]\[f8]\[f8]\[f8]]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]Y(ni
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
np
33.0684 60.0967 mo
27.0054 60.0967 20.9775 57.8662 16.0991 53.8193 cv
11.1538 49.7158 7.68653 43.9756 6.3374 37.6553 cv
4.76513 30.291 6.12206 22.9434 10.1577 16.9668 cv
13.8911 11.4316 19.5464 7.74024 26.0762 6.57227 cv
27.5195 6.31445 28.9981 6.18163 30.4648 6.18163 cv
36.5273 6.18163 42.5596 8.41211 47.4424 12.4629 cv
52.3955 16.5664 55.8623 22.3105 57.2109 28.6328 cv
58.7803 36.001 57.4228 43.3506 53.3877 49.3272 cv
49.6543 54.8545 44.0029 58.5439 37.4726 59.708 cv
36.0254 59.9658 34.5391 60.0967 33.0684 60.0967 cv
30.4648 5.18165 mo
28.9546 5.18165 27.4253 5.31445 25.8994 5.58789 cv
13.3027 7.84179 4.72559 18.916 4.70605 31.6914 cv
4.70215 33.7158 4.91406 35.7822 5.35742 37.8623 cv
8.25928 51.4814 20.1465 61.0967 33.0684 61.0967 cv
34.582 61.0967 36.1162 60.9658 37.6494 60.6904 cv
50.2422 58.4443 58.8232 47.3799 58.8428 34.5986 cv
58.8467 32.5742 58.6348 30.5059 58.1914 28.4238 cv
55.2861 14.7988 43.3867 5.18165 30.4648 5.18165 cv
.638824 .502838 .407959 .75 cmyk
f
60.013 18.9704 mo
56.0112 14.4457 50.9115 11.1844 45.3805 9.70131 cv
43.0008 8.15121 40.4103 6.96169 37.6928 6.1926 cv
33.9619 4.3353 29.8964 3.31249 25.7466 3.31249 cv
25.7427 3.31249 li
25.0696 3.31249 24.394 3.33924 23.7174 3.39371 cv
25.669 2.43959 27.7554 1.75628 29.935 1.3711 cv
31.3193 1.12499 32.7393 1 34.1475 1 cv
40.418 1 46.7051 3.46094 51.8467 7.92969 cv
55.3014 10.9362 58.0905 14.7296 60.013 18.9704 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[37.92 0 0 19.2 23.04 44.32 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 79 
/H 40 
/M[79 0 0 -40 0 40 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 79 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 79 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 79 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 79 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
l7Vudr%.arq^VLmr$_:er$M:er?TbjP5t)Fs%E;_r^m)[r^ZiTr^HfSr^6ZOqa(3HrBL9Fr]U-@r]:*@
lRr)er%.arq^VLmr$_7d!%.Xkr$D7dO9!c1mS!OOr^m)[r^ZiTrC-`SrBpQNqa(3Hr]gBGr]U-@r]C-@
r\!Xlr%7dsr%%[pr$hLkpF#kcq^).cc2a.1mn<[Q!)!5^rCHrYqF:HQr^?`Qr^-KJr]pHIr]^<EqE4a=
s#TL!r[n.$r$qasr@@dqr$hLkpF#kc!%%Ohr$27eN<%Q1n4W^Pr^m)[r^ZiTr^HfSr^6ZOqa(3HrBL9F
s#p3@r]C*?q_%Uqr@Rpur%%[pr@.arr$hOlp*]bbr$D7ds!,\eR/l_Lr_!/]r^d#YqaUQRr^?`QrBgEJ
rBU?Hr]^<Eq`Oj>r]1$>oe-(mr%.^qr$qUnr?qXpr$_7dr$M=fr$;7dM?)?1nOipU8P/nPr^ZiTrC-]R
!CK9R6iKFL62j.K5Q3kG4o7A?49%AA3VY6%/c7-r.f:ap./tao./kUn./,+e-Mo+e,lT%0!1X&]9E.W`
8c;0X7K>pV7K,^P6i04I62j.K5Q*eG4o.;?48q;@3VtH)/c@6u/,Ump.JkOm-iYUc-i>=g-2f(h,lJsC
!8RYL9DqK]8H)-Y7fGjU7/fOT6:+'=6M3YD5lEqH55m_B4T7GA3rV/<0)I7#/Gq't.f_'s.JtUn-iPOl
-iPIb-i>=h-2]%d,K0YT!;]@f9)V<_84Q2I7fGjU7/fRP63KS?5X7X55QjA=5X@^85lO"I55m_B4T7GA
3rV,@3%ci]/bppt/,Umo.JtUl-iG@l-i57g-NGLl-i>=h-2]%e,QB!A!8mkU9E%Q]8H;<\8,l'V7K5dT
6iB@N61mJH5<qIu5=#34r]^<Eq`Og=s#U*=!''m.qCMUrr$qXos![dm!%.Xlng4>ar?_Llr$M:er$;1b
!$]8[U&b3dr_!,\r^[)\7Rm;Es$ZiRr^-TM!'p?Fq`b?M5<h=q5<_7qrBC6EqE4a=r]:$=s#C!0q^hUp
s!n!sr$_IjnKn5^r?hOjr?_Ljr?hFgr$;1b![8fgJcOg2r_!/]rCHrYr^QlUr^6fT6ULc<pd"gC!^8e4
q`Y<L4[)%m5!D+n55m_B4T7GA3rV/=2ukQ./G^js.fCdr.JkOk-hete-3#=d,lf:j,lf:i-2]%c,QAt&
!2TYq9)_E]8Gu'U7K,[R6N0:I5lX(F4p!l155RJF4?Yhir&sp>rB($?r]0p:r@Igrr[Rgp!%@ampEokc
s!IUh![K'<s!@[jr[%RirZqOir$D7dr$21bT`Dt1s%32\rC6iWr^HcR"@GOC5sbH7q`k'D!^/\1r]L<F
4?`R("$8V-48(c:4T7GA3rV/=3!)#i/Gq$q.fUss./YId-N#1i,lT+g,QK.c,QK.h,l]1g,lAnc,2WBS
!<,Og8,c!V705kF6iKFO62NnG55RMB49.JB4T%8@3r(l64T7GA3rV/=3<(r8/,Ldr.JtUm-i57f-3#7i
-2]"g,Q/ne,Q8tg,Q8qg,PWP],Q/gX!6,!=8H)-Y7f>aU7/fOT6:!p:5l3eG4o[_G4oRS?3s@Z,4$#Da
q`=X:"$AY-4T7DB3r_8?3W;#;2uY?).fUsq./#"c-2]%f,Q8te,60"a,60"g,QB%h,Q8tc,Q&b@!/LXT
8,bsX7K,^Y6psC06N'4J5Q*eF4oRSC3s%H(48q8D3BB2]3VYW<4$#Da3r;#=3rM)<3;ti:/,Umq.K1aq
-ho%g-2/\^,6/qd,QAte,QAte,QAt`,60"e,Q&_c+e&JR!!5Y[7f>dT7/]IO5lO"I55m_E4T7GA3W_<%
3qbQ>3]T2]3]T5]3Vkc:48q;@3<2)=3;kf7.f1[m-i>=h-2Stc,QAte,PNA^,Q/ed,Q8ne,QAte,6/qd
,Q&bc+kZjR!<5Od70,eD"[bUB5sR^65Q3kG4T7GA3qYKB3&ioY3&ruY3B9&Z3B6jq"$/G'3rV/=3;b`7
.f:^q./YIj-N#1e,lAnb,6&hc,5rbb,6&hc+oibd+oWYc+oWYc,Q8nd,Q&bc+d`8R!;f4a6iKCL56*nH
4oRSD49%A=3W(i:3W:uH2`NcU3&iiV3&`fV2u5K73B6psrAa^6!%Rmqs![joq'H(fr?V:cr$).ar?CYQ
s!%IdqB>nar$)+`ec:^1rC$rZ6UO1+5X7R556=#44oRSC48q;?3Vtc;2`Ner2[hT'2`<TR2E*QQ2`EYm
2ZYlsq`+U9r]'d6r@.[n!%7Uis!@Rgr$2+`q]Pq^r?;._ruq@aruqCbr?;+_![8d2rZV=cr?D1`PlT,1
#=V'L6pj:-62j.K56=#34oRPF4$#G%3Vtf52u>K52?#K62>oE<2)[?O2E!KPrAOa:2uGZ52Zkus.4P0C
q^27fr$;.`r#l%_r?:PN!$V=a![/^0rZV:cruq@cr?9ViOT>AK"@GLA5sYB5!^8b1!'U<Cr]1$>r&F[7
!&jg8r\j7'"?&+p2DtFk!B2q82ZPi72Zblq.K(Xp-i>=g-2]"c,5`V]+93M^+T<J_+T<J_+TEP_+93M^
+T<M[+TN_a+d)iR!!PbY6UF()rBL9Fs#g9BrAja7r\sg7r\Xa62)Xt^$T0at2)I0J2DmBM2?#N02Zblq
./t^q-i>=i-3#7g,Q/ed+nd&Q*rmAW*s*Q,+9!A_+9!Aa+Wqp,+TNY`+TNY3!0dK`6iKCM56=#44oRSC
3r_5=3;tl92Z>T21]fHh2#B'/2#K-11c,(e">r"n2)P:is#0a5r\jd)r[7Uj!%%Rhr?D:dq]Yk[r#Yn[
r?)"[rZD+\ru_7^rZ;+]rZ;+_rZ;+_!?`K`+9E]/+T<Pa+L2!Q!!GYU5sR^756sG94Zkef3]];!2uko:
2Z>T51_2Au1c.!E1,:XA1,:X@1,B+i1,C[@1G\nb!AlV12#]?92E!KP2`L^o!Au;)-i>=h,QK(f,5WP]
+T*>Z*WR5Y*WR5V*WR;]*rd>^*r[5_+<M^&+TEVb+RfA_!:p0m6:!k%r]gBFr]C*>r]'j8!]Dqor\O[4
1c51fq_AR70etI<1,1L=0ekF<rA+:,rA=L2q)/41r[7Xk!%%Og!$hCc!$V:`r#bhX!?N9[*r[2[*r[2[
*r[2Z*WR5[*WR;]*WdE**r[5_+<M^&+KkdQ!<,4h5<h=p4Zkhg3rM)<3;ti82?#H31]B0,0aBBe0eb:9
0JNJ\rA"4*#W"4l1GgmE2)P7hrAO[5s!Rals!@Xis!.Id!$V7_r#beWpDj5Rr>bkXr>bkZrZ)%]*Zb(u
!ZrL*rZ;7c+!2UJm/V_<p&P(W!^Ak4r]L0@r]($>2`L^or\XU1r\FI-!\c;_o.^"q!AZD.1'BBg1Ggod
1]oTl2)bFkr?hLis!7Rgs!%Fcr#bt]r#YbV!$(tY!$2"XruM(YruM(Y!Z`:$qAoDR#p130+!2UI+!;]-
!4W%/5lNqM4?P\d3rV,>3;tl92$,Tk1]B0.1%d4)0/,(50JG0Y0E<g00JG48r@na:0etO?1G^jD1c$sG
2#]B3-N5:k,lAnb+TNY`+8d2X*W-lW)uLZU)uU`V)u1HT*?6'u*<I9&*W$lZ+!2R'*rmGK!.k4H!!bbQ
5!;"j4$*@$$91"(2`<QO1c.!ErA+.%pb)V"qC_n(0/*2V!\lA`rA"C01B'*.1]oTl-78^<!$qLf!$_@b
!$M1]r>kqZr#>\Wr#G\T!?3$W)ZUlW)u^fW)u:NU*??.!*<I9&*W$oW+/o7P!<57_4oRPC3W:u?2`<QO
r\O[41,Ah`q_8"&!\Q)Yr[n1&pFZM#0/!5W!\Z5\r\4:*!AZD/1As$.1]Sm%,lf4i,QAte+o`\`+9*D[
*W-oO)ugiU)ugiQ)ugoX)uCTV*??.!*=!W+*?H7D+!0SFJcP]K"[5(44$,M&3=%T'2`<NN1c$re1A`d(
0*Em[/M8[T/H@F$/I*m[/M8V-/hR#S!A?)(0E*X+0eiS]rA+@.!&X[$!$qOgs!%IdrZM4_r>tkWr#GVR
r>P\Tru(qW)B8Yoru:tVqATJU*#nks!Z`7#r#P\VV?"=1"?en04$*@$!]W+tr\aX1s"XI+r\+7'!\GuV
r[e1&/1pZK">)/V/M-iP""l/X/d*dZ0.npU0F]`k1,1O?1,Ca5,pX][r?D.^r#YkYrZ(eSpDX&LrYbbS
r>GYTrYbhW)]JPl#94^&*#ot>*<$r\*ZZ7Bj8ac3&c_np4$,Ja3B9#W2E!EL1c$mBr\=C+r\+7'r[n+#
!\5cPq'uIs/,Uq'/M&J)/M/S,r\".&r\+I00JP=;r\=R%,U=W5,5iVa+8d2X*;^]Q)Z:NR)Yt?O)?1WT
)>b<R)]K^p)Zguu)uCWQ*<7.U!5SXA4?GSb3B9&X2E(Okr\FI-!\c;]r\"1%r[e%!!%Rsu!\,]Nr@.k!
.k:KJ!A#c"/-.=Rr[n($r\"X50/,+70ekF=,U=W5,5iVa+9!>\*W-oT)YP$K)#Y<P)#5$N)AsFl)?Lir
)Z(HY*#on;*$$%>rZ0qtK)bm5#<Fn+3B/rU2Z>Q51Ars,0E3[)/cI=$/,h!u/,h").4Qer.Olks.Ok<G
!@oYu.fh1Or[\.'/M8XS/cm[Y0E!U(0``OErZ_@cruh:_!$;(ZruD"Wr#5JNr"oDOr>5MPr>5PQ(]YEP
)#tNQ)$1]p)?(NU)]BXm)uCWT*M<DN!!G>D3B9(u2@ME!1G^d@0eb:70.nmV/HRIS/,Lgq.1%CO.4?Vo
-n-Snr@.Un""PiO/,h($/M&LR/cIC$0E*X+0dHZAruqCbrZ;+]r>bkXr>Y\Rru(bP!#b\OrtkYOrtkMK
ru(hRq\]VW)AsG3)]K^p)[79%)]Th<*J+:N!"(bI3B/oT2)R3H1]B-.0`E[+/M&IP/,h$t.JP:r-R^Aj
-n$Mmr@%as.K(aq.fh1Or[e%#r\".&!AH8-,6&hd+T<J\*<@-!rYkhUr#,DLr>,GNp_WrIrtkMK#8n?q
)&X>1)>b<T)]Kb9)u^fW*P_ZN!!YGD3&``Q2?#E20a06b0.nk/r[e!ts!dpqr[.[op*Tkh-iGFo.4G-D
r[Iq!.fLst/H.7$0)dO(0Rs~>

%%EndBinary
grestore
np
62.1094 21.5977 mo
61.4506 20.6811 60.7506 19.8044 60.013 18.9704 cv
58.0905 14.7296 55.3014 10.9362 51.8467 7.92969 cv
46.7051 3.46094 40.418 1 34.1475 1 cv
32.7393 1 31.3193 1.12499 29.935 1.3711 cv
27.7554 1.75628 25.669 2.43959 23.7174 3.39371 cv
22.9315 3.45699 22.1443 3.55767 21.3584 3.69727 cv
21.2344 3.7192 21.1108 3.74203 20.9876 3.76573 cv
23.6011 2.12077 26.5495 .954847 29.7627 .38672 cv
31.2264 .127202 32.6892 .00161819 34.1427 .00161819 cv
46.2971 .00161819 57.7202 8.79296 62.1094 21.5977 cv
gsave
[-36.6783 -26.3667 26.3667 -36.6783 56.3486 43.7637 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~)&X;0)&aD3)B'M4)B'M4)B0V7)]K_8)]K_8)]Th;*#oq<*$$%?*??.@*??.@*??.@*??.@*??.@*?H7C
*Zc@D*Zc@D*ZcCF+!2RH+!2RH+!2UJ+<VdL+<VdL+<VgN+X&!P+X&$R+sJ3T+sJ3T+sJ6V,9nEX,9nEX
,9nEY,U=W\,U=W\,U=W],pai`,pai`,paia-71&d-71&d-71&d-71&d-71&e-RU8h-RU8h-RU8i-n$Jl
-n$Jl-n$Jl.4H\p.4H\p.4H\p.Olnt.Olnt.Olnt.k<,#.k<,#.k<,#/1`>'/1`>'/M/P+/M/P+/M/P+
~>
0 0 <~I!pEkI=6NlI=6NlI=6NlI=?WoIXZ`pIXZ`pIXcisIt)rtIt)rtIt3'"J:N0#J:N0#J:N0#J:W9&JUrB'
JUrB'JUrE)JqAT+JqAT+JqAW-K7ef/K7ef/K7ef/K7ei1KS5#3KS5#3KS5&5KnY57KnY57KnY89L5(G;
L5(G;L5(G;L5(G<LPLY?LPLY?LPLY@LkpkCLkpkCLkpkDM2@(GM2@(GM2@(GM2@(HMMd:KMMd:KMMd:L
Mi3LOMi3LOMi3LON/W^SN/W^SN/W^SN/W^SNK&pWNK&pWNK&pWNfK-[NfK-[NfK-[O,o?_O,o?_O,o?_
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
np
45.3805 9.70131 mo
44.3839 9.43408 43.3732 9.22441 42.3525 9.07565 cv
40.8771 7.96736 39.3161 7.0007 37.6928 6.1926 cv
40.4103 6.96169 43.0008 8.15121 45.3805 9.70131 cv
gsave
[-36.6783 -26.3667 26.3667 -36.6783 56.3486 43.7637 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~U8"BVU8"BVU8"BVU8"BVU8+KYUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSO]]Unjf^Unjf^Unjf^
Unjf^Unjf^Unji`V5:#bV5:#bV5:#bV5:#bV5:#bV5:#bV5:#bV5:&dVP^5fVP^5fVP^5fVP^5fVP^5f
VP^5fVP^5fVP^5fVP^5gVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GkW2QYnW2QYnW2QYnW2QYn
W2QYnW2QYnW2QYnW2QYnW2QYnWMukrWMukrWMukrWMukrWMukrWMukrWiE)!WiE)!WiE)!WiE)!WiE)!
~>
127 103 <~^:q=q^:q=q^;%Ft^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^VIY#^qdb$^qdb$^qdb$^qdb$^qdb$^qmk'
_83t(_83t(_83t(_83t(_83t(_83t(_84"*_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX4._o'C0_o'C0
_o'C0_o'C0_o'C0_o'C1`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU5`Pog8`Pog8`Pog8`Pog8`Pog8
`Pog8`Pog8`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@aN2HD
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
np
29.8301 57.8039 mo
19.6251 57.8039 9.93018 49.204 7.36133 37.2471 cv
6.93751 35.2861 6.72607 33.3018 6.72607 31.3398 cv
6.72607 26.0039 8.25537 21.082 11.1577 17.1133 cv
14.0283 13.1836 18.103 10.582 22.625 9.77735 cv
23.6721 9.5918 24.7219 9.50176 25.7655 9.50176 cv
35.9704 9.50176 45.6651 18.1024 48.2344 30.0664 cv
49.8144 37.4033 48.4307 44.7393 44.4385 50.1924 cv
41.5674 54.1221 37.4922 56.7314 32.9707 57.5283 cv
31.9236 57.7139 30.8737 57.8039 29.8301 57.8039 cv
14.5756 50.4084 mo
17.4621 53.0673 23.6274 55.1385 23.6875 55.1592 cv
23.8369 55.2041 23.9858 55.2275 24.1309 55.2275 cv
24.3506 55.2275 24.5625 55.1709 24.7388 55.0674 cv
25.0327 54.8877 25.2095 54.5889 25.2407 54.2236 cv
25.7518 48.5735 li
25.7526 48.5741 25.7535 48.5746 25.7544 48.5752 cv
25.8447 47.5908 li
25.9001 46.9676 25.5114 46.3062 24.9323 45.9466 cv
24.7708 45.8461 24.5945 45.7693 24.4092 45.7236 cv
24.2876 45.6904 21.2012 44.7764 19.4482 42.9893 cv
19.2837 42.8896 19.1426 42.8428 19.0166 42.8428 cv
18.7109 42.8428 18.4639 43.1104 18.0835 43.5752 cv
14.3105 48.1592 li
13.9653 48.6416 13.8398 48.9912 13.8437 49.2705 cv
13.8437 49.477 13.9141 49.6447 14.0163 49.7984 cv
14.0811 49.8968 14.159 49.9896 14.2402 50.083 cv
14.3444 50.1917 14.4568 50.3003 14.5756 50.4084 cv
35.3234 52.9441 mo
35.4943 53.0396 35.6853 53.0771 35.8809 53.0771 cv
36.1904 53.0771 36.5078 52.9834 36.7783 52.8799 cv
40.3437 51.2529 43.1435 45.3389 43.1787 45.2842 cv
43.2969 45.0713 43.3516 44.8408 43.3555 44.6104 cv
43.3574 44.3409 43.2836 44.0718 43.1445 43.8335 cv
43.0039 43.5898 42.7943 43.3785 42.5244 43.2314 cv
42.5244 43.2314 li
37.0772 40.2393 li
36.8457 40.1084 36.5947 40.0439 36.3438 40.0439 cv
36.2139 40.0439 36.0889 40.0615 35.9629 40.0967 cv
35.5947 40.208 35.2959 40.4482 35.124 40.7939 cv
35.0723 40.917 33.6689 43.7236 31.4687 44.9951 cv
31.4687 44.9951 31.2178 45.0771 31.2139 45.4756 cv
31.2139 45.5817 31.2317 45.7102 31.2767 45.8657 cv
31.3323 46.0599 31.4307 46.2961 31.5903 46.583 cv
34.9199 52.5283 li
35.03 52.726 35.1683 52.859 35.3234 52.9441 cv
25.405 23.8795 mo
24.877 23.8795 24.3445 23.9252 23.813 24.0195 cv
18.4014 24.9805 15.0557 30.6211 16.3501 36.6221 cv
17.51 42.0262 22.0439 45.8793 26.8927 45.8793 cv
27.4204 45.8793 27.9527 45.8336 28.4839 45.7392 cv
33.8965 44.7783 37.2412 39.1455 35.9512 33.1455 cv
35.8009 32.4463 35.5945 31.7734 35.3383 31.1312 cv
35.6926 31.819 35.976 32.5311 36.0605 33.1592 cv
36.2764 33.7373 36.8018 33.9639 37.3711 33.9639 cv
37.5234 33.9639 37.6807 33.9463 37.8379 33.917 cv
43.3086 32.8535 li
44.2891 32.666 44.6894 32.7383 44.748 31.9648 cv
42.4775 24.1035 39.5439 21.752 39.0537 21.3711 cv
38.7754 21.1504 38.457 20.9414 38.0967 20.9414 cv
37.8379 20.9414 37.5518 21.0469 37.2451 21.3301 cv
36.5 22.0098 33.3389 25.7598 33.3389 25.7598 cv
33.0566 26.0781 32.9199 26.5039 32.916 26.9297 cv
32.916 27.0737 32.9312 27.2174 32.9621 27.3568 cv
30.9547 25.1902 28.2344 23.8795 25.405 23.8795 cv
8.45449 38.6992 mo
8.64254 38.7804 8.84838 38.8216 9.06092 38.8216 cv
9.1459 38.8216 9.23193 38.815 9.31836 38.8018 cv
9.31836 38.8018 li
14.8442 37.9248 li
15.6362 37.8037 16.2168 37.1572 16.2129 36.4307 cv
16.1973 36.2451 li
16.1851 36.1748 16.064 35.292 16.064 34.1201 cv
16.064 33.3627 16.1161 32.4855 16.2856 31.6281 cv
16.2871 31.6289 li
16.3814 31.1523 16.5068 30.6914 16.6836 30.2539 cv
16.6836 30.2539 16.831 29.8691 16.4778 29.4459 cv
16.3135 29.2477 16.0395 29.041 15.5893 28.8613 cv
10.0986 26.0664 li
9.77685 25.9004 9.50243 25.834 9.271 25.834 cv
8.94189 25.834 8.69092 25.9668 8.48291 26.1367 cv
7.69874 26.7598 7.45166 31.1738 7.45166 33.6377 cv
7.45166 35.7729 7.61858 37.4245 7.6379 37.6127 cv
7.63886 37.6223 7.63946 37.628 7.63965 37.6299 cv
7.63965 37.6299 li
7.6748 38.0029 7.87109 38.3311 8.18897 38.5518 cv
8.27201 38.6106 8.36101 38.6597 8.45449 38.6992 cv
17.2572 19.4933 mo
19.6284 24.0176 li
19.8091 24.3613 20.1226 24.6211 20.5151 24.7383 cv
20.6719 24.7891 20.8364 24.8125 20.9976 24.8125 cv
21.2368 24.8125 21.4756 24.7598 21.6992 24.6582 cv
21.7935 24.6113 23.668 23.752 25.8096 23.752 cv
26.1939 23.752 26.5859 23.7793 26.9819 23.8457 cv
27.2959 23.9023 li
27.394 23.8535 27.6372 23.4082 27.6841 22.5957 cv
28.0215 16.9722 li
28.0229 16.9724 28.0241 16.9725 28.0254 16.9727 cv
28.084 15.9336 li
28.0847 15.9233 28.0854 15.9131 28.086 15.9029 cv
28.0925 15.8057 28.0957 15.7118 28.0957 15.6211 cv
28.0959 15.5783 28.0956 15.5364 28.0947 15.4954 cv
28.0823 14.9026 27.9591 14.5007 27.864 14.4005 cv
27.8588 14.395 27.8537 14.3904 27.8486 14.3867 cv
27.6372 14.3535 li
27.0644 14.2578 26.4644 14.2168 25.8525 14.2168 cv
21.7935 14.2168 17.2598 16.0606 17.209 16.0801 cv
16.8286 16.2383 16.5381 16.5254 16.397 16.8789 cv
16.3345 17.0352 16.3027 17.1973 16.3027 17.3574 cv
16.3027 17.5645 16.354 17.7715 16.456 17.9648 cv
16.456 17.9648 li
17.2559 19.4961 li
17.2563 19.4952 17.2567 19.4942 17.2572 19.4933 cv
gsave
[28.656 0 0 28.5418 27.7979 33.6572 ]ct
clp
/0 /Gradient get_res exec grestore
np
29.853 62.9971 mo
23.5781 62.9971 17.2954 60.5342 12.1538 56.0635 cv
6.93751 51.5225 3.23926 45.1904 1.74511 38.2314 cv
-.0312521 29.9707 1.45508 21.5176 5.82764 15.043 cv
9.57715 9.49023 15.1538 5.81055 21.5308 4.68165 cv
22.915 4.43554 24.3311 4.31249 25.7427 4.31249 cv
32.0137 4.31249 38.3008 6.77149 43.4414 11.2422 cv
48.6582 15.7793 52.3525 22.1113 53.8506 29.0723 cv
55.6269 37.333 54.1406 45.7842 49.7715 52.2588 cv
46.0225 57.8135 40.4453 61.4971 34.0605 62.6299 cv
32.6763 62.874 31.2568 62.9971 29.853 62.9971 cv
25.7466 3.31249 mo
25.7427 3.31249 li
24.2876 3.31249 22.8208 3.4375 21.3584 3.69727 cv
8.58106 5.95703 -.0117113 17.6738 0 31.3672 cv
0 33.6807 .247064 36.0518 .76075 38.4404 cv
3.96875 53.3643 16.4756 63.9971 29.853 63.9971 cv
31.3076 63.9971 32.7744 63.8721 34.2412 63.6123 cv
47.0107 61.3486 55.6074 49.6357 55.5957 35.9385 cv
55.5918 33.626 55.3447 31.2539 54.8311 28.8613 cv
51.627 13.9395 39.1201 3.31249 25.7466 3.31249 cv
.278867 .135076 .117647 .033333 cmyk
f
26.8927 45.8793 mo
22.0439 45.8793 17.51 42.0262 16.3501 36.6221 cv
15.0557 30.6211 18.4014 24.9805 23.813 24.0195 cv
24.3445 23.9252 24.877 23.8795 25.405 23.8795 cv
28.2344 23.8795 30.9547 25.1902 32.9621 27.3568 cv
33.0095 27.5711 33.0939 27.7752 33.2171 27.9544 cv
33.2509 28.0042 33.2876 28.0521 33.3271 28.0977 cv
33.3511 28.1319 33.5987 28.4303 33.9338 28.8876 cv
34.3477 29.4587 34.8978 30.2761 35.3383 31.1312 cv
35.5945 31.7734 35.8009 32.4463 35.9512 33.1455 cv
37.2412 39.1455 33.8965 44.7783 28.4839 45.7392 cv
27.9527 45.8336 27.4204 45.8793 26.8927 45.8793 cv
25.5547 26.1682 mo
25.1384 26.1682 24.7185 26.2039 24.2993 26.2773 cv
20.0249 27.043 17.3735 31.4727 18.3814 36.1768 cv
19.2935 40.4151 22.8638 43.4286 26.6951 43.4286 cv
27.1152 43.4286 27.5392 43.3923 27.9624 43.3174 cv
32.2334 42.5596 34.8848 38.1299 33.8769 33.4268 cv
32.9674 29.1835 29.3879 26.1682 25.5547 26.1682 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[23.52 0 0 23.52 14.4 17.44 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 49 
/H 49 
/M[49 0 0 -49 0 49 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 49 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 49 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 49 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 49 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
mfWOjlN@"eZN0@moE>:!"9n5sq??^"!!hflquZ<hr<2lqVuZi%nceUfq??m&q?@!+#6`Z]q?4M4iW/l\
!<i]$"nVrl"oJT(#Q=km"8i5k"9&H'"J5\i#5/5r"T&>t"oSZ(#Q"Yp!rrDj"8N)A!7q5G"p"l3p]^<n
q$$X"rWi6%n,rOhqucfuq?3DjrWi3&r<<*&pB:3or<E3*q?6?kq#^0jqZPCKbQ.SHq?Ha!nc\gnr!*-*
!!r?&p&k<rrWDZmq?-d%T)eco!!iE+p]^9mqZZj$r<N-$ncSReq#gKs!!V6[_#OH@r!3*'q??Blr!!$'
r<EB0"9nQ'rWE!!ncJXiqZN_qqZ-X%r!3*'q??Hnr!!!&r<EB0"U4])p]L-ip]LBrrrqZf[K-:4r!3-(
quuNlr!!'(r<E<.rWN9*q#pQsrW3'%oE+jkqZHm&YQ4.mr<W<+r!*'&qZQcuquls%r<E6+rs8Q,q?6Np
ncJXiqud!'o`2#m!"&T0r!33*r!!$%!!E3'qucg!r<<0)rWiH/qZZm#p]L!eqZHg#rWTn6jT,;erWrH-
r!*-(qZQWqqum!&r<<6,rWrE*q#pQsmK3@iqum!&!!&Yl!XT,=rWrH-rW`9(r<2ouqucm#!!W<*rWiH/
qum*("oAH#"8W)r!W3#r"8i<%"i^Pr!<*<'#lY)-#5n`)"T/B"!r`<#"TAT(#6"l-#l4`&"T/B!!WW8n
!riB%"8i<%"ePen$3(;/#Q=r,"oe]*"Si-"!rE)u"TJZ)#6+r-#lb,,"oJN""8W)s!W)rq"8rB&"jm=r
!!!B)$2t50#QG#+"o\Z'"8W)t"9&H'"oef+#Q>#/#5eZ$"T/B"!rW/u!W)rr"9/N&"ePep$N:>5#RC\6
#Q=r-"o\Z'"8Drs"9&H'"o\`*#6>):r<E0'quls#qZ?NnquZg!r<3*'g]57mrX/W2rWrN/rW`?*rWN3&
r;us!r;us#!!N9)rWW?-rWiK1r<E0'r<3'$!!E-#p&Y'mrr`0%!X/`3U&b/mrX/W2rWrN/rW`?*rWN3&
rW;uurW<*%rWN6)rs&K.rs8W2r<E0'r<3$#quZQmquZm#qud')"U=#f]E%s>rsJ`3rWrK.rs&H+!!N9'
rW;osrW3'%rWE3)rW`?,":,;?#7(23rWW<*rri6%quZftrrDrtquZm#qud')"U:t,p&P+#rsJ`3rWrK.
rs&H+rWE3'rW<'"!!*!!rW3'%rWE3)rWW?-rWiT4$3ph7#5eZ&"TJT%!rN'!!;llt!rN0#"T/E'#4DPs
!<*B*$NCG3#lb/0#6"f*"98Q'!r;ot!r`<$"98W)"p5)9#RLS>$3ph7#5eZ&"TJT%!qlZp!rN0#"T/E'
#.4Hs!!3Q;$iUM5$2t50#QG#."o\Z)"9&B"!WN6#!rrK'"TSc+#6Y;<#mgt;#QG#+"oJN$"9/Gs!WE/u
"9/N%"TSc'!2]br%/pY7$N:>3#lY)."oni+"T8H&!r`6#!r`9%"98T("TSc+#6Y;=#mq%<#Q+f+"oJN$
"9&As!WN5u"9/N("oSY@!8mkV%0$_8$N:A2#lb/0#6"f+"T8H#!rW6$"TAQ*"pb,5!so8@$iL>.#5eZ(
"T/B$!rE#s!rW6""TJZ(#+kks%1E[E$iUJ5$2t50#QG#-"oe`*"8Ds("9\l3"pP;;#lY,5$47.H#lY),
#5eZ)"T&;p!r`<""TAT)#6+qO!7_)L%K6b9$iUM4$3(;1#64u,"oe`$"9&H'"o\]-#6tP6#m(G@$iUG1
#Q=r*"o\Z%"8Dot"9/K#"TJZ)#6+q#!!!N.%0-h9$i^S5#lk54#7(S5#6+l#"TJZ*#6"i/#RCb9$NCM5
#lFo1"pP58#6"f'"T/B$!rN/t"TAT(#6+qZ!6P9A%fQq:%0$_7$31D3#lb/.#6+l%"TJZ*#6"i1#RC_C
$N:D6$jlh;rs/H+rWW-$p&k6rr!!'(rWf%qrXSr;rs\l7rsJ`3rs8W0r<E3(rWN0'rs&K.rWiW5#mq"I
rX8c5r!<9,r!*-(q#pNrr<2s#rWWE/#708g^B"9Erso#;!"Ai7rsJ`3rs8Q.rW`3&rW`B-rs8T1"pt\F
$OdIRr<`H/r!33*rWN9)rWVosr<<'&rW`E/VZ?Mm!>#e@%f[";%0$_7$NCG2#lY)(#6+r-#lb51$3^eF
$k*RTr<`H/qZm*)q$$Nrr!!$'r!36-li=Bm!"f,?rso#;rs\l7rsJc4r!<!$rs8T1rsJ`5"UkeK%1W^F
$N:A0#lY)-#4;Zn#5e`)#dOHu!<*Q0&,m%E%1N^R$k!FM$N(5.#lY),#lb51$NCM5%0$e:%fQh7$2b).
#P\Ms"oJT(#Q4r-$24G!!<3Z2&H31A%LrsH%0$_5$N1;-#lP)/$4I:M$k*RS%Ls![$OR7<$2t50#PJB"
"oAN&#Q4r-#lk=G!94%\&eP`T&H<:?%f["<%/^M4$MFf*$N:D>$k*RS%Ls!\&.A@BrX&Q0q$6Kqr!30+
rWrQ3!",=urt>;Crt,/?rso&<r!`Q4q[30,rX8]6#7V+P%M'*^&c<%9$N:A.#l=l%#5\Z(#lY/0$HN5"
!<3`4')rRC&H<:@%f?e8%/gS2$N(;2%/p\D%Ls!\&.oK^$k*LOr<iN1q$?Hpr<W?.rX&W5T)]!.',(uk
r=K)B%hJRJrXJi8p^@$/r=/`9"V2.U&J5ZT%/pY6$Mb#*#keN##lP)/$NCL_!<)uF!<3c3'*8dZ&cN=F
%hK6^%M&FHq[E<1rXSo<#S7OZ&J>]i'+OpLrX8Q0r!E*'p^$d(rX/W4T)]-3'GV;r',(ujr=T&@rt#&<
r=/c:rXJ`7rX\u>#S@X]&ebom%1W:Fq@!6/r!Ds#q[*6/rsSf7gAo1mrtbVLrtPDFrt>>DrXf)?rso#=
p^[65rXf&@rt>>FrtPGAq[EE2r!N6+r!<6-r<iH1r<rZ8T`>Q&!#HCd'bqDt'GM2o&eb0U!Y>qUrXe]4
rXf&@rXoJM',;5t%1NdWrXJi8r!WE0q?cm'r!WH3rXIui\cD[F$5OBl'bh>q'+tokrY#2Bo+:p6rt>;E
rY,JM'c%Pqr=8i:!"Jl8r<rK0rsST/q@!30r=,h.oDf49(`4&*()@W"'G^T]rtG>Dq@W`=q%EZ?rY5>H
";Vah%hJUKrXJf7rX8]6mL/q$r!`W9nGo`mru(hRr>5JLrY>GIr=ec8r"K#C!YlFcrtbVNrX\r;rXAi;
r=/T3oF(L(r=/`9[fGXmrYkeSrttbPrtbSK!Yc=`r"Sc:r=o2FrtbSM!#U4~>

%%EndBinary
grestore
np
26.6951 43.4286 mo
22.8638 43.4286 19.2935 40.4151 18.3814 36.1768 cv
17.3735 31.4727 20.0249 27.043 24.2993 26.2773 cv
24.7185 26.2039 25.1384 26.1682 25.5547 26.1682 cv
29.3879 26.1682 32.9674 29.1835 33.8769 33.4268 cv
34.8848 38.1299 32.2334 42.5596 27.9624 43.3174 cv
27.5392 43.3923 27.1152 43.4286 26.6951 43.4286 cv
21.4934 36.1565 mo
22.0871 38.6386 24.2134 40.3896 26.4878 40.3896 cv
26.7388 40.3896 26.9898 40.3701 27.2446 40.3252 cv
29.4409 39.9385 30.9233 37.9561 30.9351 35.6279 cv
30.9382 35.2976 30.9101 34.9594 30.8505 34.6177 cv
30.8372 34.5412 30.8222 34.4645 30.8057 34.3877 cv
30.8057 34.3877 li
30.8057 34.3877 li
30.7096 33.9476 30.5655 33.5291 30.3809 33.138 cv
30.3801 33.1362 30.3791 33.1342 30.3783 33.1324 cv
30.3783 33.1323 li
29.4941 31.2633 27.6868 30.0215 25.7778 30.0215 cv
25.5269 30.0215 25.272 30.043 25.021 30.0879 cv
23.0986 30.4264 21.7231 31.989 21.4047 33.9341 cv
21.295 34.5986 21.308 35.308 21.4639 36.0283 cv
21.4733 36.0713 21.4831 36.114 21.4934 36.1565 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[18.72 0 0 18.72 16.8 19.84 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 39 
/H 39 
/M[39 0 0 -39 0 39 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
pa>b^q]u4hod-pEqEk0Hq`t0Gq*+aAq`b!Dod9S_q'>b^q]s/]mK!5Pr]p9D!'^'=s#g0ArBBcu![K$;
lm1Tkd/a&.q`b!BpcSL:q`OmAr]L0+ng+)Wr$(k[!!'A+qEFpBr&jg;pcAC9s#U*?pa#kar$1eW!$V1_
!$efMq`XsAqE+[;r]0d7rAjp=r&XEo!$_(Zoch!Jq#LCVr&ag;r&OF0!&sg8r]0g"q]c"_!$_@bp`TDV
s!$(qg]7=9!'C*>r&Fa:r&=L2!&sj7rAX[7q]khYp)s;UqB,b]o`2`,r&Xg;rAXd9rAFX5r\ja5s"sU1
qDS3pq]Yq]qB,GR!$M1]!$JTJrAjd8r\jX2r\XI-rA=I0r\aKpq]PhZnfIcPrZJNIr\t$?3&``Rr&+F0
!&O.#!&OR1rZV1^r#bbVr>knXr#PYUru]Jck5bK?s#0g5rA4R31G\YYs"OC+r\FI/qB5e[rZ:qW!$(\Q
ruCqWruUG*aoDE"r&+I1r\OO.pb;Rur@n.(qB,PT!$1qVr#>MQ!$2%Z!ZW1#ZN0t^r\O[41G\n`r\47'
pFZ\(0.nn20JG6[*rI)W*W-oW)uCQN)uLZU*O>bG2#T311B'$.0`Nd+0E*Tr/Hd[Y/M8[T0Dcgi*W6uT
)u1BP)>kEO)ugnp!:g-h1BK<d1&`m+0E*U'/c@7"/,_"!/cI=#/cIC$*rR,X)uprU)YP'I)?Lcp)ZC]5
!7_)K1'00a0`Ea)0)dI%/H.0t.KV+M.f:e"/1`A)0)Zgh*;gcR)YP$G)?1WS)uK]G!<4eQ0`E^./hS_-
/H%*u.fCgq./k[o.Kh7Q.k<1M*W@&Y)uLWS)?(NP)#>'H)#kKQ)RBGD0`Ea)/cdOTr[[psr[@su-RU5g
s!Rdor[@jr.K1ds/,L=c)ugiV)>k?L(B>6K(BG?hr"oJQ)&fsar;cgMr\"4%s""'ur@%dr-R\a;![fBE
r?hRnr[@gsq]#GOru(hRrYP8DrtkMK!#a8dhuEg3/h[,Sr[\!us!dsrr[7[lr$;@j-2f1i-NGRo.0(=b
)Z1KN)#kEO(A\dF(AnsM(`4.\!5eg:/cI:$/,h$t.0(al-3bbB,U=T[,lAtf-N,=j)ugiS)#P3L(A\aJ
'bhAtq\B5L(DsIYs"+."r[J"!-mpDA-Mo+e,Prbc,lf7n-7:2>)Z1KP)#P0K(&J^D(&esK(&\mJ(UF)A
/H..$.OcbG./kUo-N5=h,kiP^,Qf>=-7A^/r##GMq\Jl>rY>>HrticWlMpo8r[J%".4?Pkr[%Ukr?VCf
q',e_s!%Fe"!f-<-N4n_)#P3L(AejE'`A^E'`/XF(?PVB!<+JJ./kRr-7'ubrZhIgp*0GYs!%Fe![K$;
rYYqX(`+#+(D[e`(&SdF'D<+?(&o#T!<4MJ./kRo-N5:l,U<73qB>_Yruq@c"!]!7,Q8PX(]G3K(&ep@
'E&XE'`o'`'sdo?./kS"-71#b,U4NX,5i\a+Sd,Z+T*Aa+sJ91(]5$K(&o$E'EAgD')`L?'EAlS!!4Ps
-iPIm,lT%g,5iYd+<M^%*rI,[+T<Pa,5W/V(B,'J'EAgG'_`:?')`LA'YFG@!!Xeu-7'r`,lT%g,5r_c
+T<JY*Wd?'*r[8]+T<Mc+r;'m(B,$K'`&L<')3.?'\NK@!!"AF-3#7i,6K,6+X$\)q]>YUruV.]r#knQ
rY>AGq\/T7r=f,Dp&Mf,rZqgq,U4KX+sA'Or#bkY!$2%Yr#PeYrZ;=e+!;[B()HlarY5,@rY#2Cr"8i>
rY,;GZN(.T,pX`\,5rbc+T*>[*WR5X*;pl_*Zc=C*ZlIHr>,AI!Yc=^p(I98r=],Br=])CZN("P,QK+h
,QAqe+T*>\*qgQT*?6'u*WI2\+9*,U(&epD'*&[:&cNFC&cE?f!9O7e,U=TY+sA*P+T*;_*ZZ9q*<$oV
*<$r[*ZcF&(&epD'DrIC&blq7&c<:-!6G3@,Q8ne+o`\`*rmA]*W6uV)ugiS)u^f[*??+?*W?cR'`JdA
')3(7&H*4?'!hT:+p9&3+<M^)*r[2Z*<$oS)Z:WT*<-uW*!72r'GLN]r"K&Bq[r</r=Q@9$mQr?+WqmL
*ZlFE*?G(u!#thSq\oMRrYthV"<AL('GUBWr"8uAmh#L2rX]&A_Z93,![8g3r#bq[ruM(Y!#tkTru:qU
!#thSrYthV!?E0V'E&RA&cE:8&,Qq;&`<Z=!!"2@+TEP`*r[2[)ugiU)uU]Q)>tKN)ZUk.~>

%%EndBinary
grestore
np
29.855 63.9999 mo
21.4872 63.9994 13.4592 59.8388 7.8366 53.071 cv
13.4602 59.8378 21.4864 63.9971 29.853 63.9971 cv
31.3076 63.9971 32.7744 63.8721 34.2412 63.6123 cv
37.4492 63.0436 40.3943 61.8783 43.0052 60.2352 cv
43.006 60.2351 43.0067 60.2349 43.0075 60.2348 cv
40.3961 61.8786 37.45 63.0449 34.2412 63.6143 cv
32.7755 63.8742 31.3109 64 29.855 63.9999 cv
.101961 0 0 .290196 cmyk
f
45.236 58.6522 mo
45.9652 58.0717 46.6628 57.4498 47.325 56.7913 cv
47.3256 56.7908 47.3264 56.7903 47.327 56.7899 cv
46.6642 57.4492 45.9676 58.0705 45.2376 58.6517 cv
45.2372 58.6518 45.2363 58.6521 45.236 58.6522 cv
gsave
[28.6559 0 0 28.5418 36.2012 30.3438 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~)&X;0)&aD3)B'M4)B0V7)]K_8)]K_8)]Th;*#oq<*$$%?*??.@*??.@*??.@*??.@*?H7C*Zc@D*Zc@D
*ZcCF+!2RH+!2UJ+<VdL+<VgN+X&!P+X&!P+X&$R+sJ3T+sJ6V,9nEX,9nEX,9nHZ,U=W\,U=Z^,pai`
,pai`,paia-71&d-71&d-71&d-71&d-71&e-RU8h-RU8i-n$Jl-n$Jl-n$Jm.4H\p.4H\q.Olnt.Olnt
.Olnt.k<,#.k<,#/1`>'/1`>'/1`>'/M/P+/M/P+/hSb//hSb//hSb/0/"t30/"t30/"t30/"t30JG17
~>
0 0 <~8P2TI8kM]J8kM]J8kVfM91qoN92&#Q9MJ5U9he>V9he>V9hnGY:/=Y]:JXb^:JXb^:Jaka:f'tb:f1(e
;,L4h;GpCj;GpCj;GpFl;c?Un;c?Xp<)cgr<)cjt<E3%!<E3(#<`W7%<`W7%<`W:'='&L+=BJ[-=BJ^/
=]nm1=]nm1=]nm2>$>*6>?b<9>?b<9>?b<:>[1N>?!U`A?!U`B?=$rE?=$rE?=$rF?XI/J?smAM?smAM
?smAM@:<SQ@:<SQ@U`eU@q0"Y@q0"Y@q0"YA7T4]AS#FaAS#FaAS#FaAnGXeAnGXeB4kjiBP;'mBP;'m
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /4 /Gradient get_res exec grestore
np
43.0052 60.2352 mo
43.7791 59.7482 44.5225 59.2201 45.236 58.6522 cv
45.2363 58.6521 45.2372 58.6518 45.2376 58.6517 cv
44.5247 59.2192 43.7808 59.748 43.0075 60.2348 cv
43.0067 60.2349 43.006 60.2351 43.0052 60.2352 cv
.192157 0 0 .639216 cmyk
f
50.7402 52.6137 mo
51.3642 51.6707 51.9341 50.6831 52.4458 49.6571 cv
51.9341 50.6832 51.365 51.6698 50.7409 52.613 cv
50.7406 52.6132 50.7404 52.6134 50.7402 52.6137 cv
gsave
[.666508 -50.5849 53.4767 -.666512 31.4385 58.6299 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~4$5Vf4?P_g4?Yhj4[)%n5!D.o5!M7r5<h@s5<qJ!5X@\%5s[e&5s[e&5sdn)6:+"*6:4+-6UO4.6UX=1
6psI477BX677B[87Rfj:7Rfm<7n6*@84Z9B84Z<D8P)KF8P)KF8P)NH8kM]J8kM`L91qoN91qrP9MA/T
9he>V9he>W:/4PZ:/4P[:JXb_:f'tb:f'tc;,L1g;GpCj;GpCj;GpCj;GpCk;c?Uo<)cgr<)cgs<E3%!
<E3%!<`W7%='&I)='&I)=BJ[-=BJ[-=]nm1>$>*5>$>*5>?b<9>?b<9>?b<9>[1N=>[1N=?!U`A?!U`A
~>
0 0 <~`l?$<`l?$<`lH-?a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2l?CaN2HDaN2HDaN2HD
aN2HDaN2KFaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiV]Jb0%lLb0%lLb0%lLb0%lL
b0%lMbKJ)PbKJ)PbKJ)PbKJ)PbKJ)Qbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;U
c-=MXc-=MXc-=MXc-=MXc-=MXcHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cd0q`
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
np
47.325 56.7913 mo
48.5952 55.5281 49.7376 54.1286 50.7402 52.6137 cv
50.7404 52.6134 50.7406 52.6132 50.7409 52.613 cv
49.739 54.1268 48.5962 55.5274 47.327 56.7899 cv
47.3264 56.7903 47.3256 56.7908 47.325 56.7913 cv
.67451 .501961 .407843 .823529 cmyk
f
52.447 49.6546 mo
52.4488 49.6511 52.4502 49.6483 52.4519 49.6449 cv
52.4503 49.6481 52.4486 49.6513 52.447 49.6546 cv
55.5836 35.0965 mo
55.5355 33.3257 55.345 31.523 55.0015 29.7058 cv
55.3458 31.5228 55.5366 33.3244 55.5836 35.0965 cv
gsave
[.666508 -50.5849 53.4767 -.666512 31.4385 58.6299 ]ct
clp
/5 /Gradient get_res exec grestore
np
29.853 62.9971 mo
23.5781 62.9971 17.2954 60.5342 12.1538 56.0635 cv
6.93751 51.5225 3.23926 45.1904 1.74511 38.2314 cv
-.0312521 29.9707 1.45508 21.5176 5.82764 15.043 cv
9.57715 9.49023 15.1538 5.81055 21.5308 4.68165 cv
22.915 4.43554 24.3311 4.31249 25.7427 4.31249 cv
32.0137 4.31249 38.3008 6.77149 43.4414 11.2422 cv
48.6582 15.7793 52.3525 22.1113 53.8506 29.0723 cv
55.6269 37.333 54.1406 45.7842 49.7715 52.2588 cv
46.0225 57.8135 40.4453 61.4971 34.0605 62.6299 cv
32.6763 62.874 31.2568 62.9971 29.853 62.9971 cv
25.731 5.37675 mo
24.4192 5.37675 23.1006 5.48954 21.7817 5.72265 cv
16.0757 6.73828 10.9849 9.96485 7.43945 14.8086 cv
4.02782 19.4727 2.23925 25.2695 2.23925 31.3398 cv
2.23925 33.5518 2.47852 35.8018 2.96094 38.0439 cv
5.95532 51.9645 17.5439 61.9305 29.8566 61.9308 cv
31.1707 61.9308 32.4924 61.8173 33.8135 61.583 cv
39.5166 60.5752 44.6104 57.3486 48.1562 52.5049 cv
52.8076 46.1377 54.4424 37.6689 52.6348 29.2695 cv
49.6393 15.3391 38.0487 5.37675 25.731 5.37675 cv
gsave
[28.656 0 0 28.5418 27.7979 33.6572 ]ct
clp
/4 /Gradient get_res exec grestore
np
29.853 63.9971 mo
21.4864 63.9971 13.4602 59.8378 7.8366 53.071 cv
4.46983 49.0186 1.96481 44.0314 .764648 38.4424 cv
-2.79638 21.9023 6.42384 6.33985 21.3584 3.69921 cv
22.8246 3.43912 24.2893 3.31334 25.7458 3.31334 cv
39.1198 3.31334 51.6263 13.9414 54.8311 28.8633 cv
54.8915 29.1441 54.9484 29.4257 55.0015 29.7058 cv
55.345 31.523 55.5355 33.3257 55.5836 35.0965 cv
55.723 40.351 54.5972 45.338 52.4519 49.6449 cv
52.4502 49.6483 52.4488 49.6511 52.447 49.6546 cv
52.4466 49.6554 52.4462 49.6563 52.4458 49.6571 cv
51.9341 50.6831 51.3642 51.6707 50.7402 52.6137 cv
49.7376 54.1286 48.5952 55.5281 47.325 56.7913 cv
46.6628 57.4498 45.9652 58.0717 45.236 58.6522 cv
44.5225 59.2201 43.7791 59.7482 43.0052 60.2352 cv
40.3943 61.8783 37.4492 63.0436 34.2412 63.6123 cv
32.7744 63.8721 31.3076 63.9971 29.853 63.9971 cv
25.7427 4.31249 mo
24.3311 4.31249 22.915 4.43554 21.5308 4.68165 cv
15.1538 5.81055 9.57715 9.49023 5.82764 15.043 cv
1.45508 21.5176 -.0312521 29.9707 1.74511 38.2314 cv
3.23926 45.1904 6.93751 51.5225 12.1538 56.0635 cv
17.2954 60.5342 23.5781 62.9971 29.853 62.9971 cv
31.2568 62.9971 32.6763 62.874 34.0605 62.6299 cv
40.4453 61.4971 46.0225 57.8135 49.7715 52.2588 cv
54.1406 45.7842 55.6269 37.333 53.8506 29.0723 cv
52.3525 22.1113 48.6582 15.7793 43.4414 11.2422 cv
38.3008 6.77149 32.0137 4.31249 25.7427 4.31249 cv
.352941 .133333 .117647 .313725 cmyk
f
26.4878 39.3896 mo
25.0046 39.3896 23.6011 38.4153 22.8688 36.9909 cv
22.7419 35.0812 23.9405 33.3922 25.7544 33.0752 cv
25.9557 33.0399 26.1571 33.0227 26.3569 33.0227 cv
27.8473 33.0227 29.2526 33.974 29.9263 35.4087 cv
29.9637 36.316 29.731 37.1947 29.2529 37.9014 cv
28.7349 38.6729 27.9585 39.1846 27.0723 39.3408 cv
26.8838 39.374 26.688 39.3896 26.4878 39.3896 cv
gsave
[8.59619 0 0 8.59619 21.8369 35.207 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~,pjrc-71&d-7:/g-R^Ak-n$Jl-n-So.4H\p.4Qes.P!#".k<,#.kE5&/1iG*/M/P+/M8Y./hSb//h\k2
0/#"50JG170JG490ekC;0ekF=1,:XA1G^gC1G^jE1c.$G1c.'I2)R9M2E!HO2E!KQ2`EZS2`E]U3&ioY
3B9)[3B9)\3]];_3]];`4$,Md4?P_g4?P_h4Ztql5!D.o5!D.p5<h@s5<h@t5X7S#5s[e&5s[e'6:+"*
6:+"*6UO4.6psF26psF277BX677BX67Rfj:7n6'>7n6'>84Z9B84Z9B8P)KF8kM]J8kM]J91qoN91qoN
~>
0 0 <~It)rtIt3'"J:N0#J:W9&JV&K*JqAT+JqJ].K7no2KS5#3KS>,6Knb>:L5(G;L51P>LPUbBLkpkCLl$tF
M2@+IMMd:KMMd=MMi3LOMi3OQN/WaUNK&pWNK&sYNfK0]O,o?_O,oBaOH>TeOcbcgOcbfiP*2#mPEV2o
PEV2pPa%DtQ'IW"Q'IW#QBmi&QBmi'Q^=&+R$a8.R$a8/R@0J3R[T\6R[T\7S"#n;S=H+>S=H+?SXl=C
St;OFSt;OFT:_aJTV.sNTV.sNTqS0RTqS0RU8"BVUSFTZUSFTZUnjf^V5:#bV5:#bVP^5fVl-GjVl-Gj
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
np
26.4878 39.3896 mo
24.625 39.3896 22.8877 37.8525 22.4482 35.8174 cv
22.1895 34.6338 22.3975 33.4287 23.0132 32.5117 cv
23.5347 31.7402 24.3115 31.2285 25.1977 31.0723 cv
25.3857 31.0391 25.5781 31.0215 25.7778 31.0215 cv
27.6411 31.0215 29.3784 32.5605 29.8213 34.5986 cv
30.0801 35.7803 29.8726 36.9854 29.2529 37.9014 cv
28.7349 38.6729 27.9585 39.1846 27.0723 39.3408 cv
26.8838 39.374 26.688 39.3896 26.4878 39.3896 cv
25.7778 30.0215 mo
25.5269 30.0215 25.272 30.043 25.021 30.0879 cv
22.8247 30.4746 21.3423 32.459 21.3345 34.7861 cv
21.3306 35.1904 21.374 35.6084 21.4639 36.0264 cv
22.0132 38.5772 24.1738 40.3896 26.4878 40.3896 cv
26.7388 40.3896 26.9898 40.3701 27.2446 40.3252 cv
29.4409 39.9385 30.9233 37.9561 30.9351 35.6279 cv
30.939 35.2236 30.896 34.8076 30.8057 34.3877 cv
30.249 31.8398 28.0879 30.0215 25.7778 30.0215 cv
.638836 .502846 .40797 .75 cmyk
f
21.4934 36.1565 mo
21.4831 36.114 21.4733 36.0713 21.4639 36.0283 cv
21.308 35.308 21.295 34.5986 21.4047 33.9341 cv
21.3593 34.2112 21.3355 34.4959 21.3345 34.7861 cv
21.3306 35.1904 21.374 35.6084 21.4639 36.0264 cv
21.4733 36.07 21.4831 36.1134 21.4934 36.1565 cv
30.8505 34.6177 mo
30.8371 34.5411 30.8222 34.4645 30.8057 34.3877 cv
30.8222 34.4645 30.8372 34.5412 30.8505 34.6177 cv
30.8057 34.3877 mo
30.7095 33.9474 30.5654 33.5291 30.3809 33.138 cv
30.5655 33.5291 30.7096 33.9476 30.8057 34.3877 cv
30.3783 33.1324 mo
30.3782 33.1322 30.3783 33.1324 30.3783 33.1323 cv
30.3783 33.1324 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[11.04 0 0 4.32 20.64 27.04 ]ct
snap_to_device
<<
/T 1
/W 23 
/H 9 
/M[23 0 0 -9 0 9 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~5!D1r5sdt/84lNK9i"Vb<E<4*>[C`"4[)+s6:=:68kMcO:/Fhf<``F.?=#`V4[25!6UaL:8k_rS:Jk%j
='8^4>s1;55!VD$6q0^=92&)V:fC@q=^#*94?Pbj5X@b*77Tm@92/2Y;H-\!>$P;o4$5Yj5sn%/7n?6F
9MSD^;cQn&>?a-L4$5\l6:=7384cEI:/Fhe<E<7,><=l-4Zu"q6UaI78P)QL:Jk%j='8a33]];a4[25"
77Kd=8P;cR;,^Iq=Beu~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!~>
<~Q^=)-S"-(BTq\?ZVl6VrXfo"8['mH1Q^=,/S"61ETqeH]W2Zi!Y->4<[C2BeQC+,1S=ZCIUSOcbWN*&&
YHbFA[[!,DQ^O;4StD^NUnsreWiW>+Z*UjGQ'IZ%R@9Y:StMdPV5C2kX0&S0ZF%$)Pa.T&R@B_<TV8-V
VPgDnXfen6['c-_Pa7Z(S"-(BTqeE[Vl?\tY->4<[$-]<Q'[l,S=Q:GU84W`WN*&&Yd(OAPEV5rQ^F52
SXuLJUSXleWiWA-Z*Ue~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
22.8688 36.9909 mo
22.6813 36.6263 22.5378 36.2321 22.4482 35.8174 cv
22.1895 34.6338 22.3975 33.4287 23.0132 32.5117 cv
23.5347 31.7402 24.3115 31.2285 25.1977 31.0723 cv
25.3857 31.0391 25.5781 31.0215 25.7778 31.0215 cv
27.6411 31.0215 29.3784 32.5605 29.8213 34.5986 cv
29.8804 34.8687 29.9152 35.14 29.9263 35.4087 cv
29.2526 33.974 27.8473 33.0227 26.3569 33.0227 cv
26.1571 33.0227 25.9557 33.0399 25.7544 33.0752 cv
23.9405 33.3922 22.7419 35.0812 22.8688 36.9909 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[9.12 0 0 7.68 21.6 26.08 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 16 
/M[19 0 0 -16 0 16 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~7nQKQ<ENI3@:X"dDK0cBH@1658ki/_=Bf*?A7o[qEHHDNI"4^Z9i4nm>@(`KB5;C)FE`%YJ4E4+;,p_&
?=@AWCMn-6GC"Xe7nQKQ<ENI3@:X"dDK0cBH@1658ki/_=Bf*?A7o[qEHHDNI"4^Z9i4nm>@(`KB5;C)
FE`%YJ4E4+;,p_&?=@AWCMn-6GC"Xe7nQKQ<ENI3@:X"dDK0cBH@1658ki/_=Bf*?A7o[qEHHDNI"4^Z
9i4nm>@(`KB5;C)FE`%YJ4E4+;,p_&?=@AWCMn-6GC"Xe7nQKQ<ENI3@:X"dDK0cBH@1658ki/_=Bf*?
A7o[qEHHDNI"4^Z9i4nm>@(`KB5;C)FE`%YJ4E4+;,p_&?=@AWCMn-6GC"Xe~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~^r"%0a3)WNd*^=mf@\g4h;@/+_SjI7b08,WdF6Xtf\5-:hr);e`5]j?bg"M^e(*(&g>(NAi5!4J`lH6G
c-Xkee^rI-gtglG^r"%0a3)WNd*^=mf@\g4h;@/+_SjI7b08,WdF6Xtf\5-:hr);e`5]j?bg"M^e(*(&
g>(NAi5!4J`lH6Gc-Xkee^rI-gtglG^r"%0a3)WNd*^=mf@\g4h;@/+_SjI7b08,WdF6Xtf\5-:hr);e
`5]j?bg"M^e(*(&g>(NAi5!4J`lH6Gc-Xkee^rI-gtglG^r"%0a3)WNd*^=mf@\g4h;@/+_SjI7b08,W
dF6Xtf\5-:hr);e`5]j?bg"M^e(*(&g>(NAi5!4J`lH6Gc-Xkee^rI-gtglG~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
24.0093 39.6455 mo
22.8151 38.9083 21.8622 37.6758 21.4934 36.1565 cv
21.4831 36.1134 21.4733 36.07 21.4639 36.0264 cv
21.374 35.6084 21.3306 35.1904 21.3345 34.7861 cv
21.3355 34.4959 21.3593 34.2112 21.4047 33.9341 cv
21.7258 31.9895 23.0987 30.4276 25.0249 30.0898 cv
25.2778 30.0454 25.5304 30.0239 25.7816 30.0239 cv
27.689 30.0239 29.495 31.2657 30.3783 33.1323 cv
30.3783 33.1324 30.3782 33.1322 30.3783 33.1324 cv
30.3792 33.1342 30.3801 33.1362 30.3809 33.138 cv
30.5654 33.5291 30.7095 33.9474 30.8057 34.3877 cv
30.8057 34.3877 li
30.8057 34.3877 li
30.8222 34.4645 30.8371 34.5411 30.8505 34.6177 cv
31.0865 35.9729 30.8172 37.2738 30.1821 38.3018 cv
30.3511 37.6924 30.394 37.0283 30.2412 36.3408 cv
30.1702 36.0127 30.0634 35.7007 29.9263 35.4087 cv
29.9152 35.14 29.8804 34.8687 29.8213 34.5986 cv
29.3784 32.5605 27.6411 31.0215 25.7778 31.0215 cv
25.5781 31.0215 25.3857 31.0391 25.1977 31.0723 cv
24.3115 31.2285 23.5347 31.7402 23.0132 32.5117 cv
22.3975 33.4287 22.1895 34.6338 22.4482 35.8174 cv
22.5378 36.2321 22.6813 36.6263 22.8688 36.9909 cv
22.8826 37.1992 22.9122 37.4101 22.9585 37.6221 cv
23.123 38.4111 23.5073 39.0986 24.0093 39.6455 cv
gsave
[9.60205 0 0 9.60205 21.333 34.835 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Yct@9Yct@9Yct@9Yd(I<Z*CR=Z*CR=Z*CR=Z*L[@ZEgdAZEgdAZEgdAZEpmDZa7!EZa7!EZa7!EZa7!E
Za7$G['[3I['[3I['[3I['[3I['[6K[C*EM[C*EM[C*EM[C*EM[C*HO[^NWQ[^NWQ[^NWQ[^NZS\$riU
\$riU\$riU\$riU\$riV\@B&Y\@B&Y\@B&Y\@B&Z\[f8]\[f8]\[f8]\[f8]\[f8^]"5Ja]"5Ja]"5Ja
]"5Ja]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]tM+m]tM+m]tM+m]tM+m]tM+m
~>
127 103 <~hVR,GhVR,GhVR,GhV[5Jhr!>Khr!>Khr!>Khr!>Khr!>Khr*GNi8EPOi8EPOi8EPOi8EPOi8EPOi8NYR
iSibSiSibSiSibSiSibSiSibSiSieUio8tWio8tWio8tWio8tWio8tWio9"Yj5]1[j5]1[j5]1[j5]1[
j5]1[j5]1\jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C`jlPUcjlPUcjlPUcjlPUcjlPUcjlPUdk2tgg
k2tggk2tggk2tggk2tggk2tggkND$kkND$kkND$kkND$kkND$kkND$kkih6okih6okih6okih6okih6o
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
np
29.8478 59.8702 mo
18.5879 59.8702 7.94496 50.5898 5.16113 37.6455 cv
4.70605 35.5283 4.48242 33.4189 4.48242 31.332 cv
4.48242 25.6758 6.13769 20.2852 9.29883 15.9648 cv
12.5537 11.5117 17.0166 8.67578 22.2051 7.75391 cv
23.3872 7.54474 24.572 7.44325 25.7488 7.44325 cv
37.011 7.44325 47.6503 16.7236 50.4346 29.668 cv
52.125 37.5361 50.6191 45.4346 46.2969 51.3486 cv
43.042 55.8018 38.5791 58.6377 33.3906 59.5596 cv
32.2089 59.7687 31.0243 59.8702 29.8478 59.8702 cv
25.7655 9.50176 mo
24.7219 9.50176 23.6721 9.5918 22.625 9.77735 cv
18.103 10.582 14.0283 13.1836 11.1577 17.1133 cv
8.25537 21.082 6.72607 26.0039 6.72607 31.3398 cv
6.72607 33.3018 6.93751 35.2861 7.36133 37.2471 cv
9.93018 49.204 19.6251 57.8039 29.8301 57.8039 cv
30.8737 57.8039 31.9236 57.7139 32.9707 57.5283 cv
37.4922 56.7314 41.5674 54.1221 44.4385 50.1924 cv
48.4307 44.7393 49.8144 37.4033 48.2344 30.0664 cv
45.6651 18.1024 35.9704 9.50176 25.7655 9.50176 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[48.96 0 0 53.76 3.84 3.52 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 102 
/H 112 
/M[102 0 0 -112 0 112 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 102 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 102 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 102 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 102 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
o)[nRlN?DTo*+=XJcO$qo)eLcmf`1bo`kF$oEXsnp]9FWjob&Tn-/gqKE/:Xp]C!gn-&RkpBC6po*=gl
r<`E'joPSd!WqKdo`Y0qlNR:mT)b2Xr;uNlrrhlq!X/`1n-/IhpBU6pp^-*bm0!"`mf`%^q?FM2JcPZJ
o)nIbm03%bq$6Kso*Ogdh#m'Jn-/LieGt1$huNNSmf_q[ncnjopB^I!r<`E0ncIMIn-&:cnHSI_JcNai
qucNnkQLtk"nDlp#Q4o(#kA;s$MOVU"7$*`"nr5q#)iP^!:g9V"oebq#5&5t#knYs$N'tU"7ZNm"S)`c
"onn+!07-S"TASh"mZBe#PeZ%$1eN&$ekd["6fs]"nDlp#JpIm!:p3g"R?3m"pP7n#58Au#l=r#$Mb)'
"69R`"TJSi"SDrk#5/;X!.k4'!:g9n#5n],"pG1i#4r/s#l+f*$N:D)$g7Zm"T8E&"T8H%"TJSf"S2fl
#4i)`!.k3q!;?ZM#4`#p#lb50$2P#$$iUS.!s8Z."9e]+!<`N'"98Q&"98P["SN#l#5/<%#D<)_!;crO
#6+o!#PeZ%$2Y))$i(5."3C]>"oSW!#4`"k!1*Zc"mlNV#4i)p#l=r)$N(;($igCZ"RZEd"ni/p#Q+k=
!.k4J!7hAQ#64u"#PeZ%$2Y)-$hb#.%IOAO"S)`j#5ST!#h8p,!8mkS#4Mlq"p5)7"pb#0rWiH-n-A^o
q$Hs+r!W?0!"A]5_?BN8pBLEup^$?hJcNai!!_Kh!!`<*!!_fqp]pj*q$Hs+q[<<1pC5.Gn-/Rkq?I!+
pBZ]XWW:]Wmg&Rmq?d',q@!61p^R65_Z]rBq$$Ksp]pO!VZ;bXoEWkNpB^U%r!N</r=&T5q@<N.qZR$(
"U4#km0)t`pBLI!q$?p*_>o/fo)SdqpB]1Pp^$a'q?m0/r=&W6p^[!$rrpgRo`b*ppBUR$r!D0ZJcOF'
n-I\PpB^X&q?m0/rs\o9r!iQ6r=AE%!X&Z1f`^mMp]gU#q$?j(kQ$27blI,:h$<Z[q$@$.r<iK2r!`K4
rXSf9mfi^orrq3]oEFsnq$6a%r<`K1KE/:Xrs8W2mK`gu#jMZg#P\T&$2Y).$iCG3%K-e6&+'Q#"TJY[
"SN#q#5ST"#l=q#!1*]_#lt;<oEbF%!=&nh#PeZ&$2P#-$iLM4%K$_9&,d%>#3uHm"TJYn"SMuh"nr5u
#Q"f($3(@D!.k4J!;Hj&#RLbCo*F@]pB^U%r<iH1rXA]6r=8f;r=JB#qZYdYpBC?spBUR$q[!60eGt1$
huNEV!sf2=$2"S`#PeZ&$2k5/$iCG3%K6k9&,d%B"pP58#4;Wp"TAS`"S;lo#5ST%#lG#-$Le%I!6"s<
$M+St#QY/9is5Dd!"&Q0q?m0/rXA`7rXSl;rXf)Aq?H<jrWE3)jTP8\p'1?ur<NB/q[*6/Mu]jXr!N*'
oEb0rm0EInq[*0-r<rT5r=/Z7rX\u>rt4u0mKMMOrWW-%q?Hg%q?[!*r!K>%Nr\t_r!E9-p':[(#ic0e
#lG#,$N(;1%/gY7%fR";&H<@8#4Vlk"R-'_"o8H##Q"f)$2b.I!.k4B!;Hoq$2+Yc#PeZ&$2b//$iUS6
%K-e9&,d(=&bZD1"U,,&"Tef1"l][["nr5t#Q"f)$2k4e!.k4'!!*E7q$I-/$Mb#&#iQ$c#lP)-$N1A2
$igb9%K6k9&,m.>&bH:t"lBIX"o8H##Q+l)$2b,1$g7SB!6kNC$ht)($2Fks#Q+f"#Pn`($3(A3$N:G3
%/p_7%fR"<&H37C&dAU5#4r)u"98V`"Si5t#5e`'#l=r-$NCHd!3uV&$i(/+#lt;<q$?[!r!!0,#5e]"
#Q+l*$2k51$iLM4%K6k:&,m.>&HWRX#P/-$"U52("lTUX"o8H##Q"f)$2t;3$_IEc!;d0"$Mk))#knT(
#6+r&#5AH##lG#,$N:G3%/p_8%fR";&H<@B')i.-#5&/h"RcKh"oAN$#Q"f)$2b/1$b?=i!;ccm$i(/+
$2Fl$#Ohro#Q+l+$2k51$iLM5%K6k:&,d(=&cWLA#PJB$"o&8V"Si5u#5\Z'#lG#+$31Ia!.k4/!!!H&
$i:;-$2Fl'#O_ln#Pn`)$2t;1$iUS5%K6h=%hB3O&H*4?')Dk,#5A?'"9\o""SDlj"Sr<!#5e`'#lG#.
$N:G&!.k3i!<*E($i15,$2Or)#O2Nk#Q>#/#lP).$N:G4%/gY7%fR"<&H37C&eYlS#PJAq"n`#m"7u`m
"o/B$#Q"f+$3(>0$N:El!3-%t%/UG/$Mt/,#l+`)#4)Ql#Q4r,$2k51$iUS6%K6k:&-!4?&cNCC'DMh+
#5JGr"RuTg"98T%"oAN$#Q+l*$2b/0$`<uc!;d3&$i^S3$N(5,#l=l%#5n`!#5e`)#lG#.$N:G4%/p_8
%fR"<&H3:A')rX?#PSGt"nr/u!rrJp"8E#r"oAN%#Q"f)$3(A1$c2mq!:p0j%JpS2$i:;/$2b)+#PnZ)
"oef&"o/B$#Q4r,$2t;2$iLM5%K6h;&,m.>&cNCE',(ZG#PeSt"oAE&"8rAj"8N)s"oAN%#Q4r,$2b//
$f(f7!8%;O%K$Y4$NUSBr<iH/q?[!(q$-EoqZd!(r<W?.rX/W4rXAf9rXSo<rX]&ArY#2DrWr?*p'1<r
pB9a`q?6^"r!**)r!<3,r!NE2!"A&kJcO$qrXJ`5r<rK0r!E9,r!3'&ncempr!33,r<WH2rsJ`5rXAc8
rXSr=rXf)ArXo8G',:EOp]pU!q$$Kqli[%dqZZm%r!3-*r!E</rX/`7%"nVd!<!B(%/gS3$N1;/#lFr(
#5JGr"oSZ(#Q4r-$2t;1$iUP7%K6k:&,m.>&HEIC'*T'U#R:V@q?Qg#q$$Nrkl^ecqZZj$r!3-*rX&N1
r!NK5T)b2Xr!iT5q[<</!"&W2r!<3*r<E!"qulj"r!*-*rWrH/rsJ`5rs\l9rXSo<rt,/ArXo8G'GUKO
q$-p)#Q+c-"U,,."o&5p"7ZKj"T&B##5e`*#lG#-$N(83%(ZFj!;ccn%K$Y5$iLG1$2b),#Q=o."U=i-
pB:Btr!*0+rWrH/rX/W4rXAc8!"Su=rXf&@!##8ErtP;8q?Qp&rs&9&qZQQoq?$EoqZQg#r!*-*r!<3,
r!NH3rX@<WJcO^/rsnr9r!`N3r<iH/rWrE,r!*'&o`Y0rr<E3*rWrK0rX/W4rs\l9rXSo<!Y>qU!"o2C
!#,>Gq[!!&q?Ha!qul`roE+jkqZQg#rs&B+r!<3,rX/T3rXA8rJcNairXSl9r=&Q2rX/Q0r<WB-r!**'
nHAanrW`B-rs/N/rX&T3rsSf7rXJi:!"]&?rXf,CrY,8Fq$?m'!X8l7r!*!$q#pNrncJXiqum!&r!*'(
r!<</rsJ`4r!WN5Mu]jXr=8c8r!`N3r<iN1r!<6+r<E6)!<`T'"T/B!"T8N'#6"l,#lb51$N:G4%0$e:
%fR"=&H<@A')iOG'GUrN#l4f%#5eZ#"T&;j!rE*!"T/H$#5e`(#lb5/$NCM3%&X)d!!!Q.%fHk8$ig_8
$iLG2$2t5.#Q=r*"oSSu"8i<$"oSW*#Q>#.$2t;2$i^Y8%K6k:%fd1?&cWLD'E/[H'aa^Bq?Qj$quum!
rWE-%mK3@iqulp$r!*'(rWrH/r!NE2r=$OCJcPBB!"]#<r=/]6r!NT6$4.(=$2k//#Q=o."U=r0r<2`p
r<3-(rW`?,rWrN1rX/Z5rXAf9rso#=rX]&ArY#2D!Yc@arX&E,!!iH-q?Hd"qZQg!q?$Kor;uiuqulp$
r!*0+r!<3,rsJZ3rs\o:h#N$,fDtp^r=8c8r!`T5r!NE0r<WB-r<E3(rWN-$quZcurri<)rW`?,rWrK0
!"/]5rX8c9rXSo<!"f,Art>>FrY5AIrX&E,q?Qp&q??d"qucftp]:9oqucj"r!!!&rs/H-r!EB1r!WN5
rse/lJcO$qrX\r;r!iW6r<rW4r!EB/rW`H.#Q=r,"o\Z'"8N#t"8rB&"o\`*#Q=u1#mgt=$NCM6%/p_9
%f[(=&H<@B')rXF'`JjF$2b)*#PnZ&"oJN$"8i5q!W)rq"8i<#"o\`)#Q+l,$2k51$iLM6%>4_e!<!H-
%f?e7%0$_5$N:>6#RCY@rWiH-rWW9(r<*$#qZ?]urWN3(rW`?,!!rQ1rX&W5rXAc8rso&>rX]&ArXo2E
rY,DK'c-]Rq?[!(q?Hj$r<3$#quQp#!Wr/uqZ?Ztqum!&rrrE,r!30+rX&N1rX8Z5rsbS#QN7$srt##;
r=/`7r<iT4rsJc4r<WB-rW`?*rWN-$p]CEsrWN3(rW`B-rs8T1rsJc6rXAc8!"Su=!"f,Art>>FrtPJJ
rtbM=q?Zp&r!*'&r<3$#!<NB#!r)fo!rN/u"TJZ'#5e`+#lG#/$N(;3%/gXH!.k4J!<*Q/&,d";%K-_7
$i^S3$3(;1#Q=r,"oST'"8r<#!W<*!"9&H'"oef+#Q>#/$3(A4$iUS7%K?q<&,m+?&cNFC'E8dG'`]$G
$2b)*#Q+f)"oJN""8i5o!W3#t"8i<%"oJT&#QG)-$3(A1$i^Y6%FkH1!8mkV&H*.=%fHk9$j-kF$4Hh?
rX&T1rWiB+rWW9(rWE-$quQcurWE-&rWN9+rWiE.!"&W3rX/]7rXAi;rX\u>!"o2C!#,>G!#>JKrX/T1
q?[!(r!**'!X&W0r<3$#quZQmquZg!r<3'&r<E6+r<W<-rsJZ3rs\l9!"SJuJcNair=Jr=r=8f9rXA`5
rX/Z3rWrH-rW`?*rri<'rW;osrW<*%rWE3)rWW?-rs/N/!"&W3!"8c7rXAi;rXSu?rXf,CrY#JM'GV>u
()QrWr<WN2#mpP9r!3-(!<i]*"oST%"8i6!!WN/t!W3#s"9/N%"oSZ)#Q4r-$2k22$i^V5%/p\9%ZCCf
!!a)J&.f?`%hJXLr=/`7rX8]4r<`K0rWiE,rWN9)!!N9'rW<'"!!*!!rW<*%rWE3)rW`?,!!rQ1rX&W5
rX8c9rXSo<"qV@Y&eYikrY,>IrY>JMrX/K.r<W<+!<rf,#5eZ'"T/B"!rN'!!;llq!rW6#"T/H%#6"l+
#lY//$N:G3%/p\9%]9;f!<3Z0&H<:=%f[";%/gS5$N:A3#lY).#6"f+"TAN&!r;rs!riB&"TJZ)#6"i-
#lY,1$N:G5%0$e9%KI%=&H<@B')rXE'EJparYPJ>r!E<-!XAr9r<N6)r!!$%rWE0&quZQmquZg!rWN0'
rW`<+rWrE.rsJZ3rs\f7!"QjGJcPBBrXo)?rX\u<"UtnL%1E[E$iUM4$3(;1#Q=r,"o\Z("9&B"!WE0"
"9/N("o\`+#QG)/#lk>3$i^Y8%K?q<&-!4?&HEIC'*&aG'a#3f(E!&Wr!<?/!"&Q/r<N6)r!!!$r<)s!
pAt0nrWE'$r<<0)r<N<-r<`H1r!WN5rXJi:h#N$,fDl!c&eP`T&H34=%fQq:%0$_7$N:A2#lb//#6"f*
"TAN%!r`6!!r`9%"TAT("ono-#lb52$N:D5%/p\=%Ls![&-*:@&HNLXrY,PO'c%Q$(E!&W!=9,2$2b),
#Q4l)"oJN$"8i5q!W3#u"8rB#"o\`)#Q>#-$2t;2$iLM6%K-e#!.k3q!<3]3&c<4?&,m(<%K6e7$iUM5
$2t50#QG#."o\Z'"8Drs"9/N'"TSc+#Q=u/$2t83$NphG$k3[F%KI%=&-*=A&c`UE'F>Ki()Ic((^^WY
r<iH/r!<3*r<E0'qulp"qZ?Wqq?$[!qum!&r<E0)rWrK0r<iQ4r!`T7rso&=KE/:XrY#2BrXf&>r=8i:
rXAc6rX/W2rs8T/rW`B+rWN0%!!<$!rr`3&rrrE,rW`E/rX&Q2!"8c7"q;"O%M'']rXf,CrY#JM'GV>u
()QrerX8W2r<`B-r!3-(r!!!$qucEirWE'$rrr?*!!`E-r<WB/r<iN3r=&Z7rso&>T)b2X!YZ1Zr=T#?
rX\u<rXJl9rX8]4rX&Q0rWiE,rWW<)qucp"rWE*%rWW<+rW`E/rWrQ3rX8`7rseu<rXSu?rXfSP',)&o
'bqK"(Ddo+)?($A$3:G?r!E9,r!30)r!!'&qZHg!o`G*pqum!&r!*0+r!<9.r<iN3rs\f7rso&>\c@<^
qZ$U0r=])Art,/?!tGhO%fQq:%/pV7$N:A2#lY).#5n`("Sr6!"TAT)#6"l-#lY,1$N:D5%/p\?%Ls![
&.fHQ&c`UE'ET!a(B,*O(`=4g$iLG1$2k,0#lFr*#5eZ("9AT-r<)ZnrWE$#rWW3(rs/H-rsAZ3r<rT5
r!iZ9rt!W[JcO^/rtGAEr=T#?rX\u<rser9rX8]4rX&T1rWiE,r<;frrrrB+r<E<.rWrW5$4HhA!"Jo;
rt#)?#S@[^',)&o'bpcb()Qre!Z;mbr!WE0r<`B-r!3-(quus#r<)`pr<)s#rWW3(rWiH/r!EB1r!WK4
rsel9rt"T!JcNai!#5DGrt>;CrXf&>rXSo:rXAc6rsJ`3r<NB.r<E3(p&tC!r<<6,r<NB0rX/Z5rX8c9
rXJu?%hS^P!##8E$ksEk()@]&(`=20)@ZNOr!N?.r!<3*r!*'&qZQg!q?$Ttq?6d$rW`<+rWrE.rsJ`5
r=&Z7rXSl;Mu]jX!#5DGr=])ArXf&>rXSo:rX8c7rX/W2rWrH-rs&B)q?6d$r<E9,rWrN1rX&W5rX8i;
%1`@J"qV=X&J>]irY,DK'c-cb#T+Es)B0(m$k3%Ar<iH/rWiN0#lY),#5\T#"S;fp"T8N("o\`(#QG)-
$2t;3$iCG4%K?q:%fd0=!07-Z'`SjG')iLC&-*:@&,m(<%K6e8$NLP4$2t5/#Q+f$"oJT)#Q>#/$2t85
$O[CB%K?q;%g!:S&cNCJ',2,q'c%Q$rYP_T)B'Rn%/^M2$N(5.#lFr,#5\T""S`)s"T&B%#5e`*#lP).
$NCM4%/p_8%f[(=&AeF!!:p3i'`A^E')iLB&H31?%fQq:%/gS5$N:A3#lP"u#6"l,#lb52$N:G5%/p\;
%Ls$K&-<FV')iOG'GVA^('>?i)&`Dl!#tkFr!WN3rX/Q0r!<0)r!**'mKE@irW`6)rWrN1r!NE2rs\f7
rXK&A%hK9ah#N$,fDtpdrY5AGrY#2BrXf&>rXSo:rs\l7rX/T1rs8N-oEP=#rWrH/!"/Z4!XoMIrXK2E
%hK9a&J>`jrY,DK()Hlc!uMmo)ZC]U%K$Y4$iUM2$2b),#Q"`("n;`k"oSZ(#Q4r-$2b/1$iUS7%K$_8
%g!:R&a04H!6kKI()7Mu'GUN[rY#5CrXf&>rXSo:rXAf7rX/T1r!<6+r!*$'rWrH/rsJc6rX8i;%LrUO
%M'*^rXf2E',1?Z!u2Re(]G6V)&aD4*#oCsr!`K2r!N<-rs8K,qZd!&!!N0&qul`tr<E6+r!<9.rX/Q2
rs\l9rXSl;rt#2B&VL.i!!!f6(&epH'E/XD&cN@@%fd+=%K-_7$i^S4$2Y#-#PeW(#lG#/$NCM5$j$kI
%fHn>&.oNR&ePck'GV>u()Ic()&X>2)]Kb;rXJc6r!WE0r!E?.!XAr9rWi9(l37+jrWiB-rs8T1rsJZ3
rXAc8rsnr;rt,2BT)b2XrYGJJrY5>FrXo2CrXf)?!"]&="UtnL%1E[E$iLG3$1S<!$2t;3$iUS7%K?q;
%g3FT&J>`U'*8j_(&esP(Dmu,)B/So!ZW3jr!iZ7r!WE0q[*-*rWi9(qZZNor<E6+q[!0-rX/Z5q[EK6
rXSr=r"/l?\c@<^qZ$[5(DcubrY5>FrY#2BrXf)?rXSl9rXAf7r!N9,q[!*+q[*B4$OltCrso&>rX],C
&JG'V";DOb()Hlc"W/*p)B0Xp*!%&ir!iQ4r!WK2q[*-*qZm$'nHJgpr<N<-q[*6/rX8W4rXJl;rX]#?
r"7HZJcO^/rtkYMrY>DH";;C]&eb0UrXf&>"V)"O%LimH$j6qG$471?$M4Z$$N:D5%/gY8%f[(>&H37C
&ebrX'F5Eg()Ic((`=1s)B'P7*$$(A%f?e5%/^M2$N:A/#l+`&#5JGt#5nf+#l4l-$N:G4%/^S6%f[(=
&H<@A'(>mQ!6"p=(`3/e!YlIcrY5>Fr=])A!"f)>r=/u?$k*RR%/gS4$N1;($N:G5%0$b:%K6k;&-!4@
&cNCE',2/['b;&q(Dmu,)&aD4)]Tk=*Zt=jrXJc6r!WB/q[*3,q$6<lr!33,q?d-.rX8`7r=/]8!"])?
rt,/ArXt.iWW3#9rYPPLrY>DH";;F]',(6UrXf)?rXSi8rs\l7rX8B+q[<B3rseo:rt#,@rt55C";;F_
'G^T_#8\0n(`=52)u^fZ*??1Cr!rW6r!`Q4q[33,r<W0'o*5'srs8W1r<`?.rX8]6rsel9rX\u>rXf2E
&eh/CNr].rrYPSMrY>GI!#5DGr=T)Br=Jr=rXSl9r!`K2r!N6-rXAc8rsnu<rt,2Brt>;E";DOb'c-cb
#oFKs)&aG6*$$(!*X*Vq%M'$Zq[NH3q[<B1q[**)rs8E*r!)s%r!<6-q[3<1rXAc8rXSi:rXf)ArXo2E
_>o/fo)Jb.r>>PNrYGJJrY5AGrY#/Art,,>r=8f9q[E*)rXAc8rXSl;rt,2Brt>>FrY,PO'c%Q$(`<5i
$5sj&*#ot?*ZlLIrX\o:rXJ`5r!WH1q[*!&n-Ajsr<`B/r!WK4rXJi:rX\o<rXo/CrtF2gJcOF'rYb\P
rYGPMr>#;GrY,;Er=Su>rt##;q[N-*r=/`9rX\r=rt58DrtGDHrY>GKrtc1_)&X>2)]Kb:*??1C+!;a*
&,Zq8%K6e5$i15/$2"T!#Pn`($2k5.$iLM6%K6k:&,m.>&c<:A'BfFJ!6kND)ZCTW(`+#*(]G3L(&o!I
'E&RD&cE:=&-!.5%K?k4%K6k:&,m.=&HWRX'*Js_'GVA^('tcn(`4,/)B0Y9rZ):d*ZlLI+V51q&,Qk7
%JpS5$i15/#lk8/$18)s$2b/0$i1;2%K6k;&,m.>&cE@B'E8`!!3uV')?:ZS)#Y6R()7T"(&epG'E8^D
&I&dX%hB3^&,6Y7%JgP3%fHq<&H!.?')rXF'`SpJ(B53M(_IW')B0V8*??1B+!2UJ+X%C.r"&c:!Y#SK
rXJ`5rX8`5rsSc4p'L?sq?d*-r<iT6r!`N5rXSo<rXf)ArY#2DrY1t)QN.+,)B0Uo)$Ccn(Dmte(B,'K
'`A^D')rRA&H34>%f[(3%fHq:&H<@@')iOM'GM8s()@]&)#Y<Z)B'P7*$$(A+!2X)+TN_c&H!(9%fQq7
%/LA1$M=_r$2Y).$iUS2%K6k:&,m.>&cNFC'E/[G'tOBs!;ccq)u^cU)?(KO(BbKg()7S_'`SjF')W@@
&F9r+&H3:A')iRC'FGQi()@]&(`4,/)ZCZa*#ot>*ZlIH+<_pQ,Pr&O&,Zq8%K?n:%/LA0$31D1$LeB!
$N1A2%/gY4%fR"<&H3:@')iRE'`Sou!.k4/!<4&=)u^cT)>tBP(]>*Q'bqDt'GUKZrt>2@r=Ar>r"/]8
q[i]<rY#5Er"K\W'c%Q$(Dmu,)&aG5*#ot>rZ2=e+<VgN+sS<Eq[iZ9rXSc6q@*<1o*Y@$pBpg+r=&W6
rXSc8rXf)ArY#2DrY5AIn,S%?`;fr[*$"qsrYkeSrYYSMrtbPJ!u)F_'`JdD')iL4&H!.=')rUH',2/Z
(&o'K(CM&s)&X>2)]Th<*?P2%#9Y-4+X/*T,lJ>S&Gm"8%fHk5%/^M2$31J%$Mt5/%/gY7%fHq:&H!+?
')rUE'E/^F'oW-m!<4)=*<$oW)Z:QQ)#kEN(B5-I'`8XD')rR4&c<:@'E8dG(&o'J(]G6d)&X>2)]Kb;
*?H7D+<VgN+sJ6W,UN@#q[i`;q[WQ6!"Ai9r=&<+p'UU'!"Af7r=/]8rX\r=rXo&@r=f/E!YlFcVZ;bX
!$;+[rZ(qWr>PYQrtt\NrtbMIrtP>Dr=T)Bq@`f?p_*N=rY5AIrYGMMrYYYQr>H:f)]Tk=*ZcCF+<_mP
+sS<X,piO'rXf2C&/"mQq[`Z9q$m61r<qluq[EB3r=8f;r=Jr?rY#2DrY5;GrYE?NJcPBBrZ;([rZ(kU
ru1kS"W/'m(`+"d(B5-H'`JdE')rX=')WFA'`JjH(B53N)#bEQ)ZLcV*<$rd*ZcCF+<VgO+sS<Xr[%LU
q[if>rt,&<r=/l<%1`:FoaLC!q@*92r=8c:r=Jr?rY#2DrY5>HrYGMMh#N$,fDtpnruV.[r>bhVrYkeS
r>5_T(D[f'()Hc^r=nZ5r=o2FrYGJLrttbRrYbt[)]Th<*ZbA(+!:J)ruq@ds!7Ri!#,>E!YH"WrXnu<
rX\f7r=.`pr!iQ6r=Ai<rXo,BrY,5ErtYMKrYObuJcO$qrZD+\r>knXrYtkUr>GVPr"o5GrY=`5r>#8H
rYPPNru(hTrYlFh*$$(A+!2UJ+X&$R,9nH[-2f1j'DiFA&c*(<&-!.>&,d"9%K?k7%IX`%%K$_6&,d(=
&cNFA'E/^F(&esK(]P;)!3uV&+9*D\*W@&Y)uU]T)>k?N(BP?g(]G3K'`\sE(%i=>(B,-L)#bEQ)ZLcU
*"O&2*ZlIH+<_mP+sS<X,UN@8rY#>G',1?Xq[rc<q%*E6nI>='pC7!0rXSu>r=Jo>rY#/CrY5>HrYGGK
T)b2Xr?2%\ruV.[ruCqU!#kbQrYP\Q(E!,fr>,DJr>,)Aq\K,HrYYVPrYcIi)]Th<*?H7D+!;[L+X/*T
,:"N\q^2.QrY#)?r=Ar>rXf#=oa^j.ndYF*r"&`;r=T#Ar=f/ErY>DJr"lpEJcPZJr#c(`+<M^)*rd8Y
*<-uV)ZCWO)#+p<(Ao!K)#bEQ)Z1QR*!RE(*ZcCF+T<Mi+sJ6V,U=Z_-N#7k'E/^F'DiF@&HEC>&H!(1
%eU;+%f6e8&H*4>')`LC'`JjI(B,-K(tAV<!8mkU+TEVb+T<J_*rI&Y*;piU)Z(EO)#b?O)"8@@)#Y?O
)ZC]T*<$ri*ZcCF+<VgN+sJ6V,U=Z^-3,Ch-i=\T'E/X?&cE:7&*aZ&&,[":&cWLA'E/^F(&f!J(]#!<
!.k3i!;[l<+TEP]*rd8Y*<-uU)Z:QH)#G-K)#G3L)?:`V)u^iV*WI2[+9*J`+o`bd,QB%h-3#=f-i4VW
'*&aG'E/XD&HEIB&c<44&+^;/&,Qq9&c<:?'E/^E(&esK(]G6I(lSHp!;@W:+T*>]*rR,Y*;gcS)ZL]T
)ZL]R)>Y3I)>b?N)uUcU*WI2\+9!D_+o`bd,QB%h-3#=i-iGIe'`JdB')W@8&FL))&-*=?&c<:?'E&XD
(&f!I(\noG!07-X+oNVb+o`\b+TEP^*r[2X*<$oP)Yk9F)Z(KQ*;poX*r[8]+T<Mk+sJ6V,U=Z^-7:29
./FVX(&\jG'E8^F'E&RA&HEC@&c<4>&G?Y1&GZq9')WFA'`AdG(B#'E(r?9)!:p3b,5iYg+<VaK+!:J'
!Z`='rZ2"YrYkhWr#>JNo,ITIr>knZrZD+^$m?f=,9nHZ,palb-R\U9rtP;ErtPJIq@ic>p(?a)p(@07
r"JuBrY>AIr>5>Jr>FDkJcOF'pEB_b+sJ0Rr?2(]r#YeW!ZW4$r>b8FqAfJTrZ;(]rZM4arZ_@erZqLi
s!Ianq'c1jpD*K<r=eo<q@WN7ne(^2q\/oBr>#8Hr>5GMq&/ArJcO$qr$(t^"X5-6+sA-/+9Wc/+<M^)
*WR5[*r[2F*<$uY*rR2[+T3J`,5rhe,lT+i-N>Ik./>=c(&o!J(&\jF'E8^E'DiF-&bcq8'E&XC(&\pI
)"njI)2&!q!:hB7,5`V`+T<J_*rd>\*q^QK*W7&X+8m>\+oW\c,Q8tg-2o7j..et_(&f!J(&Sd@'D`@>
&aU/,'E/^F'`JjH(B53L)"SW;!1*][,Q/nf,Q&bb+oWSc+!;^)+8$]P*W@,V+8d8\+oNVa,QB%g-3#@m
..etf.f0tV(B#!C'`/R?')rXD'(ch3'E&XF(&SjG(]>3A)7fg"!;ccn,PNJ^,Q8na+oNPV+8d2W+8R,X
+oNSd,9nK5-3#=k-iYUi.JYFn(%W4>(&SgE'\sH&'`8^D(B#'I)"\^F)V"h>!8mhW,P!)],pXc8,6B&6
,Q8nc+TNYa+o<DZ+8-iS+o`bc,Q8tf-2o7k-iPOl.Jt[k.e"2R(&f!H(&J^E'DrR3'E8dC(&JdE(]>3F
)>P3?!.k3i!;7]6-2]%f,PiV]+oEJQ+TN_b,60"g,lK%g-N5Cm./k[e.fLsg(B53K(AnpF'EAm?'`&LA
'_rL?(Ao!H)#>-M)YY//!3-%r,k*,Z,l/b`,6&h_,5NJ],5`\`,lK%g-3P\D-n-V9.f([h(AJ^D(A&@4
'_`@B(AemF(]5-K)=SQB!07*[,kWJ_-2T%g-2Jnc,QAtc,PND[,Pi\a-2f1i./k[h.eP=h(@i:7(AnpF
(&Sd@(%rF?(]>3N)=&3X!.k4B!;7`/-N5=h,QK(f,k`JX,l8nf-N5Cl./k[k.e"tg(AJ^=(B>6K(]"pA
(%2q6(B><N)<`!p!.k4'!;\#5-N#7j-MSn_,k3/\-N#7i./k[n.f1ad/*n)N)#>'1(ASaH)#G35)X%0Q
!6kND-1WDV-NGLm-i>=Z-3#=h-i>Cl.K1ds.d&>O(\S^B(]>-6(]G9J)<Mk;)MA*r!;.]0-iGIl-iGCl
-i,1e-N#7f./taq.cMt/~>

%%EndBinary
grestore
np
29.8566 61.9308 mo
17.5439 61.9305 5.95532 51.9645 2.96094 38.0439 cv
2.47852 35.8018 2.23925 33.5518 2.23925 31.3398 cv
2.23925 25.2695 4.02782 19.4727 7.43945 14.8086 cv
10.9849 9.96485 16.0757 6.73828 21.7817 5.72265 cv
23.1006 5.48954 24.4192 5.37675 25.731 5.37675 cv
38.0487 5.37675 49.6393 15.3391 52.6348 29.2695 cv
54.4424 37.6689 52.8076 46.1377 48.1562 52.5049 cv
44.6104 57.3486 39.5166 60.5752 33.8135 61.583 cv
32.4924 61.8173 31.1707 61.9308 29.8566 61.9308 cv
25.7488 7.44325 mo
24.572 7.44325 23.3872 7.54474 22.2051 7.75391 cv
17.0166 8.67578 12.5537 11.5117 9.29883 15.9648 cv
6.13769 20.2852 4.48242 25.6758 4.48242 31.332 cv
4.48242 33.4189 4.70605 35.5283 5.16113 37.6455 cv
7.94496 50.5898 18.5879 59.8702 29.8478 59.8702 cv
31.0243 59.8702 32.2089 59.7687 33.3906 59.5596 cv
38.5791 58.6377 43.042 55.8018 46.2969 51.3486 cv
50.6191 45.4346 52.125 37.5361 50.4346 29.668 cv
47.6503 16.7236 37.011 7.44325 25.7488 7.44325 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[53.76 0 0 58.08 1.44 1.12 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 112 
/H 121 
/M[112 0 0 -121 0 121 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 112 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 112 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 112 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 112 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
q#L$fo)eOdo`Xpko`jsloEb!fJcMbMquQWqqucj"q??d$r!33+r!<-*r!N?0q@*92q@<E6q%3H9r"Au/
oE"Lao`Ojiquup#oEOmloEb@$[K(mZl2^__q?$Qsqulg!r<E'&r!<-*r!N?0q@*92q%!<5q@NQ:rY#5D
r"Jc)ncJIdo`XghpBL0noa(9uq#H!HVuQeuq#^Ksqulg!r!*!&r!<-*r!N?0q$d01q@<E6q@NQ:r"Ai>
rY551ncJIdoE>!oq??NroEY$poEkO)]`<Waj8f,[qucj"q??d$q?Qp(q$Hs+q@!30r!iK4r"&W8r"8i>
!#,2Br"K2I'`mk,oE4ahnce[jo`t*poa1I%!!%TNT`G#nqulj"r!)s%rs8W1q$Hs+q@!30q@3?4r"&T7
r"8i>q@ic@qA&]*oE4ahpBCHuo`k'ooEb*roa8V;JcOU,r<2s#r!)s%r!<-*r!N9.q$d01r!rQ6r"/c<
r"AuBr=f)CqA&oDq?$<lo`Xghncngnoa(3sp'Ug,r<nD]RK30fr!*!&r!<-*r!N6-q@*92q@<E6r"/c<
r"Ai>r"SrAr"f5IrrViqoE=gjrrqrto`t*ppBgL"p^>7FJcO@%rrr<)q?Qp(q$I!,q$[$-r!iH3r=A]8
r"8o@r"K)Dr"SuBr"f,FrttJ4o`Xghn-8Uloa(9uoa1[,p'^m/NrY@Drs&9(r<WB/r!E9.q@!-.r!`];
%1W4Fq@EK8r"8i>r"JuBqA&oDqA9&Hru(_:o`Xghn-8OjoEb3upBpO#q[E#qJcMtSr!3-*q?d',r!NN6
$i(5-%0-n:%f-_6&GZq9')WFA'`8^D(ASdE)#P6O)YF7("n2`g#Q>#&#l+f$$M=f#%(6.f!:'X_#l4l*
$N(;-$ipeGr!iK4q%*<5r"8i>r"JrAr>#5GqA9&Hr>>SQq\o85o`a^eo*=mnp^-[%pC$O#!"J`(JcM_L
q$I!,r!W</q@3<3rsnl9q@NQ:q%EW>r"T&Dr"f2Hr##>LqAT;OrWMltn-8=drWr3'pBg['pC$O#q[L4=
JcOj3rX&K0r!W?0q@361q@EB5q@WW<r"Jo@rY>;GrYPJLr#,MQq\oAOrZ(Y9ncnIdn-Japq?lm'pC-a)
!!%TNT`G'!r!W?0r!`];%1W.D!"\r;q%3B7q@`]>r"T&Dr"f2Hr##GOq&9/MqA]JUqZZQqm0ELop'C?u
p'UU'pC-^(rXQjHJcOU,rX8Q2r!iH3!=o\9&,Hk6&c!(;'DiLA(&JdF(],'L)?1WS)Z1QN*;gfX*X23@
m0<Xt#OMfi$24f'$hk)(%K?q8%Yt+R!;d3&%JgS3%fd.7&GZq7')E:>'`8^D(Ao!H)#P9N)Z:WN*;giT
*r-$/#6>)8p'C?tnd5'uq$[!,p^Qj*b5d+oec5[Yr!iK4q%*<5!>,n=&c*.9'DrR@(&SjF(]5-K)#tQQ
)ZC]R*;giR*r[8[#4i)^#kA;r$MFl)%/:;2%f$V4&!$^S!!!K)%f?k9&Gm%7&bm"7'D`F@(&8XD(]5-J
)?(QP)u^iU*VpiT+9!DS#O)Kq#m^h+$2"Z$$ht/.%JLA,&+T^P!3ZD$%f?k6&GHe5&cr^Z')E:A'`8[@
(&SjF(],'J)>tKO)uL]T*W-uV+8d8]+nu<,#jhrp$Mb&*$ht/+%JpY.&-!3L!.k4:!<!H)&GZq5')*(8
'`&R@(Ao!H)#G3L)Z1QR*;poW*rI,X+Sm8[#Oi!%#m^eC#jVcs$N1;*$M=f(%/CA-%f-_4&GZ<X!2onp
&H!.7&cr^[')E7C'GM5Z'ET!`'`&R?(A\jF)#P9L)ZLcS*;giU*rR2\+Sm8Z,4c)t$2b/)$MOr)%/LG0
%f6e0&A8'q!9=.[&H!.:')*(6'_`@=(A\jF)#>-K)Z(KQ*;giV*rR2[+T*D\,5ib_#iQ*i$N:A%$MOr&
%/UM3%epS1&H*1@!.k3E!<3Z/')*(7'Ef-b'GVAY(&A[I(D[ea(]#!H)>Y9N)uL]U*W-uW+8m>\+oW\^
,QB%h#jVcs$Mk)#$MOo#$ht/+%JpY5&,Hk4&]=[$!8RYT')E:9'ET!`'_`=C()?Z]!Z)XgqA8rEr#,GO
r#>PRr#PbXr#bq]r?;.ar$2+bs!@=E!X]8@h$WWZq[E6/q@<B5q@NW<q[nVaRK37!q@iuG'GUBY!>ZFB
(A\gK(`+"b)#P9J)Z:WP*<$uV*rR2[+T<P_,5rhb,l8nc$/Z*^$M=f$%/LG0%f?k8&GHe8'$C9,!7h/J
'_`=C()?KXpD<Q@q&0#Ir#>SSr#PbXrZ;+^rZM+^rZ_=drZq@er?g,'rsSf5n-f""q[NB3q[`Q8!"o,@
q%A_gP5tFopD3`Dr>,GLpD<TAq&0#Iq&B8PrZ1nXrZD(]r?;+`s!.Fes!@Rir?q=H%1<ON$O[:K$OR4K
$4@7@$3U_D$4@7@$3:MAr<iT4n-epup^R-2q[`Q8r"8Z9!#+o'JcMtSrY>8F!Z)Ufob[09r#,MPpDWrK
r#GVTr>tkYrZM+^s!%Cdr?VChr[.Rkr@%XPbmXFXp^I!.q%!<5r"/`;q\&c>[K(mZlN$o"ob[09obmB?
r>YYSr#P\Vr?(t\r#u(arZh@er[%Li!@K;m-ib^B$NLV6$hk)&%K$_4&,[";&c!(:'DVW[!2onq(BPEj
(\JUH)&O4`)?(QI)Z1QN*;giT*rI,[+T*D^,5ibc,lT+g-N>Im./YLo.b"k+%/pY6%/(,'%JgS5&,Hk8
&cE@='E/]Z!.k43!!!i0)"SUH)AsF`)?Ccqr#>JPq&TASr#bn\ruq:ar?M:es!@Uj!%.[ms![jqr$haU
$k3+Cp^@33$k*%C"Ub\H$OdI9$iLJ6$h=`!%J^M1&,m.;&c34='DrOE!.k3E!!!l,)>tHR)>G*M)Zpus
)]JGipDj)OqB#PVr#l"_rZ_7bs!7Ohr?hOlr@%[pr@7dsj:)%rrs\o8p'gF!q[N<1q@EK8r"8i>r=eu@
_uPAhh#IEmn/;NN)B'P5)]BXd)tt?J*W$oT+8m>]+oNV`,QB%f,lf7j-N>Im./bUo.fV$u/B81n%JUG1
&,Qq8&cNF@'E/^G'`Ac&!1Eod)?^ut)]BXc)[%*!*#fmr)Zh!!)u:NT*?=eoq&]JVq]Pn^r$).crZqFg
r?hOlr@%[pr@7gtr%%pY%1E[B%0R(K%1E^1%.4Pu%K$_1&,d(:&cE@@'DiLA(!?T/!7h/A)u^iW)tP$L
*W6uK*VpiT+8m>\+oNV`,Q8qi,UFc9-N5Ck./k[q.fLst/H%0i%0[.K%1E[ToF(^/nI5("p^[-2q@NZ=
q\&lArY,;Gq\B,HNrY@Dn/MfU*$$">*#ot=*?6'e*VgcQ+8d8]+oEP`,Q&he-2f1j-iGIn.K1gs/,Upu
/c@<c%0-h9%K?k8%0-h9%K-\8%K-_6%K-_0%JpY2&,["9&cE@@'DiLA(&o'?!.k3S!<4&<*WI,D*<7/Z
*<I9'*W$oT*r6uS+T3J`,5`\b,lT+h-N,=k./taq.fLss/H7=%0)dL)%Lr@H":YhM%M%V1!"Ai9rs\i8
rXAQ2rXJZ5q[`K6r=So>rY,2Dr"]/G[K(mZlN$c%!$;(ZrZ;([rZ;([koTR@q]PbZrZ_=dr?V@gr?hLk
s![do!\,ZMr%.k"r\"4(s"O'T!Y#VLj:)(tmg].(q%*?6r=Su@q\/uDq\B#E!#PG2JcM_LlQ-*L*Zt>%
!$D.\r>u(^+!1%rqB5_[r$)+brZqCfs!I^ms![dos!n!us"+.$r@S4+0JG49m1'1,%1_D-p^R'0q[`Q8
q@WW<rY,2DrY>;Grti?KJcOj3r>u"\fH1/;+!:>%q'#_]r$24er?_Fir?qUnr@.arr@7k!r@S%%r\+:*
r\4Te%M''[%hJ1?!=]P;%K?pu%J^M3&,Qq8&c<:>'E/^D(&o'H(B=Ge!20B&+<M^J+!;XJ+!2UI+<Vd)
+93M_+9ru2+!2UI+<LS*r?).`+<U4uqB>\ZrZh@er[%Ihs!Rdos!dmrs""("r[n+%!&+:)s"XO/p^[E9
%hJ":oF:C$q[WE4r"/]:r"AuBr=o2Fr"f2H_uPAhh#R0l!$U/@pEBGYq]l+dr?_Chr[7[ns!dmr!%S+$
.kLWNs"=:(r\4@,r\=I0nIP!s!Y#VLm1&h#r=Ac:q[r`=r"K&Dr>#8H!#PYOr>:=jRK2Rq!$M4`!$M4`
![&X/n0.]Rr$2+br[%Lir[7[nr@.^q!%\"!s"44&s"F@*s"XI-!AcS3&-<@Q&G6P8%Ls$=%KHq=%1_k:
q@<<3r=Jl=r"Ao@r=o2Fr>,>Jr><]XJcO@%![8g3r?;4brZ_:a![8g3r#uFj+X/'R+X&$Q,4crZ+sA-+
,5WV`,lAtg-N,=l./bUp.fLsu/H.7"/cm[Z0`Eg)1'06g2>7[S&-!.=&+pG4%K?q1%JLA3&,Hk8&c34>
'E/^E(&\pI(],&1!0[B_,PiSc,9eB0,4HcV+oNSb+n[&R,Q8te-2f1h-iYUo.K1gr/,q1!/cRI&0*!^)
1&j$.1BKBj2>%L^%hK<B&+pG4%K?q9%J1/,&,m.<&cE@='E/^E(&\pH(]G9N)=dcZ!3ZCg,6/qd,6/qd
,P32[,5i_d,5EJ],l]1g-N>Il-ib^o.fV$u/H.7$0)mU(0`Eg,1B0001^>lq2A$N4&J=aK!=ob3&+pG3
%K?q7%K6k7%fHq9&H!.=')WF@'`JjG(B,-K)#Y>\!.k4:!;@c<,60"f,60"D,Q&hb-2o7j-iYUm.0(jr
/,q1#/cIC%0E3a+1&`s-1]K<32?#N1&HNFTpCIB:%hS@DoFCd.pC@$1r"/f=r"Ao@rY58FrtbMKrttVN
q#H!HVuZfB!%%Cc!%%(Zq]kYVqBZ"cr$DCkr$_Ror[Rpur[e""!\Q)Yr\4:*!\uMer\XX4r\aj;2\?\s
&HNFTq@NZ;rXec6p^[<5r=/f:rse`5r=Ac:rXo&@r"JuBrY>AIrYPJLru(eS]`<Waj8eQnrZhIin0J#Y
q'>tbqBZ%ds!I[lr[@^or[Rpur@It#r[n1(r@e:-0erke1,CaDrA=^92E*QSr=\i:o+:U+pC704oFCa/
r=Jo>r"AuBr"T&DrtbMKrttYOrYbb:JcMJEoHj\e-7'ucoHjJ_r?M@hnKdrWr[.Uls![dos!n!us"+.$
s"=:(s"OF,s"aR0s"s^4s#0j8s#Blgob$g-q@EB3n.,@,r=Ji<rt>5Cr"T,Fr>,AKr##GOrYkeU_uPAh
h#RF%"=>KC-R\I3"=5B@-78X:!%.Rh!$qLh!@/ui,l/ha-N>Il./k[p.fV%!/H.7#/d*g\0JG6]1&`s.
1]B322?#N62uYf:3Va9h&J>`Q&HNFTr=Ar@q%3?4lONk(q[i`=r"B#Cq@roDrtbMKrtt\P!#bbSru6ao
RK*I<-R^>jng=Md-RU89-3PVA,pju+-2o7h-iYUn.0(js/,_%!/cRI%0E3a+1&j$/1]9-32)R;k2[DB&
3B9,]'+tuQ'(lh;&/"^Lr=Ai;ndbC)rXeu>rt>5CrY52DrtbSMr##GOrYk_Sb5d+oec>:io-XYf-RL2g
p*TGYr$MFkr@%[pr@7dss"+.$!\Q)Y!&+=*r\4C.r\OO1s#'g7s#9s;s#L'>!'C&k!>6(B&crXW')3%?
&.fHP&-<@Q&H!%?%Ls$@%f-_6&H3:>')rXC'`8^G(AnsK(]YEN)?1WS)ugn=!0[EW.0:nG.K([h./#%_
-3>J?-2And-iPOo.K1gr/,h("/cIC%0E*X*1&`s.1]K<22?#K62uYf93WD/?3rfuk'*/^Zq@WiA&JFjN
q%3B5r!i];p^[*1rt,)?rY#,BrtP;ErtbSMr##GOru1eSruCS0JcMtSr@.drr[Ipt.etLo-n4g;pF#qe
!@B2j-35J@q^;Clr[Igrr[Rt"r[n($!\Z2\r\=F.rA+F1r\X[6r\sj:s#L'>s#^6CrY5)?q@`f?rt>/?
q%392p^[<7r=Ac:r=T#Ar=f/ErtYAGrYPSOr#,MQrYteU[K(mZlMpu9.P(BG!%Ijr!%Imsq'c=m.JG4k
-Rej>![]9Ar[7^mr$VFkr[Igr!%\"!s"44&r\"7*r\=F.r\FU41c>7js#9m9!BE1B3]]A%49.PB'ESp]
'`&L<&crXX')`CD&.oNQ&-<@R&Gcn=%M'*G%fR"8&H3:?')`LB'`JjG(Ao!K)#bEO)ZC]U*<.&T!.k3L
!!4Z$/Ggpt.fCmq.KCps.Kh1L.OckF.0M%J.4?VB-itbE./G:k-N,=k./k[o.KV+O/H%1"/c[R(0`Nm+
1&s-01]TE42ZG`83!)*#3rV2@4T7JE4r*o.p_3E8!YH%Xr"/r@&c<47&-!.<%f6e7&H!.?')WFC'`AdE
(B,-M)#P9O)ZC]S*<.%m!.k43!;S2>.fq1N/,C^s.4QhB.JkLp-RU>=-iGIm.0(js/,h+!/H@F&0E*[*
1&j$.1B9922?,T72ubi;3;to=3]m='!'U<F!'gGtp_<Q<rY#5Er"9#B')W@<&Gcn=%Ls$I%fHq8&H<@?
')rXC'`SpG(Ao!K)#bEO)ZC]U*<$rZ*WUclT`>9K/M&J)/M6`K!@o_r/,^sp.f1[j-ik\Dr?qUns!dps
r[[t!!%n1&r\+:*r\4I01,Jkcs#'g7s#9s;s#L'>s#^6Cs#p?F!'gArq@iuE'GU<Uq@`W:r"&o?%hJ^P
r"&]8r=Ac:rXo,Br"K)Er"]5Ir"o;KrYb_SrYteUruM+\_uPAhh#IO0/hJ^O/cI:$/c%"".k<1K.fh+M
q'u:k![oKHpF$(l.OtBIs"+1%s"=:(r\+=,r\FL0r\XX4s#(*?2`NcW3BB5#49%GC4o[_F564"bp_EW>
p_3K:r"8]8q@ET9r"&f=q[rc>r=f/ErtYGIr"oAMrYbYQru:qWr>knZL]EkDpauV"/hZuP"=u,V/1gcO
""PoQ/GLam.f1[n./bUp.fV%!/H.7$0)dL(0`Eg*1'06f2#]?42Z>Z83;toB3]]>a4?Pe+4odhH5QF+L
(A\aH'G^N[!>?1A'E&OF&J5ZT&HEF;&H!%=%fHq;&H!.<')rXD'`JjH(B#'I)#kKQ)Z:WS*<.&Y*WR;*
!.k4%!;J5A0)7("/1p`MqCDCl!@]Mo.0:tL/,h+!/HROW0E!U)1&j$.1]K932?#K62uYf:3W;)>48q>C
4[/j0"@,4<5skJb!YlIdr=oAJ'c$Z]rtGAGr"B)D'DrL>&c*(7&,[":&cWLA'E8dE(&o'K(]5-K)?(QS
)u^iU*WI2\+--Dc!<"SQ0/#$S0*!X"0)@0q/Ggq!.P!%K.fUss.fLst/H7=%0)mU'0E<j,1&s-02#]B4
2ZG`83!MB(3]fDc4T7JE5!T$3s$?WN!#PDGr"T5H(&/L@'D`@>&bZe8&,m.:&cNFB'E&XE(&\pI(]>3M
)?(QQ)ugoW*W@,Z+7]D`!3ZA'0JWM[!&=C*pFl@q!\GuVr%.t$/M6lOqC;Rr/,h$u/,q1"/cIC%0*!^*
0`X!.1]K<22?,T62ZPi:3<hN+4$5Vg4oRYF5Q3nJ62j1N6iIl&()Qla!>QCJ'`f!`q%NiC'`8XC')*"2
&H3:<')rXE'`8^G(B,-I)#bEQ)Z:WS*<.&Y*rd>^+LV9%!:'Ud0etN^1&`j,1&<R*0/#$W0**[YqC_Xs
r%%gur[e!ur%.h!s"=:(!&4@+s"aU1s"s^4!]Dtrr]'p<s#U0Ar]CEK4[)%o5<qL95s[j:6NKRlr>,MN
(Dm#c!YlFcr"\u@q@ic>q%3Z>&/"dNr=So>r=f/ErY>AIrtkYOr#,GOru:qWr>kkYru_7`q#H!HVuZWK
pG)S"!\Z5]qChb!""l2X0)I7"/-%:#/H.7"0)mU(0`Nm,1B0001]TE42Z>W@3&ioY3]]>a4T7JN5!D1q
5X7V$6:+'=6j#jp(E!&d!>ZLL(',-cq@s&G'G^N[r"B)D'DrL<&c!%9')iRC'`JjH(B#'L)#P9O)Z:WR
*<.&Z*r[8[+M@c,!9=.V1\W[$1&N^,0/#$S0E*R,/M/S,0)[@%0)dI#0)mU(0ENs`1B'*02#]B42Z>W8
3;toF3]]>a4?Pbi5!D415QF+L6N9FP7/o^T(]kKj)#Y6P()@_a(AJXB'`&L?')iLB')3(9')iRC'`JjH
(B53K)#P9O)ZC]S*<$uY*r[5a+<VgN!.k3E!<+hL1]B-01]B-10f&V\!\c>_q_7n#nh0nps"OF,rA+@.
!&X[4!&jg8!]W/"r]:'@s#g<Es$$EHs$6TMs$H]P"[kdJ7Re9n(]bEir"fAL(]5'I'`]$I(&SdD'*8d[
'E/X?')rR=')iRD'`8^F(B53N)#P9L)ZLcU*<.&Y*rR2[+TEV'!.k4,!!4u62>T-21G^lc1B]Hh1,:Z`
1A`d-0JG6Y0_mC$0)I=%0`<^-1,C`c2#fH42?5]83<)#<3WqN+4?Pb.4[)(/56*tJ5mBYC6UX=27K,aV
8,X>((]kKj)#P0N()Qf_r"T8I'G^N[r"JN3q@ilCrY>DJr"oAMrYbYQr#>VTruM+\rZ;+_ruh=bs!!7!
RK*CH2)b:gpb_n)q_A4-0f&V\!\c;_q(Me%r\4@*r\4@,rA+@.r\XX4r\jd8r\ss>3]d7%!'L6D#!P79
5X7V$r^$WQ7/fXT7fGmX8Ga;&(]bEir"o)Cr"],D!#,AHq\/`;q%NW>rY>GKrYPJLru(_QrYthVruM%Z
rZD._ruq@cb5d+oec>J'q)/%+">_kj1Go(eqD&(+1AWa*0`Eg,0`3['1B0012#]B42Z>W83;to?3]]>b
s#g<Er]^?Hr]pKMr^6]Rr^HiWs%*/]ru1_Or"oGN)#P3H('53d(AnpE'`&LB')*(<'`/XE(B53M)#P9L
)ZLcU*<.&Z*WR8\+8m>^+oW[H!0[EY2uGT42#oQ62$#Nkq_\1+s"aU1qD&(+1Ars(1Ais.2#]B42Z>Z8
3;tr<3r_;@49.PD4p!r55lO%L6N0=R6psKC7K>sX8-):Sr>PMMr##>J!#GMLr"f&Bq\8W8r"T)Er"f8J
rtt_Qr>PSQrZ(nXruV.]ruh:ar?;4dnc47AY5nM\r\jg:r\jm:2`LRkqDJ(*r%e=.r\OL.!&OR/qD8..
r\aX4!&sj9!'1$>s#^6Cr]L6Fr]^HL5sbK:!(6`R!_#RJr^QrZr^d2a9,eiJ)Z1HR(`E5gpD<]Br"]#A
!#,&?rY5;GrYGAIrYYVPru1eSrZ(kWrZ;%\ruh=brZ_=d[K(mZlMq#I3&iqp3!)#t3;YZ32?G`o2Z#B.
2#fB32"ia'2#fH42ZG`83<)#=3rV5@4T7MD55meH62j4N6iKIS77R8H!([,]8cD<d92$9D)B0Xn)Yt?L
)#4sL()@_a(A\d9'`8^F(B#'J)#Y?O)Z1QS*<$uY*r[8Z+TEVa,5rh_!.k3L!!>8B3BI$tpc/73!&jg8
r&+a:2Dm?M2)Y@j!Al\41]TE.2#fH32Z,N63;tr<3rV5@4T@SD4odhH5QX5;6N0=P7/fUZ7Rfm=84cDP
8ch[[:&5h,)Z1KN(]YBM)#P3I(A\aG'`/XC'`/XD(B#'K)#bEO)Z1QQ*<.&Y*rd>]+TEVa,5rhd,eX20
!9=+\3]m1!qDeU:3'$st!]N(uq`"@0s#'g7oJQM(r\sg9s#L$=!'C-A!'U<Fs$-NKr]pTP6UUi@!_#RJ
"%GdO8H)0\9)_He9MA/"*$"kqqAT8Lp)*ZCqA/N7r"f5IrYYVPrYkbTr#GYUr>tt\rZM4as!%Fer?M@C
JcMJEq`=j?3]m=%!'1!=q`+m@3&rrW3&iko2ZYfqoJZM(r&F[9rAjp?rB(9I4[)(p5X><7#!tXD6UX@3
r^I#\7n?3Cr^m/`r_*Af:/:[+r#>JNr#,8H!Z)[jq\T/Gr"f/Er"f)ErYYVPrYkbTr#G\VrZ;(]r?2(_
rZ_=dr?T;]JcOU,r&b9I4?GYf4$,Jb48M#83<D0"3Vk`)2u5N53WD/=3rhDA4o[_G5Q3qJ62j1P6UX?A
70uFR7n?0B8P2WKr_*Gh9hnJ[rYtnYr#GVRr#5JNrtt\Pq\]2HrYGMMp(mK@r##>LrYkbTq],VVrZ;%\
ruh:as!%Fe!$hOir$@.!RK31Iq`Og=!':'?s#U-?rAaj=rAap=3'$Cds#L$=q`=d?rB:0Er]pKLr^$`T
6UX=2r^QoXr^[)^8kT(U#>@id:/4S];#MF2*;^]Q)Yk6P(`=4g(]YEI(]G3G(],'J)>tKO)uL]S*W@,[
+9!D_+oW\c,Q8td--H:?!7h/L4p!l255RM<4T7DF3]]>`48V)+3Vkf948qAB4oISE5Q="I5lj;>!^f=C
r^?rZ7Rp!?r^d,_9E%Wb:&[li:JakbqAoJRq&B5Mp_j)Kru(eQrtkYOp_WZAr#,JPr>Y_Uq]5\Xr?)"]
r?;1brZhCfr$@C(P5tSHpceU=!'U<D!'U<D!]rM,qE+I5s#Kp:!'C0@r]C!>r]U3Ds$-KKr^-WPr^6fV
77R8Hs%*,\r_!Af9MJ8Wr_EVm;,U9l*W7&W*W-oT)Zgos)u(?J)>G'J(\S^C)>tKP)u^iS*W@,[+9!D^
+o`bc,Q/nf-2f.j-h77h!3ZD&5lEnK5X.I25Q*e@4o%2A4$,S#3s%K)3r(l64T@SD55d_G5lX.K63KYC
6q'QD7K>sX8,u6[8c_RYr_3\o:/=\_;,L4i;u@[<*??4!*W-oS)Zgor)uCNT)&aFg)>b9N)>k?O)>b<L
)Z:WS*;^cU*r[8\+TEVa,5rhe,lT+f-3,F%!.k4:!!5GO623_E56=#55PdS?4o[YE4oIJC48D#=48M)<
4oRYB5Q=%L6N':O7/fXT7fQ!Y8H)3[9*.d\:&[lh:JXge;#XAm<;@R?*?H7B*?6(?q],MQpDX&LrYk,@
r#5JPr>bbVr>tq[r?2(_s!%FerZqLir$MFkq#H!HVuZf`qa(*Es$-NKq`jm?r]L9G4oIPD4T.DC4Sh5<
55d_F5lO(L6N':N7K,aX7n?2L8H;B^9*\-a9hnGZ:Jh$f!`Dopr_rn?*rR2Y*r?uU*!.&u*<$lW)Z(KL
)ZCWP)ZL]P)>tKO)uL]T*W$oV+9*J_+oW\a,QB%g-3#=i-iYU.!.k43!<5F`630A=qa(-F!^Aq8rBC9G
r]g*?r]U!>r'1'D!($TNs$Q`Qs$clU#Y.BU8P)NH92#7X!_lEbs%iVjr_`er<)iis!$M(Zq]>YUq],2H
mMbsAr#GVTqB#VXrZM1`s!%FerZqIhs!IUj![oGsJcMJEr^?cRs$H`Qqa1-F!^K":rBUBI"$]%85lEnO
5X.Is5!M:255IM>5QF+K6N9FN7/oaT8,l-[8cME^9*J!_9hnGZrD3Jkr_i_prDrq@rZD._r#beWq]5PR
r>Y\Tq&B;Pr#5AMqAfGSq&]MWrZM1`rZ_=ds!7Rir[.Rkr[7aq_uPAhh#I^K6q'L26pj@1r'LKO6i04M
62s:M62s4M62*YD5Q="K5P[SD62a.L6iTRQ7K5jU8,l0\9)_Hb9MA.f9heAX:Jakb;,U<k;Z]ou<W6#!
=8*j7+8[,V*VLKP)ugoP)tb3J*VpiW+8d8\+o`bd,Q8tg-2o7k-iPOn./kZO!1Eof7K5jV7K#US6iBFN
6NTSA6Ms.N5skQ:!(-*>qEk0KrC$WRr^QoXrCHr[s%<;ar_38c"A_ij;,R<jr_rr!<EB'"!*K4Dq&f_\
+<^S(r>l"\*?P2#!$(tYq],DOru:MKr#P\Vr?(t\rZV7brZhCfr[%Ojr[7Ulr@,niJcO@%r'pELrBp]S
6q$i<pd+sHn3[.BqaCHQr'p]Vs%*,\"A29Z92,=Y#>Iof:/=\_;>jAm;uT_u<E<.%rE'&&p`]PXq]>k\
*Zt>%qAoPTq]5MQruLtVq]5SUq&fPXrZV7br?M:es!@Xkr[7Uls!dpsNrY@Dqa^KP"%>XJ7K5gU6i][Q
6ifYCpHnpIogARD!(H`Rr^QrZrCQu\!)*;bs%WMgr_Eer:f1+g;c?Xpr`'##<`f0$rZM7cq'#VXq]GYU
j;n.>p)j5UrZV7br?M:er[%Ojs!Rdor[Iapnc47AY5nDiqa^ZUs%!&Xr^?fVq*k!Fs$QWNr'gHOrC?iX
r^m)]!)*;brD!;erD3Vo;GpFlr`&hs!`rK+r`T5(r#u+ar?D+^q]P_Wq&]GSq&]GSr#PhZoH4#Sr?;1b
rZhFgr[%Ojr[7[nr$hLm[K(mZlN$oTrCQoX!Co]W8,GaU7K,aX77B]=70#aR7JTFN8,YsY8c;9\9E.]b
:&dug:]=/m;,L4irDWbsr`0,&=BJ`)>5hat,5r_e+<_p*+Sd,G*qCEN+TEV`,5rhc,lT+h-N5Cl./PIm
.fLso!.k3L!<,Rg9)_B`84cDN8-):Qr'pl\7n6$<r^ZlUn4*:FrC?o[qb$i\!_c<_rD!Di:Jh!e#Z=T"
<)cjt<`]3$!a&Q-qHEu*,5`\`+oike+p&o3,5r_e+<Vj++9EW,+T*>]*r[8V*r[8S+8d8Z+oNV`,Q/ne
-2o7j-iPOn.K1gn/%kq7!9=.Z9)VBb8kVcJr_!#Yq+(KUrC?u[84`8@qFLTWrC[#]r_3;crD3Dhr_Wbq
;c?Zo<<?3%=T;M'=oV\)>Pqb!,Pr\a+TN_c+oWSa+oNP_*rmG\+9*DQ+8I&W+oEP_,Q/ne-2o7j./bUm
.etRp!.k3E!;fFh9`@]b9)hQ^8c_LUpdtKVr^d/^84ieO!(ZrXqFUKTr(I&`s%WJfr(m>ir)*f!<)cjt
<`W:'rE',)>?h&2r*B7GrZq7`qBGbZp`TMWrZLtXp`TDVr$)(as!7Rir[.Ulr@%Xoq^VRqr%,bdJcOU,
!)*5`r_<Acs%EAcqF^l^8kJtR!D,o^8cMEU8bl!T9DhN`:B+,g:]aKk;Z0Ms<)lq!<WcB(=BPN)!a8c3
q-F#,q'5qbr$;.aq',VXl6,gEr?D7dr?V=fr?hLkr@%Xor[Rmtr[dptL]EkD!)3&[r(I)`r_3>b!)3/\
s%<5_r^m/`rC[)_r_!#[!)38a!)EMhqbR>k;H!Hl!*&qtrDs&&=BYW,!aAl6rE]>-s'PXKr[%=bqBPe[
q]Yh[q]PGQs!%@cr$;4er?hLkr?q^r.4Y3Fq(2Otb5d+oec>YCr([5frD!Pk9hnDW9MGF[rCd2arCd>e
9MA)PpItQZr(Qr]r(m5es&&bns&8nr!*')#<`]3$!a&T.rE9;->[:Y6?Mn11@/hMJ-3#7h-2Jn`,Q&_c
+oNV\+TN_Z+o`b_,Prbb-2f.j-iPOm.K1gq/,q-u/G^rZ!0[E]:A@Te:/=V[q+_)f:/+GV9`@cd9`Iid
9_D-X:ARcc;#F2i;YsDq<E<1&rE0&&r`fD-s'>P0qI&e=![K$;r?VCfs!7Ofs!%Feq]Z"`o-3rSqBZ"c
r[.Xmr@%Unr[Rdqoe#_7JcMtSqG6o`rD*Vo:JX_\:J^RWrCm8erD*>fs%`JfrD<Dhr_i_orD`ess&T,#
!*K5'$<gV;>?kE=?!^iEq-a/0qBc(eq]u4hr[%Oh!%%RhrZhFgr$24cq]kq]q]l%aqBZ(er?hFir@%Xo
r@7dsr@Iarr@YMYJcP*:s%iPhr)!Mn;,R-c!)NSj##A#k:JX_\peLlbqG6o`r)*Djr_rhrr)N_ss&f2%
s',G,s'>Y3r*]P5raGb7s!@.]rZqOkr[%Ohs!@RgrZhCfp`o>Tr[%Fgr$VFkr@.[qqCMRspb)@BJcM_L
s%rVjpeh,i;Ys>j;#aDf;#X8k:]4)i:\moc;>a>l;uK\o<W6&!=8uD&=oDM2>?b?;?!UcC?XI4=@JXI5
A+q>L-h\nd,lf:i-2f(h-2Aed,Prb^,lK%b-N#7j./k[p.fCmo/G(Op0>.@;!9=.[;>F,d;u'>k;>jAr
;,U:h;,I*d!)ibmq,7/ir)EYqqc3`!=T2J%>5qh,>lJ"5?=.&I?t!L>@f0^9AGdeL-NGLj-ho%^-2o1c
-2]%g-2&\a-iYUm.Jt[p/,Ust/bgsq0)u!(!20Dj;Z'Jh<;TSq;H$Nn;?0Vq;uTYp;u'>g;u]bn;uK\p
<Vf_r=8l>$=TDY'>Q7t+?3=PA?t&qAr+#V7oI'YeqBl7kr?q=dr$D@is!@IeoHsScr$_Fkr@7ar!%dsu
r%@[r_uPAhh#R@Oq,I5kpJ_,krD`bp!*&_lqGdAmq,[MsrE',(>$Ci.!*oM/rE]M3?j'kG@:E^DA,9a7
Abd_L./t[l./51[-3,@b-N>Ih./PIl.fV$u/G^su0)%$s0*!\^!1Eo`<;]bm<Wc?%<)rfqs&Abn!*&qt
r)ESoqH!Prr`B/'rEB2)rEKD0?!dJ:"CPYH@Uf=Hq.0D7rau-WodKegodKS_r[7UjoI'G_qC2For@@gt
qCM\"oIp(qb5d+oec>\Kr)NSorDs##=8#\o<W,qu<W,qu<V9Dm=8Q,"=o;J$>lS+/?N4C3?j'nH@U`jD
AGg$:B)ZH:./>=j./bUg./YIk./>7c./>:l.f1ao/H.7!0)@7#0D@/]!0[E^<V]\o=8uD%=9;W-=Sc)!
=T2A%<qTPn=T;Iu=9)M$=o_e*>l7k/?=%":?j'nH@UipHAGg$:B)6-?B_s4N.K:mh.JkLn.J5+\.K1gn
/,Usn0)I<p0`Eft!.k3S!;fgp=8Z1r=nGer=8Z2#=TV`/=Sc1s>5qh+>l%_+?N+=1?j:%J@U`hXAGg$:
B)-*;BE0IR.JPCk.Jt[e.K1ag.K1dq.etUo/H.6r0)dNs0_mH3!.k4:!!$'t=8Z1s=o;G,>?Y35=^(c,
s'#D)!*]8&r*&o#r*9)(!+,V2s'Yb5raYt=ral">qIfe@s(M=EpaP5Qq^M@kq^DLpodg%nr%7[r!&+"!
oeH7BJcM_L!*B)#qH<`"pKRGss',J+s',M,q-3c%qHa),r*TD2raPk:s()%>qIf_>pM'RTngaMer[Rap
q^VUrpF>_aq(;Fqr\+%#n1hTVJcOj3!*K&"r*&r$r*05-r`fM/>[784r*98+pK[Q#ra,M0s'Yh7r*f_;
@q>RM!+u(?r+H(Eo4deGd452JpFZ:qq_.h#lS/A>JcMJErE9&%qHNl&pK[l,>[:Y7>l7n-?Me%+?M\%/
@/aU2@K9p;A--=SB)?6=B^TU0.eP=g/Ggso/Gq$k/G:[o0).+!0]k+.!.k4,!<$*s>Q%h&?2S%/?i"(/
?2@n*?i"1.@JOC4A,g*>Ac?<@BDcHBC$]R4.eG7a/-%9q/Gq*q/G:[p0(gjt0^(7g0o,gu!;]pt>l%b(
?Mn1/@/aL5@/XF4@/XI.@/XO0@fBm;AH$0>AcQKAB]Nn#/+kIg/cI=#/b^jf0(gmt0]+V.!.k4%!<6:$
>l%b(?Mn1+@/442@/OI4@/OI0@fBm;AGg$=B)cNCB_uN*C&0@Q/G(On0).$h0(gmr0^1=a0ol<u!<6="
?2\+/?iOL/@/OI&@esU4AG]s<B)ZHCB\R8$/+bCc/bUds/b1Oe0DdHV1%G<r!3ZD#?2S%,?i"1.@JXI2
A,Tp=@q>:Dral">rFZ+DenOk0oe#hhq(MRsp+QG!qCpJT[K(mZlN$ihr*T;.r*fD1rF>Y6r+5n?rakq<
s(D=EfP11rr%.LmoIf_gr@n""q_6AOq#H!HVuZa&qI'50q-s83qIBS;rFPn=qIf_>b\?]$oe,egoe6A#
`\G.,JcOj3q-a,/qI9A4qIKM8r+>b;rFj_qo4`^~>

%%EndBinary
grestore
np
20.9976 23.8125 mo
20.8208 23.7871 li
20.6719 23.7422 20.5776 23.6641 20.523 23.5586 cv
18.0083 18.7642 li
18.0164 18.7607 18.0245 18.7573 18.0327 18.7539 cv
18.0888 18.7329 22.6161 16.8966 26.6718 16.8966 cv
26.7889 16.8966 26.9059 16.8981 27.0221 16.9013 cv
26.6841 22.5371 li
26.6763 22.6328 26.6685 22.7187 26.6567 22.7949 cv
26.3779 22.7656 26.0957 22.752 25.8096 22.752 cv
23.5073 22.752 21.5386 23.6309 21.2798 23.75 cv
21.2759 23.752 li
21.2485 23.7637 li
21.2602 23.7578 li
20.9976 23.8125 li
gsave
[14.9356 29.8711 -29.8711 14.9356 20.8652 13.647 ]ct
clp
/6 /Gradient get_res exec grestore
np
20.9976 23.8125 mo
20.8208 23.7871 li
20.6719 23.7422 20.5776 23.6641 20.523 23.5586 cv
17.3462 17.5019 li
17.3306 17.25 li
17.3735 17.1445 17.4678 17.0566 17.5972 17.0019 cv
18.0483 16.8223 22.1816 15.2168 25.8525 15.2168 cv
26.2842 15.2168 26.6958 15.2402 27.0801 15.2852 cv
27.0918 15.4395 27.0996 15.6348 27.084 15.8691 cv
26.6841 22.5371 li
26.6763 22.6328 26.6685 22.7187 26.6567 22.7949 cv
26.3779 22.7656 26.0957 22.752 25.8096 22.752 cv
23.5073 22.752 21.5386 23.6309 21.2798 23.75 cv
21.2759 23.752 li
21.2485 23.7637 li
21.2602 23.7578 li
20.9976 23.8125 li
25.8525 14.2168 mo
21.7935 14.2168 17.2598 16.0606 17.209 16.0801 cv
16.8286 16.2383 16.5381 16.5254 16.397 16.8789 cv
16.3345 17.0352 16.3027 17.1973 16.3027 17.3574 cv
16.3027 17.5645 16.354 17.7715 16.456 17.9648 cv
19.6284 24.0176 li
19.8091 24.3613 20.1226 24.6211 20.5151 24.7383 cv
20.6719 24.7891 20.8364 24.8125 20.9976 24.8125 cv
21.2368 24.8125 21.4756 24.7598 21.6992 24.6582 cv
21.7935 24.6113 23.668 23.752 25.8096 23.752 cv
26.1939 23.752 26.5859 23.7793 26.9819 23.8457 cv
27.2959 23.9023 li
27.394 23.8535 27.6372 23.4082 27.6841 22.5957 cv
28.084 15.9316 li
28.0918 15.8242 28.0957 15.7207 28.0957 15.6211 cv
28.0996 14.9258 27.9507 14.4609 27.8486 14.3867 cv
27.6372 14.3535 li
27.0644 14.2578 26.4644 14.2168 25.8525 14.2168 cv
.638824 .502838 .407959 .75 cmyk
f
9.30147 37.7912 mo
9.297 37.5318 9.29492 37.2615 9.29492 36.9814 cv
9.29492 34.5205 9.5376 30.1055 10.3184 29.4805 cv
10.5275 29.3111 10.7824 29.1793 11.1122 29.1793 cv
11.3453 29.1793 11.6158 29.2451 11.9341 29.4102 cv
15.357 31.1548 li
14.7872 33.6714 15.2013 36.369 15.2051 36.4014 cv
15.2402 36.6377 15.0049 36.8896 14.6909 36.9365 cv
9.30147 37.7912 li
gsave
[15.0802 30.1603 -30.1603 15.0802 6.00879 21.4902 ]ct
clp
/6 /Gradient get_res exec grestore
np
9.15722 26.8809 mo
9.271 26.834 li
9.31446 26.834 9.42822 26.8457 9.63574 26.9551 cv
9.63965 26.957 li
15.1304 29.7519 li
15.1733 29.7734 li
15.2168 29.791 li
15.4951 29.9004 15.6245 30.0039 15.6792 30.0586 cv
14.6558 32.8145 15.2007 36.3643 15.2051 36.4014 cv
15.2402 36.6377 15.0049 36.8896 14.6909 36.9365 cv
9.16113 37.8135 li
9.06348 37.8193 li
8.9497 37.8193 8.84765 37.792 8.77685 37.7393 cv
8.63574 37.5264 li
8.61621 37.3447 8.45557 35.7236 8.45557 33.6377 cv
8.45557 30.3105 8.82421 27.4492 9.15722 26.8809 cv
9.271 25.834 mo
8.94189 25.834 8.69092 25.9668 8.48291 26.1367 cv
7.69874 26.7598 7.45166 31.1738 7.45166 33.6377 cv
7.45166 35.8799 7.63574 37.5889 7.63965 37.6299 cv
7.6748 38.0029 7.87109 38.3311 8.18897 38.5518 cv
8.43995 38.7295 8.7456 38.8193 9.06348 38.8193 cv
9.31836 38.8018 li
14.8442 37.9248 li
15.6362 37.8037 16.2168 37.1572 16.2129 36.4307 cv
16.1973 36.2451 li
16.1851 36.1748 16.064 35.292 16.064 34.1201 cv
16.064 32.9453 16.1895 31.4824 16.6836 30.2519 cv
16.6836 30.2519 16.7148 30.1719 16.7109 30.043 cv
16.7109 29.7598 16.5581 29.2481 15.5893 28.8613 cv
10.0986 26.0664 li
9.77685 25.9004 9.50243 25.834 9.271 25.834 cv
.638824 .502838 .407959 .75 cmyk
f
24.1309 54.2275 mo
23.9976 54.2061 li
23.6259 54.0814 18.4929 52.3079 15.7194 50.0749 cv
18.9072 46.2002 li
19.2889 45.7372 19.5341 45.4686 19.841 45.4686 cv
19.9691 45.4686 20.1079 45.5153 20.272 45.6143 cv
21.6437 47.0143 23.832 47.8784 24.7771 48.2031 cv
24.2407 54.1338 li
24.2173 54.2119 li
24.1309 54.2275 li
gsave
[15.0717 30.1433 -30.1433 15.0717 7.01563 22.6304 ]ct
clp
/6 /Gradient get_res exec grestore
np
14.9736 49.3994 mo
14.9619 49.3896 li
14.9736 49.3994 li
15.1147 48.7588 mo
18.8599 44.2099 li
19.0444 43.9893 li
21.064 45.8213 24.1231 46.6826 24.1543 46.6904 cv
24.5625 46.792 24.8682 47.2178 24.8408 47.499 cv
24.2407 54.1338 li
24.2173 54.2119 li
24.1309 54.2275 li
23.9976 54.2061 li
23.5898 54.0693 17.4522 51.9482 14.9854 49.4131 cv
14.8521 49.2451 li
14.8638 49.1943 14.9145 49.042 15.1147 48.7588 cv
19.0166 42.8428 mo
18.7109 42.8428 18.4639 43.1104 18.0835 43.5752 cv
14.3105 48.1592 li
13.9653 48.6416 13.8398 48.9912 13.8437 49.2705 cv
13.8437 49.6084 14.0322 49.8428 14.2402 50.0811 cv
16.9502 52.8955 23.625 55.1377 23.6875 55.1592 cv
23.8369 55.2041 23.9858 55.2275 24.1309 55.2275 cv
24.3506 55.2275 24.5625 55.1709 24.7388 55.0674 cv
25.0327 54.8877 25.2095 54.5889 25.2407 54.2236 cv
25.8408 47.5889 li
25.8486 47.4775 li
25.8525 46.7139 25.2173 45.9228 24.4092 45.7236 cv
24.2876 45.6904 21.2012 44.7764 19.4482 42.9893 cv
19.2837 42.8896 19.1426 42.8428 19.0166 42.8428 cv
.638824 .502838 .407959 .75 cmyk
f
14.5756 50.4084 mo
14.4568 50.3003 14.3444 50.1917 14.2402 50.083 cv
14.159 49.9896 14.0811 49.8968 14.0163 49.7984 cv
14.0814 49.8962 14.1593 49.9884 14.2402 50.0811 cv
14.3463 50.1912 14.4581 50.3002 14.5756 50.4084 cv
25.7544 48.5752 mo
25.7535 48.5746 25.7526 48.5741 25.7518 48.5735 cv
25.8408 47.5889 li
25.8486 47.4775 li
25.8516 46.889 25.475 46.2843 24.9323 45.9466 cv
25.5114 46.3062 25.9001 46.9676 25.8447 47.5908 cv
25.7544 48.5752 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[12.96 0 0 6.24 13.44 12.64 ]ct
snap_to_device
<<
/T 1
/W 27 
/H 13 
/M[27 0 0 -13 0 13 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~5<h=p4Ztqj4?P\e4$,Ja3]]8\3&ilW3&if\5!D.n4Ztnh4$,Mc4$,G_3B9)[3&iiU2`Erc5!;%k4?P_f
4$,Ja3]];^3B/uX3&iiU2a0Dh4Ztqj4?GVc3]];_3]T2\3&ilW3&`cT5<_7p4Zkhh4$,Mb3B9)[3B9)[
3&iiU2`EZ[5!;%l4?P_g3]];_3B9)[3B/uX3&ilW2`Eoa5!;%k4$,Mc3]];^3B9)[3B9)Z2`EZS2a0Dg
4Zkhh4?GVc3]T2\3B9)Z3&ilW3&iiT5!;%l4Zkef4$#D`3]]8\3&ilW3&iiU2`EZZ5!D(k4?GVd4$,G_
3B9)Z3&iiU2`EZS2`El_4Ztni4?PYc3]]8]3B/uX2`EZS2`EZS2a';e4Zkef4$,Ja3]T2[3&ilW3&`cT
2`EZS4Ztqj4?P_f3]];^3B9)[3B&lU2`EZS2`<P~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~R@'>-Q^3r'QBd`"Pa%DsPEV/mP*1riOcYZlR$X/+Q^3o%Q'IW!P`q;pP*1ukOcbcgOcYrtR$O&(QBd`#
Q'@MsPEV2oP*(lhOcbcfOI)<#Q^3r'Q'IW!Pa%DrP*1ukP*1uiOH>QcR$X/+QBd`#Q'IVuPEV2oPEM&j
OcbcgOcbcmQ^3r'QBd`"Pa%DsPEV/mP*1riOcb`eOH>fqQ^3r&Q'IW"P`q;pPEM)lP*1riOcYZdOHu2u
QBmi%Q'@MtPEV2oPEM&jOcbcgOH>QcQ^3r'Q'IW"Pa%DsPEM)lP*1ujOH>QcOH>QjQBmi%Q'IW"PEV2o
PEV/lOcbcgOcb`eOH>fpQBmi%Pa%DsP`q;oP*1ujOcbcgOH>QcOI)<!Q'IW"Pa%AqPEV/mP*(lhOcbcg
OcYZdQBmi&Q'ISuP`q;pPEM)lP*1ujOH>QcOH>P~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
15.7194 50.0749 mo
15.4504 49.8582 15.2035 49.6373 14.9854 49.4131 cv
14.8521 49.2451 li
14.8638 49.1943 14.9145 49.042 15.1147 48.7588 cv
18.8599 44.2099 li
19.0444 43.9893 li
21.064 45.8213 24.1231 46.6826 24.1543 46.6904 cv
24.5625 46.792 24.8682 47.2178 24.8408 47.499 cv
24.7771 48.2031 li
23.832 47.8784 21.6437 47.0143 20.272 45.6143 cv
20.1079 45.5153 19.9691 45.4686 19.841 45.4686 cv
19.5341 45.4686 19.2889 45.7372 18.9072 46.2002 cv
15.7194 50.0749 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[11.52 0 0 7.68 13.92 13.12 ]ct
snap_to_device
<<
/T 1
/W 24 
/H 16 
/M[24 0 0 -16 0 16 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~AS#FaAnGXeAnGXeB4kjhB4kjiB4tskAS#IcAS#IcAnG[fAnG[gB4kjjB4kmkAn>ObAnGXeAnGXeB4kji
AnPahBP;'mAS#IcAnGXeAnG[gB4bagB4kmkBP1skAnGXeAnGXeB4bafAnPahBP;$kB4tslAnGXeAnGXe
AnGXfB4kjiB4kjjBP;$lAnGXeAnGXeAnPagB4kjiB4tpjB4tslAnGXeAnGXeAnG[gB4kjiB4kjjBP;'m
AnGXeAnGXeB4kjiB4kjiB4tskB4tslAnGXeAnG[gB4kjiB4kjjB4kjjBP;'nAnGXeB4kjiB4kjiB4kji
B4tslBP;'mAnG[gB4kjiB4kjiB4kjjBP;'mBP;'nB4kjiB4kjiB4kjiB4tslBP;'mBPD0pB4kghB4kji
B4kjjBP;'mBP;'nBk_9qAnPahB4kjiB4tslBP;'mBPD0pBk_9qB4kjiB4kjjBP;'mBP;'nBk_9qBk_9q
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
<~daHRldaHRldaHRle'ldoe'ldpe'ldpdaHRldaHRldaHUmdaHUne'ldpe'ldpdaHRldaHRldaHRle'ldp
e'ldpe'ldpdaHRldaHRldaHUne'c^oe'ldpe'lgrdaHRldaHRle'c[me'ldpe'ldpeC<!tdaHRldaHRl
daHUne'ldpe'lgre'umsdaHRldaHRle'ldpe'ldpeC2mreC<!tdaHRldaHUne'ldpe'ldpe'umseC<!t
daHRle'ldpe'ldpe'ldqeC2mreC<!tdaHUne'ldpe'ldpe'ujqe'umseC<!te'ldoe'ldpe'ldpe'ldq
eC<!teC<!tdaHUne'ldpe'ldpe'umre'umseC<!te'ldoe'ldpe'ldpe'ldqeC<!teC<!tdaHUne'ldp
e'ldpe'umre'umseC<!te'ldpe'ldpe'ldqe'ldqeC<!teC<%!e'ldpe'ldpe'ldpe'umseC<!te^`4"
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
15.0952 50.8486 mo
14.9136 50.704 14.7386 50.5568 14.5756 50.4084 cv
14.4581 50.3002 14.3463 50.1912 14.2402 50.0811 cv
14.1593 49.9884 14.0814 49.8962 14.0163 49.7984 cv
13.7776 49.4361 13.7153 48.9967 14.3105 48.1611 cv
18.0835 43.5752 li
18.4652 43.1121 18.7103 42.8436 19.0173 42.8436 cv
19.1453 42.8436 19.2842 42.8904 19.4482 42.9893 cv
21.2012 44.7783 24.2876 45.6924 24.4092 45.7236 cv
24.5947 45.7696 24.7709 45.8464 24.9323 45.9466 cv
25.475 46.2843 25.8516 46.889 25.8486 47.4775 cv
25.8408 47.5889 li
25.7518 48.5735 li
25.5918 48.4728 25.416 48.3953 25.2329 48.3486 cv
25.2065 48.3418 25.0398 48.2933 24.7771 48.2031 cv
24.8408 47.499 li
24.8682 47.2178 24.5625 46.792 24.1543 46.6904 cv
24.1231 46.6826 21.064 45.8213 19.0444 43.9893 cv
18.8599 44.2099 li
15.1147 48.7588 li
14.9145 49.042 14.8638 49.1943 14.8521 49.2451 cv
14.9854 49.4131 li
15.2035 49.6373 15.4504 49.8582 15.7194 50.0749 cv
15.1343 50.7861 li
15.0952 50.8486 li
gsave
[-11.1283 -39.013 39.013 -11.1283 21.8633 55.3965 ]ct
clp
/7 /Gradient get_res exec grestore
np
17.2559 19.4961 mo
16.456 17.9648 li
16.456 17.9648 li
16.456 17.9648 li
17.2572 19.4933 li
17.2567 19.4942 17.2563 19.4952 17.2559 19.4961 cv
28.0254 16.9727 mo
28.0241 16.9725 28.0229 16.9724 28.0215 16.9722 cv
28.084 15.9316 li
28.0847 15.922 28.0854 15.9124 28.086 15.9029 cv
28.0854 15.9131 28.0847 15.9233 28.084 15.9336 cv
28.0254 16.9727 li
28.0947 15.4954 mo
28.0821 14.9028 27.9584 14.5003 27.864 14.4005 cv
27.9591 14.5007 28.0823 14.9026 28.0947 15.4954 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[12.96 0 0 6.24 15.84 43.84 ]ct
snap_to_device
<<
/T 1
/W 27 
/H 13 
/M[27 0 0 -13 0 13 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~>?Y36>$>'3=]nm1=]nm1=]ed.=BJ[-=BJX.>$>*4=]nm1=]nm1=BJ[-=BJX+=&r@&<`WC-=]nm1=]nm1
=BJ[-='&I)=&r@&<`W7%<E`O.=]nm0=BJ[-='&I)<`W7%<`W4#<)cgr=]nm0=BJ[-=BAR*<`W7%<E3$u
<)cgr<)ch!=BJ[-=BJX*<`W7$<E3$u<)cgr<)cgq;c?e#=BJ[+<`W7%<E3!t<)cgr<)cgq;c?Un;cm+&
<`W7%<`E$t<)cgr<)cdp;c?Un;c?Um='&F'<`N*u<)cgr<)cdp;c?Um;Gp@h;,L1k<E3$u<)cgr<)Z^o
;c?Rl;Gp@h;,L1f;,C7m<E)ps<)Z^o;c?Rl;Gg:g;,L1e:esk_:K:Co;c?Un;c?Um;Gg:g;,L.d:JXb^
:JXb^;c?Un;c?Un;,L1f;,L.d:JXb^:JXb^:/4O~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~['[3I['R*FZa7!EZa6sCZEga?Z*CR<Yct@=['[0GZa7!EZa6sCZ*CR=Z*CR<Yct@9YctL@Za7!EZa-mB
Z*CR=Z*CO;Yct@9Yct=7YHtRAZa-mBZE^[>Z*CO;Yct@9Yck76YHP.5ZEgdAZEga?Z*:I:Yct@9Yck76
YHP.5Y-+q5ZEgd@Z*:I:Yct@9YHP.5YHP.4Y-"h.Xf\n7Z*:I:Yct@9YHP.5YHP+2Xf\_-Xf\\+XKf"6
Yct@8YHP.5YHP(1Xf\_-Xf\\+XK8M)Yct@8YHP.5YHP+2Xf\_-XfSV*XK8M)XK8J,YHP.5YHG%2Xf\_-
XfSV*XK8M)XK/A$WiE8+YHG%2Y-"h.XK8M)XK8M(X/`2"WiE)!WiiM-Y-+n/XK8M)XK8M(X/`2"WiE)!
WMukrY-+q0XK8M)XK8M(WiE)!WiE)!WMukrWMui~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
18.0083 18.7642 mo
17.3462 17.5019 li
17.3306 17.25 li
17.3735 17.1445 17.4678 17.0566 17.5972 17.0019 cv
18.0483 16.8223 22.1816 15.2168 25.8525 15.2168 cv
26.2842 15.2168 26.6958 15.2402 27.0801 15.2852 cv
27.0918 15.4395 27.0996 15.6348 27.084 15.8691 cv
27.0221 16.9013 li
26.9059 16.8981 26.7889 16.8966 26.6718 16.8966 cv
22.6161 16.8966 18.0888 18.7329 18.0327 18.7539 cv
18.0245 18.7573 18.0164 18.7607 18.0083 18.7642 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[11.04 0 0 5.28 16.8 44.32 ]ct
snap_to_device
<<
/T 1
/W 23 
/H 11 
/M[23 0 0 -11 0 11 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~B4kjiB4kjiB4kjiB4kjjBP;'nBP;'lB4kjiB4kjiB4kjiBP;'mBP;'mBk_3mB4kjiB4kjiB4tskB4tsl
BPD0oBP1sjB4kjiB4kmjB4kmkBP;'mBP;'mB4kjiB4kghB4kjjBP;$lBP;'mBP;'lB4kggB4kjiBP1sj
BP;'mBP;'mBP;!iAnPahAnPahB4tslBP;'mBP;'mBP(miAnG[gB4kmkBP2!lBP;'mBP2!lAnGXfB4kjj
B4kjjBP;'mBP1skBP;'kB4kjiB4kjiBP;'mB4kjiBP;'mB4tpiAnPahB4tslB4kjiB4tskB4kmkBE~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~eC<!teC<!teC2pseC<!teC<!teC<!teC<!te'ldqeC<!teC2pseC<!teC<!te'ldpeC<!teC2mreC<!t
eC<!teC2mqe'umse'ldpeC<!teC<!teC<!se'lgre'ldpe'umre'umseC;sre'umre'ldpe'lgqe'lgr
eC;sre'lgreC;sre'ldpe'ldqeC2mqe'ldqeC2pseC2mqe'ldpeC2mqe'ldpe'ldqeC<!te'ldpe'ldp
e'ldpe'ldpeC<!teC<!se'ldpe'ldpe'ldpe'umse'lgreC;sre'ldpe'ldpe'lgre'ldqeC<!te,~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
17.2572 19.4933 mo
16.456 17.9648 li
16.456 17.9648 li
16.2754 17.6211 16.2559 17.2383 16.4009 16.8789 cv
16.542 16.5273 16.8286 16.2383 17.209 16.082 cv
17.2633 16.0617 21.7945 14.2176 25.8533 14.2176 cv
26.4641 14.2176 27.0647 14.2594 27.6372 14.3555 cv
27.8486 14.3867 li
27.8537 14.3904 27.8588 14.395 27.864 14.4005 cv
27.9584 14.5003 28.0821 14.9028 28.0947 15.4954 cv
28.0974 15.6228 28.0949 15.7589 28.086 15.9029 cv
28.0854 15.9124 28.0847 15.922 28.084 15.9316 cv
28.0215 16.9722 li
27.6946 16.9334 27.3606 16.9104 27.0221 16.9013 cv
27.084 15.8691 li
27.0996 15.6348 27.0918 15.4395 27.0801 15.2852 cv
26.6958 15.2402 26.2842 15.2168 25.8525 15.2168 cv
22.1816 15.2168 18.0483 16.8223 17.5972 17.0019 cv
17.4678 17.0566 17.3735 17.1445 17.3306 17.25 cv
17.3462 17.5019 li
18.0083 18.7642 li
17.661 18.914 17.4067 19.1739 17.2572 19.4933 cv
gsave
[-11.4284 -40.0651 40.0651 -11.4284 32.8242 53.541 ]ct
clp
/7 /Gradient get_res exec grestore
np
37.3711 32.9629 mo
37.1553 32.9629 37.0693 32.9121 37.0332 32.8652 cv
36.7469 31.2297 35.4623 29.2803 34.6847 28.2185 cv
35.5019 27.2529 37.6752 24.7007 38.2764 24.1523 cv
38.5867 23.8697 38.8696 23.764 39.1287 23.764 cv
39.4926 23.764 39.8094 23.9724 40.0889 24.1914 cv
40.1607 24.2479 40.2865 24.3481 40.4561 24.5035 cv
41.4365 25.9938 42.6016 28.2976 43.6494 31.7812 cv
43.5557 31.7969 li
43.4219 31.8184 43.2812 31.8418 43.1201 31.873 cv
37.6455 32.9336 li
37.5518 32.9531 37.457 32.9629 37.3711 32.9629 cv
gsave
[15.0792 30.1584 -30.1584 15.0792 29.998 11.2842 ]ct
clp
/6 /Gradient get_res exec grestore
np
37.0059 32.8164 mo
37.002 32.8105 li
37.0059 32.8164 li
37.0332 32.8652 mo
36.6182 30.4941 34.1045 27.4629 34.0801 27.4336 cv
33.8613 27.1836 33.8652 26.6777 34.0918 26.4199 cv
34.1006 26.4121 li
34.1084 26.4043 li
35.3633 24.916 37.4102 22.5332 37.9238 22.0684 cv
38.042 21.959 38.1045 21.9414 38.1045 21.9414 cv
38.1045 21.9434 38.1904 21.9648 38.4258 22.1523 cv
38.4297 22.1562 li
38.4375 22.1582 li
39.1553 22.7168 41.6221 25.041 43.6494 31.7812 cv
43.5557 31.7969 li
43.4219 31.8184 43.2812 31.8418 43.1201 31.873 cv
37.6455 32.9336 li
37.5518 32.9531 37.457 32.9629 37.3711 32.9629 cv
37.1553 32.9629 37.0693 32.9121 37.0332 32.8652 cv
38.0967 20.9414 mo
37.8379 20.9414 37.5518 21.0469 37.2451 21.3301 cv
36.5 22.0098 33.3389 25.7598 33.3389 25.7598 cv
33.0566 26.0781 32.9199 26.5039 32.916 26.9297 cv
32.916 27.3555 33.0488 27.7793 33.3271 28.0957 cv
33.418 28.1973 35.7861 31.1211 36.0605 33.1592 cv
36.2764 33.7373 36.8018 33.9639 37.3711 33.9639 cv
37.5234 33.9639 37.6807 33.9463 37.8379 33.917 cv
43.3086 32.8535 li
44.2891 32.666 44.6894 32.7383 44.748 31.9648 cv
42.4775 24.1035 39.5439 21.752 39.0537 21.3711 cv
38.7754 21.1504 38.457 20.9414 38.0967 20.9414 cv
.638824 .502838 .407959 .75 cmyk
f
35.8809 52.0771 mo
35.8135 52.0713 li
35.7939 52.04 li
33.3964 47.7569 li
33.4052 47.374 33.6494 47.2939 33.6494 47.2939 cv
35.8496 46.0283 37.249 43.2158 37.3086 43.0986 cv
37.4766 42.7549 37.7705 42.5049 38.1396 42.4033 cv
38.2665 42.3656 38.3968 42.3474 38.5276 42.3474 cv
38.671 42.3474 38.815 42.3693 38.9561 42.4114 cv
42.042 44.1064 li
42.3086 44.2529 42.4258 44.5732 42.3008 44.8037 cv
42.3281 44.7568 li
42.2539 44.8897 li
40.8926 47.626 38.6416 50.9111 36.3906 51.956 cv
36.1279 52.0557 35.9668 52.0771 35.8809 52.0771 cv
gsave
[14.6536 29.3072 -29.3072 14.6536 23.0435 16.5654 ]ct
clp
/6 /Gradient get_res exec grestore
np
36.0215 41.2412 mo
36.0693 41.1475 36.1436 41.0869 36.2529 41.0557 cv
36.3438 41.0439 li
36.583 41.1084 li
36.5869 41.1123 li
36.5947 41.1143 li
42.042 44.1064 li
42.3086 44.2529 42.4258 44.5732 42.3008 44.8037 cv
42.3281 44.7568 li
42.2539 44.8897 li
40.8926 47.626 38.6416 50.9111 36.3906 51.956 cv
36.1279 52.0557 35.9668 52.0771 35.8809 52.0771 cv
35.8135 52.0713 li
35.7939 52.04 li
32.4648 46.0928 li
32.3667 45.9111 32.3037 45.7744 32.2686 45.6768 cv
34.6494 44.1377 36.0332 41.2217 36.0449 41.1924 cv
36.0215 41.2412 li
36.3438 40.0439 mo
36.2139 40.0439 36.0889 40.0615 35.9629 40.0967 cv
35.5947 40.208 35.2959 40.4482 35.124 40.7939 cv
35.0723 40.917 33.6689 43.7236 31.4687 44.9951 cv
31.4687 44.9951 31.2178 45.0771 31.2139 45.4756 cv
31.2139 45.7139 31.3037 46.0654 31.5903 46.581 cv
34.9199 52.5264 li
35.1514 52.9404 35.5078 53.0771 35.8809 53.0771 cv
36.1904 53.0771 36.5078 52.9834 36.7783 52.8799 cv
40.3437 51.2529 43.1435 45.3389 43.1787 45.2842 cv
43.2969 45.0713 43.3516 44.8408 43.3555 44.6104 cv
43.3594 44.0654 43.0537 43.5225 42.5244 43.2314 cv
37.0772 40.2393 li
36.8457 40.1084 36.5947 40.0439 36.3438 40.0439 cv
.638824 .502838 .407959 .75 cmyk
f
9.06092 38.8216 mo
8.84838 38.8216 8.64254 38.7804 8.45449 38.6992 cv
8.64353 38.7791 8.85078 38.8193 9.06348 38.8193 cv
9.31836 38.8018 li
9.23193 38.815 9.1459 38.8216 9.06092 38.8216 cv
7.63965 37.6299 mo
7.63965 37.6299 li
7.63946 37.628 7.63886 37.6223 7.6379 37.6127 cv
7.63887 37.6222 7.63946 37.6279 7.63965 37.6299 cv
7.63965 37.6299 li
16.2871 31.6289 mo
16.2856 31.6281 li
16.379 31.1556 16.508 30.6891 16.6836 30.2519 cv
16.6836 30.2519 16.7148 30.1719 16.7109 30.043 cv
16.7109 29.8914 16.6672 29.6743 16.4778 29.4459 cv
16.831 29.8691 16.6836 30.2539 16.6836 30.2539 cv
16.5068 30.6914 16.3814 31.1523 16.2871 31.6289 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[11.04 0 0 10.56 6.72 24.64 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 23 
/H 22 
/M[23 0 0 -22 0 22 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
s%rVh"AVZc9MGFYs%<8^!_>jPdf9BKrMfdprMKRjs.oXhrhBEhs%iVhs%WJdr(7#^8P&hNo`3kL!36$t
!3#mprMKOhrhBXkU7n8W:]*rg9hbOZrC[&[rC><:!3,pqs/5morh]RhrM':bs%iVhs%WMes%E>`s%32\
s%!)YdfB?F!2odms/#akrhKFdrh'9f:Amod9`7Qd8kDTF8Gks+!!&tsVu3FjU]R<dUA^bgTV.oP:Amod
9DqHc8OuBB8,c!X7Haa<!!&tsVuNXoV>[1kUS=L\T`^pZSkf8Zs%NGcr_!2^r^d&Zr'f'7"/r,pVZ!=k
V#I.hU&h!^rh07_!1s-`"&)B]9)M6]84WYKrC$]Sdf9BGrhf^ls.oUg!huB^rLa._rgs'_s%EAar^m,\
s%!&X!(HlT!(6_cec5`KVZ*FkU]@1hUAgkdT`:Y_T)D=b91qlKr(-iXr^HcR!(5K@q#CDlrM9LirhKIe
!29Cbrh'4^s.0*^s%<;_rC?u[7RmAG"@PXF6UK6%!N)^mV#@%iU7n:ZTE:aXT)G5Y9E.Wa8c2']7Rfg8
7/]IQ6IPr7V>d7jU]."eU&UecTDkG^Sc>5Y9*7dX84`YKs$coT"@GOC6:(,AirK+UrhKFd!hl<\rLX._
St5hM!)*;`s%35]r^R/^7R]a66ppo>!(#'6s.oXhs.]Lds.KCas.94\"Iu!ORnN`Qs%3,Ys$luUs$QcP
s$>*6rhKOhrhBCc!20=`s.97]rgX4_RnH@G8OuDN7fl.K7K,[T6NTVA6N0:"!</blUAghaTDkD[S-POP
8kMZH84`YJ"@YaI6UUc<s$>]Gn,WH_!2BIdrh'7`rgs+[!1a%X"e(lP8kDSQ8,YpV7/oXR6N9@O5go`4
UA^ebTDb>`SXc4>rgWqVs%35]r^ZlTs$ZlSr'C?JdfBBAs.TIcrh'4^s.0.Zs-s"V#FS.T84Z6?7f5^T
6iKFP62j+L5PbB6!;rPiT`(J]SH,2ZS,SiXR7KmJ8,l'Y7K,^S6NKM>r'16Hf)YaL!2BId!20=`rLX"Y
rL3eUrgEaVs%!)Xr'^NNs$?TKs$+s4s.TFbrh'4^s.0.Z!1WqUrgA9~>

%%EndBinary
grestore
np
9.06348 37.8193 mo
8.9497 37.8193 8.84765 37.792 8.77685 37.7393 cv
8.63574 37.5264 li
8.61621 37.3447 8.45557 35.7236 8.45557 33.6377 cv
8.45557 30.3105 8.82421 27.4492 9.15722 26.8809 cv
9.271 26.834 li
9.31446 26.834 9.42822 26.8457 9.63574 26.9551 cv
9.63965 26.957 li
15.1304 29.7519 li
15.1733 29.7734 li
15.2168 29.791 li
15.4951 29.9004 15.6245 30.0039 15.6792 30.0586 cv
15.5473 30.4138 15.4414 30.7824 15.357 31.1548 cv
11.9341 29.4102 li
11.6158 29.2451 11.3453 29.1793 11.1122 29.1793 cv
10.7824 29.1793 10.5275 29.3111 10.3184 29.4805 cv
9.5376 30.1055 9.29492 34.5205 9.29492 36.9814 cv
9.29492 37.2615 9.297 37.5318 9.30147 37.7912 cv
9.16113 37.8135 li
9.06348 37.8193 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[8.64 0 0 12.48 7.68 25.6 ]ct
snap_to_device
<<
/T 1
/W 18 
/H 26 
/M[18 0 0 -26 0 26 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~AS#F`AS#FaAnGUcAS,OdAnGRaAS#FaAn>ObAS,OdAnGXeAS#F`AS#FaAS,OdAnGXeAnGRaAS#FaAS,Lb
AnGXeAnGXeAS#FaAS#FaAnGXeAnGXeAnGUbA7]=`AnGXdAS,OdAnGXdA7]=`AnGUcAS,OdAn>ObAS,Lb
AS#FaAS,OdAS#FaAS,OdAS#FaAS,LbAS#FaAS,LbAS,LbAS#FaAS#FaAS#FaAS,OdA7]=`AS#FaAS#Fa
AS,OdAS,LbAS#FaAS#FaAS,LbAS,OdA7]=`AS#FaAS#FaAS,OdAS,LbAS#FaAS#FaAS,LbAS,OdAS#Fa
AS#FaAS#FaAS,OdAnGUcAS#FaAS#FaAS,OcAS,OdAS#FaAS#FaAS,LbAS,OdAnGUcAS#FaAS#FaAS,Od
An>RdAS#FaAS#FaAS,OcAS#IcAnP[dAS#FaAS,LbAS#IcAnGXeAS#FaAS#FaAS#IbAS,OdAnGUcAS#Fa
AS#FaAS,OdAnGXeAS#FaA7T7_AS,OdAS#IcAnGUbA7T7_AS,OcAS#IcAnG[fA7T7_AS#FaAS#IcAnGXe
AnGUcA7]=`AS#IcAS#IcAnG[f~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~daHRldaHRldaHRldaHRldaHRkdF-IkdaHRldaHRldaHRldF-IkdaHRldaHRldaHRldaHRldF$CjdaHRl
daHRldaHRldF$CjdaHRldaHRldaHRldaHRldF-IkdaHRldaHRldaHRldF-IkdaHRldaHRldaHRldaHRl
dF-IkdaHRldaHRldaHRldF-IkdaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldF-IkdaHRkdF-Ik
daHRldaHRldaHOjdF-IkdaHRldaHRldF$@hdF-IjdaHRldaHRldaHOjdF-FidaHRldaHRldaHRldF$@h
daHRkdaHRldaHRldaHOjdaHOjdaHRldaHRldaHRldF$@hdaHRldaHRldaHRldaHOjdaHOjdaHRldaHRl
daHRldF$@hdaHRldaHRldaHRldaHOjdaHRkdaHRldaHRldaHRldaHOjdaHRldaHRldaHRldaHOjdaHRk
daHRldaHRldaHRldaHOjdaHRldaHRldaHRldaHOjdaHRkdaHRldaHRldaHRmdaHOjdaHRldaHRldaHRm
e'cXkdaHRldaHRldaHRmdaHRm~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
9.06348 38.8193 mo
8.85078 38.8193 8.64353 38.7791 8.45449 38.6992 cv
8.36261 38.6596 8.27498 38.6104 8.19287 38.5518 cv
7.875 38.333 7.67871 38.0049 7.63965 37.6299 cv
7.63965 37.6299 li
7.63946 37.6279 7.63887 37.6222 7.6379 37.6127 cv
7.6188 37.4248 7.45557 35.7719 7.45557 33.6377 cv
7.45557 31.1758 7.69874 26.7617 8.48291 26.1367 cv
8.69205 25.9673 8.94418 25.8356 9.27337 25.8356 cv
9.50601 25.8356 9.77717 25.9014 10.0986 26.0664 cv
15.5893 28.8633 li
16.0388 29.0424 16.3129 29.2483 16.4778 29.4459 cv
16.6672 29.6743 16.7109 29.8914 16.7109 30.043 cv
16.7148 30.1719 16.6836 30.2519 16.6836 30.2519 cv
16.508 30.6891 16.379 31.1556 16.2856 31.6281 cv
15.357 31.1548 li
15.4414 30.7824 15.5473 30.4138 15.6792 30.0586 cv
15.6245 30.0039 15.4951 29.9004 15.2168 29.791 cv
15.1733 29.7734 li
15.1304 29.7519 li
9.63965 26.957 li
9.63574 26.9551 li
9.42822 26.8457 9.31446 26.834 9.271 26.834 cv
9.15722 26.8809 li
8.82421 27.4492 8.45557 30.3105 8.45557 33.6377 cv
8.45557 35.7236 8.61621 37.3447 8.63574 37.5264 cv
8.77685 37.7393 li
8.84765 37.792 8.9497 37.8193 9.06348 37.8193 cv
9.16113 37.8135 li
9.30147 37.7912 li
9.30758 38.147 9.31817 38.4822 9.33398 38.7939 cv
9.31836 38.8018 li
9.06348 38.8193 li
gsave
[-10.8843 -38.1577 38.1577 -10.8843 18.459 55.8379 ]ct
clp
/7 /Gradient get_res exec grestore
np
33.9338 28.8876 mo
33.5987 28.4303 33.3511 28.1319 33.3271 28.0977 cv
33.2876 28.0521 33.2509 28.0042 33.2171 27.9544 cv
33.2509 28.0035 33.2875 28.0507 33.3271 28.0957 cv
33.3552 28.1271 33.6003 28.4274 33.9338 28.8876 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[1.92 0 0 2.4 32.64 34.24 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 5 
/M[4 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~5X.It5<h@t5<h@r5!D.o5!D.o~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~R[T\6R[T\6R@0J2R@0J2R@0G0~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
34.6847 28.2185 mo
34.3349 27.7408 34.0877 27.4427 34.0801 27.4336 cv
33.8613 27.1836 33.8652 26.6777 34.0918 26.4199 cv
34.1006 26.4121 li
34.1084 26.4043 li
35.3633 24.916 37.4102 22.5332 37.9238 22.0684 cv
38.042 21.959 38.1045 21.9414 38.1045 21.9414 cv
38.1045 21.9434 38.1904 21.9648 38.4258 22.1523 cv
38.4297 22.1562 li
38.4375 22.1582 li
38.7843 22.4281 39.5395 23.1104 40.4561 24.5035 cv
40.2865 24.3481 40.1607 24.2479 40.0889 24.1914 cv
39.8094 23.9724 39.4926 23.764 39.1287 23.764 cv
38.8696 23.764 38.5867 23.8697 38.2764 24.1523 cv
37.6752 24.7007 35.5019 27.2529 34.6847 28.2185 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[8.16 0 0 7.68 33.12 35.2 ]ct
snap_to_device
<<
/T 1
/W 17 
/H 16 
/M[17 0 0 -16 0 16 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~BP;'nBk_6oBk_9qBk_9pBkV3pBP;'nBk_9qBP;'nBk_6oBP;*oBk_6oBP;*oBkV3oBPD0oBP;'mBPD-n
BPD0pBkV0nBP;'mBP;'mBk_9qBkV0nBP;'mBP;'nBk_6pBk_6oBP;'mBP;*nBP;*oBk_<qBP;'mBP;'m
BPD0pBk_9qBP;'mBP;'mBk_9pBk_9qC1q9oBP;'nBP;'nBk_9qBk_6oBP;'mBP;*oBkV3pBk_<qBP;'m
BPD-nBPD0pBkhBsBP;'mBP;'mBk_9qBk_9qC1q9oBP;'nBk_6pBk_9rC2.EqBP;*nBP;*oBk_<rBk_<q
BP;'mBPD0pBk_9qBkhBt~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
<~e'ldqeC<!teC<!teC<!teC2pseC2pseC<!teC<!teC;sre'umseC<!teC<!teC<!seC<!seC<!teC;sr
eC<!teC2mreC<!te'ldqeC<!teC2pseC2mqe'lgreC<!teC<!se'ldpe'umreC<!teC<!se'ldpeC2mr
eC<!teC<!te'ldpe'lgreC2pseC<!teC2mqe'umre'umseC<!teC;sre'ldpeC<!seC<!teC<!se'ldq
eC2mreC<!teC<!te'ldpe'lgreC<!teC<!teC2mqe'umre'umseC<!teC;sreC2mqeC<!teC<!teC<!s
e'ldqeC<!teC<!teC<!t~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
44.3633 30.7148 mo
42.7913 26.9344 41.2012 25.1864 40.4561 24.5035 cv
39.5395 23.1104 38.7843 22.4281 38.4375 22.1582 cv
38.4297 22.1562 li
38.4258 22.1523 li
38.1904 21.9648 38.1045 21.9434 38.1045 21.9414 cv
38.1045 21.9414 38.042 21.959 37.9238 22.0684 cv
37.4102 22.5332 35.3633 24.916 34.1084 26.4043 cv
34.1006 26.4121 li
34.0918 26.4199 li
33.8652 26.6777 33.8613 27.1836 34.0801 27.4336 cv
34.0877 27.4427 34.3349 27.7408 34.6847 28.2185 cv
34.489 28.4496 34.3711 28.5898 34.3711 28.5898 cv
34.2412 28.7383 34.1514 28.9101 34.0801 29.0898 cv
34.0299 29.0195 33.9809 28.952 33.9338 28.8876 cv
33.6003 28.4274 33.3552 28.1271 33.3271 28.0957 cv
33.2875 28.0507 33.2509 28.0035 33.2171 27.9544 cv
32.7817 27.3129 32.8223 26.349 33.3389 25.7617 cv
33.3389 25.7617 36.5 22.0117 37.2451 21.332 cv
37.5534 21.0493 37.836 20.9437 38.0951 20.9437 cv
38.4589 20.9437 38.7765 21.1521 39.0537 21.3711 cv
39.5127 21.7305 42.1592 23.8555 44.3633 30.7148 cv
gsave
[-11.0345 -38.684 38.684 -11.0345 44.5195 49.5732 ]ct
clp
/7 /Gradient get_res exec grestore
np
35.3234 52.9441 mo
35.1683 52.859 35.03 52.726 34.9199 52.5283 cv
31.5903 46.583 li
31.4307 46.2961 31.3323 46.0599 31.2767 45.8657 cv
31.3329 46.0594 31.4313 46.295 31.5903 46.581 cv
34.9199 52.5264 li
35.03 52.7233 35.1684 52.8575 35.3234 52.9441 cv
43.1445 43.8335 mo
43.0023 43.59 42.7919 43.3785 42.5244 43.2314 cv
42.7943 43.3785 43.0039 43.5898 43.1445 43.8335 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[12.96 0 0 11.04 30.72 10.24 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 27 
/H 23 
/M[27 0 0 -23 0 23 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 27 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 27 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 27 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 27 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
r\sg7qD\@4!]`5"r&Od<b5_R)Oo1=@OoLOAOT:RDOoCLHPEV/nPPmE=2ubf82uYc:2uYf83WD)=3QhEs
OT1ICOSt=@OoUXDOp$u42E*Sn2Yf<23<)#;3;tr3!7h,OOH>OtOSP%9P5I6;2ubf72Zbru2u#?43TC,(
!!&)YOT1C>OT1ICOSt:CP*(n*P5[?>2uPZ52ZPi:2uP`92uYf:3R@d(!<8/[O8P(>O8Y1?OoLOAOo:FC
2uGT52ubf72ZPi82uYc<2`Ne?!</&XOT1C>OSt:<OoCOB2ZG`82Z5Q72YT0036M=$OSk15OSt:FP*(li
2E1Rm!]Dqqr\jI/rA_t#r/^l>s,Zr:rfI2BrK.)Cr&+O6r&4O5!&jR1s#A1%qN(W;s,Zr:rK.5GOZ#*T
q_eF5r\jX4s#0j8!]W.un,V5DrK$r>rK$r>!0@&>s,m>CrfQk3r\sa5!]N%rr\jg:h#QmDrfI#<!0I/?
plPK;!0I1<!&aX3s#9[1r\sj:b5_O'p5f37s,Zr:!0Qh1s#'a5!]N%rr\r"#rf7&>qMtW<rK$r>!07,@
rK%&BOS(O12>T602p23sNrY47O8b7@O8b4A2Dt@irAFU4s#0m7rAOX6!B)m[!;qlXNr+k;Nr4q<OSt7=
OSh$52#oQ52>K012uNa&!!84ANr4t;Nr>%=Nr>%:O9(J%o/6M*s#'a5r\s*BiW/n;rJpl<rf6o;r/gr@
mkt&%rAO^9f)YID!0@&<s,[)<qiC];rK6e2!&XU2rAOU5s#A1%s,R)>s,R&<qiCZ:rK.)CqDJ:0q_e=1
rAX[7b5_O'q2Y?5qiLc=!0R>FrAFU3qDJ1/rAX[7!'/4&qi:N6qiL`<rf[7;q)/(.s#9p9rAag;b5_O&
pQ,04rK7#@q)/%-r&=R6rAjTPeH#B*qN1W;r/q&DJ,~>

%%EndBinary
grestore
np
33.3964 47.7569 mo
32.4648 46.0928 li
32.3667 45.9111 32.3037 45.7744 32.2686 45.6768 cv
34.4865 44.243 35.8392 41.6143 36.0234 41.2376 cv
36.0713 41.1459 36.145 41.0865 36.2529 41.0557 cv
36.3438 41.0439 li
36.583 41.1084 li
36.5869 41.1123 li
36.5947 41.1143 li
38.9561 42.4114 li
38.815 42.3693 38.671 42.3474 38.5276 42.3474 cv
38.3968 42.3474 38.2665 42.3656 38.1396 42.4033 cv
37.7705 42.5049 37.4766 42.7549 37.3086 43.0986 cv
37.249 43.2158 35.8496 46.0283 33.6494 47.2939 cv
33.6494 47.2939 33.4052 47.374 33.3964 47.7569 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 64 ]ct
[8.16 0 0 8.16 31.68 15.52 ]ct
snap_to_device
<<
/T 1
/W 17 
/H 17 
/M[17 0 0 -17 0 17 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~BPD-nBk_9qC2.HsBkhBtC1q9pBk_9rBk_9qC2.KuC2.HsBkV3pBk_9rC2%EtC2.NtBPD0pBk_<rBkhBt
C27R!Bk_9qBPD0pC2.KuC2.KuCM@HqBk_9rC2%BsC2.L!CMINsBk_<rBk_<sC2.O!C2.NuBPD0pBkhBt
BkhBtC27U#Bk_9qC2.HsC2.KuCMR["CM@KsBk_9rC2.L!C2.L!CMRWuBk_<sC2%EtC2.O"C2.KtBkhBs
BkhBtC27R!C2.KuBk_9qC2.KtC2.KuC2.KtBk_9rC2%BsC2.KuC2%BrBk_9qBk_<sC2.HsBk_9qBk_9q
BkhBtBk_9qBk_9qBk_9qC2%BrBk_9qBk_9qBk_9qB`~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~eC;sreC<!teC<!teC<%!e^N!seC<!teC<!teCE+!eC<!teC<!teC<!teC<!teCE*ueC<!teC<!teC<!t
e^`4#eC<!teC<!teC<!ue^`4#e^W*ueC<!teC<%!e^`4#e^`1!eC<!teCE+"e^`4#e^`4"eC<!te^`1"
e^`4#e^`4#eC<!teC<%!e^`4#e^`4#e^W*ueCE+"e^`4#e^`4#e^`1!e^`4"e^`4#e^`4#e^`4#eC<!u
e^`4#e^`4#e^`4#eC<%!e^`4#e^`4#e^`4#e^`1!e^`4#e^`4#e^`4#e^`1"e^`4#e^`4#e^`4#e^`4#
e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^W*ue,~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
35.8845 53.0739 mo
35.6872 53.0739 35.495 53.0383 35.3234 52.9441 cv
35.1684 52.8575 35.03 52.7233 34.9199 52.5264 cv
31.5903 46.581 li
31.4313 46.295 31.3329 46.0594 31.2767 45.8657 cv
31.0658 45.1292 31.4687 44.9971 31.4687 44.9971 cv
33.6689 43.7236 35.0723 40.9189 35.1279 40.7939 cv
35.2998 40.4502 35.5947 40.208 35.9629 40.0986 cv
36.0879 40.0639 36.2168 40.0465 36.3464 40.0465 cv
36.5956 40.0465 36.8472 40.1108 37.0772 40.2393 cv
42.5244 43.2314 li
42.5244 43.2314 li
42.7919 43.3785 43.0023 43.59 43.1445 43.8335 cv
43.3101 44.1207 43.38 44.4529 43.3398 44.7783 cv
39.2607 42.5361 li
39.1618 42.4841 39.0598 42.4423 38.9561 42.4114 cv
36.5947 41.1143 li
36.5869 41.1123 li
36.583 41.1084 li
36.3438 41.0439 li
36.2529 41.0557 li
36.145 41.0865 36.0713 41.1459 36.0234 41.2376 cv
35.8392 41.6143 34.4865 44.243 32.2686 45.6768 cv
32.3037 45.7744 32.3667 45.9111 32.4648 46.0928 cv
33.3964 47.7569 li
33.3909 47.9956 33.4769 48.3519 33.7705 48.8799 cv
36.1123 53.0596 li
36.0362 53.0687 35.96 53.0739 35.8845 53.0739 cv
gsave
[-10.8818 -38.1488 38.1488 -10.8818 38.8955 50.6709 ]ct
clp
/7 /Gradient get_res exec grestore
np
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 9.0%%AI8_CreatorVersion: 14.0.0%%For: (Nick La) ()%%Title: (film reel.eps)%%CreationDate: 3/10/10 7:27 AM%%Canvassize: 16383%AI9_DataStream%Gb",Kq-F`f\*k""%^?`PO]_4JW+:!:76tqE&->6dJk>2*p%dW3qd&*ep>33X;G"+)cb8Mu:Q(pFW]dM1WljUAI<7J3l46\UU]9,M%3:mjfoRCFpoh#0XD_h')F4@lcmgZ2,j&*9ER5@Bcd<K]8deL.)XM!bed%*qn6Z4XqrDBO)3o)TmbMM@"`Lu*MU>\V/A*SKGE^?Ho%HIGLRBQVo(2X(+r)gL7T:W&&oodUIEh8l$IIdugq\9$/tOm'5P]Zh\jEh8lO3bXb6Re`f)SdkskPNfS5*KATcjmBXC;qd!sP9hN!%-`7u8Ldjr-JnVB,mJ`d1*f\K-dn3a(CVHn9m=a%ZTYfT,q<>+F\30'D&tjP@]^,rB`8C@Y^#!j'itIebR_A7N_fHd\FB/:@I<s@(%l19B#UZ%P^C.t+`3VRh9*P"q?8XD;"VV+'!>RmX:QqGqerg^,mGdFS+E+-VS,,,(*bY^T>o#+e[5FX;)B?b&g_V\\=Y66u4mVW\:%G]H#h.R?UL4k8D[1]A:.#nZP!c7]BmBo`SNpSqZ@GO\?+V-4I+\Ab<]#F/#UW7gp/9&M"95GRN#n,;)bpP>'GrS_iT3>F79p:Gq3%g3C3\s"D6`iWi_8F#iHDh[]N^JsD*aWH<G@3pI1(-19G-FF[()*r,+pKDj*jUc/Hu$n_SVH^2NH,k^a!I&HRKD_.]7$!pp0LAR`i%][k=UTritK,:]Ep:?ZE9&27BCYqW%E7"=j[_o@@f?)"l2j8MW"GY\om9H;YKb31PQ.Z+)_eQ3FMPNn2[OS1`+p4d=uY4o'g+reRB%W\='VK)O0Ao>>"7:Op;KnH#iDM5#dMcEot.97X/m^&M'sInmg&%fQ!Ir/N!!:/h(.2"Xf*a3jX$fCs::pZ6;)NS`)6MU3i1E#(lU%'h)dN7I@N)1JQ7D:!k;aJ*<H#BU,H.Ktm*rXVqYUC,F;DdD2;B")Zb/ghjNq#eeu0gi'ZuO/uI7/*i<8jXtlEqnBhNMVi*$4lJ>'%@8D3IEXt7KDm[?@n/M8UOH@3/'7SsM42Pop,]Jp/Yp91d^2_(klj7_?1hD-C_S5LYD;&i3e+gc%"i^U4JJ*E):YE:[?Ig`EPM*3]%N?d7Grh1)#LYiq?0IXQ!H\*sld0fd"(`'&@?gJ<<EJE9Urpa2nN[sma<nJLC$PnFg"KjLEB%/YfQ#$6D30X"AeBpnHVVr^\QdoU-%Z7_PH7b7?t(A]-,@!A%pYrhTD?-?O?&&6LakSsC4Qq1T^7N:]3AQ;[;jrK#CbTPE;BiriAVDbM\-q.f8o7b2`^g0tg:mZG2DHOHh%Lu+W&*Neu#1:m+EqsmN`/t=B?/3"Hua9ZY^-hNmJ]C]6/e_HU5QA/=-qa0,-mPF],mu2uXVe9,_:sSQ\'kp45G6SMi<kVg&YDatp%?.\%b3/U[WeN_BD45!L1"bE1V8,9X")MW8Y43G;tQLjGks,odqP=3`fW.24DgrYTIY?mRelmVm7<gugoOr`XkX!Qr^;>rT<T?)*3%%_i1NEj!aL8Gi"17M*"tI_FR?-+,"9`iUqSS"Uq$Tq<@cAeN$6ZtMCn7,"fFid0gB^=T*&*e2V$O'LjFe-N]Rr69;&.lsR*C%5Fa%+2':@O-OA<Kf*!FY?&uiUQph'"B]sK$KadLXLB+9-jqQR42?[%]-YgcU]0KK>*9$-UUirGVNi*fdeFka:@js#b?%qNGtVEl40"?n%/<,P?gWcApR.FWpr`M4i(4C`%fmVuV-P2N5"WAbfm$@@9k%VsX(ZN+BA&WjT2&3+("q%@c1=*)dBE#0(UDU<ffsglj+(meVk+G=M%"49*JdeM,Toa7<"C2-`VE*\2MoE(AP5OiqB&!=F"[UrqHDU!s$_H6gkq?U7T]+_Xj(+EYPZQt[H>4Br:D@(gEW"$.M\+<,(N_t`#%idL\J!L@b!mRSQOfocKF\e)4/G2LGCeS_s<:1gL:TVg>8ej"prnfOQ6cl1.;WR0e@pf`j>,P*s)!>;@q6<E<QaKaPZ/'Zut*9_Z&%rk]QrOc,B=k1C@Xa#^lA_&hu+UK"S>[[MKp0nj.9J#V7<M4EPSMs6!GY*Ki3-QJS-Ah2n0O(hrm#dn`-6XBlgX_GrSV!U0aQiG^O%CM=9qo^Q*kgePL-oJ1,p_c4,k]-=9Y%<sb<C-u,*=jP>87ru-s`)rA710P+.`W=;.V_\l764I2!TLCpSLhDmEN7nuc/0)sQD=1L-%27+u&/khgtp6BkSU!:6aYr.Z,!0D7R>('p^%p/hX`H@;ZnbbLEAS$.U"7-"R@*[on=^#=WmjkK%k#!+l,f!Z"aj"\`=^,L=V<Z^A%je(gD.LGe*3>o$acNulB@WBZUDLj##_S[u]g;>eR.#"Rg:46`n$U3"1k"b;,1VOU3@`;X]CP46*0*PKQ[Ae_&R\Nh0&*kLF\2MHB%:?GS4YcVl4(>q=DBORuJMD7+0l=Ct_])geV)^sBDXppATEa(HGL$,P&6ScY"K"S[kY\/?M@jGsTj]S(T>[)N9hk`=um@[.-Uj<9Q%rhdPe09uk3C0"eUYVTCK`<Q$a2>k\`3ppkI@u4si!c>u&M8enkon>Se(?Ab`4E9\(NE_-r_*@];S`PF50V<EVl)jKGgQCV2V$U?I%F0sXg>B*>s95:G.qFk%+:854T3"^JfnpCIVfT]Gs.ZCd;Q8pM@k8cuCg?\CE6nm[nDbVB$[Z\)8(h:QL[AZbAR9lFWXt%mU:*QYS%kFnk+7\rW5)_9U-kLqbr99cSm\rhT$Doo@AX!CQUkAZNrUZ+etM)LaA=YsTmQbp24:Kr240meS[KQ.dRi_8ZTm>8=r0P7[kMg)*[%MWN8Kr_^:?X%24\7ijcp=!%8<ZZ:?b-oQ+JD(MTT?"Y>jCdIUTCj0L)o,,ue@p3ED6=[0sq(8)8S?iVg0Z>/@!st/NNfq.DWH7j\%k.[@M2)GQ*gG'C5&Psh%VF;5FDM(Bn39)Dlk4R9YQ8TO-VF@%$fOEYX6^P.nr4o1>].O:`a9Un@a#W_<JpD6]D:d=l)25:8UZF?]%PN4`?TY.YUA'i:gf92?35dFdq66"C&D93":&%b[8F0ImWRZPl&CaS:nS@*<CX^VkX%;fbgS`*j\^MRt@@PeU1c'FP'8np[6d68R&%GEo"efoq:<B([!Lhq,@ORK6LZ-cqD$-"'$g6@@\9EE5r&P[I[?Ii@Hi=8DSBZ"A]-fd^^$i\Qju,cDJEc:jDHC-8BI!Z)37CJ6L;%-5I*aVknTUoB-OY0#=hFd8b*kNTC?>^o-lLXkjhsMXSA3D`UulRZjg.K<crs4@D:(6u"NEjD]piFZ`a-L*^8j*jo7BMpi*DR1Emq%#h%;f&t^I1n!:?XXPR"/5J.Ru>FR,!;PNVPD&M"_TIH8(I1&5C=d3)YOV)s1!MB0)[B,rt%PCSk\up.IcR\`-d`O2-W.`F)[DZ0/%`q'i0!c#lEZ?`q'i[!`<B*GWoB;WEOnXp<:K!D%eSS%Y'^sfj%LfQD,X+qOYdAq76cg6_Oi;+u0)scAO,g*=nM8c')bJpQt>Z#Wu%B.r;K"nF+?rF_0L0?]ed[hu.dECF@H[dnSAm55I0JMh0oe$b^')<M)BQWZns4\RZNG\ZZ(U:HF8@QAq)_8G8HMZ\sbKj?'XDcej9%P:XdGn20SckGMEEAlDj[f$2#Q;56&1QH$#H=bk[h'_'p^.'IH7cf9#O/m<UtE`oC81O7l7Ok_t/fPi_;c;<"O:+02[HkB.Yg-[i6%)897RgO(dfn#;/pbd"(*h3Gf+1&UDXratOhoN^C*8c2S(V7a!Q<W::(6re'tjS<$!cEj:d>%OCW@-14"M2llrjt*jZKSGa=!iK7o%6Yn1$3l2hFq%dVj"ces\,L>Yt\MO;W#)gZ?c1&6"a%/<kCr9E2.su+?QRs?LX4!b!r/m`TYuBDs]22b9+])Wl/%Gqg1#=ubB]b:2%^H]!gauMZWM#^&.Hl;Ah5Hp29hqh4u>SD?;kHPIX_t?L"Zc-MOJ;3fX'uS[riI%>Am`h>%8R,jVhch!9&th*4!HM%FN<a$K=jbl,%<#2""4@8aN/Gm:f6PfL,q8/Etb"aVOJ"?=H.k]%;Hm?\po=edUjl&Q``O9S5a7C:!@2k[&.uD9kl8QC<JH4G[+t_IYctg^,H[.%_%\@":=0*BYUR&8gC"bSAkS*)L6C(%G"Tj2,tPbl>2g^sHD\=*:5XbD[:^sE)>a<%GVESt!(1g$C[dL92;RjZV;5V`nWg0\Oq22]\&%9(Y\_SqHW>3DcLVOTqP2,m,?_%\TON;oGED5Pg<4STtS/*Q=<T5=[5;IiB6JChmVDCYraDb"&f?qG/eQjhDUFK_]^ta`F<c_)lUn%W-1nsAF(;,rYqt-Q\[;nD(1SQq.Sij-IA!Gg&$L7P&b>FC,be!Pu!X1k^dg[hru[;9PdMt@\6EW<ud^pNTS0>)9X#-&F\6!(s7.T%=p!@_=d1_cqeJDsW8<F,(uA>;IbS!#9p6qS_DKT8=2?gc=RA5P7%Or3@Z5WA?%a^JX_G62q/Z'FIjR$Q=K.GQ/bEY40(=P"lJ#Pe%i9.=ZEJm@Vd#%Jbk2E`O)Jq&HPY=$('3iJ7^Frd8_QM5a(rJY]LZ7))SdQ8sCe_6;UHEas,B=YR_(/QcoCBa]]EaWp'ogE1X)G,P%BTigj9#`<fZpAGO=_CH.>cQ`>ncr&U9FDRC7=*E<>fXXRaa@UAV<s\lT[Mq=WW%cTQ&9-%.A']dUqCWcLE2L-O_.X"6^FFS.o\KG%8bQ4ifrUV/P367PQ0=/+/QUOeNm:/fNBO&M=<kL8/Zs,eWDL1"o5$@cEYp<;9IGuB(7s$]YCLU5YHr=B=TsSh'PV*UXlHXfU?BF9%cFbbaVKn[aOmT7$;E,Z(<(_Jk=ALa??1?Ng\KfLR(1oP/.MC@qppQ0-V%'4%D/i:5[N]9^O*r-^"8ZhZ-sfuq=PGPjMr$_9A:^4Q%]qU\PM:C"17^b<_16K.k7,sk%8Sq\<%S#u-/lEak(j!mIJBEDei&dKN'`83iAn)@e1Y$Ci*\_pIX]ZYsnjW=Fr%Z1j@a"Xbb<*B2%SG!`rB=0AG]$JL$7!K3-A1ic-.%J8E,S8'CfIsEX/3aIU^u%-o^rF#I)BLM%JBZHKZ<oE=4Qg^C51EIP4I40h=E6jRFB+)@q3%&c%$a]"C(:K)r(qE^KDir/3lmQ"I9af)G-rPTg&YI"i^]hh1of':sWWl7a%UbdGf(Q\a6u93091,>;V5-58:q0IQ<C%eMpd+PFp*bU?%1L/,'^i_\F;P]%`:7eXhTE=`Dg/q/7Y:'u<8hera![UB[N#g`:rCUTjZp7[*>-mMPTF%:qKbeKsSL$*c#b_F(h==gs<SU;cG6"4N%iL8;dBSi0Tn?'#9\gBC4+.*X`C>M#&nk5%Bl4oep*c<\KV^euPD3i&.c"!7]2L44]O\1<W!/8WX&aaN."579gAb"<a=Q@6GP"#N]%cH;r7ednX4_3,;F,r>2?11%DLFuiN:C$Q#'2:_B_L0C\29.^b/NBP<.[II^7'.jSLjS<0;p/[cJ1UMg1L:Y;D<"BiI[XsO*Q@+)@%Gr%$\AbIl$`0QId+t\IN%OBT<7=l@.Tql9iC!(lrfK1ggZ"*N%l^9Vuj*D.:*Np#6BM5\6Uk5F!Q-IMJnlA%/AA3VP)20kL#&X*L%fi5<m-(>65QF@Q-Pu"HF(6mCf4ud;>=n&sL-EpR3*!\r'VBUM4eWfhTq:rVZ6p]i^4%lMY@pd'B[1d.L26ag2^$Ujp4X666c$9^R%dGG!WU_tatl&]&Sj\HR^X>BHM1)np!)J\/`m(IZ?Xj"A<g'<`M23o<+UMK*T5nsc+Oe^Tg;l0^U7:p\d-5)j$?A$Dml$@!f)\bDE%V?[ikZ__/<Aug08?+21kF0CsBP0)]>:5nXmSed*Yg3+%k.7c2eV7%N8;ePg0ng"U-@&sQ.=c]i14B\nP(mh'DRMeSP;Sc1BmK4su%b:2R*-JZ`=6^BSXeWV0t%#5`a+nJ<[M8FNmj3sUAqkl>0LrZ7S_"Jlf\udLrD"7V@Q3nW-[&H\cST--A)sk0Z),t1%es%)^3]"cV%7Ea`qF3u)728!1:Lp!5sq2%f=>B-Mq&&NppO`Qrq&lf*9@OGjhd@u3AU4H-M=*$.-IMQ)3X[#!$LH-K@CDIXu?[s^495!Gcn@\Ie%U&Vcr@*q6_d(i=]:fB[:O-GHn'gG7]GhOOn5+[XKbfBpD6>7@bX4%!Vnr!"g/[fg3\Z3o7.`HJ$2^loYk@1j]\[`>GM5<KZG'Q-!%`6h@*A_\*2PVbpC,<L2^R@^^#7:#GIM[<rOTQHaG7"l0!,t0;n.Lk$1?m6,&>/;k,"c[H"P*J/6V?B=0-BcAN8Asf>jFI48J(ll5%[5,"L9Wlq2B<6"@96/G3lra@!Z'KB#k"3"&FHBW1i^7-Sjd(H[S#YL?)'@r<8<q50($0u4>;@3Ge![P]<Sd\V5O>EfQZ/gm>tT-:%5P(l9p,tW!Z'Y`'BkI:GW;ulV3uI$p,_ZK&k(72"1$hqQ[tsGbCS5OH9IcdjlA7[+95OMV0$7V"jE\Z)g;&SoC)j8:T8bD[kaZQg%Jq9K<#o_^2<OCQ_F(Lhp3EsbU3R1m+@`m79gI=''&-AC=Bg@)kXNV_q?!>nBD#CqN%clu.e:*S6Z4)udB_`P"]0]aW2:YYXT`ZUm%$o^e\Wf@3qRjEEqZ)oee9KcGC5#qFLfTHK-<PVjM<O8[fk"NJd4BXA!*d$83BHq-_5s1>Q:*b=@CH=*sYll'PdBeXO!GM'&&l-\9%(Mi3nP\uFs^Ctm.M&k.5(tTM!6*9Xu="II\d'BAk^(j'jT"EF&ng':;r^>4eML5XbHJ-;1@GbqFe',!p7g7Od1:94%0j%7ThTCud%As@QZ@Ff%r0f'b?;&-U^R3j^F2:8h7fb8kTc8IRIf#,doeI&@uj"8C'(<'E52Ui@n3MA9:O?p\UNU3+.;MgK;pCcfj'.ON/U'OmQ%.e@FTQ(6KZ)("Kd)<R?*T&8qJS>+,Qg6#d'4=*nG.,(Ubk;r@'W0gbW`U9oZ&`h_rU,PjUd)Y]>B_K8j*W9A,BZV2RAi7MSI9_G!%rX!IH?dA?pgc*ncM(OP_O[s5)*HUG\b,3H\6=qkiNL]SUJ@XH63N^Nbc+%cpok/1N:__Ar(OHnm`?*.(e!)gip0:DJ4J=K*9'2b1%OLljKf@8.9(nW6XEEr`,oJSSdaFCY*V-rBmMHDZR?W'O.af$sE.R&PtpW/qdOZ9H;*Hlm?7PZ9t*-I_ER1s[;&t(14HQG,PN0.YE%`R;tMK;B$C8q^@#DIKUL7_,GrZ_pA%=jGB0C$AGh%=5CokA7N#=SK-c6R!+1W?[t;(G\^l6lrSOC%'mC?0msp@A,.^S1NN1ZKJL<%pY5A]MgP\F)&+8"1J`fD*f-(Fcots6o7AlT(Wc`lIX"*Z!R(5`fbBarYiqm"`@D,LlDY[BBi4[GSKB8D1('q]ltntt/2UF,A[*i<%#3s;n]mkT`4R$PBh[B_<Ek'^0p8$tL8(5WB_X*&--W8i2eI/g-p0?@^+ql4o@G;fK/WrQ2omj?h/UP:!!9SP=f%@QWDFO]O`,!Lr%YB#dUilukI]n\_YXeUnPo"32aXD6*i?H6/i<\GnOmNRiHeiSh2*eLC<[P2?-?g0;?!>a=AAXM(p,4.mdl0rs?WOk)b$F]$+8.4JO%1!\=rUd\"B]mn/@]TN-fr4gTA=-,4UZcWBN-=S^mX*gk'Xqn$8i#UD^$dVEDW,!taSZp+ZP0^@:n[1?'_Dc*hW0LNSn]KISbsVf4%7[/=n\m7Ch]u=\?a(+4;P3#@@>BW^Vk>'H.)O9.E-^j@*(0q;Nr!;H',8Es4ceS,,/6g/@/mDCokO[>7W\!M6dqG67i)McX[Md8r%7-0(qQ<e(D</!.nAXIJMW=+_jiY.aV(!4\Q;:I.cRa]aQ[^MUJb*!BRqmm!*N5LK>Ro18sH+stfS&aJKDh&Qqh4ERm?$E&_a-@E$%%psjVQUsW279R^b-'98i3QUYilZ>Q;c)bM%HPRV`cIWb5)=LJKf(Co3DO]rSns(kc:F2dhT(Ui:PAfD"oK7$B&Yds)0YJ7pIO>"g%2*1moP7%M"R@i6&T8amJmq"$@T<e6aIX]nK=#APaDrQW:EO;n52ndBofrc2KO]oF>*RA1(S8kj<CNT.?#EhrLVsnOecK\VG3&t!E%2Uo.J=hHXS+qgt%\@Lf#E_gl/`'THAI&hQ4Lfq..Kk"_gA/$W/OYn`R@(]W.]q$rZn)S8!Bq;FUc<'O>1cNU#bWf!N=2%_qOd(m!%4Xt$&fpGM*41-J=4ZBE!EqYLsrA5nY!Kt,Nd!.@W\hm]VY22jG1Xr7$8OfHN=`;,ghB.r+AI5OUhHuGt^e.YQaQ&5*D=*faVj19T%XqRk!6]Y[NJpH*59kCFt7K-pSUA^PoR8Ph[;bs;*1p+^1F1dpIYP$YPX>b^12aZbF6/JZnDlSrPX-Q,A6WkV$B<Ho"m20k(7^Xm_%ZIO#*A.h8Og!7<"A':L2D]<B9Ei(trLYeH3@[W_VS+69%6csIfA\'bH=XRba66`H=_gF%Ll@_m-Aqnn/r!Hn)<`Nm-auhUpnT2er%B!Ds@,Y%dX$&Ph$A/Ulthcl;F+'6diMcA2%asl(9nXe/T\a7[jad@>W,'?k&:>#klCDM!R;^t`+QH@'U10)kda]lG6R@<)01.D!e%Q'PRq%[t?W>Jh>4bXAFH]1OPg=P?,?)k<=$C];RVR^,OrW6pM\>m8-s*o=H)UYFLp'5J^>]Tihk(=(N0<+4""C8FbA;uF^m;?=QN%O&/p,bf*VpjNZ251%B1G^rEG'J9V<uoe)1#H_)fn;0a4OY"N_7>,+.A9dGRuGpBk:Y1<+:99R7m29_$bRd(5oo1hc?4dPgWel9:N%A#a4K=e$Z(G$o-[P#Ln".bZ#OY%Fbp;V9`dK/p&mDj?6X=qtO.Rk!,bhBlrP1bEJM>0VpF5UpM"l*j`_3n4i`PWq)a-3`fdp9`[?%fJF<W.EC&uVp=5>oC<KEr*,_-<mJQI\h,g5<]_H"kZP)[>PD4<Q2\j/\ZG_<H./RSpWZ,`nK(\e"))Ml#eIKr;#r%%VCVVPF7C7\%oAnU6Y%E^fH]%C_S!G(N&#\<P`]Juu9KkB'GK=3e7$AR'i]RLFSI_?<lL(!&bb6pJR!5@r1C38O2#<%F?@AR+DnUeY*l5!Q.ai7l%T$D,(nfIC`\b?e@E0ls%<Ge,:mCAP1^OCgG-'rZOjC/Jqb:l_LDlgEr?t80<WdV$9<q!!4UlU!(4/^WPBYG1dMd]pOVV1PmZ:55a%.cOp9_jBXNrU0-U74)_.qQ>!ZBu2BLk/h]C&K8pAYn^9dQ*n3OMVifbje8$--?a>!rptiL?nneK\$oMeSGi5!GKUr+eQ\sP9g;T3%Cr9oIhhFtcY@"3W<7g-_P\"M[Mk:s`JN!<UrMjJRQGrtfqca,b+FD]&8odp/C>g34X]a:*gi::Wl[Sn'",XK$0q*)UG0D`%$_XB$%RG"0C8%ketqsFQaPfi@KjE?76RE)BdJsK;UkpJ]>p72NfL@-08dSM"6)2I?#H2a3"3I<S;Y1-F=nTTD;I5S@^_X=P_bDmn(,IAfT%AYQk?CVMm@S3<m_(UUCu?gJ.tQWQE&W9Wf;?tK_b1tInN&B7$o\\4?f6<i*#kY^;k/ANt:/g%dtZkPGF+0-kN(#5sn7NB)th^PmN%S;\ZR=ZGK@o_/M,b0E/bOL=4h^8OW9@C7sT_UmSb?]EGn^4gO#^Ar1r4;s/RjIZ1:n*K_EQPV1M<IT>pmH'.-pP8Nq]p4q3-i(24%\>3>ia.ph9Vo.QBar5bJAYhQRN-c;M\R&G!;gk`jqA8H*HT-;lU[`W\?*:Vj^\7r-$YrjcV)(66*-B1:bD4ppFG??+Ks-u.GP])'%SITKg)`t[?I*hgH^<5uAo'5^7Y</T+l@PG>qD-E4k@3*W44DYNIF&oS:!<TXRU;Uj>J@\^0"rZP>cEc;-`<7.d:cpBc/1:OX35l*%mJghCZ-+/BYD*+OfpPfli_6cMoRGXIe9_*&FRt"Qk`*kqcp&Cl/l)<"Z3a.kS!i?oY7T9WkD,fuIr_..PBCHG1S4<PKAPIWPA0K5%d:e'MEIW4$KXc6ZTD#S@Nm9<I7DtJ)e':CCa./a0\`KD#0`4Dgd?]9ORk%@45.%,\rncR[Q*lsl5:Yf2K_PK09Y72;GC=&JFoJ8l%qU*H`Q)tdK^E3>uo]&"6rSZXfaGK./Tq@QuC/1=K)YDL#>4g9eg9,fPT1;,[)phAO5EQnsnVWg_:[6M3*j.KpULoV8A`Q7=.HANP%16.=0h;,ZsE1:agD:?p<cguN;n3Sf!iY=-:;Qo65Ba2&PqQ2rYNF^q_)ra+apJt>0's?+8.o')mpMSN@jg+2_btDtQYBnZj6ppS2%GjskR_-<h:np'ruJ<JORnFk5;n+a'Sq7[sGTca*8TD5BmoBUkCDu)'#9t5BL0CXT:#_OO]acK8M>#5_J!Ej5)H\DaCji=c\0FX^1%%cQp._Ksi?Rpdg`7o&,7?K=UB'Lkq67nJq7[AY-(U1Vo4g-ehVm)=Dn`*jY)nOf=iBj?S^EJ(CK2US"`GR8X$8XMn;S0UZuL.=C@%,gE-M[##RSe4]`s+@@GIj"s?V[$K:l7bUO?BmZ]=eD-Koo4pWDX@5!lI:KB[Y;L(>>-$4$13Vtih6.(VYTD?TH;[Q)[<fOCW&O%E%HCII\D0QN)&N%?oe;.0E8L&*%)YHRpd;60.8F3r_YN[uuB%W'(2J]27>-m(%i/8VFD;l&7jgG"ecjEth\OB(?D:Mh_<hn2][9Dr4%YYL[,d14k5YVsA1Bq#mhVQnnNMSFrHP/=u0n1Q6g9+(]^_S;mC:(##'_&)"P:Yq%u\IQ77MY>G_/Y0Ag@HY:I<&r?,N=1*>m-9Op%o1rMY;.aYPV1[?Qg54Z$`Ol$_dD"!+J%n^(2.k!6Y#RFMj%pVb?GIp7QK`ujs(Cg?-D_!Fb;P(UNMXGc"kg0o1_&%80)la@J#/Il%1#XV_7o9Qsb&3),U%&a2_-_6Kn)5D[96!4`(ZOAVbOuA>i6"):)+dA[V52G#114f6ZG_](C-leb/3?drT/Dq.FdAftBpM+L%Mh=c%^6sb&Pg0M\G40@ch+Pr,:02p:[ag=QCMMOW%SF2*7^eFiqs/iKJXFSIh+;)8?1%(bM&R`ei*Y.%+-Se*3,e:ZJI[0iK:QY4^M_\g%gGLL2aflqpAtE#/nkY*"D:P^uArX5AD%a751p;LJ;RM<<8$;Kj@aV:*a/g_t6E]F7ZE9GaMAbI]!Y$<_,5iKCM(].=)@N#=s"ln7%Y-^(p1l*uTqtl=V?oMU)CDE&7&>F_j6FPl%MZH@,O=Ko<U&&KRM7bN<rUZM_#kH,p^Nf_G#*?\^oH!qBik;YM%pCLT#lh(HoIKN)%s&UV@&a=%N(4t+*m2=@'j;f']f7Y1_En;S?aF;+&I80`a_ZcJBRYDmu:WST'Kq&#crpZ/sWdb*C':POarP[hG;*V&VWTD*B`,p](%jfG[=\X09f[tIS92uYG+7WTt8qDZq"Y:'3c:ubn\QljiQQPf]JL;+bf.a`89XFa+.-ofrpr#ZJWqS,hKM8N$Sj>+(^"ds">caj!M%@!4Gl^9GQ>QTM!`V`(.7:&c4*-7a;4%nD*Xq4r%LAaNF&GMK_K9Y[Z1m_8%XpF:AfmdBbo0*XSq`2UC)Y4NV1ok$X>&C4EgS+q:/%-_3Ap5CUtU5:St\7HMu7VfG1,hnNT3H%32A=/q/GY>jr<Zuk@4dZ1Wp/`#H)B@*,CHb>0j6c4XoTAIq#Xt&^tL0m4;mjBX)X"1g<%Q29Hs2_Q+fS0PM;ECf:TTulTmH'r\1V?TorFPcNT?PqX*ZK14&N#=2b1]7\kVG"o;s2(/^OtlpM0W*0+ma_i<Bla%b-JBW#Z8lQP%N4HcP8lihe8)6fP+%eEM\%DL,GReBb/nh[LrfbYQ]TfaCpF4p)UCeuHnapeM)';kiUVUV;><a*4p=>(I+are08#$+=\SgM"O4p4b%#+]Ih)YSnU>`Q:dn_%m24W@[%.jn45W1(HbFTsW$Mr*O%ntn42p;[(2@d^8/l-Tp+pf#n%U`kos9D3&c?LOn2a1\72<P5o5?I0l4%YJ[]d,tTe\>]e!!@J<Qd^OK4No`(t9`AM0K?A]2-CJ3ENXgpGsm#HFVhY?hOA\[u3Br,t%T6:_AKDtL=!s^\/[5Fbt<N;=TcLBo#%F4.,UN\30^.X1WaA!CPjp1Ot5a#E@EA_Li%\j/:l.FCscB@*8!aJlSoNlH+YGP(`l0)ARj/^gT0kSt>H4Ll;'$P[mCR@MBqqcIs:%Fu^Q\<6s!=>.Nj%citiqo?0EI6bb]!p?I)p#)[,iiR6ouJ+$))bX?5a:j&e`H3VBqg=,cW@%]Tol]!8K-f(>)/>mN)i7f:E05,ZF%f`)NJ:T2TM(B&E;$V^o%hg=Ak8<V('$/"Xc%&2#(Heg-uf3r==)0SY@KAD5@IF')0.\nL`B>)F;)Gc2BV.F%c=A]\ro_PiqHEHQ+%Id[^SV$IAi*fOcDDgE4dK8DloOjrgM`oE*W8L1Ol)a*@Y$/Rb=DJ&qNSa_'X\%F;pX#GL]Zs27npH'W11$b>5'[CPBg1qd0T'X5E%WRO#c1Pj03;<@%&F'WF)WbEuDA'`EP^T:AOU;c4'.soajF;CFErS'n>/Yb5/3a7PB2Ddu+kblPQ^lVo8oC?A;mm=Fhqd_Fe'j:!r%G(/oGD6<K9TZMKlI'V&2bJWAf!4AbncuJY=b;NoMQ`nmHE_G/^L"XZ/o%"u&hYs,`]uk!.$'gPGeUG>Am,tEuaY3AZ'O9'nm,o-Q%`>,s5]lg_8P=d/Imk8TB#Amdr185e`P.:rob(7='=8\D27=V:<=:2qlSUtl%0Bo;^lBaO\Eq5`-lK+='WF_V?l#bHMQ.+4[k"CXI%l#6E?VNlf5n7_I7XNiE+HTUToVc:moNF$_<Kr%ssqZV>k*ouRi41IE<<SkLC/R:qXFReOAn]cS\5fnq%DcVMS"sQ??F=s4N1],8(%64Y2ZY(e^6pR;EdUZq$,?N9).\pX"\Mb]UtVUkR^oZp!F0UO^ZB)=\3iE763hEe]\.-s5BXe56s_R_]>d2n:n4%5@?X?#OB`nk%L%&=U5e-R5p'8&K%RE9/]_>#%Z*%a&m<*rG)kD;JLk$QEgYk@-7p2B>fA%Z4d&CR+>>Pi8^A+Y0]W)B\X4B">*cpZ6(W]C"<AqJ_\P%Z'G<M:#XKqY>(In:G7#arQB9*Mu/[D)dKR5^;'f"`AXL%/aoC,/FGI*`>rTGR5>ZIipJl_Sa3`Km"Uhh.BQ<`!>!tB6X4RnfaZ)J%g4ALIViK,\?+XRDjWJLmXkg[k_E]$c#Jt<3=3A>9Zb6AY<mp?W^lmip$8(MM**c-m0,NTs0YC&?)tsjrVnL2XEWl\2*[(bQhQ,IM%1*'>TA1/d2D1\(7MUnf\cj[OZl,D'GkbpEW??lhn8'Ap=?;@ANn;Cc6`,9d=0s7g%?6/ZuVcRUm*N=i]6j13-jZ(]kEOqt5iFkiA%?*Ji3gAWff4sim/f'KcjC^,tc7Y_,f8cN>RR>hjp)_r<BTnOlc;.CN)Nr+IcigI>_B6)XsSp)e&2jH;]!m-e:mLI7emV#.cFc';D%A8t6eJe&)s@k;:T5,sd_,.9).(lAc`8]I9\`rD;7$5HdM[("(*5pBp;'b38@e^H%WqgJIt/l'^<WkBQ\rImq_m=]71,VEb&#b(Ib%#2<-2/>[>C-*Dqmr<)c@P(d3R47n<KUF"1)<aoQ1;\!skG/f_7r/HF6T\^:Nc;J)4CMX-j(#"[hVW"i3[SVeB2F$YhcR/Hf?_MHd%`g4*A<df\Qp8Z;(7=L;aP9(TWFdt)Bg#M%uH8N,K+-1#-f\Fi;.dSUI(R)gK0r^=`6qD5e9oC0!]B+MpWoKiK@I7CPo&M9PMV9L>%Pm%`B^m)6jW9!jga%,/]T"j):/9*Hd`geTAjk]O.Nk'>Zs'-fiZ\G7>l!f9qB,BO4E+YI<aprf'h5aQdHA?%?Ff&]pHsYPhGd[Eo%^%/coc^)D!/.GRUd\mW!')F/P%oT.FequB.(g1Sa=E8>2-#dTZNb`15Oha)Z*<')TNlgH'ce1'7Ald@^dig)bk8=aUY3Sb+c64c+%2&(7P8Ymmr6hGc^2Ek9Hs/:q*IBGB8eV)_uSfVZ]]*5cF)I3c_IkIC'DUTV$(.",;9`"oR%p:M5-h,-BZsdCS9F6`e^b8otaO_D(%9&!#l&,!+'Ek+6POr\ThmpR<Pb/,LCh?bY)h\YZ!P+Jc"iSl`t\')%>)$d4@%8JuT]l>\=MP[HG$6q10n47<W1/@Ed4.1s6<Q+*q%]>+L-#*T3pk6=GC=)t5Ir>'IW.$;\]GH%\4%#6m?H/GE>&bN$dL6X=[oW-YM4/l@rIaK$J!d*g,fs<>B&8,GuV67QhYLU?ai6*?1%$Tt-!@$rj*9h\IZA-#Q$g#T5a5n;.YJ]^Hg0sTqed_kXqM[.btds9uM@UD($(-?FLLc^tt?CjKTN=PKM(5k@-9F:u9;o*O,3#R`3%)QUB!"GG-@3\kF>/)`63olBoHZb^0EQGo7bP^bGjUtTj+#?+NTmX.iBNBKSJI*9NI3].N81-(n@3UU-SUi=9fWru&%Uq'Pi*qt+i%U>0;X9$m/:cs*_rT9l-d1q5kfCST'Rin,b1Vg*RA#WcL:EG]n^lB8$CI-;"DUHdm3>J'p@.%.cQr*7F<A5UUWVTRl-$K:aqM(L"T%Tp_PRS&V(kiDR`V(1`_.RpVu"`VXfLqd%c4&'#ul;depl[.]!K[<Im)44X<UkJCM9jPXeNiW"M"o4AbdQ.B"=T/QkdL#T68OG+DJ%$c)B*CL0K\IY!:1C:nB\UY]s!ZDe4B?$CC975FQ-OB]_1:6E-s,M+5t\oc7kr7'Db"i&R`MC`aYH0F>N6^a'I2kF$FMjrJ\F6UJC%lc#=MSQSE>.WoCj$$)iLGan,dfBj@)m8Voii1\Dc\V2T0-b$#ZX7;>Zh#%;uf)H-En)aq")(W7==m6)mqIFV"AL;VXT4UHuW9(1f%OXj&Q4GpN]s)`Kd5n/(q_)$B0cL8F_Q\0#P@aM1;*K-c)9^C6.Q%(3cM&#J;gY[+dYr)]BNbR9<k<_e%qq<8GV)(9].o*gda.m_0%h&iE^g&@_eMsg7_h"e:=`NE5.W"le/g[iBt39m*`FM6i#O5Zme*;<,9\5sHIcm*L<A_*9M?>>7jh\SZ)j3;TJ3o)-_h3H>;^qDfJ%oG<5&E\l%rG%lKglG^JqpC)<H[4SFrEa9.*D""c*0@/Y"g@4_5nEB/E=mM)<LRm[)kKfaFAm(r7q4:Z67cDr)q+VVF?3DC)<!]$=%I%ju@Ka]g"%%\h4RdZ((W_Z4+:]&1\XT3ifM`W8@p'X_R4^(n`/JT_&i!E"S7Q+g/TZ)V5o5n6Umo:Jh_n6@3I'm/W?NYW1ar&E\%d9cW_QUP^i-7LMN>R9MEN4e/W9-5okZs6@`mdq<Lo*U_kD`us`YS3f3mA.em[f%LtLeJ.!EAi9n+dKJi]Tg6KV@7R?$3Z_We)()g%jn[l>diVfq7Ts-J(0TmVn9!0!JLQfcrr0daI]hq)>`S`^C-JE,7>N.p?<m+<lNqI=2sh$79H\E%OGf`B=h`?*]/X9f7eat%F&:#2%CqUuu@d&I$iOaR-%jcPr:J#q7n>-07dp>IS=Xt.k(])0dDciDuq/9oen'bW62f0F!OB"=Tgf&-*DmmosI8t`b@`gK#\6Ek'5=_'*%$aLs+,[5S(s7%:Db`beO=Qp@,S,FE.3u+48oH+^1&6G`K]"L_.lT@7o6&3)NM8or0TDZn=,hV1`H]$?;*B(GR.iV.DQ.ZEhQaGc"%EOM>8UiJIX_rJtkq21$nJd1Y'q\MoJNcJ7)0<*qZf0;pm3Kp:^;in>1mHP#?5@6#LOBQuWUiihXp_P4Qe[D\T3r5hT;Yh[AA`8LJ%hL[55=hY:GNl>O8\CA5:=l7CD0N]Sn/3)?!gq5DG,2XJEV$)_."UZ_1CSAMLGBjJc@5OLg_<R!F8b^0iC)G8mM3CU=8-;hoNL1Y3%`S0TiUVk5)\Rdu->467!['nS2qD8MJjHgqHD#p]RUK9B=D/:4T\95RXrm!>"k,Zc'pA"1Rl+N;>[:elBGLgXhqOQp47eHCG/%U1J%qsEF!07l^gG!=f0Ys#hf`pK)d,$B&@i4@rBRQm5gGFTW,pV0aIDf=IBQu#QiHZrOl\*rcj)s]u>VY--#YBRFaK&0h/s57=p=fpOA%R@.gQkQB'G2qtD-ifB.ubo^<X_8je^[I_ekK\Z(]l,LX)qIR8Vgc284(u./S=`#3AcONSQ]+Ls]n[mDF51fKIeT^U4[G0O7ZFtD3%rj$rj;E`oNhH@O.Y<>'1?<LiI[D*A^1loBk`:^t?i;L@LqWYA,)LljMi:qc-fl_LfDJq\LFWf_kOsc6m-XTC9f?Kr4VajOdeMi[6%2em]/f8$YdpRS)&Q.>NIg.&R%%:?:r:4mKZ[q_uCc&MSC45W!*)n4\4)njGL&)TO^IX8c`m@<.=r^Q3uk>Z&:S\(G;gqWCX?N9>t%U\\BkdB1[``okP!cJHg<=TA6krF`&-b%c%uh3[N_Y^>\`j2$ZNGN8;@&,L9nGB3'%`ndQ\`n<N,N7_u2S%KuM`OC0`JaXT7lSn6T%#f#ec#A]fQHM'S:HS.DTYd:psGe/%rTQMUk-\RhaT;(W^j2U<K`n%bs:\VN>lX+nhLVm-Gd)5)@FeIeoF:c,,!_s9lBC!sB,0b=%%4-'4"qMXLlcIU86[>g5WbS&mS=!!'bXK4I<^HE&$mu<+i/bR`H60l'<Dqo&TQbg<FhGYWSpWgdrLTNXEo?kY^29s$jXntUQ?@HHZ%RK_/bYNhgMKc8L6R0@u[(>u>YG_8K!J?O[YlHO5UC6CuGK'6_:UKcJkrn(m*hgPL1e`kl#;3)4E^.rlRhnQ;,C=IHsa*[cWgHWI.%4'>^g#9WZS#r"S57itsmgl6ONi-jum]D:LF>GM3C\pOJPI.a;k354bm!$?ZNj#9K'CqaHKkP=`'X.A"kgWfDdk5lS3BVBjkrq)r]%HK3Dbc;3-?_^Obchqt(*<ni*^]q!n^!O<I\1a:e;YN_bSLiZl[VCS^LO%65uhY4-B9rIr8gLh/OqS(Kt&p<!DZV_g@?]2G:6e4`.%7YFU`UXR=26](MG_s,k"j4^tT/lU!F`l7oFmBu!;eXEhPs3Y&cnT@J?Op=L!q'PL:f5=or2bp,,B<@/aC-/1i@Xnt68=7*A&L_aj%R-OSrD=.1Gj5dR)M=5ZG^8]'n]n7L=G+T3"ji7;eEGP0k@9SDKoW7f"Z*IQfIrVh]''<WVXRCNr.pFU7[+[\B&0DS7ZolBU*5%Z8%SEXp<I<TYFh$cMo)\4$?hcs=/p-lUY*k,@u0Wmp8YMQP"WObm^h;LqpGJ@M?Y5ak1S_"+aGGEmkl2)DV`:FEo^d[S7kbZnF\J]ms%]fA9i7GY]5X@F3kV]m_ES&`"07't[qWCXkV]D#+.#cA!#J(aSNgF!Ng6bn1i*X8MI[C<3m8\X$*g7/%:KB1'\F,M>JV?gk$m/H4:%ZW04o]BH`5*kQ3RD#a:mG/o=Dkn6Wk]?]AHC[JsaK1s`.mLghL:#cmj?>jcEIe%pIrmStD8aPm<YjPg-51TA@5AR40C$kfkerrRg%RXBTT;IJ["h>MToXgWGa+(TT+1!)/]E5"L'hRb5hZMF+[LTO(M)T+O`hRW&:Rss(7T!+]okgr\fH0ua(jKE2<*i/G[qhK9qZYa&j%:[6_fB!GQ`<6+0;-Ono%#Q;'%mReSO>>HC%aC#g$CA6p$rUlp79iU-\RDg]fNU1Y0QLe^.#]&t-a0W+IVHSs1$&dh@BFU=t[`Kb'%;=!m<\Y]Sk?1BK0>m-9mEcKNu/HqVd]GHJ)rq+:srG;=FM]09W7)(q9Cf']pCL=P.'XqCQ+:rdH]_,0`o!OcLQ=e5`WZ8F]MMM<P%bUhVY`u8'e:t>Km6Ofq532Bi'.eLTBK:-B(0P<%?5md!FrmE$k]=Ck%"n4:&0G]bha(md1XtinC"W$"2/7lV[]eUii3359<E@F_P%2QT%l!#gY.G>3M8HtJ34C+L]sm='AKRhXo)V!fB\^LZ!>@oZol&Z%KRU5W(d6_YM:^a;sNlA+:$pO<q-9Bh-rra*%!d?m4IejnB^%V"'emOAVa\b7J/Y`n]n-/,^9&#htH3hYNa$rGL6\h`W'i[r:s5ajNEICk\#&L86=qG1th\I(7eBG.U@Mbip/)9=2.b]KqiVo5+<^%qV.3's6I/]<qktD9i5Jf3>##1kIWOYfs,P4mL8o#H&%+jg-"%nIjCoKmaLjTR?#I9>L)p/GIQ/O`p)TSO3Qk6J(Eure\CclDhcM<%gO!;JLLe42[a3e-/0!q;gjA8o^27_9Di]d"n,BcpM4Dq:(Tm+rrO_adNji`uNGe^aUtNB9HBQr^Y`t_bVAWd+(%sY5A[u]e&OEQK%I+rbi*Z^/a2D`/GJ@]TXm_3r;\V>6hV*rm\q!mf4-Wb7]?n)%KkMuuQM6csdKl1@8i\K\Ehlg[\LQW(Gj!P0=Dcb8LIJ!MAS^#dq%:>&JDIsDgr88E_?alhgXH?>&l=?in%hYqW/rd+7\Pg*Y"fjcrnJWoJZ0\J[LSl_CWJ&IldCue_!E!lNNiKO&m?t[7JlKrX:GN)@@%c>4ZqS-ji1_^N*5(uTC^&=n2XlQ9KFX6or?L%\h1+.o\/LqR,5+fNeb^[=c;?i5)7VAo8^Qhb'6ju=eo[m\(qY3c\,2lQJm:Ug5`%d49/4mBoo=Wr'8P"K\q;M::pA4M0H0rI!uR/bn'ZNVtM1g2<1#^OGlcK,g$0j1m@i4ZEXQlY#(,CY9.am*<;>o77!#4j3ZB;8'Zn%qHPnQ`9ja8DI7=kL6oiDhJ.A.#\Di&EVEBEGB]Y/?ghn$HKuZu?`JfdITW_cI_#1_^:(aqnAA<]*o1qtZcg6lBBQ!MGW^9%)]**e%>ZmHkT:U=>eW=<gHTXK?)r,d[n;&I%ml\2]*St)>3DLMhXg)5=e=Y6CbIZ`jGrrR&_ni7S[IjIi9ljf/pf["9fGA>ZfcL1elq.*J%qON/TeH,J)GE.ERS_ga.hq#!%@]05!f&>6>p;-'SS+fZ:pA1T_dN;0GQ?8])?p*+Y4r`DY/i5IZ1"TS>V5</.ggF4D?8&>7A.=>S%bVK1jZ_6>fm^3f3mNkqRFPQ(Uq@TG/S"IcNB`2`]7_F>>D[lU?)JO*6]tXBRnU/,Hm^^HIQc/de+*OQik9&J(60!U\09;PlkNO!]%Hu$KZTDloG2P+.iA[FJ/p96#t!/[9f4:(EK^>J9+3'Gs.>9?i%\2<F+ONifN<LNC=gZ2#ngXjtO[.oi#gHY"2f8R^120;>d2nH7d%O@Z!1kFAmhmsaWdD&ASkT@e?hqKh=X/>`."`Pl.iG>$,(bA[&W?XFh&,MV9C"O?O`X1R><Xp&V*CD)+%M:_lEHN3j8et]]5RnqB-%TBbCIpXS!`gUei@2u=P2ig839?fLpMHSi0*'i?@imP^\dg:7Z&isdpjl+FE*[eOD5k)I(J\*Gt;1lhrLog*WY:@m/mqAL;3LA0Aa%3*ABhRRhq?IsbbpZt.U8Pj"T.CZBS[Co]MQlJc%Hlh7q0e#Aa\LJWA=/Xl+7alBFWqpisHX]sDIVk5#KW?I4LjTt73+32FrqR9eG%+Hu4gXkipEjEB5-Ep^`'Q.>b=7\;jtC@pq;r3C\L<M@P5hUhEVNhbEWH#g[W\hj3HP%5!Wg0WG2o([TYq\Ioack9rFMQT`GQb59m%6fq8<rc-t0j5$I3D5cg?pt@)NRt&-q,]E^iX@"k0;^LoS>cb#I!i,r(<T;?f;=pO[o>t$SYS1V<YX7@$ldqTGHf%>Qrbj_^,4+5f%D><VbW/QI](D,E';>28_EI?B?]t2gA^4!bF@9_T'AQrs)j3@3/13pJIIlVi.4ANZKD11bFD\h9!rYXPH-b]QQ6Z$rAl8CpZ:FsLj%imZ6,ib;8NSm#+an3Q-%&P.4KC[Ka5oF7:LhjVTh-_ukn<2e>2\__5R^7;PLgF$p2gj%a@Xeg6fC?80)[sr5/gOIpkD`+HDC.JtE%s)%Yi618>G\JThV\E*!-/T:SGj,0dKp[kII'f.L-b1>UhMt;p`n`)!m?[dI:s1oi#-UHFS+ADg(W8kqCm<?VJQe'e"UM#q<lC4Qn%m<^L9S6<ilrS!<]CC_@6ojZSHB?f0Sm%9L8bCT]Ei9k=JlZWg'?=8EGafEVIPHU0Ao?LdV[C(Hnoe"SNLS+82<tE2OH?oH.WNWXh%Ya"RfCF&(p<AN+uml$7$a5lSIa6+3C5+R)srcki!mJ6JNqU]HQGVlRh&8XsBo4/lPSbMNknKU8.+6C8Q3/A0&'bdWrj8G%Qj+V-D%c,U>rHXpT]Oi1Y>mljLjYkQmf:QH"D>^hEdGi.k)I>+_@\WJn&3m6R@?<^4BnbiQqMB;er]lNF&\_3%h[^R;a>dnuURmH\ud9R-;%cK*9kki(9h<=:aX^P8D#B4p0m][3j!Dnf7!rRTgC[^tFZB&9VlQN6>P/`(j%-6.EcXc7)9CZVl6jI[gkL0,\daZ6p+@`'Qf\ps>*%PrLWkp4AWVKPuJ2cBO]@Iopd)8+"nr<8X6IpVSt,DEk],W>j_4_4Z^>O</o(*cU+8=Vi"fSpbuu6&2hmQhhi]^;6t*8n:C^0#Y4P%+YV^-gH==2S"87VL_ik<Sbc`5n\*krB/F5"mDIMKZZXI"i73XGgo(ZC4_,kA,?a'VhMcWTbr`+X*be:3m*_uheh9//buXSJkR2Yk%f>d2Yo&`Nkf_G:'bmlhXpQ*X=hB]T/8!M[n,o49(P1Zld,F`:J?rPiFBPkDn[6Xfj]"+cq_\^7GcYq1Sm:t=u/$!:MKC,d,Hel-H%MhCEAk<#p;cc4./qOJAD`l#p=1_Ylp/[;,WCTl>S^dEBm[t"A5Q83,rU\;15h2#TP1t[iGT<r@Tj2i"7n'1R[Zd!\'p[.e;Idc.<%F5$5TFaN8+5L8#?KM6jEmH(2+AM#pT33cEa$f$fH4&<rK)`dYR072`RkT/JshR.Zs`%VkLb%gRt:%u`chJ9U0:Pd*d0)(Emdr30"%0>dg>^^D?Y"-;f2XV\CY455FTPM8HO(+.=-p[Ye3[:HW?)[sT^5[L7HL:qnPG'"G3Hi)o1&jL+nBq0W5q@+LsDqeL"rNFK/caS?Z%al6bgZH([iS#u)T?f$t!)8G$I]K8?i,iq7^Oj6,(W4a(%#<<s_H+uLFJ,`aEq(nYard+O;9VC[PrU.^Ns4\j6:3#`Kj$E8^N.0Nm%F8<?g4oBT;7:+@.TC&b(=&G`T:I[0TRAAor6oc!o2`Ddoa1jLBG(:A!V%N/:NOHnH^UWfV1CJ*W4$)Zpht&n<GO'lUGQ741O7.jW%QYAU@k"1c'?OngEhnNEfU>"TBqaR'm48T%'_FCtd(\nFsNpgj,&E;TMeV8i,'-l7P,C]=2=U/+f(:dl2On&;@OoY8cQ,MDBbNuCY%fKjBSD7lLW/j7tgYsUT;5KJO0!TibTUnTK38^5q7H""Z[)-HQ9>Pl\"rO^mf4!1'GCWW-F)"2(/p;4IW%&/$/f>pf)?AjcAHFNV5%q%KPs:Heag?>`?<Ij=(%qfKSo0`")lleU-QeTNG`oike\T=uV&Zh^;jq=j+?X%tsEK\:'hSi_+BI<pCml:1)JrPeVZ59<":]`CpA%(l`u=HN-G2(6S3JO0-Y;a[nWTn2DrcpV5QFWU2Vl\"fSA4-(GEDnJQbeWu\sc\uoA!V+@l]s@sg0DuF5/OD8RYZjmakBu+trp.Sg%p<dLDl(E#m;#-.GqXaCRg@KVWGhN%?B4UBo(C-"[AE^r2$sSMaXY>rt\X>\!E-QEA!G`]!q3Z1r"[96\*9CZ_pKF-V5OR$UO07lY%^TW(U^^Qj)c`S9Mg%+dfhnIrsqWc1lkhc3GLU<CS>FC:8C._YlF&!#<AEL#C"J>'`I<=rSQRe=:L$?(+er,NP\8L=:n^.92eU@4G%L3e4<i^WdQp$"qlE^2fDXm?ARo$sqOrR:0KC]%NMbp-Hg\i5![LO'"LcG(RQDIpS[GihT"m&P!oht"$E=84WneeaA9dk'X>D"JO3%`+d3`P):(8HP$!gKQ[i,f!m<g_n7d1iHO-S$SO]h>$,oqe84QRe^Z`hV;$S\_<0IblVI$Dh-><\o!]@3;Hp]m+8OW`X*m-mQWB:m%FXrS]FZn?YSBkHn=n2Eimt[1LXensY<8=u%"[OG.Wh(0VWF&BTLsE\K(ck6b]964n.!:/7&5iaJ&Qb1C%ASe&=8gdTUt$k%]t!&J%eMO/Hh%^jF%=K/;X2]$LGN*B&\l$GK7ZJ.ZPlO1L;'i0PW>#'V,=nk1m!G#%l3C1N<5P:H7r^q,]1rp5=Bq6)1a64dBsHJ/g5b4B%[QKmWkP:AkW6-U<C)VE*?(*h\h27iOO?U)bVH#:f=91"+p)aFf+H<@38?4!q'EQ`4Hl%pWr4@cbNYAA+2gpaAO'MK!*J+_$.HPoG%F:neb)*b-I%^CWSe'5t;eB_3VjU69)l#GC7@EKt\qUu`+,2iKo\p1>SH`D:o:QFPIgr^\L7"+A[0V&+HSo<;h3U5\/U&$.NXXU9O%X]O@$&>A!q,To&9<Mn2qp/!bRnVKq+,!VgDF$9n$P0h=r$LKT@4hfsg<=cLRKY2tOP&M:oKMspk>i-o6\kt=Z_>mR(LEm1^/5e,p%.R\RWnhW<;5`.bQG`[7$6!p8sHm3kZd.Ln?.&%q`AeYln$(4BOJ6Ic_M&eo::`</+0;p3(;''_H)rjHt(+#)'Dli`5n;"^j\5bKX%cm%DYM,0jrek/S+'A@)/,n-i*)cjb1IM.:s*S6:=Kk"R2!<edq!<u+]!n]a>M#"t#.>Z7U'*a]a'0Kr.JS[;dWqa098k@-^M>i.;%)L?s"2a]mK`lAQ&Ci`$`/PmB04HXSS*RA!\LrgX/VBu49Ls\A`)Fe&P-"r#A4E*Kh0cf:"EH)(Ian(<)$+_b'Q95V,=!qG59U&A*%&.1b^,7.;aO9S5hQ5'+'4btgGp9AK:;OUFCOQ;`Eck:_h(c2t)6qAh^i:')L*0HS`fI2=!9mp7I!/]E=+/aS,:a#fZ&=pBT[7W]r%F"d`6%^IO*8YSUm,p\l,mX`,T^@RBQKRe2u-dA2!X*.FY!_qd5d..6nOV.ptYW=>,)MAZX*X88\8MI_Dl%#6:&f>9h&o3./!_=FN%80HJ-U7&q/KrBTZLlS8Rd2M-iZ?$Z4EM1C5aHEMO-kL9X&T6P7khu0hQ+&:Q81\G?IQL'+3i$MbfF9C^>-HPhUu(!fm+:8I;=i+p%R2VJ<lBTFH9aE-j1_o6+-)Kded6OXg]dNq\LEWocO]+kmS/=1-^*=E`>s]p<,A8%U[QnLP,frfc-fQCJqrX+g"B6o9,'C`$q@;O4%E$N^P_%l6pE#$;JX%+'0,R5>`A.T"($f<,H8Asg[B+Y(GUoc<aSO-;oBaS]Ig<IOP"54ToJAb]]&nN@7(EI6U9V,W3@M>118t3:2%K/!Jj&d!SNTRcHjiWP@"=]s-UA"qU.#VGZgg+2iHl6/@\;C6*q:]Mqor>_f`[mRfFi2C[jQ%U+8gZN6sOlo#[V%ER(7qt9*+!cgr%RrmD]S,,[B!tkZQ5W4.ZOO]GCaV1:H8i;JMfIaJ30G2dMF&RHpG3hNUG`Y2/p*%G5/+3er%LJUY9e13WC_V3P9V9RoQmcrf-.IUf%"U+/I?_4<IQ+8%88N'O=e;%`XA"LGD(&TNas4bd%mh\RRMA?;n_h@bQU)ZcA1`:pE$*5;/#eC#jQ(X\X#qQCMX!(31Y7RB4?H<a:%8kA1Zr?_Y/S25pX@+P17a5Yl#J.ZQ/`aI()H>*@?FWuV6K^Y"A,f*)Sn<I!1\X*H_5T7h&R*Aq+'U^."1_C2\a"_?e02+O;S3rX_%n=]Ns3[(K_pcb1):5$TdF4S?5MePFD\P,GPcSd,/HeJXhSr.ui`<;jG._ZNrp.q-?O?e,Q<%ZDcm<tdM!lnlI,7ue&qCmHA":2gh%U;bL+gr!]'9LHh$;2BD/"O\t=$^\rY:S7t.XGb_Ebi$ND(2Cb$g)o:5<2^IB<sV2CHqV9%LT<qf2GM/$+;"jk\]Pp!":YKs,RV)[%_ZgU]6R5hA$[rZ*K!u"$%S[uXe'lC0#:3)j&eMt%@Ed/,+TXb?GrY.H@C;mon9qsB'Z+L7TcHBF"H>.1Bc!J4L:AGW7b!g2Pg':Y%2?8V*>!S@O/)#c1Qq1oF[$Vtd]`Z.p#.`/kr02rU*T-%G#s9Nf7[2!DSkIf_[/!Sc$)6I5N!dXR&lH;F0*Rl5L0tiF[!I<K[>0G=%iu'`Y)8g!_\o=W>XejBW+gV60&::W=]Thb%fnMk#==)>d)2P9Q(C8gB#eY-<s']+6QA,d9!_3po&\#R*!'-1&6D,KhKchElD'KT*%)[-?gZLhW$XU4%qlh8gU5Cpn6D.(]j5Qol+;[an5&Bcms<i!#_M;!>8BCHq$`/l6FaCllA"QD%&KI?.>OUFsKGmTtG.52Ue%F@kk%[VjLgl1-0!cq4;!4bNfV';>cd$l^H/cc;A86U(%'`:@m+]<DHjDhWk@T<PY#.Dff%rSXO<:i"#8i-J99Y^@&hIPO,1)@IHo'6&]+%"2@>;CEQ30m24Gtf_fljgEnKPSdH>@S##2GEC_&i`$oCmGV[6U&XiX:BLu=ZUdd%ei6lh!H+s+ik6#UM_@X7KA:%Ej_V5ea+"YQs%FD4!s]SQV@.iEb/@coOKG(?c\e/q>5=Ipu>7h?\HL\ValRM;1YF,7ipE)@1&+%s*h1a,?KZU7;>4GNYM"pqns;<3@k!dL\435bqK%PRBl.nUG-!ARF+L^8ODp(UIru^^_TJHV1.<!439;S*m0U0c9#J#D1#k`H5Z#7`=El.9lUcOK](JI'=[>AjCM[M+73Q]$QlPXTL-:%6!Q^tOHPQQ"Th.*>lT'8.*@=*84(?G8UWQ0:tGZ$NjKs#<\,d26Fe2T_#_$`;%U'^M19%E+rCoR+t)?hTojE,!Wf7&'[K"FG`XCp%eq_m1nVBRW%V154LBK\,NYmVWjheriJ!@0rA^fB[)J8i!kO$&aN-l-W[DSq2ZiT;,qbO#@"-O$)+b5gpMT.$/LqkSJ)KmbOFX0og%6s^nb^+@Qnco7j8aUhk$'ne@#B+f/Gn.>+(gdjIR"Wn?"OD60'`l0]4gl$7_QGF&@"A4Gr&ouLRM;1pd5*"$",;C\p2Q&5FYoTku%TB$+EP`+0/FWa$SWeFKm`^2/[SfA4k/2_&/VN"!O?WZX_*"hTm:0_joFGuQlbm:H7Z$(^f80IV7#r]kS:]6[2<WHVB_6K4]/.%+8%%_Bj"AB$nT0n4+^[#>P,;9![=bl_;a8f+W9=^,2@#nB0%gEf,iV[n;c#Eo!L?3JJbfOGQB8_EVMRu_5670i)qO\R28oDq6=cOm-?%D]g1f0XB1C"MYt4bt-/*blkEr\/Z3@#s^a3KM00Z,.;K"1kr@f1(oe(Y_4t:j<!\D(!@>FJ2fWIb(u#iG%k3k1_NRF9tGkBbL%W4%[n+HCeW"Mc3OhIZU!R6kkXXFVi?$p7Qt%'f>L*ScP'piE=[72+M#[L1/OW.7g''!?7%utf4u?%8+[ss=F"%16\DkElLtH,-4I92*%8BC]2/g:eQ&0Em:RgAtjP3VQLQQTZ`+ui+c\r\f1ImPsV322HVE5H+i(C25hrecKt&DJaMiZRaP@Ib+79gMp8bp[U85pclD(O)Rt%\2%L]Yp&;.%V/XP1Ef43)ZYiYG\k[Q3++h8M>G;[M3U=]*i'I:.HX/4d8bc<^aA2u8Da!s/%]V4Gu;A^X9?)-&>GLpE\&Vlc4:NP%+bQ1FI+n3da%_nN!J<>0,c!Im^*da_rVDcOX%itWHYL^tO@q@uDhj$q"e,H=U-cUg&W7'LItTDe"_RCV9,'F"PCpJ=i"@>i0aBmi%jHBYRQ.bCG1$SLE9=+$M";7[[XMJ14(5^^/MM5Yu<"nsViG*YPb,UPL!&o80KRgYTO`1eg`o^reKLe(<`6'-]4Cg@<T:X(9-4rt1%1_T^SlBm[u!M,Fci:NGNMtp4X=&A:/%SY]CfH<N%#%9VAB#8X8N9Rj73Pmd&16%rS@&qY/@WGl0bp.'t2!g.O,_lG@,"2&X,RHo\%4ucXMB$d.%bmTZFUZGR5%h[S,K:-$hFojP9$/^?q0?H15H+u=CrG&[Tk<`":TZ`bt^X)Pe!6"n!U#<n3nDDO_Md5FpPilt;j[n"/%f)jef8T,,2n!pdZG1J[TA`bCCc&'@@4QI:!"m(\cc2ln8%Isig"FC\i6m-3-XM0qs>F;?!;@@Fq36]IH"UA0iUR**o$L=</R6E$]%qKajmCeoUlf3GpR`+(":+Yr@9>D+0*MT)-.Q-i?MTpJ4sc)G`fom?qb#T=<&A/NZW6jp<!;W%S6,]t;pV'OaS8;,iP"[YO*;%X*Q%O[DSp+djMeGS/[tLZi.q`Q6rAWQs'dLpXHJpCL3[%dF+4$:bi0Vj59#Pp+m09b:&mTYO]\H6uE)i/S1(.cTA:&)\V"6h18?@<b4H%M"TD_\-hfZ81B9B]+(9b7X!#efDtYKJ0HNMJ!7)E>_[JRHciWVN"B)CJ@-oIYc&C#j?q8pE"KtNN+_+d%Qn&&O_#W[&E6ce2)kSg%OU30:4FrC24Qfn=/qQQKd/ogmM@eu6K#?ng^#L<uij-m$?35EqcQR`P/N.(e(/CXf94",F'6t=oGhbjS)`R:lQF"Y(THGBN=RL3#%e4[c&JWb+83WsX@SdGKlZ5A71=?.3)"s!Nr+dWs`TSZCs(kk<GVIBje#G.^nUi7FeWQ&26(+++?(T:t5/;g2`#^mnB9CO+Mk(l,q%6okXZI^h92L7=$X(iL+WVPG*41h;$kON9DCGA.Sd<)#!ck!poA`n=MUfOCC\K0(!lS/+`W6q(*B01sJ(%n6T?pt;#WX4QD.PZ73h%*)[*qpCM3*8kfR'(fLm7qJ_(DlWbOR"MQ)U2"o@;*ck;L,nLJ0YQtZ4fT0PInrFZ@P1^t`ip%5r]cE.5"\G5T;\'A*k?;h*)s:&Y%*dk8D9r]TO&ogB45k3JH)"F<KI?m2F[Q%g<FXC4%bkpNQ.5&OE(r1>dR?BFUP,H9`*_GE4ksQ[j>r85M<'r[$LW0a79\`$S2iu:T%KBG7^V(M`m0].tb$mb$O+=8C>W$!S+$R@;JQ>_3jLLTb`/2S4'a;mSg2E3VT93b#.@o,1gPh.$u!:EIa=AMF,kR)[;\.ShJTs?\l%_M14[@:VN,X$mA6QA_L>?WKfd`4'cWZsG,">Y32;%.,<p4G!D?(`QceMF$0e"$f,<+7O#m04l:e%24J%_X\s1OspaK^^:\[\S27'%(O)PMd_NGEN5c9P9O-V-Hl.K/C-2Z\87Dti\0CfA5QP,?`UPJG)uu%.&.$;Z/;[lY9DQa(JRh7*'%d5DR1l5W@Y(dTqc)2^$6H+@%@!E7hJGP:(+/*55)"ED&J^9GtVO<5W3L8ZVT8VLF1D%M]qf,dSF2NrkJk"=B`EFDNkW5:`3HicB01)hG8Pl)f/W$,o:/&4'kY[LU%Z>.s[`#=IOMrG>3Eh$+!%2_"?<)+uZ&-U6!*j:97YTb^^]3u(H(.#`%]oQ#0:6LE0k1h8$?8NG<L^FS[AH`>Xl,NDaQ,]oO*E.ko%CVVI^^pHQ5Q0+R,^q>ii"u=AL#?iZD.2Y\E:l>pib2o]?U<okVhM`Hhnpj9CW&8_WO@u4Y#j%KD]VP+cbsWi<;]5t.F36BZ@`ZV&%#(c?W<W(NGA/47^'2tK96sjqu81'6Q#t6\K;@jHa#E1F>O:BG?[:Ld&'-cUndLm2XW[%j9Ip^%E6T&$S.e-NCM$On+)(7cbWLNt*%6X5:6'TAP&)lHS7(/(b1M@i^N!5e?(5U$G=isZ'R3d"G*g,Y$'6dhp3lf9lE8dWQtXoP7GQse<:(*ZWuY*a(K0acDFSWZJ,*lJF(%estM"X$`+qFjM4n*!QS5qDg)`=?)[h"*AT1QJ,N,lbM3b4K`\a65-j6&G0eAJl9:8BnqW3a\#(k2AF?^o2sb%.+R?kMRJ5s*T.:Q%m7?0!;]rX$6uo>AkB#0[!(e"]B9W#/-jb9V6U&02,%-bX?_&H_!\hT*S01a_Y^5<*1\!@;pNnagAu(rp:"4sFPa_Y?MUKD0DBPVT%,5+"76?mKYDc5o>EF@tSG2%*`84o>W6;.#?n(,+#@D_lk-=i1*3!%M;ZF3Ha[mdc_#b+5-_F6=*giDCs68denA.`W.(H'LC<!/o0%#3Q:ao,n\9LE:0HBg<2X;Zi%2b6q9G]!UlG>[`d_KfEP4l:So0fGOe76,B8/_FK(''b,\d'I(j/eHMsd8ZLMbLTE#eb!WEd@`c5)%EplQo&/Ai/.r+GRQRGF;Lb$MhEYhVSHm-&uSD[9I"IoJOKFmGp,!dhEAS2n&Fsl3?,qb',J9%n6KaJ@U*CBpF7Qu4Z'NmIpdPF`D%Y#G[`OP#?kU#:KdPc!.;Qc,V6".55p*kcN[1juYP=:,`#qcjt'i0s&D8X]jXM;0$?EF!hiU#,_uPLcp"B`P1pip7$\_`?#qU&mkF%`15IQV9FTc4D:h_$Bde2a9,sA8KHaE@<AL&/J,(O0Up%_enB?-5QLprP\S'?M2eb!%d^HO2\9T<3G9)s&P).L$J:oRXp!Z0:/FMY%"8PS8]",sE&k1M>STa'?JL%$RfZ7q[`Y5B)O_9E?o:RL1a_9YT"#o<<XIP^W3)"lR?s"7ZI`,`:h$Ba\BcNO^G!%op\5?G>P(:RY%?rs9NQj/pV63J4Z\:V@Cr'ck&_gn#64rd[Ib,2qs:G\sH"R.2m//r59faDruS87thS%Vd)E+k<C'p`g3.nGg!M`LaY=aHSc,j3#4%NXV%@)/CGhFut'P9`t'IJYsaoZk01_3bQOV&.f<K3*5$p:BVi*8sLJ2%7.l*eRLUO=m@`3*Ka!(*6"jTjZjW>L_Q6m$+VcXg;^g+%GRILLcT,?`2UkfYC"4>kC^8R6BK;TF#-K(W%cW>ALQ@B7c;j_)'C5R\M'%g($jo`A7[)UXWrii,W_ruHI,mlp)e'Z2(8:#S$r!<,%W0!1@^BY:3d).lc"<JZ1"*I-[r<TiiiN'j@-\!C4$LgXr]HU@9XBV?V0P!;dm#f?J$fg"WEf:GRE*Xi`V`Y49:N-gk*S5L5RDMd%%,T87tUjh5o[40]<,[>$@,nd#5_MIk"#=s+KG#iPc7M!,fTsV%L`mm2HHm!hZjV3QE.Zt#?M/!4)RYS6@S\dCZ.?:1>hXPI6Ar^;>%1/-c.#@AsrW*sAbAHL=I<&QtH@?4ecoK;BS.)ZkG`#u8tf[Q@bkJdpac`;F)NuV"P-VgHe2hI0_W.]](e(ru\hAj(X-PjM4A1VfL%*Fu`AG9eSt.OU74K1c4nN*rCJGe+PH1-YjA7mrq6$"Ap`^s9#(C^F%d'fmYTLC!RJ:gA)DhZp+2(_q"OJoD$>ph?ue:5*@hRYG9l%EO[uoF2rJnaDiMZMpXk/_7%)$aao6m$Rjkg&Eo2]RI;V"j:P$tQ&:]%,NNnj$gWOV]qF9a&d%_h$/9e,-:2!"FG2k1A4r&W8E$uQ%;Nag#("';9!$WpBYg"7c[T'V_n2(3P4U>#;^0j]\#jIL4&\/0o+ZBDO(k`N@($io&3#ie[%S8hQo5%3)5I"1;a$)"fJo\R%=!k%V%GuDXb_B=o6_#5e7%ktgkC0/f28npB:(Jo/=Un$Q*&p$d15.juu;_V?O#f.fH%X[^)(aEQ3=m(MmoG./]aL0&nW[D4=f9LD8kp!9W%Ou[!6CFL;tNYOQoBl&Cf(;Tu_G:3qc5G@A?io5<iK1B&*))R#'5kQQG*uRp=$)-\WZPFV6*:e@XhBO8pO!FqQF1@a%n`1"2ckG9"%)C"ZpPd(_]=1grH4goOO-rl>bl73i1a#QOMcGAIIX]2fso.JgNX2hb)+lm97a<k:bh+>g.(eu$IN]d/Q=;<Q)'J[*PgSL&f7D(@;%p8ln+Tp'G9?8u"!'CSuGKg<uo9,EYH,&@jsGR9QjYY#d=8&E+K%)@2kn&JZ^kUVi&fd/asU.?n,OGuANCAT;g@E(^u,/nbdAfU9X%'cD\2B%^nbl4]-@9>!mS-1#m)=.\(VJu!I:`#]qP,l*>=YJLH6:#?6[/r@.Nqbf]En^?ZZ8CE%%#JS!i+UCsG!qbMEobtkIE#tp?%'iH@m,3C'#rOE4,\GW^E/1)pJej;_gTu>r1KiMk=lj%M5<tkE1!@s+r3df5p0'3;3V%U3u_&I8;(Hd5ki<k#t\!\\nbQK'j7b(QQ%l_.#X%u^ksi&"=P+thXObBkdP,5.LF%aIg#&L$s"]&LRtA3EGW*\$)FU=3@OWm>O)XKM?hOAEaH4FSoAb>sKWeX3$c:nOdpM4c@-%cY'EI>j9BTCW'45Gkbn]5MOLd8f5=:a#9?Dn=cI&D9_`-Cg=S%gM<@djBsoO?O;jC_['[#7m%O2"ZR"d,W!=OK:Ato4E1kL,BPR9%&[M$o`?R.:WHn?n$RCdaPSY#oVolQ1Rs9lJQ$>(2a"n-dM`4Ag*/P0N3f.2U9&2ZmZiRq+,?0`?`/8X=4Als:gGrNaN-"s.$Y+bj%^k$e53*'_rAIG5[#F2eO.+i+/L+>%4;]nS`T6oUU".\CK?_"`+2k%Y*i[hpCMs?4J5_`6cikeK`2+]JU>6e[oY`>X;qQ/`+#_>hu%r:-Rj+C6.Z,lHF'iZKs9s'eXGp*>h)q-Rf`P!fRfa2TD#`C]AsSeO!/3N*?!kV$$`5S)TSY*c<R.uZG82-5;<c3ob9$Ln*d0Cd^)%#fPa(Z/Z,m(Ib/1b@<XQ&@);#;A]tKe=(Hu"Qt=u$HZkVo&ugZ,%WjW;0^;MZ3m]8&XlIZ[S?;/"GBS@W#)AK=jfP<H0TMc#qsC6%^Pj$9c3@Nc<5!u0+$D(K@&Hko1Oo5!3O`1FC'Jhq!_LK]/-AiOJC_s5jA8u4;E_6r!j:#A64&@O9(l7SR/uG"@r+Z<M!Z>LPY`P=%36,f%XE0\%=k!H^I3M^Yk9@",MH_2L?rX^0<]A5I,Ug9(jU1p-/D"fmoi!`W/!""UFGks14[IJ*:f:Uh1drU'b`J*u,p5L9m9r`R%.WS2O+?D`\#LZ2>RL8R@?Rih$C4_@6,EX?>^sYQO%dR(SNEF`pGV"pN9a*M1*6#IP._IMX3O$S=m3G:dM3!!]euk)IZ9bQZfX)b2%Q*?e?\6GuiAV"o`*u9b\cQ<E&&-tlR&.qGU/_0;15p;B24`]&=g=40.DcR7+7qq5hrMKL-,'gan!Y7k[3E"ak=@<Bbn8]P<]X3K%%4TfD\7&_jmC^8?WG\3@N'uTSfFs>LYS0HO1:$h@?fTc!T/jE"Sm$c)_5B>t)bTNG+HD")l2]t,CW8'4-$fT,aE?:"+KJUX2/h^$9%-'YhdN*suZR$i)R=V)e"_t(g4Z9[9'_m52!npCp'_3Y-()l4Z6?e5I4FIh&?Wf_qNbZ^+-E08p,-P:^"niRMp>\PCI6HJ/u.^,^b%^0n(KPn;sJ1)re\ATmRd>_Y2T!NGfm9UF+a!`RkSF'-D^/<L$#_*TPm6cC0?UqiCQ83q*";5A=*+sejt'K7WX.>^0ecG`ej0g'@^%F.@kWY.I*F5VTF.iNsuIND&oBL_<^KOOG)P$k^:'G't+/$'6q*F0<8,,(4/R,Rt+20l.7G`1%tG'e1ZF_;`qXcr.s#ncLG%^XQ!J%.Y\L'>$*ea5J.'56h(bg^raP>FUsg#:*N)MS@$q.KMF(Da\<C0l4%6.#6%9%eZUqO;%?pc'YnC(Y$U6enk]@klUt]Tb>27M0^*L&%Op?B/<3eJ7@2&=HIZ-*`0hi4Y1]c92*%jud5n)F;SG/4NL;cIY+I#sU0r6*9`/bqX<JD'J:N-[.>Z;m^(,Mp<7'or6P?CN3F4cX;%aLaJWe%pqg$ni:>AsQoV,ER]GG9lpPE)'^#b9T"X9$3t9gEku<3&Cq.Rtb3tDq%HK%oa8dan<DA]:.TbN@9$)T`<r.O%Hn>jAeNM%"E;a0g&aGAL+5.`A@o)%Zp2;e1N+_*;B.\WmY]GUgtfI.c'pXYE[N5hb`QsI/^>J0W1#em7%P9.X^[r)Ya;2!eUH\B^ZS00YB*[0%0jt.Pg+n--JEnur`;[f1,B)MSCEZ(6#\PSAUL:^kJNH`e70/![3+Y>l8!k;Jm><g;0%T'L,'=Eqn0,9NeM!.4>s?Yn`:aK-&K!kG%"Sl/^6oBmS.$>jG.$=qIpgCHH0[i35)fc%@4&m&K'+s@64ZNZ='ETW.0*$5;S36C3:Z;HJ8b?PSgja_YoY?QKF@ps.T_D:Z!9G7Q%,2>Z[b"Z\$i5O\T0.fSb<),iI49U7&Ze,'hK3Z_4O8*W/$5O1q:54@Q!QBn709k<)V^3\IqQ[ImU"2,(.%&5W+AJG@"HL6Q8C0[%%03N$2-#P:II,11UF2psFff5\43;1*1&gTf2=]@Xt4r/J<OKrR`Qjl$<TG^$6MC<S@fN?En<e[M0._]>b#GKm7L9ISM!p(?e%I_AD%A58bmW[saCj2\#qf/g52/&!*PgFLtijLh4u;orP0_Lk"3r-a*ST74;*H,]YlNHZ`lT6KX]mB"/;Dus!%hM(;A0'_6EhJg[8&>rS`%\UufQOnR?sjgDck+XZ-'at67)KGt5_F5XA:.!D<d&-j>=fZo$"b/"<+>1cqSHjod>39?/!eKb5/ZR5)jMXCWul=^jAR-MrDjH$lB%VCdIJLRl5,XN+u"fhE#T%ApLaWJBCBn5X"9dEWA>XR69"\aX?"5%?\%+P$g*Q.LXFU.Cc:Zm/gtp+Rt,:G7>C((fSZK#s>J".FOJ%H?689-7qm6Uu;n1N=U8F^pnC=B]=TH=0nLBQUJSPg,._.;Q1>\O+_KG$q3=dOQZ_1O$0RNJLq"8b5?;<rFPFX5'[dWFKt+)!jgs&%aY!ejJ<kke:<egN$Wm!V`OnCg?;eL#.$9KIBi7uBM)P#LR.j6YD<<jdI>shc[2fq6c<Vi^/RWGp"<VB!7>DjUE)m%E=>cSCFbKE&%W1Z!R?Opaf-q@s$qm9Mg9a86`I,;S#q>&:_J7"<:-d5hWEN(@P=B.'IJblR6*\qVL`<)l$TS$1-=A%IGg`YPm'hIRp#p8OL`(\oN%::@2p:NSX@)2/1VTMUi%gJfJXfoJ:IU+L$8j=[.KJTE<aWboV_&3SJa*>&'-n9VI9`U6!.<T.[m'c5A'6#rpE.<^b.Um%ZI3i@T;%p1\LdgXLA:Zl(Z;=-F[PjC,ISGQ@/C;4BKk7OP>kD)C+\2b3.Jer`XB:7.[%WHgl7UTd(VX1>0!eO?eN]l)tM0l;,)4o;"GX-\5I%<&"&1bkZk@5sMLrA\KUL\efl9OFYr6_oJiM8gF:!F\6WZSd,-08afR?8hf5o2lfl/&0!:4KSV<O)=28YFFEkU39SAME5FPHN7RS@%PH;P8Lf\&iLdN*m9C'FdZG%H;<s='RF<<0@2XLpUF>+L9arbj1JS"Z*>KBYcr9JIG-``[B4N'T@BrB7h"e7?VlFU^R^!op_joZqG%gIc'S^%fq(Uk_2e`GblIP6Y,hekJ,GihP5-NH1'k"r5iBga@UYkHl?$=Q"),c:1OV#An=\I%aL+MJV0h!bd4NOGT]Y*kiaH78lpA%e[XW>M-B@Ai1LN4^En+=9[HDifm>al+ZUH.#K+Kg.E_=:@+ccdQd8F9,=qJBNXf"l]g,oQ\Y2e)385o<AHZ,U&sT))`b_q/B$4e-%[#da)#LY;dAS"j,joXRoL;G`slZe=b'efaW8%(0(09,@O+3>-3R8tJ>IW7;qE]6+j-W`";7iP#g[!UWG+9s5D(i%T?Hj+h,o[#+_%G=1/f+1PdSWIVk>E]1VD(t`?6kq038NeheQ&)Zm%.J@5q!0@9,9d!YKBW9/g=7BGr.lHnEn0nq-G62\-8di>"\qOAl*D/WP)".eX%ec;j_BWIL#[F>$8#1$Pno6'NAFe?$%VH8!kI5?k52Mt2\-?iqQ_tTc3il7@W7jjCA[^0EV(9M*HG"cm@EA\-Ie8olhiOqY<iO!#N%""!V723mSOk)74?=`0Dsg6H>MB%uTRFHXK%_A.r@][eM>dZuD/F0rA_7_MYic6@_%)_qU;HNs!$OFF/*1b6$V.K)\t.-P;1Q\Pp,%\KlLoPb<Y;abfjnXAS0H'qpW?$Lr0564]?1-;,/,q64tKR>MS.:.oZNUu>op\lq<*_XEF$P=_T2_2J[ODF$u[=V/YNMAUuOng4*H%4!S*`86HkO_5gPG/6EJ<<B9OoNlY:@L6gmNN`#9u)G@?J22*W`.oqQ%AY`Y;f")&KWb;U^hP8ZJM)Z6K7_^3H%B*t[H6jqQ"**aA%b7$ccZ#%ESY$ede^7('X2?)p>G[`qc4BD7j:[Ea%o9Dtq[6RD,0G@i:32u[_%&Q-RK+fC9!c/Cn*rXKQl;"ZM&9rh"8eirj9RPZ0%la'(H-n+Ed\N7WP6&F"+/-@IA%T/c]R'MEsAO$:#.m>2fUo#$NoNjsF9TP<k)p$'b+W<hlekRJd+:+ML"I@^p>YZiP;cJ`)Z=+8)%`*:o'"80<WqBbo%:lg2G37Nr*9*u=BIGFQ*2?Jb"U.2h$XV!G-0"Zj@/]JX&0Prcda2Gc@M?9b82JD?lK\Ot;/'=$s/fcX'W7onA%T1QieK2l[_,&e4saXeh&X$@pIL2jp6WnYsmfE@#(,GEF7VF87\L?Ani!nI@U0IR"^jKm&A,Fl=t92r1?nnYscde0"1p`n>B<11$X%lE;(CIHGL=$HeMms!ec9;gMB=.*Y8O8OT+X4)uQVn/5hiKKW#][1<(b)/kdE(Fg*6HXnjRdBN^e;TC%sj#WAUT4m:GW4*+3fSCYb%"OjMWeF8r)5_D?7.9!P).Ie=Xd'6SJbJtpl`H%W)fV=Xr/9S,R8Mb7lg=\9q?7#oS?7rlFDj&_YcpuE.,4lc:"LJ)nThcQGfOm:,%I@PXEplVo5)*bR]&CX/SL[QdUEJE??5XJSi)+t#NBV\QE6[F,$4$sTmlf.$1>K'Wk=r]n/P<3mo3LX"c7IMk1hM%gBE\'[8iZG&M%p)BZP>5(BkcfZqXq02,\lNG\g%?m2)4rciN%^\E4TM?e2Oe2FF]C(_W,2m:=Ik?"krtk\>m*2$MjlLD>\%CN>Da*Q4O/q$5S'S^)%S,7QR/F<A=T@=[jH[:-cgg*$jI/"L@odfEMM/U)bn,IZZI_;X]IAjo0n`06/na=kSrIKm]h=JVR^YSSg?2=,t:>5Y`]rHS@Wm/H\%iUQkP*NEG5:LEng0-A1pi\1>[(AIaDkPO)uh;3YOVCsU[rVG".ImV6mci~>%AI9_PrivateDataEnd